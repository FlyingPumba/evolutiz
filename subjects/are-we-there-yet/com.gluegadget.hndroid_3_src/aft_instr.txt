public final class com.gluegadget.hndroid.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;
    public static final acteve.symbolic.integer.Expression DEBUG$sym;
    public static final int DEBUG$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.BuildConfig r0;

        r0 := @this: com.gluegadget.hndroid.BuildConfig;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32419, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class com.gluegadget.hndroid.Comment extends java.lang.Object
{
    private java.lang.String title;
    private java.lang.String author;
    private java.lang.String replyToUrl;
    private java.lang.String upVoteUrl;
    private java.lang.Integer padding;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int title$a3tid;
    private int author$a3tid;
    private int replyToUrl$a3tid;
    private int upVoteUrl$a3tid;
    private int padding$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $i1$sym, $i0$sym, r7$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        com.gluegadget.hndroid.Comment r0;
        java.lang.String r1, r2, r4, r5, $r10, $r12, $r15, $r17;
        java.lang.Integer r3;
        boolean[][] $r6;
        boolean[] r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r13, $r14, $r16;

        r0 := @this: com.gluegadget.hndroid.Comment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Integer;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21742, 32420, 6);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r6 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r6 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45366, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r6 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45366, 1);
        goto label1;

     label1:
        r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r6, 0);
        r7 = $r6[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comment: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 449);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comment: int title$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(449);
        r0.<com.gluegadget.hndroid.Comment: java.lang.String title> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comment: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 450);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comment: int author$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(450);
        r0.<com.gluegadget.hndroid.Comment: java.lang.String author> = r2;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comment: int padding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 451);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comment: int padding$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(451);
        r0.<com.gluegadget.hndroid.Comment: java.lang.Integer padding> = r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r7$sym, null, null, r7, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r7, 0);
        r7[0] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 <= 1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45367, 0);
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6240, null, null, null);
        $r10 = virtualinvoke r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&amp", "&");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comment: int replyToUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 452);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comment: int replyToUrl$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(452);
        r0.<com.gluegadget.hndroid.Comment: java.lang.String replyToUrl> = $r12;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r7$sym, null, null, r7, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r7, 1);
        r7[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45367, 1);
        goto label3;

     label3:
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Comment: int replyToUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 452);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comment: int replyToUrl$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(452);
        r0.<com.gluegadget.hndroid.Comment: java.lang.String replyToUrl> = r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r7$sym, null, null, r7, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r7, 2);
        r7[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r7$sym, null, null, r7, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r7, 3);
        r7[3] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        if $i1 <= 1 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45368, 0);
        $r13 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6240, null, null, null);
        $r15 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&amp", "&");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Comment: int upVoteUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 453);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comment: int upVoteUrl$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(453);
        r0.<com.gluegadget.hndroid.Comment: java.lang.String upVoteUrl> = $r17;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r7$sym, null, null, r7, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r7, 4);
        r7[4] = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45368, 1);
        goto label6;

     label6:
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Comment: int upVoteUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 453);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comment: int upVoteUrl$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(453);
        r0.<com.gluegadget.hndroid.Comment: java.lang.String upVoteUrl> = r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r7$sym, null, null, r7, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r7, 5);
        r7[5] = 1;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r7$sym, null, null, r7, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r7, 6);
        r7[6] = 1;
        return;
    }

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Comment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Integer $r4;

        r0 := @this: com.gluegadget.hndroid.Comment;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 32421, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r2 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45369, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45369, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, null);
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21742, null, null, null, null, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.Comment: void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)>(r1, "", $r4, "", "");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public java.lang.Integer getPadding()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Integer $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21743, 32422, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45370, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45370, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comment: int padding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.Integer padding>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getTitle()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10998, 32423, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45371, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45371, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comment: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 449);
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.String title>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getAuthor()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21744, 32424, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45372, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45372, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comment: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 450);
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.String author>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getReplyToUrl()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21745, 32425, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45373, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45373, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comment: int replyToUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 452);
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.String replyToUrl>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getUpVoteUrl()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21746, 32426, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45374, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45374, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comment: int upVoteUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 453);
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.String upVoteUrl>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String toString()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.gluegadget.hndroid.Comment;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(148, 32427, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45375, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45375, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];
        $r3 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comment: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 450);
        $r4 = r0.<com.gluegadget.hndroid.Comment: java.lang.String author>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comment: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 449);
        $r7 = r0.<com.gluegadget.hndroid.Comment: java.lang.String title>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r9;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32428, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 8);
        r1 = $r0[8];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32429, 0);
        $r0 = newmultiarray (boolean)[9][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comment: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 448);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comment: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(448);
        <com.gluegadget.hndroid.Comment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[7];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comment", -2043835178151971491L);
        return $r0;
    }
}
class com.gluegadget.hndroid.CommentDialog$1 extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32430, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.CommentDialog$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 0);
        r1 = $r0[0];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r1$sym;
        boolean[][] $r0;
        boolean[] $r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32431, 0);
        $r0 = newmultiarray (boolean)[1][];
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 454);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.CommentDialog$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(454);
        <com.gluegadget.hndroid.CommentDialog$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentDialog$1", 33323L);
        return $r0;
    }
}
public interface  com.gluegadget.hndroid.CommentDialog$ReadyListener extends java.lang.Object
{

    public abstract void ready(java.lang.String);

    public abstract void ready(java.lang.String, java.lang.String);
}
class com.gluegadget.hndroid.CommentDialog$loginListener extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.gluegadget.hndroid.CommentDialog this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    private void <init>(com.gluegadget.hndroid.CommentDialog)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.CommentDialog$loginListener r0;
        com.gluegadget.hndroid.CommentDialog r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.CommentDialog$loginListener;
        r1 := @parameter0: com.gluegadget.hndroid.CommentDialog;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21748, 32432, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog$loginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 455);
        $r2 = <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45376, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45376, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 456);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(456);
        r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.CommentDialog$loginListener r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.CommentDialog $r4, $r6, $r8, $r12, $r14, $r18, $r20;
        java.lang.String $r5, $r11, $r17, $r19;
        com.gluegadget.hndroid.CommentDialog$ReadyListener $r7, $r13;
        android.widget.EditText $r9, $r15;
        android.text.Editable $r10, $r16;

        r0 := @this: com.gluegadget.hndroid.CommentDialog$loginListener;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32433, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog$loginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 455);
        $r2 = <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45377, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45377, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 456);
        $r4 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        _sym_tmp_3 = $r4.<com.gluegadget.hndroid.CommentDialog: int replyUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 457);
        $r5 = $r4.<com.gluegadget.hndroid.CommentDialog: java.lang.String replyUrl>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_13 = null;
        if $r5 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45378, 0);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 456);
        $r6 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21749, null);
        $r7 = staticinvoke <com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener access$100(com.gluegadget.hndroid.CommentDialog)>($r6);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 456);
        $r8 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        _sym_tmp_6 = $r8.<com.gluegadget.hndroid.CommentDialog: int text$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 458);
        $r9 = $r8.<com.gluegadget.hndroid.CommentDialog: android.widget.EditText text>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2403, null);
        $r10 = virtualinvoke $r9.<android.widget.EditText: android.text.Editable getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5814, null);
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21750, null, null);
        interfaceinvoke $r7.<com.gluegadget.hndroid.CommentDialog$ReadyListener: void ready(java.lang.String)>($r11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45378, 1);
        goto label3;

     label3:
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 456);
        $r12 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21749, null);
        $r13 = staticinvoke <com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener access$100(com.gluegadget.hndroid.CommentDialog)>($r12);
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 456);
        $r14 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        _sym_tmp_9 = $r14.<com.gluegadget.hndroid.CommentDialog: int text$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 458);
        $r15 = $r14.<com.gluegadget.hndroid.CommentDialog: android.widget.EditText text>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2403, null);
        $r16 = virtualinvoke $r15.<android.widget.EditText: android.text.Editable getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5814, null);
        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);
        _sym_tmp_10 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 456);
        $r18 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        _sym_tmp_11 = $r18.<com.gluegadget.hndroid.CommentDialog: int replyUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 457);
        $r19 = $r18.<com.gluegadget.hndroid.CommentDialog: java.lang.String replyUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        interfaceinvoke $r13.<com.gluegadget.hndroid.CommentDialog$ReadyListener: void ready(java.lang.String,java.lang.String)>($r17, $r19);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;

     label4:
        _sym_tmp_12 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 456);
        $r20 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r20.<com.gluegadget.hndroid.CommentDialog: void dismiss()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        return;
    }

    void <init>(com.gluegadget.hndroid.CommentDialog, com.gluegadget.hndroid.CommentDialog$1)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.CommentDialog$loginListener r0;
        com.gluegadget.hndroid.CommentDialog r1;
        com.gluegadget.hndroid.CommentDialog$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.CommentDialog$loginListener;
        r1 := @parameter0: com.gluegadget.hndroid.CommentDialog;
        r2 := @parameter1: com.gluegadget.hndroid.CommentDialog$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21752, 32434, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog$loginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 455);
        $r3 = <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45379, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45379, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21748, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.CommentDialog$loginListener: void <init>(com.gluegadget.hndroid.CommentDialog)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32435, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32436, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog$loginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 455);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.CommentDialog$loginListener: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(455);
        <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentDialog$loginListener", 7773141659917186463L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.CommentDialog extends android.app.Dialog
{
    android.widget.Button submitButton;
    java.lang.String name;
    java.lang.String replyUrl;
    private com.gluegadget.hndroid.CommentDialog$ReadyListener readyListener;
    android.widget.EditText text;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int submitButton$a3tid;
    int name$a3tid;
    int replyUrl$a3tid;
    private int readyListener$a3tid;
    int text$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(android.content.Context, java.lang.String, com.gluegadget.hndroid.CommentDialog$ReadyListener)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.CommentDialog r0;
        android.content.Context r1;
        java.lang.String r2;
        com.gluegadget.hndroid.CommentDialog$ReadyListener r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: com.gluegadget.hndroid.CommentDialog;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: com.gluegadget.hndroid.CommentDialog$ReadyListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21753, 32437, 4);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 459);
        $r4 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45380, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45380, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 0);
        r5 = $r4[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentDialog: int readyListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 460);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentDialog: int readyListener$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(460);
        r0.<com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener readyListener> = r3;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.CommentDialog: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 461);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentDialog: int name$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(461);
        r0.<com.gluegadget.hndroid.CommentDialog: java.lang.String name> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        return;
    }

    public void <init>(android.content.Context, java.lang.String, java.lang.String, com.gluegadget.hndroid.CommentDialog$ReadyListener)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r6$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.CommentDialog r0;
        android.content.Context r1;
        java.lang.String r2, r3;
        com.gluegadget.hndroid.CommentDialog$ReadyListener r4;
        boolean[][] $r5;
        boolean[] r6;

        r0 := @this: com.gluegadget.hndroid.CommentDialog;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: com.gluegadget.hndroid.CommentDialog$ReadyListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21754, 32438, 5);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 459);
        $r5 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r5 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45381, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r5 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45381, 1);
        goto label1;

     label1:
        r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r5, 1);
        r6 = $r5[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentDialog: int readyListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 460);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentDialog: int readyListener$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(460);
        r0.<com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener readyListener> = r4;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.CommentDialog: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 461);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentDialog: int name$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(461);
        r0.<com.gluegadget.hndroid.CommentDialog: java.lang.String name> = r2;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.CommentDialog: int replyUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 457);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentDialog: int replyUrl$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(457);
        r0.<com.gluegadget.hndroid.CommentDialog: java.lang.String replyUrl> = r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r6$sym, null, null, r6, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r6, 0);
        r6[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.CommentDialog r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;
        android.view.View $r5, $r9;
        android.widget.Button $r6, $r7;
        com.gluegadget.hndroid.CommentDialog$loginListener $r8;
        android.widget.EditText $r10;

        r0 := @this: com.gluegadget.hndroid.CommentDialog;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32439, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 459);
        $r2 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45382, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45382, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Dialog: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1626, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: void setContentView(int)>(2130903040);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentDialog: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 461);
        $r4 = r0.<com.gluegadget.hndroid.CommentDialog: java.lang.String name>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1336, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: void setTitle(java.lang.CharSequence)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r5 = virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: android.view.View findViewById(int)>(2131230722);
        $r6 = (android.widget.Button) $r5;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.CommentDialog: int submitButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 462);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentDialog: int submitButton$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(462);
        r0.<com.gluegadget.hndroid.CommentDialog: android.widget.Button submitButton> = $r6;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.CommentDialog: int submitButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 462);
        $r7 = r0.<com.gluegadget.hndroid.CommentDialog: android.widget.Button submitButton>;
        $r8 = new com.gluegadget.hndroid.CommentDialog$loginListener;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21752, null, null, null);
        specialinvoke $r8.<com.gluegadget.hndroid.CommentDialog$loginListener: void <init>(com.gluegadget.hndroid.CommentDialog,com.gluegadget.hndroid.CommentDialog$1)>(r0, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1450, null, null);
        virtualinvoke $r7.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r9 = virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: android.view.View findViewById(int)>(2131230721);
        $r10 = (android.widget.EditText) $r9;
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.CommentDialog: int text$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 458);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentDialog: int text$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(458);
        r0.<com.gluegadget.hndroid.CommentDialog: android.widget.EditText text> = $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.CommentDialog r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.Button $r4;

        r0 := @this: com.gluegadget.hndroid.CommentDialog;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32440, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 459);
        $r2 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45383, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45383, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentDialog: int submitButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 462);
        $r4 = r0.<com.gluegadget.hndroid.CommentDialog: android.widget.Button submitButton>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = null;
        if r1 != $r4 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45384, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: void dismiss()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45384, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;
    }

    static com.gluegadget.hndroid.CommentDialog$ReadyListener access$100(com.gluegadget.hndroid.CommentDialog)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.CommentDialog r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.CommentDialog$ReadyListener $r3;

        r0 := @parameter0: com.gluegadget.hndroid.CommentDialog;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21749, 32441, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 459);
        $r1 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45385, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45385, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentDialog: int readyListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 460);
        $r3 = r0.<com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener readyListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32442, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32443, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 459);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.CommentDialog: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(459);
        <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentDialog", -3502395337789825507L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$1 r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32444, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 463);
        $r2 = <com.gluegadget.hndroid.Comments$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45386, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45386, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 464);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(464);
        r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Comments $r3, $r4, $r6, $r8;
        java.lang.String $r5;
        android.app.ProgressDialog $r7;
        android.os.Handler $r9;

        r0 := @this: com.gluegadget.hndroid.Comments$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32445, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 463);
        $r1 = <com.gluegadget.hndroid.Comments$1: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45387, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45387, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 464);
        $r3 = r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 464);
        $r4 = r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_4 = $r4.<com.gluegadget.hndroid.Comments: int extrasCommentsUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 465);
        $r5 = $r4.<com.gluegadget.hndroid.Comments: java.lang.String extrasCommentsUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21756, null, null);
        staticinvoke <com.gluegadget.hndroid.Comments: void access$000(com.gluegadget.hndroid.Comments,java.lang.String)>($r3, $r5);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comments$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 464);
        $r6 = r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_6 = $r6.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 466);
        $r7 = $r6.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r7.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Comments$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 464);
        $r8 = r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_8 = $r8.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 467);
        $r9 = $r8.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r9.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32446, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32447, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 463);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(463);
        <com.gluegadget.hndroid.Comments$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$1", 4320153517004707556L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$2$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Comments$2 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments$2)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$2$1 r0;
        com.gluegadget.hndroid.Comments$2 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$2$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$2;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21757, 32448, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$2$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 468);
        $r2 = <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45388, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45388, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 469);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$2$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(469);
        r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$2$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Comments$2 $r3, $r5, $r8, $r11;
        com.gluegadget.hndroid.Comments $r4, $r6, $r9, $r12;
        java.lang.String $r7;
        android.app.ProgressDialog $r10;
        android.os.Handler $r13;

        r0 := @this: com.gluegadget.hndroid.Comments$2$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32449, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$2$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 468);
        $r1 = <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45389, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45389, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 469);
        $r3 = r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1>;
        _sym_tmp_3 = $r3.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 470);
        $r4 = $r3.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 469);
        $r5 = r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1>;
        _sym_tmp_5 = $r5.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 470);
        $r6 = $r5.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_6 = $r6.<com.gluegadget.hndroid.Comments: int extrasCommentsUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 465);
        $r7 = $r6.<com.gluegadget.hndroid.Comments: java.lang.String extrasCommentsUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21756, null, null);
        staticinvoke <com.gluegadget.hndroid.Comments: void access$000(com.gluegadget.hndroid.Comments,java.lang.String)>($r4, $r7);
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Comments$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 469);
        $r8 = r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1>;
        _sym_tmp_8 = $r8.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 470);
        $r9 = $r8.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_9 = $r9.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 466);
        $r10 = $r9.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r10.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_10 = r0.<com.gluegadget.hndroid.Comments$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 469);
        $r11 = r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1>;
        _sym_tmp_11 = $r11.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 470);
        $r12 = $r11.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_12 = $r12.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 467);
        $r13 = $r12.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r13.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32450, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32451, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$2$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 468);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$2$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(468);
        <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$2$1", 4320153520335774608L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$2 extends android.os.Handler
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$2 r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$2;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32452, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r2 = <com.gluegadget.hndroid.Comments$2: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45390, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45390, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 470);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(470);
        r0.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.os.Handler: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.Comments$2 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Comments $r4, $r6, $r7;
        com.gluegadget.hndroid.CommentsAdapter $r5;
        android.app.ProgressDialog $r8;
        java.lang.Thread $r9;
        com.gluegadget.hndroid.Comments$2$1 $r10;

        r0 := @this: com.gluegadget.hndroid.Comments$2;
        r1 := @parameter0: android.os.Message;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(980, 32453, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r2 = <com.gluegadget.hndroid.Comments$2: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45391, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45391, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $i0$sym = null;
        $i0 = r1.<android.os.Message: int what>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 == 1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45392, 0);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 2);
        if $i0 == 2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45393, 0);
        goto label6;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45392, 1);
        goto label3;

     label3:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 470);
        $r4 = r0.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_3 = $r4.<com.gluegadget.hndroid.Comments: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 472);
        $r5 = $r4.<com.gluegadget.hndroid.Comments: com.gluegadget.hndroid.CommentsAdapter aa>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1390, null);
        virtualinvoke $r5.<com.gluegadget.hndroid.CommentsAdapter: void notifyDataSetChanged()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45393, 1);
        goto label5;

     label5:
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 470);
        $r6 = r0.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comments$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 470);
        $r7 = r0.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r8 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r7, "", "Reloading. Please wait...", 1);
        _sym_tmp_6 = $r6.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 466);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r6.<com.gluegadget.hndroid.Comments: int dialog$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        $r6.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r8;
        $r9 = new java.lang.Thread;
        $r10 = new com.gluegadget.hndroid.Comments$2$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21757, null, null);
        specialinvoke $r10.<com.gluegadget.hndroid.Comments$2$1: void <init>(com.gluegadget.hndroid.Comments$2)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32454, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$2: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32455, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 471);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$2: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(471);
        <com.gluegadget.hndroid.Comments$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$2", -8063631999783227823L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$3$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Comments$3 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments$3)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$3$1 r0;
        com.gluegadget.hndroid.Comments$3 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$3$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$3;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21758, 32456, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 473);
        $r2 = <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45394, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45394, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 474);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$3$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(474);
        r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$3$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Comments$3 $r3, $r5, $r8, $r11;
        com.gluegadget.hndroid.Comments $r4, $r6, $r9, $r12;
        java.lang.String $r7;
        android.app.ProgressDialog $r10;
        android.os.Handler $r13;

        r0 := @this: com.gluegadget.hndroid.Comments$3$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32457, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 473);
        $r1 = <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45395, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45395, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 474);
        $r3 = r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1>;
        _sym_tmp_3 = $r3.<com.gluegadget.hndroid.Comments$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 475);
        $r4 = $r3.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 474);
        $r5 = r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1>;
        _sym_tmp_5 = $r5.<com.gluegadget.hndroid.Comments$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 475);
        $r6 = $r5.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_6 = $r6.<com.gluegadget.hndroid.Comments: int extrasCommentsUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 465);
        $r7 = $r6.<com.gluegadget.hndroid.Comments: java.lang.String extrasCommentsUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21756, null, null);
        staticinvoke <com.gluegadget.hndroid.Comments: void access$000(com.gluegadget.hndroid.Comments,java.lang.String)>($r4, $r7);
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Comments$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 474);
        $r8 = r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1>;
        _sym_tmp_8 = $r8.<com.gluegadget.hndroid.Comments$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 475);
        $r9 = $r8.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_9 = $r9.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 466);
        $r10 = $r9.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r10.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_10 = r0.<com.gluegadget.hndroid.Comments$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 474);
        $r11 = r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1>;
        _sym_tmp_11 = $r11.<com.gluegadget.hndroid.Comments$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 475);
        $r12 = $r11.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_12 = $r12.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 467);
        $r13 = $r12.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r13.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32458, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32459, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 473);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$3$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(473);
        <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$3$1", 4320153520335774608L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$3 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$3 r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$3;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32460, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 476);
        $r2 = <com.gluegadget.hndroid.Comments$3: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45396, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45396, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 475);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$3: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(475);
        r0.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$3 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r10;
        com.gluegadget.hndroid.Comments $r5, $r6;
        android.app.ProgressDialog $r7;
        java.lang.Thread $r8;
        com.gluegadget.hndroid.Comments$3$1 $r9;

        r0 := @this: com.gluegadget.hndroid.Comments$3;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32461, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 476);
        $r2 = <com.gluegadget.hndroid.Comments$3: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45397, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45397, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 475);
        $r5 = r0.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 475);
        $r6 = r0.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r7 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, "", "Reloading. Please wait...", 1);
        _sym_tmp_4 = $r5.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 466);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r5.<com.gluegadget.hndroid.Comments: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        $r5.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r7;
        $r8 = new java.lang.Thread;
        $r9 = new com.gluegadget.hndroid.Comments$3$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21758, null, null);
        specialinvoke $r9.<com.gluegadget.hndroid.Comments$3$1: void <init>(com.gluegadget.hndroid.Comments$3)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r8.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;
        r4 = $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32462, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$3: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32463, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 476);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$3: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(476);
        <com.gluegadget.hndroid.Comments$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$3", -718148683936897661L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$4 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$4 r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$4;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32464, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 477);
        $r2 = <com.gluegadget.hndroid.Comments$4: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45398, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45398, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 478);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$4: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(478);
        r0.<com.gluegadget.hndroid.Comments$4: com.gluegadget.hndroid.Comments this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$4 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Comments$OnCommentListener $r4;
        com.gluegadget.hndroid.CommentDialog r5, $r6;
        com.gluegadget.hndroid.Comments $r7, $r8;

        r0 := @this: com.gluegadget.hndroid.Comments$4;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32465, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 477);
        $r2 = <com.gluegadget.hndroid.Comments$4: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45399, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45399, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r6 = new com.gluegadget.hndroid.CommentDialog;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 478);
        $r7 = r0.<com.gluegadget.hndroid.Comments$4: com.gluegadget.hndroid.Comments this$0>;
        $r4 = new com.gluegadget.hndroid.Comments$OnCommentListener;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 478);
        $r8 = r0.<com.gluegadget.hndroid.Comments$4: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21759, null, null, null);
        specialinvoke $r4.<com.gluegadget.hndroid.Comments$OnCommentListener: void <init>(com.gluegadget.hndroid.Comments,com.gluegadget.hndroid.Comments$1)>($r8, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21753, null, null, null, null);
        specialinvoke $r6.<com.gluegadget.hndroid.CommentDialog: void <init>(android.content.Context,java.lang.String,com.gluegadget.hndroid.CommentDialog$ReadyListener)>($r7, "Comment on submission", $r4);
        r5 = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke r5.<com.gluegadget.hndroid.CommentDialog: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32466, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$4: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32467, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 477);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$4: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(477);
        <com.gluegadget.hndroid.Comments$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$4", 4320153515616762951L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$5 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Comment val$newsContexted;
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments, com.gluegadget.hndroid.Comment)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$5 r0;
        com.gluegadget.hndroid.Comments r1;
        com.gluegadget.hndroid.Comment r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$5;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        r2 := @parameter1: com.gluegadget.hndroid.Comment;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21760, 32468, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r3 = <com.gluegadget.hndroid.Comments$5: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45400, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45400, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 480);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$5: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(480);
        r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comments this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$5: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 481);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$5: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(481);
        r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comment val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$5 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r9, $r12;
        com.gluegadget.hndroid.Comments$OnReplyListener $r5;
        com.gluegadget.hndroid.CommentDialog r6, $r7;
        com.gluegadget.hndroid.Comments $r8, $r16;
        com.gluegadget.hndroid.Comment $r10, $r14;
        java.lang.String $r11, $r13, $r15;

        r0 := @this: com.gluegadget.hndroid.Comments$5;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32469, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r2 = <com.gluegadget.hndroid.Comments$5: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45401, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45401, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r7 = new com.gluegadget.hndroid.CommentDialog;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 480);
        $r8 = r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comments this$0>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reply to ");
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$5: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 481);
        $r10 = r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comment val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r11 = virtualinvoke $r10.<com.gluegadget.hndroid.Comment: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments$5: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 481);
        $r14 = r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comment val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21745, null);
        $r15 = virtualinvoke $r14.<com.gluegadget.hndroid.Comment: java.lang.String getReplyToUrl()>();
        $r5 = new com.gluegadget.hndroid.Comments$OnReplyListener;
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comments$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 480);
        $r16 = r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21759, null, null, null);
        specialinvoke $r5.<com.gluegadget.hndroid.Comments$OnReplyListener: void <init>(com.gluegadget.hndroid.Comments,com.gluegadget.hndroid.Comments$1)>($r16, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21754, null, null, null, null, null);
        specialinvoke $r7.<com.gluegadget.hndroid.CommentDialog: void <init>(android.content.Context,java.lang.String,java.lang.String,com.gluegadget.hndroid.CommentDialog$ReadyListener)>($r8, $r13, $r15, $r5);
        r6 = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke r6.<com.gluegadget.hndroid.CommentDialog: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32470, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$5: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32471, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 479);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$5: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(479);
        <com.gluegadget.hndroid.Comments$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$5", 4705431569254151786L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$6$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Comments$6 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments$6)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$6$1 r0;
        com.gluegadget.hndroid.Comments$6 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$6$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$6;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21761, 32472, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$6$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r2 = <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45402, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45402, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$6$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 483);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$6$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(483);
        r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_12, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$6$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r15, $r19;
        org.apache.http.impl.client.DefaultHttpClient r5, $r11;
        org.apache.http.client.methods.HttpGet r6, $r12;
        org.apache.http.impl.client.BasicResponseHandler r7, $r20;
        org.apache.http.client.ClientProtocolException r8, $r22;
        com.gluegadget.hndroid.Comments$6 $r9, $r13, $r25, $r28;
        com.gluegadget.hndroid.Comments $r10, $r26, $r29;
        com.gluegadget.hndroid.Comment $r14;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.io.IOException $r23, r24;
        android.app.ProgressDialog $r27;
        android.os.Handler $r30;

        r0 := @this: com.gluegadget.hndroid.Comments$6$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32473, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$6$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r1 = <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRc>;
        _sym_tmp_12 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45403, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45403, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$6$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 483);
        $r9 = r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1>;
        _sym_tmp_3 = $r9.<com.gluegadget.hndroid.Comments$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 484);
        $r10 = $r9.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r3 = virtualinvoke $r10.<com.gluegadget.hndroid.Comments: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r5 = $r11;
        $r12 = new org.apache.http.client.methods.HttpGet;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments$6$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 483);
        $r13 = r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1>;
        _sym_tmp_5 = $r13.<com.gluegadget.hndroid.Comments$6: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 485);
        $r14 = $r13.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comment val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21746, null);
        $r15 = virtualinvoke $r14.<com.gluegadget.hndroid.Comment: java.lang.String getUpVoteUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r12.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r15);
        r6 = $r12;
        $r16 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r19);
        $r20 = new org.apache.http.impl.client.BasicResponseHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r7 = $r20;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15331, null, null, null);
        virtualinvoke r5.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r6, r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label6;

     label4:
        $r22 := @caughtexception;
        r8 = $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r8.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label6;

     label5:
        $r23 := @caughtexception;
        r24 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label6:
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Comments$6$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 483);
        $r25 = r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1>;
        _sym_tmp_7 = $r25.<com.gluegadget.hndroid.Comments$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 484);
        $r26 = $r25.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_8 = $r26.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 466);
        $r27 = $r26.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r27.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Comments$6$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 483);
        $r28 = r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1>;
        _sym_tmp_10 = $r28.<com.gluegadget.hndroid.Comments$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 484);
        $r29 = $r28.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_11 = $r29.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 467);
        $r30 = $r29.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r30.<android.os.Handler: boolean sendEmptyMessage(int)>(2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;

        catch org.apache.http.client.ClientProtocolException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32474, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32475, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$6$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 482);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$6$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(482);
        <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$6$1", -4124872408349886090L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$6 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Comment val$newsContexted;
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments, com.gluegadget.hndroid.Comment)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$6 r0;
        com.gluegadget.hndroid.Comments r1;
        com.gluegadget.hndroid.Comment r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$6;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        r2 := @parameter1: com.gluegadget.hndroid.Comment;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21760, 32476, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 486);
        $r3 = <com.gluegadget.hndroid.Comments$6: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45404, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45404, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 484);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$6: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(484);
        r0.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$6: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 485);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$6: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(485);
        r0.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comment val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$6 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Comments $r4, $r5;
        android.app.ProgressDialog $r6;
        java.lang.Thread $r7;
        com.gluegadget.hndroid.Comments$6$1 $r8;

        r0 := @this: com.gluegadget.hndroid.Comments$6;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32477, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 486);
        $r2 = <com.gluegadget.hndroid.Comments$6: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45405, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45405, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 484);
        $r4 = r0.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 484);
        $r5 = r0.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r6 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r5, "", "Voting. Please wait...", 1);
        _sym_tmp_4 = $r4.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 466);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r4.<com.gluegadget.hndroid.Comments: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        $r4.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r6;
        $r7 = new java.lang.Thread;
        $r8 = new com.gluegadget.hndroid.Comments$6$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null);
        specialinvoke $r8.<com.gluegadget.hndroid.Comments$6$1: void <init>(com.gluegadget.hndroid.Comments$6)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r7.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32478, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$6: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32479, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 486);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$6: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(486);
        <com.gluegadget.hndroid.Comments$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$6", 4705431562869606603L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$OnCommentListener$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$text;
    final com.gluegadget.hndroid.Comments$OnCommentListener this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$text$a3tid;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments$OnCommentListener, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnCommentListener$1 r0;
        com.gluegadget.hndroid.Comments$OnCommentListener r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$OnCommentListener;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21762, 32480, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnCommentListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 487);
        $r3 = <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45406, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45406, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 488);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(488);
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int val$text$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 489);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int val$text$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(489);
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: java.lang.String val$text> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_20, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnCommentListener$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        org.apache.http.impl.client.DefaultHttpClient r3, $r8;
        org.apache.http.client.methods.HttpPost r4, $r9;
        java.util.ArrayList r5, $r10;
        android.content.SharedPreferences r6;
        java.lang.String r7, $r12, $r16, $r23;
        org.apache.http.message.BasicNameValuePair $r11, $r13;
        com.gluegadget.hndroid.Comments$OnCommentListener $r14, $r18, $r26, $r29, $r34, $r37;
        com.gluegadget.hndroid.Comments $r15, $r19, $r27, $r30, $r35, $r38;
        org.apache.http.client.entity.UrlEncodedFormEntity $r17;
        java.lang.StringBuilder $r20, $r21, $r22;
        org.apache.http.conn.ClientConnectionManager $r25;
        android.app.ProgressDialog $r28, $r36;
        android.os.Handler $r31, $r39;
        java.lang.Exception $r32, r33;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32481, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnCommentListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 487);
        $r1 = <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRc>;
        _sym_tmp_20 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_20, 45407, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_20, 45407, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];

     label2:
        $r8 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r3 = $r8;
        $r9 = new org.apache.http.client.methods.HttpPost;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r9.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://news.ycombinator.com/r");
        r4 = $r9;
        $r10 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r5 = $r10;
        $r11 = new org.apache.http.message.BasicNameValuePair;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int val$text$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 489);
        $r12 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: java.lang.String val$text>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r11.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("text", $r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11);
        $r13 = new org.apache.http.message.BasicNameValuePair;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 488);
        $r14 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        _sym_tmp_4 = $r14.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 490);
        $r15 = $r14.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_5 = $r15.<com.gluegadget.hndroid.Comments: int fnId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 491);
        $r16 = $r15.<com.gluegadget.hndroid.Comments: java.lang.String fnId>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r13.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("fnid", $r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13);
        $r17 = new org.apache.http.client.entity.UrlEncodedFormEntity;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21763, null, null, null);
        specialinvoke $r17.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r5, "UTF-8");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15243, null, null);
        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r17);
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 488);
        $r18 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        _sym_tmp_7 = $r18.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 490);
        $r19 = $r18.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r6 = virtualinvoke $r19.<com.gluegadget.hndroid.Comments: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r7 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r20 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r23);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15327, null, null);
        virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15325, null);
        $r25 = virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1825, null);
        interfaceinvoke $r25.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 488);
        $r26 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        _sym_tmp_9 = $r26.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 490);
        $r27 = $r26.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_10 = $r27.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 466);
        $r28 = $r27.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r28.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_11 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 488);
        $r29 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        _sym_tmp_12 = $r29.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 490);
        $r30 = $r29.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_13 = $r30.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 467);
        $r31 = $r30.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r31.<android.os.Handler: boolean sendEmptyMessage(int)>(2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label5;

     label4:
        $r32 := @caughtexception;
        r33 = $r32;
        _sym_tmp_14 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 488);
        $r34 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        _sym_tmp_15 = $r34.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 490);
        $r35 = $r34.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_16 = $r35.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 466);
        $r36 = $r35.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r36.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_17 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 488);
        $r37 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        _sym_tmp_18 = $r37.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 490);
        $r38 = $r37.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_19 = $r38.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 467);
        $r39 = $r38.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r39.<android.os.Handler: boolean sendEmptyMessage(int)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r33.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32482, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32483, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnCommentListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 487);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$OnCommentListener$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(487);
        <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$OnCommentListener$1", -508529184223415651L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$OnCommentListener extends java.lang.Object implements com.gluegadget.hndroid.CommentDialog$ReadyListener
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    private void <init>(com.gluegadget.hndroid.Comments)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnCommentListener r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32484, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnCommentListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r2 = <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45408, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45408, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 490);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(490);
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void ready(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnCommentListener r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r10;
        com.gluegadget.hndroid.Comments $r5, $r6;
        android.app.ProgressDialog $r7;
        java.lang.Thread $r8;
        com.gluegadget.hndroid.Comments$OnCommentListener$1 $r9;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21750, 32485, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnCommentListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r2 = <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45409, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45409, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 490);
        $r5 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 490);
        $r6 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r7 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, "", "Trying to comment. Please wait...", 1);
        _sym_tmp_4 = $r5.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 466);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r5.<com.gluegadget.hndroid.Comments: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        $r5.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r7;
        $r8 = new java.lang.Thread;
        $r9 = new com.gluegadget.hndroid.Comments$OnCommentListener$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21762, null, null, null);
        specialinvoke $r9.<com.gluegadget.hndroid.Comments$OnCommentListener$1: void <init>(com.gluegadget.hndroid.Comments$OnCommentListener,java.lang.String)>(r0, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r8.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;
        r4 = $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void ready(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnCommentListener r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21751, 32486, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnCommentListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r3 = <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45410, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45410, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    void <init>(com.gluegadget.hndroid.Comments, com.gluegadget.hndroid.Comments$1)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnCommentListener r0;
        com.gluegadget.hndroid.Comments r1;
        com.gluegadget.hndroid.Comments$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        r2 := @parameter1: com.gluegadget.hndroid.Comments$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21759, 32487, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnCommentListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r3 = <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45411, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45411, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 3);
        r4 = $r3[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21755, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.Comments$OnCommentListener: void <init>(com.gluegadget.hndroid.Comments)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32488, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32489, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnCommentListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 492);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$OnCommentListener: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(492);
        <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$OnCommentListener", 2946023665031100578L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$OnReplyListener$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$replyUrl;
    final java.lang.String val$text;
    final com.gluegadget.hndroid.Comments$OnReplyListener this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$replyUrl$a3tid;
    final int val$text$a3tid;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Comments$OnReplyListener, java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnReplyListener$1 r0;
        com.gluegadget.hndroid.Comments$OnReplyListener r1;
        java.lang.String r2, r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$OnReplyListener;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21764, 32490, 4);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnReplyListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 493);
        $r4 = <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45412, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45412, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 0);
        r5 = $r4[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 494);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(494);
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int val$replyUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 495);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int val$replyUrl$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(495);
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: java.lang.String val$replyUrl> = r2;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int val$text$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 496);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int val$text$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(496);
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: java.lang.String val$text> = r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_18, $r28$sym, $i0$sym, $r26$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.Comments$OnReplyListener$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        org.apache.http.impl.client.DefaultHttpClient r3, $r16;
        android.content.SharedPreferences r4;
        java.lang.String r5, r8, r13, $r20, $r24, $r29, $r30, $r34, $r40;
        org.apache.http.client.methods.HttpGet r6, $r19;
        org.apache.http.impl.client.BasicResponseHandler r7, $r25;
        org.htmlcleaner.HtmlCleaner r9, $r27;
        org.htmlcleaner.TagNode r10, r12;
        java.lang.Object[] r11;
        org.apache.http.client.methods.HttpPost r14, $r31;
        java.util.ArrayList r15, $r32;
        com.gluegadget.hndroid.Comments$OnReplyListener $r17, $r43, $r46, $r51, $r54;
        com.gluegadget.hndroid.Comments $r18, $r44, $r47, $r52, $r55;
        java.lang.StringBuilder $r21, $r22, $r23, $r37, $r38, $r39;
        java.lang.Object $r26, $r28;
        org.apache.http.message.BasicNameValuePair $r33, $r35;
        org.apache.http.client.entity.UrlEncodedFormEntity $r36;
        org.apache.http.conn.ClientConnectionManager $r42;
        android.app.ProgressDialog $r45, $r53;
        android.os.Handler $r48, $r56;
        java.lang.Exception $r49, r50;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32491, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnReplyListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 493);
        $r1 = <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRc>;
        _sym_tmp_18 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45413, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45413, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];

     label2:
        $r16 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r3 = $r16;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 494);
        $r17 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        _sym_tmp_3 = $r17.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 497);
        $r18 = $r17.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r4 = virtualinvoke $r18.<com.gluegadget.hndroid.Comments: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r19 = new org.apache.http.client.methods.HttpGet;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int val$replyUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 495);
        $r20 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: java.lang.String val$replyUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r19.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r20);
        r6 = $r19;
        $r21 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r24);
        $r25 = new org.apache.http.impl.client.BasicResponseHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r25.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r7 = $r25;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15331, null, null, null);
        $r26 = virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r6, r7);
        $r26$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(15331);
        r8 = (java.lang.String) $r26;
        $r27 = new org.htmlcleaner.HtmlCleaner;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r27.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r9 = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null);
        r10 = virtualinvoke r9.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r11 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//form[@method=\'post\']/input[@name=\'fnid\']");
        $i0$sym = null;
        $i0 = lengthof r11;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 != 1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45414, 0);
        $r28$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r11, 0);
        $r28 = r11[0];
        r12 = (org.htmlcleaner.TagNode) $r28;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r29 = virtualinvoke r12.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("value");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r13 = virtualinvoke $r30.<java.lang.String: java.lang.String trim()>();
        $r31 = new org.apache.http.client.methods.HttpPost;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r31.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://news.ycombinator.com/r");
        r14 = $r31;
        $r32 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r32.<java.util.ArrayList: void <init>()>();
        r15 = $r32;
        $r33 = new org.apache.http.message.BasicNameValuePair;
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int val$text$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 496);
        $r34 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: java.lang.String val$text>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r33.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("text", $r34);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r33);
        $r35 = new org.apache.http.message.BasicNameValuePair;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r35.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("fnid", r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r35);
        $r36 = new org.apache.http.client.entity.UrlEncodedFormEntity;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21763, null, null, null);
        specialinvoke $r36.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r15, "UTF-8");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15243, null, null);
        virtualinvoke r14.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r36);
        $r37 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r14.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r40);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15327, null, null);
        virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15325, null);
        $r42 = virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1825, null);
        interfaceinvoke $r42.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45414, 1);
        goto label4;

     label4:
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 494);
        $r43 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        _sym_tmp_7 = $r43.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 497);
        $r44 = $r43.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_8 = $r44.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 466);
        $r45 = $r44.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r45.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 494);
        $r46 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        _sym_tmp_10 = $r46.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 497);
        $r47 = $r46.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_11 = $r47.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 467);
        $r48 = $r47.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r48.<android.os.Handler: boolean sendEmptyMessage(int)>(2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label5:
        goto label7;

     label6:
        $r49 := @caughtexception;
        r50 = $r49;
        _sym_tmp_12 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 494);
        $r51 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        _sym_tmp_13 = $r51.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 497);
        $r52 = $r51.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_14 = $r52.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 466);
        $r53 = $r52.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r53.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_15 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 494);
        $r54 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        _sym_tmp_16 = $r54.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 497);
        $r55 = $r54.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_17 = $r55.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 467);
        $r56 = $r55.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r56.<android.os.Handler: boolean sendEmptyMessage(int)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r50.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return;

        catch java.lang.Exception from label2 to label5 with label6;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32492, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32493, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnReplyListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 493);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$OnReplyListener$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$OnReplyListener$1", 5195982784681923849L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$OnReplyListener extends java.lang.Object implements com.gluegadget.hndroid.CommentDialog$ReadyListener
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    private void <init>(com.gluegadget.hndroid.Comments)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnReplyListener r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32494, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnReplyListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r2 = <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45415, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45415, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 497);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(497);
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void ready(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnReplyListener r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Exception r5, $r11;
        com.gluegadget.hndroid.Comments $r6, $r7;
        android.app.ProgressDialog $r8;
        java.lang.Thread $r9;
        com.gluegadget.hndroid.Comments$OnReplyListener$1 $r10;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21751, 32495, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnReplyListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r3 = <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45416, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45416, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 497);
        $r6 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 497);
        $r7 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r8 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r7, "", "Trying to reply. Please wait...", 1);
        _sym_tmp_4 = $r6.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 466);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r6.<com.gluegadget.hndroid.Comments: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        $r6.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r8;
        $r9 = new java.lang.Thread;
        $r10 = new com.gluegadget.hndroid.Comments$OnReplyListener$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21764, null, null, null, null);
        specialinvoke $r10.<com.gluegadget.hndroid.Comments$OnReplyListener$1: void <init>(com.gluegadget.hndroid.Comments$OnReplyListener,java.lang.String,java.lang.String)>(r0, r2, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;
        r5 = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void ready(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnReplyListener r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21750, 32496, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnReplyListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r2 = <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45417, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45417, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    void <init>(com.gluegadget.hndroid.Comments, com.gluegadget.hndroid.Comments$1)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Comments$OnReplyListener r0;
        com.gluegadget.hndroid.Comments r1;
        com.gluegadget.hndroid.Comments$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        r2 := @parameter1: com.gluegadget.hndroid.Comments$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21759, 32497, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnReplyListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r3 = <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45418, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45418, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 3);
        r4 = $r3[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21755, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.Comments$OnReplyListener: void <init>(com.gluegadget.hndroid.Comments)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32498, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32499, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments$OnReplyListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 498);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments$OnReplyListener: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(498);
        <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$OnReplyListener", -1035960688323099639L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.Comments extends android.app.Activity
{
    private static final int MENU_UPDATE;
    private static final int MENU_COMMENT;
    private static final int NOTIFY_DATASET_CHANGED;
    private static final int NOTIFY_COMMENT_ADDED;
    private static final int CONTEXT_REPLY;
    private static final int CONTEXT_UPVOTE;
    android.app.ProgressDialog dialog;
    android.widget.ListView newsListView;
    com.gluegadget.hndroid.CommentsAdapter aa;
    java.util.ArrayList commentsList;
    java.lang.String extrasCommentsUrl;
    java.lang.String fnId;
    java.lang.Boolean loggedIn;
    android.os.Handler handler;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final acteve.symbolic.integer.Expression MENU_UPDATE$sym;
    private static final int MENU_UPDATE$a3tid;
    private static final acteve.symbolic.integer.Expression MENU_COMMENT$sym;
    private static final int MENU_COMMENT$a3tid;
    private static final acteve.symbolic.integer.Expression NOTIFY_DATASET_CHANGED$sym;
    private static final int NOTIFY_DATASET_CHANGED$a3tid;
    private static final acteve.symbolic.integer.Expression NOTIFY_COMMENT_ADDED$sym;
    private static final int NOTIFY_COMMENT_ADDED$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_REPLY$sym;
    private static final int CONTEXT_REPLY$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_UPVOTE$sym;
    private static final int CONTEXT_UPVOTE$a3tid;
    int dialog$a3tid;
    int newsListView$a3tid;
    int aa$a3tid;
    int commentsList$a3tid;
    int extrasCommentsUrl$a3tid;
    int fnId$a3tid;
    int loggedIn$a3tid;
    int handler$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList $r3;
        java.lang.Boolean $r4;
        com.gluegadget.hndroid.Comments$2 $r5;

        r0 := @this: com.gluegadget.hndroid.Comments;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32500, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r1 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45419, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45419, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Activity: void <init>()>();
        $r3 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments: int commentsList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 500);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int commentsList$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(500);
        r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList> = $r3;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments: int fnId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 491);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int fnId$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(491);
        r0.<com.gluegadget.hndroid.Comments: java.lang.String fnId> = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments: int loggedIn$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 501);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int loggedIn$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(501);
        r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn> = $r4;
        $r5 = new com.gluegadget.hndroid.Comments$2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21755, null, null);
        specialinvoke $r5.<com.gluegadget.hndroid.Comments$2: void <init>(com.gluegadget.hndroid.Comments)>(r0);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comments: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 467);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int handler$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(467);
        r0.<com.gluegadget.hndroid.Comments: android.os.Handler handler> = $r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.gluegadget.hndroid.Comments r0;
        android.os.Bundle r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.TextView r5;
        android.view.View $r6, $r15;
        android.widget.ListView $r7, $r8, $r11;
        com.gluegadget.hndroid.CommentsAdapter $r9, $r12;
        java.util.ArrayList $r10;
        android.content.Intent $r13;
        java.lang.String $r14, $r16;
        android.app.ProgressDialog $r17;
        java.lang.Thread $r18;
        com.gluegadget.hndroid.Comments$1 $r19;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32501, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45420, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45420, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1626, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.Comments: void setContentView(int)>(2130903045);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r6 = virtualinvoke r0.<com.gluegadget.hndroid.Comments: android.view.View findViewById(int)>(2131230732);
        $r7 = (android.widget.ListView) $r6;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 502);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int newsListView$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(502);
        r0.<com.gluegadget.hndroid.Comments: android.widget.ListView newsListView> = $r7;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 502);
        $r8 = r0.<com.gluegadget.hndroid.Comments: android.widget.ListView newsListView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9569, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.Comments: void registerForContextMenu(android.view.View)>($r8);
        i0$sym = null;
        i0 = 2130903041;
        $r9 = new com.gluegadget.hndroid.CommentsAdapter;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments: int commentsList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 500);
        $r10 = r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11527, null, null, i0$sym, null);
        specialinvoke $r9.<com.gluegadget.hndroid.CommentsAdapter: void <init>(android.content.Context,int,java.util.List)>(r0, i0, $r10);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comments: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 472);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int aa$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(472);
        r0.<com.gluegadget.hndroid.Comments: com.gluegadget.hndroid.CommentsAdapter aa> = $r9;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Comments: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 502);
        $r11 = r0.<com.gluegadget.hndroid.Comments: android.widget.ListView newsListView>;
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Comments: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 472);
        $r12 = r0.<com.gluegadget.hndroid.Comments: com.gluegadget.hndroid.CommentsAdapter aa>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1387, null, null);
        virtualinvoke $r11.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1407, null);
        $r13 = virtualinvoke r0.<com.gluegadget.hndroid.Comments: android.content.Intent getIntent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        r4 = virtualinvoke $r13.<android.content.Intent: android.os.Bundle getExtras()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r14 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("url");
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Comments: int extrasCommentsUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 465);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int extrasCommentsUrl$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(465);
        r0.<com.gluegadget.hndroid.Comments: java.lang.String extrasCommentsUrl> = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r15 = virtualinvoke r0.<com.gluegadget.hndroid.Comments: android.view.View findViewById(int)>(2131230734);
        r5 = (android.widget.TextView) $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r16 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("title");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r17 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", "Loading. Please wait...", 1);
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Comments: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 466);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int dialog$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        r0.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r17;
        $r18 = new java.lang.Thread;
        $r19 = new com.gluegadget.hndroid.Comments$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21755, null, null);
        specialinvoke $r19.<com.gluegadget.hndroid.Comments$1: void <init>(com.gluegadget.hndroid.Comments)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r18.<java.lang.Thread: void <init>(java.lang.Runnable)>($r19);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r18.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Comments r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.MenuItem r4, r5;
        com.gluegadget.hndroid.Comments$3 $r7;
        com.gluegadget.hndroid.Comments$4 $r10;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: android.view.Menu;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9554, 32502, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45421, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45421, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9554, null, null);
        specialinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r4 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 1, 0, 2131099650);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1423, null, null);
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837510);
        $r7 = new com.gluegadget.hndroid.Comments$3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21755, null, null);
        specialinvoke $r7.<com.gluegadget.hndroid.Comments$3: void <init>(com.gluegadget.hndroid.Comments)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r5 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 2, 0, 2131099653);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1423, null, null);
        interfaceinvoke r5.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837505);
        $r10 = new com.gluegadget.hndroid.Comments$4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21755, null, null);
        specialinvoke $r10.<com.gluegadget.hndroid.Comments$4: void <init>(com.gluegadget.hndroid.Comments)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r5.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(9554, null);
        return 1;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Comments r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Boolean $r4;
        boolean $z0, $z1;
        java.lang.String $r5;
        android.view.MenuItem $r6, $r8;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: android.view.Menu;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9556, 32503, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45422, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45422, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments: int loggedIn$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 501);
        $r4 = r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2659, null);
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2659);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45423, 0);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments: int fnId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 491);
        $r5 = r0.<com.gluegadget.hndroid.Comments: java.lang.String fnId>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_4 = null;
        if $r5 != "" goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45424, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45423, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r6 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1426, null, null);
        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r8 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1255, null, null);
        interfaceinvoke $r8.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45424, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9556, null, null);
        $z1 = specialinvoke r0.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(9556);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(9556, $z1$sym);
        return $z1;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $z1$sym, $z0$sym, $r11$sym, $i0$sym, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.Comments r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;
        boolean[][] $r4;
        boolean[] r5;
        android.widget.AdapterView$AdapterContextMenuInfo r6;
        com.gluegadget.hndroid.Comment r7;
        android.view.MenuItem r8, r21;
        android.widget.ListView $r9;
        android.widget.ListAdapter $r10;
        java.lang.Object $r11;
        java.lang.String $r12, $r14, $r15, $r19;
        java.lang.Boolean $r16, $r20;
        boolean $z0, $z1;
        com.gluegadget.hndroid.Comments$5 $r17;
        com.gluegadget.hndroid.Comments$6 $r22;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: android.view.ContextMenu;
        r2 := @parameter1: android.view.View;
        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(6548, 32504, 4);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r4 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45425, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45425, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 4);
        r5 = $r4[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6548, null, null, null, null);
        specialinvoke r0.<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(r1, r2, r3);
        r6 = (android.widget.AdapterView$AdapterContextMenuInfo) r3;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 502);
        $r9 = r0.<com.gluegadget.hndroid.Comments: android.widget.ListView newsListView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1388, null);
        $r10 = virtualinvoke $r9.<android.widget.ListView: android.widget.ListAdapter getAdapter()>();
        $i0$sym = null;
        $i0 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1327, null, $i0$sym);
        $r11 = interfaceinvoke $r10.<android.widget.ListAdapter: java.lang.Object getItem(int)>($i0);
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1327);
        r7 = (com.gluegadget.hndroid.Comment) $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r12 = virtualinvoke r7.<com.gluegadget.hndroid.Comment: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1495, null, null);
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>($r12);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments: int fnId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 491);
        $r14 = r0.<com.gluegadget.hndroid.Comments: java.lang.String fnId>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        _sym_tmp_6 = null;
        if $r14 == "" goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45426, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21745, null);
        $r15 = virtualinvoke r7.<com.gluegadget.hndroid.Comment: java.lang.String getReplyToUrl()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 1);
        r5[1] = 1;
        _sym_tmp_6 = null;
        if $r15 == "" goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45427, 0);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments: int loggedIn$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 501);
        $r16 = r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2659, null);
        $z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2659);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 2);
        r5[2] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45428, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r8 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 1, 0, 2131099658);
        $r17 = new com.gluegadget.hndroid.Comments$5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21760, null, null, null);
        specialinvoke $r17.<com.gluegadget.hndroid.Comments$5: void <init>(com.gluegadget.hndroid.Comments,com.gluegadget.hndroid.Comment)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r17);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 3);
        r5[3] = 1;
        goto label5;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45426, 1);
        goto label5;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45427, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45428, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21746, null);
        $r19 = virtualinvoke r7.<com.gluegadget.hndroid.Comment: java.lang.String getUpVoteUrl()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 4);
        r5[4] = 1;
        _sym_tmp_6 = null;
        if $r19 == "" goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45429, 0);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comments: int loggedIn$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 501);
        $r20 = r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2659, null);
        $z1 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2659);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 5);
        r5[5] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45430, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r21 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 2, 0, 2131099659);
        $r22 = new com.gluegadget.hndroid.Comments$6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21760, null, null, null);
        specialinvoke $r22.<com.gluegadget.hndroid.Comments$6: void <init>(com.gluegadget.hndroid.Comments,com.gluegadget.hndroid.Comment)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r21.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r22);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 6);
        r5[6] = 1;
        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45429, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45430, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 7);
        r5[7] = 1;
        return;
    }

    private void refreshComments(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $r72$sym, $i10$sym, $r69$sym, $i9$sym, $r67$sym, $r64$sym, $z1$sym, $r61$sym, $i8$sym, $i7$sym, $i6$sym, $r57$sym, $i5$sym, $i4$sym, $r52$sym, $i3$sym, $z0$sym, $r47$sym, $r45$sym, i2$sym, i1$sym, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.gluegadget.hndroid.Comments r0;
        java.lang.String r1, r5, r9, r17, r27, r28, r29, r31, $r43, $r48, $r49, $r50, $r53, $r54, $r55, $r58, $r59, $r62, $r68, $r70, $r71, $r74, $r75, $r82, $r84;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        org.apache.http.impl.client.DefaultHttpClient r6, $r38;
        org.apache.http.client.methods.HttpGet r7, $r39;
        org.apache.http.impl.client.BasicResponseHandler r8, $r44;
        org.htmlcleaner.HtmlCleaner r10, $r46;
        org.htmlcleaner.TagNode r11, r13, r15, r16, r19, r21, r26, r30, r34, $r60, $r63, r73, r76;
        java.lang.Object[] r12, r14, r20, r23, r24, r25, r56;
        java.lang.Integer r18;
        java.lang.StringBuffer r22, $r77, $r81;
        org.htmlcleaner.TagNode[] r32, r33;
        com.gluegadget.hndroid.Comment r35, $r86, $r87, $r89, r90;
        java.lang.Throwable r36, $r100;
        java.util.ArrayList $r37, $r88, $r91;
        java.lang.StringBuilder $r40, $r41, $r42, $r78, $r79, $r80, $r85;
        java.lang.Object $r45, $r47, $r52, $r57, $r61, $r64, $r67, $r69, $r72;
        boolean $z0, $z1;
        java.lang.Boolean $r51;
        java.util.List $r65;
        java.util.Iterator $r66;
        android.text.Spanned $r83;
        java.net.MalformedURLException $r92, r93;
        java.io.IOException $r94, r95;
        org.htmlcleaner.XPatherException $r96, r97;
        java.lang.IllegalStateException $r98, r99;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21773, 32505, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45431, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45431, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 5);
        r3 = $r2[5];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Comments: int commentsList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 500);
        $r37 = r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        virtualinvoke $r37.<java.util.ArrayList: void clear()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r4 = virtualinvoke r0.<com.gluegadget.hndroid.Comments: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r38 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r38.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r6 = $r38;
        $r39 = new org.apache.http.client.methods.HttpGet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r39.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r1);
        r7 = $r39;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_7 = null;
        if r5 == "" goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45432, 0);
        $r40 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r7.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r43);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45432, 1);
        goto label4;

     label4:
        $r44 = new org.apache.http.impl.client.BasicResponseHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r44.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r8 = $r44;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15331, null, null, null);
        $r45 = virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r7, r8);
        $r45$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(15331);
        r9 = (java.lang.String) $r45;
        $r46 = new org.htmlcleaner.HtmlCleaner;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r46.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r10 = $r46;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null);
        r11 = virtualinvoke r10.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r12 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'pagetop\']/a");
        $r47$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r12, 5);
        $r47 = r12[5];
        r13 = (org.htmlcleaner.TagNode) $r47;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r48 = virtualinvoke r13.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r50 = virtualinvoke $r49.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z0 = virtualinvoke $r50.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("submit");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45433, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Comments: int loggedIn$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 501);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int loggedIn$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(501);
        r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn> = $r51;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45433, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r14 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//form[@method=\'post\']/input[@name=\'fnid\']");
        $i3$sym = null;
        $i3 = lengthof r14;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 1);
        if $i3 != 1 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45434, 0);
        $r52$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r14, 0);
        $r52 = r14[0];
        r15 = (org.htmlcleaner.TagNode) $r52;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r53 = virtualinvoke r15.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("value");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r54 = virtualinvoke $r53.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r55 = virtualinvoke $r54.<java.lang.String: java.lang.String trim()>();
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Comments: int fnId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 491);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Comments: int fnId$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(491);
        r0.<com.gluegadget.hndroid.Comments: java.lang.String fnId> = $r55;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45434, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r56 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//table[@border=\'0\']/tbody/tr/td/img[@src=\'http://ycombinator.com/images/s.gif\']");
        $i4$sym = null;
        $i4 = lengthof r56;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 1);
        if $i4 <= 1 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45435, 0);
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;

     label9:
        $i5$sym = null;
        $i5 = lengthof r56;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i5$sym, i0, $i5);
        if i0 >= $i5 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45436, 0);
        $r57$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r56, i0);
        $r57 = r56[i0];
        r16 = (org.htmlcleaner.TagNode) $r57;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r58 = virtualinvoke r16.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("width");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r59 = virtualinvoke $r58.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r17 = virtualinvoke $r59.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2063, null);
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r17);
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2063);
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 2);
        $i7 = $i6 / 2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, $i7$sym);
        r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r60 = virtualinvoke r16.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r19 = virtualinvoke $r60.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r20 = virtualinvoke r19.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'comment\']");
        $i8$sym = null;
        $i8 = lengthof r20;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i8$sym, null, $i8, 0);
        if $i8 <= 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45437, 0);
        $r61$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r20, 0);
        $r61 = r20[0];
        r21 = (org.htmlcleaner.TagNode) $r61;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        r22 = virtualinvoke r21.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r62 = virtualinvoke r22.<java.lang.StringBuffer: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke $r62.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("[deleted]");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45438, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r23 = virtualinvoke r19.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'comhead\']/a[1]");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r24 = virtualinvoke r19.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//p/font[@size=\'1\']/u/a");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r63 = virtualinvoke r19.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r25 = virtualinvoke $r63.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@valign=\'top\']/center/a[1]");
        $r64$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r23, 0);
        $r64 = r23[0];
        r26 = (org.htmlcleaner.TagNode) $r64;
        r27 = "";
        r28 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r65 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r66 = interfaceinvoke $r65.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r67 = interfaceinvoke $r66.<java.util.Iterator: java.lang.Object next()>();
        $r67$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r68 = virtualinvoke $r67.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r29 = virtualinvoke $r68.<java.lang.String: java.lang.String trim()>();
        $i9$sym = null;
        $i9 = lengthof r25;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i9$sym, null, $i9, 0);
        if $i9 <= 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45439, 0);
        $r69$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r25, 0);
        $r69 = r25[0];
        r30 = (org.htmlcleaner.TagNode) $r69;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r70 = virtualinvoke r30.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r71 = virtualinvoke $r70.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r27 = virtualinvoke $r71.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 12);
        r3[12] = 1;
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45439, 1);
        goto label11;

     label11:
        $i10$sym = null;
        $i10 = lengthof r24;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 13);
        r3[13] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i10$sym, null, $i10, 0);
        if $i10 <= 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45440, 0);
        $r72$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r24, 0);
        $r72 = r24[0];
        r73 = (org.htmlcleaner.TagNode) $r72;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r74 = virtualinvoke r73.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r75 = virtualinvoke $r74.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r28 = virtualinvoke $r75.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 14);
        r3[14] = 1;
        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45440, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21771, null, null, null);
        r76 = virtualinvoke r21.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElementByName(java.lang.String,boolean)>("font", 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        $r77 = virtualinvoke r76.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r31 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21772, null, null, null);
        r32 = virtualinvoke r21.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElementsByName(java.lang.String,boolean)>("p", 1);
        r33 = r32;
        i1$sym = null;
        i1 = lengthof r33;
        i2$sym = null;
        i2 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 15);
        r3[15] = 1;

     label14:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 16);
        r3[16] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, i1$sym, i2, i1);
        if i2 >= i1 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45441, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r33, i2);
        r34 = r33[i2];
        $r78 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        $r81 = virtualinvoke r34.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(17375, null);
        $r83 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>($r82);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r84 = virtualinvoke $r83.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r85 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r31 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 17);
        r3[17] = 1;
        goto label14;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45441, 1);
        goto label16;

     label16:
        $r86 = new com.gluegadget.hndroid.Comment;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21742, null, null, null, null, null, null);
        specialinvoke $r86.<com.gluegadget.hndroid.Comment: void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)>(r31, r29, r18, r28, r27);
        r35 = $r86;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 18);
        r3[18] = 1;
        goto label19;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45438, 1);
        goto label18;

     label18:
        $r87 = new com.gluegadget.hndroid.Comment;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r87.<com.gluegadget.hndroid.Comment: void <init>(java.lang.String)>("[deleted]");
        r35 = $r87;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 19);
        r3[19] = 1;

     label19:
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Comments: int commentsList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 500);
        $r88 = r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke $r88.<java.util.ArrayList: boolean add(java.lang.Object)>(r35);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 20);
        r3[20] = 1;
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45437, 1);
        goto label21;

     label21:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 21);
        r3[21] = 1;
        goto label9;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45436, 1);
        goto label23;

     label23:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 22);
        r3[22] = 1;
        goto label26;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45435, 1);
        goto label25;

     label25:
        $r89 = new com.gluegadget.hndroid.Comment;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r89.<com.gluegadget.hndroid.Comment: void <init>(java.lang.String)>("No comments.");
        r90 = $r89;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Comments: int commentsList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 500);
        $r91 = r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke $r91.<java.util.ArrayList: boolean add(java.lang.Object)>(r90);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 23);
        r3[23] = 1;

     label26:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 24);
        r3[24] = 1;

     label27:
        goto label43;

     label28:
        $r92 := @caughtexception;

     label29:
        r93 = $r92;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r93.<java.net.MalformedURLException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 25);
        r3[25] = 1;

     label30:
        goto label43;

     label31:
        $r94 := @caughtexception;

     label32:
        r95 = $r94;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r95.<java.io.IOException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 26);
        r3[26] = 1;

     label33:
        goto label43;

     label34:
        $r96 := @caughtexception;

     label35:
        r97 = $r96;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r97.<org.htmlcleaner.XPatherException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 27);
        r3[27] = 1;

     label36:
        goto label43;

     label37:
        $r98 := @caughtexception;

     label38:
        r99 = $r98;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        virtualinvoke r0.<com.gluegadget.hndroid.Comments: void finish()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 28, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 28);
        r3[28] = 1;

     label39:
        goto label43;

     label40:
        $r100 := @caughtexception;

     label41:
        r36 = $r100;

     label42:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 29, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 29);
        r3[29] = 1;
        throw r36;

     label43:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 30, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 30);
        r3[30] = 1;
        return;

        catch java.net.MalformedURLException from label2 to label27 with label28;
        catch java.io.IOException from label2 to label27 with label31;
        catch org.htmlcleaner.XPatherException from label2 to label27 with label34;
        catch java.lang.IllegalStateException from label2 to label27 with label37;
        catch java.lang.Throwable from label2 to label27 with label40;
        catch java.lang.Throwable from label29 to label30 with label40;
        catch java.lang.Throwable from label32 to label33 with label40;
        catch java.lang.Throwable from label35 to label36 with label40;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label41 to label42 with label40;
    }

    static void access$000(com.gluegadget.hndroid.Comments, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Comments r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: com.gluegadget.hndroid.Comments;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21756, 32506, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45442, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45442, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 6);
        r3 = $r2[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.Comments: void refreshComments(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32507, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32508, 0);
        $r0 = newmultiarray (boolean)[8][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Comments: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 499);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Comments: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(499);
        <com.gluegadget.hndroid.Comments: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[31];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments", 7222688643866813712L);
        return $r0;
    }
}
class com.gluegadget.hndroid.CommentsAdapter$ViewHolder extends java.lang.Object
{
    android.widget.TextView title;
    android.widget.TextView author;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int title$a3tid;
    int author$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.CommentsAdapter$ViewHolder r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.CommentsAdapter$ViewHolder;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32509, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 503);
        $r1 = <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45443, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45443, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32510, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 1);
        r1 = $r0[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32511, 0);
        $r0 = newmultiarray (boolean)[2][];
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 503);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(503);
        <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentsAdapter$ViewHolder", 9251206036812L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.CommentsAdapter extends android.widget.ArrayAdapter
{
    private android.view.LayoutInflater mInflater;
    int resource;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int mInflater$a3tid;
    acteve.symbolic.integer.Expression resource$sym;
    int resource$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(android.content.Context, int, java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $r5$sym, r4$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.gluegadget.hndroid.CommentsAdapter r0;
        android.content.Context r1;
        java.util.List r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Object $r5;
        android.view.LayoutInflater $r6;

        r0 := @this: com.gluegadget.hndroid.CommentsAdapter;
        r1 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        r2 := @parameter2: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11527, 32512, 4);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentsAdapter: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 504);
        $r3 = <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45444, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45444, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11527, null, null, i0$sym, null);
        specialinvoke r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>(r1, i0, r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        $r6 = (android.view.LayoutInflater) $r5;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentsAdapter: int mInflater$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 505);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentsAdapter: int mInflater$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(505);
        r0.<com.gluegadget.hndroid.CommentsAdapter: android.view.LayoutInflater mInflater> = $r6;
        r0.<com.gluegadget.hndroid.CommentsAdapter: acteve.symbolic.integer.Expression resource$sym> = i0$sym;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.CommentsAdapter: int resource$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 506);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.CommentsAdapter: int resource$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(506);
        r0.<com.gluegadget.hndroid.CommentsAdapter: int resource> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $i3$sym, $i2$sym, $r14$sym, $i1$sym, $r7$sym, r4$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3;
        com.gluegadget.hndroid.CommentsAdapter r0;
        android.view.View r1, $r10, $r12;
        android.view.ViewGroup r2;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.Comment r5;
        com.gluegadget.hndroid.CommentsAdapter$ViewHolder r6, $r9;
        java.lang.Object $r7, $r14;
        android.view.LayoutInflater $r8;
        android.widget.TextView $r11, $r13, $r15, $r17, $r20, $r22;
        java.lang.Integer $r16;
        java.lang.String $r18, $r19, $r21, $r25, $r27;
        java.lang.StringBuilder $r23, $r24, $r26;

        r0 := @this: com.gluegadget.hndroid.CommentsAdapter;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.View;
        r2 := @parameter2: android.view.ViewGroup;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1326, 32513, 4);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentsAdapter: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 504);
        $r3 = <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45445, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45445, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1327, null, i0$sym);
        $r7 = virtualinvoke r0.<com.gluegadget.hndroid.CommentsAdapter: java.lang.Object getItem(int)>(i0);
        $r7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1327);
        r5 = (com.gluegadget.hndroid.Comment) $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_10 = null;
        if r1 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45446, 0);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.CommentsAdapter: int mInflater$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 505);
        $r8 = r0.<com.gluegadget.hndroid.CommentsAdapter: android.view.LayoutInflater mInflater>;
        $i1$sym = r0.<com.gluegadget.hndroid.CommentsAdapter: acteve.symbolic.integer.Expression resource$sym>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.CommentsAdapter: int resource$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 506);
        $i1 = r0.<com.gluegadget.hndroid.CommentsAdapter: int resource>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1318, null, $i1$sym, null, null);
        r1 = virtualinvoke $r8.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, r2, 0);
        $r9 = new com.gluegadget.hndroid.CommentsAdapter$ViewHolder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r9.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: void <init>()>();
        r6 = $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r10 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230724);
        $r11 = (android.widget.TextView) $r10;
        _sym_tmp_4 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 507);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int title$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(507);
        r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView title> = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r12 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230723);
        $r13 = (android.widget.TextView) $r12;
        _sym_tmp_5 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 508);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int author$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(508);
        r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView author> = $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6683, null, null);
        virtualinvoke r1.<android.view.View: void setTag(java.lang.Object)>(r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45446, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(6682, null);
        $r14 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();
        $r14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(6682);
        r6 = (com.gluegadget.hndroid.CommentsAdapter$ViewHolder) $r14;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;

     label4:
        _sym_tmp_6 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 507);
        $r15 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView title>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21743, null);
        $r16 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.Integer getPadding()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1872, null, $i3$sym, null, null, null);
        virtualinvoke $r15.<android.widget.TextView: void setPadding(int,int,int,int)>($i3, 10, 10, 10);
        _sym_tmp_7 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 507);
        $r17 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView title>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r18 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r19 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_10 = null;
        if $r19 != "" goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45447, 0);
        _sym_tmp_8 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 508);
        $r20 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView author>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r21 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r20.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45447, 1);
        goto label6;

     label6:
        _sym_tmp_9 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 508);
        $r22 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView author>;
        $r23 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("by ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r25 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r27);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        return r1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32514, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32515, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.CommentsAdapter: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 504);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.CommentsAdapter: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(504);
        <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentsAdapter", -3503956966120550494L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements com.gluegadget.hndroid.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private static final int DEFAULT_COVERAGE_FILE_PATH$a3tid;
    private final int mResults$a3tid;
    private int mIntent$a3tid;
    private static final acteve.symbolic.integer.Expression LOGD$sym;
    private static final int LOGD$a3tid;
    private acteve.symbolic.integer.Expression mCoverage$sym;
    private int mCoverage$a3tid;
    private int mCoverageFilePath$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32516, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45448, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45448, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 510);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(510);
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym> = null;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 511);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(511);
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32517, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45449, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45449, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 512);
        $r4 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_7 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45450, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21774, null, null, null);
        $z0 = specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21774);
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym> = $z0$sym;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 511);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(511);
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 513);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(513);
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45450, 1);
        goto label3;

     label3:
        $r11 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8437, null);
        $r12 = virtualinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "com/gluegadget/hndroid/EmmaInstrument/InstrumentedActivity");
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 514);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(514);
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 514);
        $r13 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1591, null, null);
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(8425, 32518, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45451, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45451, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 512);
        $r4 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8425, null);
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(10470);
        staticinvoke <android.os.Looper: void prepare()>();
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 514);
        $r5 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8450, null, null);
        $r6 = virtualinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21775, null, null);
        virtualinvoke r3.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: void setFinishListener(com.gluegadget.hndroid.EmmaInstrument.FinishListener)>(r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21774, 32519, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45452, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45452, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 3);
        r4 = $r3[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_2 = null;
        if r5 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45453, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(20857, null);
        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(20857);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45454, 0);
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label5;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45453, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45454, 1);
        goto label4;

     label4:
        $z1$sym = null;
        $z1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21774, $z1$sym);
        return $z1;
    }

    private void generateCoverageReport()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21779, 32520, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45455, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45455, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 512);
        $r6 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21776, null);
        $r8 = specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2060, null);
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 0);
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 1);
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 2);
        $r9[2] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2770, null, null, null);
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 0);
        $r13[0] = r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 1);
        $r13[1] = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 2);
        $r13[2] = $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2771, null, null, null);
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label10;

     label4:
        $r17 := @caughtexception;
        r18 = $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21777, null, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label10;

     label5:
        $r19 := @caughtexception;
        r20 = $r19;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21778, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label10;

     label6:
        $r21 := @caughtexception;
        r22 = $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21778, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label10;

     label7:
        $r23 := @caughtexception;
        r24 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21778, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label10;

     label8:
        $r25 := @caughtexception;
        r26 = $r25;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21778, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label10;

     label9:
        $r27 := @caughtexception;
        r28 = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21778, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
        catch java.lang.SecurityException from label2 to label3 with label5;
        catch java.lang.NoSuchMethodException from label2 to label3 with label6;
        catch java.lang.IllegalArgumentException from label2 to label3 with label7;
        catch java.lang.IllegalAccessException from label2 to label3 with label8;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label9;
    }

    private java.lang.String getCoverageFilePath()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21776, 32521, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45456, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45456, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 513);
        $r3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = null;
        if $r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45457, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45457, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 513);
        $r4 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21780, 32522, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45458, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45458, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 6);
        r3 = $r2[6];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45459, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45460, 0);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 513);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(513);
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21780, null);
        return 1;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45459, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45460, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21780, null);
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21778, 32523, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45461, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45461, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 7);
        r3 = $r2[7];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21777, null, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21777, 32524, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45462, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45462, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 8);
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 512);
        $r9 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(110, null, null, null);
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 510);
        $r10 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(7751, null, null, null);
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21781, 32525, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45463, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45463, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 512);
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0$sym = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 511);
        $z0 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45464, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21779, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45464, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 510);
        $r4 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8430, null, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21782, 32526, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45465, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45465, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 10);
        r3 = $r2[10];
        _sym_tmp_2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 512);
        $r4 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0$sym = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 511);
        $z0 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45466, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21780, null, null);
        $z1 = specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21780);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45467, 0);
        _sym_tmp_4 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 512);
        $r9 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45467, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21779, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21780, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45466, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32527, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 11);
        r1 = $r0[11];
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 512);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(512);
        <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32528, 0);
        $r0 = newmultiarray (boolean)[12][];
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 509);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(509);
        <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  com.gluegadget.hndroid.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21783, 32529, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 515);
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45468, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45468, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 516);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(516);
        r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z1$sym, $z0$sym, $r16$sym, $r15$sym, $r14$sym, $i0$sym, $r12$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity $r10, $r18;
        com.gluegadget.hndroid.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32530, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 515);
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45469, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45469, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 516);
        $r10 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21784, null);
        $r11 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener access$000(com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = null;
        if $r11 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45470, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_4 = null;
        if r5 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45471, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(731, null, null);
        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(731);
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0$sym = null;
        $i0 = lengthof r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45472, 0);
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r6, 0);
        $r14 = r6[0];
        $r15$sym = $r14$sym;
        $r15 = (byte[]) $r14;
        $r16$sym = $r15$sym;
        $r16 = (byte[]) $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5113, $r16$sym);
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4804, null);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5110, null);
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45473, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45474, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45473, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 516);
        $r18 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21784, null);
        $r19 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener access$000(com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21782, null, null);
        interfaceinvoke $r19.<com.gluegadget.hndroid.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        goto label8;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45470, 1);
        goto label8;

        goto label8;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45471, 1);
        goto label8;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45472, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45474, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32531, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32532, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 515);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(515);
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity extends com.gluegadget.hndroid.Main
{
    public static java.lang.String TAG;
    private com.gluegadget.hndroid.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private int mListener$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32533, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45475, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45475, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<com.gluegadget.hndroid.Main: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void setFinishListener(com.gluegadget.hndroid.EmmaInstrument.FinishListener)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r0;
        com.gluegadget.hndroid.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: com.gluegadget.hndroid.EmmaInstrument.FinishListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21775, 32534, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45476, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45476, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        com.gluegadget.hndroid.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1658, 32535, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45477, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45477, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_2 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 518);
        $r4 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        specialinvoke r0.<com.gluegadget.hndroid.Main: void finish()>();
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 519);
        $r8 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = null;
        if $r8 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45478, 0);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 519);
        $r9 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21781, null);
        interfaceinvoke $r9.<com.gluegadget.hndroid.EmmaInstrument.FinishListener: void onActivityFinished()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45478, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    static com.gluegadget.hndroid.EmmaInstrument.FinishListener access$000(com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21784, 32536, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45479, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45479, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 519);
        $r3 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32537, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 518);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(518);
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32538, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 517);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(517);
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32539, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 520);
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45480, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45480, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32540, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 520);
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45481, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45481, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_2 = null;
        if r6 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45482, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21782, null, null);
        interfaceinvoke r6.<com.gluegadget.hndroid.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45482, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32541, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 521);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(521);
        <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32542, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 520);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(520);
        <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.KarmaWidget$UpdateService extends android.app.Service implements java.lang.Runnable
{
    private static java.lang.Object sLock;
    private static java.util.Queue sAppWidgetIds;
    private static boolean sThreadRunning;
    private static final boolean[][] $VRc;
    private static acteve.symbolic.integer.Expression sLock$sym;
    private static int sLock$a3tid;
    private static int sAppWidgetIds$a3tid;
    private static acteve.symbolic.integer.Expression sThreadRunning$sym;
    private static int sThreadRunning$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32543, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45483, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45483, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Service: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onStart(android.content.Intent, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z0$sym, $r6$sym, r4$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r8;
        boolean $z0;
        java.lang.Thread $r7;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        r1 := @parameter0: android.content.Intent;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9489, 32544, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45484, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45484, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9489, null, null, i0$sym);
        specialinvoke r0.<android.app.Service: void onStart(android.content.Intent,int)>(r1, i0);
        $r6$sym = <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sLock$sym>;
        _sym_tmp_2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r6 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock>;
        r4$sym = $r6$sym;
        r4 = $r6;
        entermonitor $r6;

     label2:
        $z0$sym = <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sThreadRunning$sym>;
        _sym_tmp_3 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sThreadRunning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 524);
        $z0 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean sThreadRunning>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45485, 0);
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sThreadRunning$sym> = null;
        _sym_tmp_4 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sThreadRunning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 524);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sThreadRunning$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(524);
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean sThreadRunning> = 1;
        $r7 = new java.lang.Thread;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r7.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45485, 1);
        goto label4;

     label4:
        exitmonitor r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;

     label5:
        goto label9;

     label6:
        $r8 := @caughtexception;

     label7:
        r5 = $r8;
        exitmonitor r4;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        throw r5;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static void requestUpdate(int[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $r6$sym, i2$sym, i1$sym, i0$sym, r4$sym, r3$sym, r2$sym, r0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2;
        int[] r0, r4;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Object r3, $r6;
        java.lang.Throwable r5, $r9;
        java.util.Queue $r7;
        java.lang.Integer $r8;

        r0 := @parameter0: int[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21785, 32545, 1);
        r0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45486, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45486, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        $r6$sym = <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sLock$sym>;
        _sym_tmp_2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r6 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock>;
        r3$sym = $r6$sym;
        r3 = $r6;
        entermonitor $r6;

     label2:
        r4$sym = r0$sym;
        r4 = r0;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>(r4$sym);
        i0 = lengthof r4;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45487, 0);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r4$sym, i1$sym, r4, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, i1);
        i2 = r4[i1];
        _sym_tmp_3 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sAppWidgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 525);
        $r7 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, i2$sym);
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>($r8);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label3;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45487, 1);
        goto label5;

     label5:
        exitmonitor r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label6:
        goto label10;

     label7:
        $r9 := @caughtexception;

     label8:
        r5 = $r9;
        exitmonitor r3;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        throw r5;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.widget.RemoteViews buildUpdate(android.content.Context)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        r1 := @parameter0: android.content.Context;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21786, 32546, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45488, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45488, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return null;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        r1 := @parameter0: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2993, 32547, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45489, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45489, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 4);
        r3 = $r2[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return null;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.appwidget.AppWidgetManager r3;
        boolean $z0;
        android.content.Context $r4;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32548, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45490, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45490, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(9945, null);
        r3 = staticinvoke <android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>(r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21787);
        $z0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean hasMoreUpdates()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21787);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45491, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21788);
        i0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: int getNextUpdate()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        $r4 = virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidget$UpdateService: android.content.Context getApplicationContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21789, null, null, i0$sym);
        staticinvoke <com.gluegadget.hndroid.KarmaWidget: void updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)>($r4, r3, i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45491, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    private static boolean hasMoreUpdates()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z2$sym, $z1$sym, $r4$sym, z0$sym, r2$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Object r2, $r4;
        boolean z0, $z1, $z2;
        java.lang.Throwable r3, $r6;
        java.util.Queue $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21787, 32549, 0);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r0 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45492, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45492, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 6);
        r1 = $r0[6];
        $r4$sym = <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sLock$sym>;
        _sym_tmp_2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r4 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock>;
        r2$sym = $r4$sym;
        r2 = $r4;
        entermonitor $r4;

     label2:
        _sym_tmp_3 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sAppWidgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 525);
        $r5 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z1 = interfaceinvoke $r5.<java.util.Queue: boolean isEmpty()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45493, 0);
        $z2$sym = null;
        $z2 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45493, 1);
        goto label4;

     label4:
        $z2$sym = null;
        $z2 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;

     label5:
        z0$sym = $z2$sym;
        z0 = $z2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45494, 0);
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sThreadRunning$sym> = null;
        _sym_tmp_4 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sThreadRunning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 524);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sThreadRunning$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(524);
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean sThreadRunning> = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 4);
        r1[4] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45494, 1);
        goto label7;

     label7:
        exitmonitor r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 5);
        r1[5] = 1;

     label8:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21787, z0$sym);
        return z0;

     label9:
        $r6 := @caughtexception;

     label10:
        r3 = $r6;
        exitmonitor r2;

     label11:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 6);
        r1[6] = 1;
        throw r3;

        catch java.lang.Throwable from label2 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    private static int getNextUpdate()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $i1$sym, $r8$sym, $b0$sym, $r6$sym, $r4$sym, r2$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Object r2, $r4, $r6, $r8;
        java.lang.Throwable r3, $r10;
        java.util.Queue $r5, $r7;
        byte $b0;
        java.lang.Integer $r9;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32550, 0);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r0 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45495, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45495, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        $r4$sym = <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sLock$sym>;
        _sym_tmp_2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r4 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock>;
        r2$sym = $r4$sym;
        r2 = $r4;
        entermonitor $r4;

     label2:
        _sym_tmp_3 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sAppWidgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 525);
        $r5 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11471, null);
        $r6 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object peek()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(11471);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        _sym_tmp_5 = null;
        if $r6 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45496, 0);
        $b0$sym = null;
        $b0 = 0;
        exitmonitor r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $b0$sym);
        return $b0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45496, 1);
        goto label5;

     label5:
        _sym_tmp_4 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sAppWidgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 525);
        $r7 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8319, null);
        $r8 = interfaceinvoke $r7.<java.util.Queue: java.lang.Object poll()>();
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(8319);
        $r9 = (java.lang.Integer) $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        exitmonitor r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i1$sym);
        return $i1;

     label7:
        $r10 := @caughtexception;

     label8:
        r3 = $r10;
        exitmonitor r2;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression $r2$sym, r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Object $r2;
        java.util.LinkedList $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32551, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 8);
        r1 = $r0[8];
        $r2 = new java.lang.Object;
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.lang.Object: void <init>()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sLock$sym> = $r2$sym;
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 523);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sLock$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(523);
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock> = $r2;
        $r3 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.LinkedList: void <init>()>();
        _sym_tmp_2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sAppWidgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 525);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sAppWidgetIds$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(525);
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds> = $r3;
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: acteve.symbolic.integer.Expression sThreadRunning$sym> = null;
        _sym_tmp_3 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sThreadRunning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 524);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: int sThreadRunning$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(524);
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean sThreadRunning> = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32552, 0);
        $r0 = newmultiarray (boolean)[9][];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 522);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(522);
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[7];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/KarmaWidget$UpdateService", 604957253039098302L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.KarmaWidget extends android.appwidget.AppWidgetProvider
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.KarmaWidget r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32553, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 526);
        $r1 = <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45497, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45497, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r5$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.KarmaWidget r0;
        android.content.Context r1;
        android.appwidget.AppWidgetManager r2;
        int[] r3;
        boolean[][] $r4;
        boolean[] r5;
        android.content.ComponentName $r6;
        android.content.Intent $r7;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.appwidget.AppWidgetManager;
        r3 := @parameter2: int[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9976, 32554, 4);
        r3$sym = a3targs$symargs[3];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 526);
        $r4 = <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45498, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45498, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 1);
        r5 = $r4[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        _sym_tmp_2 = null;
        if r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45499, 0);
        $r6 = new android.content.ComponentName;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r6.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r1, class "com/gluegadget/hndroid/KarmaWidget");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1911, null, null);
        r3 = virtualinvoke r2.<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>($r6);
        r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1911);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 1);
        r5[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45499, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21785, r3$sym);
        staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: void requestUpdate(int[])>(r3);
        $r7 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "com/gluegadget/hndroid/KarmaWidget$UpdateService");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1887, null, null);
        virtualinvoke r1.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 2);
        r5[2] = 1;
        return;
    }

    public void onDeleted(android.content.Context, int[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i2$sym, i1$sym, i0$sym, r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, $i2;
        com.gluegadget.hndroid.KarmaWidget r0;
        android.content.Context r1;
        int[] r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: int[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9977, 32555, 3);
        r2$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 526);
        $r3 = <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45500, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45500, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>(r2$sym);
        i0 = lengthof r2;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45501, 0);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r2$sym, i1$sym, r2, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r2, i1);
        $i2 = r2[i1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21790, null, $i2$sym);
        staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void deleteUsername(android.content.Context,int)>(r1, $i2);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45501, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        return;
    }

    static void updateAppWidget(android.content.Context, android.appwidget.AppWidgetManager, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $r25$sym, $r22$sym, $i1$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1;
        android.content.Context r0;
        android.appwidget.AppWidgetManager r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r15, $r20, $r26, $r27;
        android.widget.RemoteViews r5, $r14;
        java.net.URL r6, $r16;
        java.net.URLConnection r7;
        java.io.InputStream r8;
        org.htmlcleaner.HtmlCleaner r9, $r21;
        org.htmlcleaner.TagNode r10, r12;
        java.lang.Object[] r11;
        java.lang.CharSequence $r13;
        java.lang.StringBuilder $r17, $r18, $r19;
        java.lang.Object $r22, $r25;
        java.util.List $r23;
        java.util.Iterator $r24;
        java.net.MalformedURLException $r28, r29;
        java.io.IOException $r30, r31;
        org.htmlcleaner.XPatherException $r32, r33;

        r0 := @parameter0: android.content.Context;
        r1 := @parameter1: android.appwidget.AppWidgetManager;
        i0 := @parameter2: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21789, 32556, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 526);
        $r2 = <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45502, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45502, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21791, null, i0$sym);
        $r13 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: java.lang.CharSequence loadUsername(android.content.Context,int)>(r0, i0);
        r4 = (java.lang.String) $r13;
        $r14 = new android.widget.RemoteViews;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5965, null);
        $r15 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r14.<android.widget.RemoteViews: void <init>(java.lang.String,int)>($r15, 2130903042);
        r5 = $r14;

     label2:
        $r16 = new java.net.URL;
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/user?id=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r16.<java.net.URL: void <init>(java.lang.String)>($r20);
        r6 = $r16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        r7 = virtualinvoke r6.<java.net.URL: java.net.URLConnection openConnection()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3359, null);
        r8 = virtualinvoke r7.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        $r21 = new org.htmlcleaner.HtmlCleaner;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r21.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r9 = $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21793, null, null);
        r10 = virtualinvoke r9.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream)>(r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r11 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//form[@method=\'post\']/table/tbody/tr/td[2]");
        $i1$sym = null;
        $i1 = lengthof r11;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 3);
        if $i1 <= 3 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45503, 0);
        $r22$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r11, 2);
        $r22 = r11[2];
        r12 = (org.htmlcleaner.TagNode) $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9326, null, null, null);
        virtualinvoke r5.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(2131230726, r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r23 = virtualinvoke r12.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r24 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();
        $r25$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9326, null, null, null);
        virtualinvoke r5.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(2131230727, $r27);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45503, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9326, null, null, null);
        virtualinvoke r5.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(2131230726, "unknown");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9326, null, null, null);
        virtualinvoke r5.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(2131230727, "0");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1894, null, i0$sym, null);
        virtualinvoke r1.<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>(i0, r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label6:
        goto label10;

     label7:
        $r28 := @caughtexception;
        r29 = $r28;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r29.<java.net.MalformedURLException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label10;

     label8:
        $r30 := @caughtexception;
        r31 = $r30;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r31.<java.io.IOException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        goto label10;

     label9:
        $r32 := @caughtexception;
        r33 = $r32;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r33.<org.htmlcleaner.XPatherException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1894, null, i0$sym, null);
        virtualinvoke r1.<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>(i0, r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        return;

        catch java.net.MalformedURLException from label2 to label6 with label7;
        catch java.io.IOException from label2 to label6 with label8;
        catch org.htmlcleaner.XPatherException from label2 to label6 with label9;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32557, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32558, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidget: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 526);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidget: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(526);
        <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[8];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/KarmaWidget", 1244696357931847779L);
        return $r0;
    }
}
class com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.KarmaWidgetConfigurationActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1 r0;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1;
        r1 := @parameter0: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32559, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 527);
        $r2 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45504, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45504, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 528);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(528);
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, $i2$sym, $i1$sym, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity r4, $r8, $r11, $r12, $r14, $r16, $r17;
        java.lang.String r5;
        android.appwidget.AppWidgetManager r6;
        android.content.Intent r7, $r13;
        android.widget.EditText $r9;
        android.text.Editable $r10;

        r0 := @this: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32560, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 527);
        $r2 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45505, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45505, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 528);
        r4 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 528);
        $r8 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        _sym_tmp_4 = $r8.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetUsername$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 529);
        $r9 = $r8.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.widget.EditText mAppWidgetUsername>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2403, null);
        $r10 = virtualinvoke $r9.<android.widget.EditText: android.text.Editable getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 528);
        $r11 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        $i0$sym = $r11.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: acteve.symbolic.integer.Expression mAppWidgetId$sym>;
        _sym_tmp_6 = $r11.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 530);
        $i0 = $r11.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21795, null, $i0$sym, null);
        staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void saveTitlePref(android.content.Context,int,java.lang.String)>(r4, $i0, r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(9945, null);
        r6 = staticinvoke <android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>(r4);
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 528);
        $r12 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        $i1$sym = $r12.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: acteve.symbolic.integer.Expression mAppWidgetId$sym>;
        _sym_tmp_8 = $r12.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 530);
        $i1 = $r12.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21789, null, null, $i1$sym);
        staticinvoke <com.gluegadget.hndroid.KarmaWidget: void updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)>(r4, r6, $i1);
        $r13 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<android.content.Intent: void <init>()>();
        r7 = $r13;
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 528);
        $r14 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        $i2$sym = $r14.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: acteve.symbolic.integer.Expression mAppWidgetId$sym>;
        _sym_tmp_10 = $r14.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 530);
        $i2 = $r14.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1593, null, null, $i2$sym);
        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("appWidgetId", $i2);
        _sym_tmp_11 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 528);
        $r16 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1655, null, null, null);
        virtualinvoke $r16.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void setResult(int,android.content.Intent)>(-1, r7);
        _sym_tmp_12 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 528);
        $r17 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        virtualinvoke $r17.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void finish()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32561, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32562, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 527);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(527);
        <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/KarmaWidgetConfigurationActivity$1", 4320153532272098211L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.KarmaWidgetConfigurationActivity extends android.app.Activity
{
    private static final java.lang.String PREFS_NAME;
    private static final java.lang.String PREF_PREFIX_KEY;
    int mAppWidgetId;
    android.widget.EditText mAppWidgetUsername;
    android.view.View$OnClickListener mOnClickListener;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int PREFS_NAME$a3tid;
    private static final int PREF_PREFIX_KEY$a3tid;
    acteve.symbolic.integer.Expression mAppWidgetId$sym;
    int mAppWidgetId$a3tid;
    int mAppWidgetUsername$a3tid;
    int mOnClickListener$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1 $r3;

        r0 := @this: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32563, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 531);
        $r1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45506, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45506, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: acteve.symbolic.integer.Expression mAppWidgetId$sym> = null;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 530);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(530);
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId> = 0;
        $r3 = new com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21794, null, null);
        specialinvoke $r3.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: void <init>(com.gluegadget.hndroid.KarmaWidgetConfigurationActivity)>(r0);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mOnClickListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 532);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mOnClickListener$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(532);
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.view.View$OnClickListener mOnClickListener> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i1$sym, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity r0;
        android.os.Bundle r1, r5;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4;
        android.view.View $r6, $r8;
        android.widget.EditText $r7;
        android.view.View$OnClickListener $r9;

        r0 := @this: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32564, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 531);
        $r2 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45507, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45507, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1656, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void setResult(int)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1626, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void setContentView(int)>(2130903043);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r6 = virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.view.View findViewById(int)>(2131230726);
        $r7 = (android.widget.EditText) $r6;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetUsername$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 529);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetUsername$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(529);
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.widget.EditText mAppWidgetUsername> = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r8 = virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.view.View findViewById(int)>(2131230728);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mOnClickListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 532);
        $r9 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.view.View$OnClickListener mOnClickListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1450, null, null);
        virtualinvoke $r8.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1407, null);
        r4 = virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.content.Intent getIntent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        r5 = virtualinvoke r4.<android.content.Intent: android.os.Bundle getExtras()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_6 = null;
        if r5 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45508, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2694, null, null, null);
        $i0 = virtualinvoke r5.<android.os.Bundle: int getInt(java.lang.String,int)>("appWidgetId", 0);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2694);
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: acteve.symbolic.integer.Expression mAppWidgetId$sym> = $i0$sym;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 530);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(530);
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId> = $i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45508, 1);
        goto label3;

     label3:
        $i1$sym = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: acteve.symbolic.integer.Expression mAppWidgetId$sym>;
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 530);
        $i1 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45509, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void finish()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45509, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return;
    }

    static java.lang.CharSequence loadUsername(android.content.Context, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r8;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21791, 32565, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 531);
        $r1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45510, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45510, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r3 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.gluegadget.hndroid.KarmaWidget", 0);
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prefix_");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, i0$sym);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r8, null);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_2 = null;
        if r4 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45511, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return r4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45511, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return "pg";
    }

    static void saveTitlePref(android.content.Context, int, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        android.content.Context r0;
        java.lang.String r1, $r9;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences$Editor r4;
        android.content.SharedPreferences $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21795, 32566, 3);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 531);
        $r2 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45512, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45512, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        $r5 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.gluegadget.hndroid.KarmaWidget", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5321, null);
        r4 = interfaceinvoke $r5.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prefix_");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, i0$sym);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5322, null, null, null);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r9, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8350, null);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    static void deleteUsername(android.content.Context, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21790, 32567, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 531);
        $r1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45513, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45513, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32568, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32569, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 531);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(531);
        <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/KarmaWidgetConfigurationActivity", 4357141234190595550L);
        return $r0;
    }
}
class com.gluegadget.hndroid.LoginDialog$1 extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32570, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.LoginDialog$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 0);
        r1 = $r0[0];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r1$sym;
        boolean[][] $r0;
        boolean[] $r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32571, 0);
        $r0 = newmultiarray (boolean)[1][];
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 533);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.LoginDialog$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(533);
        <com.gluegadget.hndroid.LoginDialog$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/LoginDialog$1", 33323L);
        return $r0;
    }
}
public interface  com.gluegadget.hndroid.LoginDialog$ReadyListener extends java.lang.Object
{

    public abstract void ready(java.lang.String, java.lang.String);
}
class com.gluegadget.hndroid.LoginDialog$loginListener extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.gluegadget.hndroid.LoginDialog this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    private void <init>(com.gluegadget.hndroid.LoginDialog)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.LoginDialog$loginListener r0;
        com.gluegadget.hndroid.LoginDialog r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.LoginDialog$loginListener;
        r1 := @parameter0: com.gluegadget.hndroid.LoginDialog;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21796, 32572, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog$loginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 534);
        $r2 = <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45514, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45514, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 535);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.LoginDialog$loginListener: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(535);
        r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.LoginDialog$loginListener r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.LoginDialog $r4, $r6, $r10, $r14;
        com.gluegadget.hndroid.LoginDialog$ReadyListener $r5;
        android.widget.EditText $r7, $r11;
        android.text.Editable $r8, $r12;
        java.lang.String $r9, $r13;

        r0 := @this: com.gluegadget.hndroid.LoginDialog$loginListener;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32573, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog$loginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 534);
        $r2 = <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45515, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45515, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 535);
        $r4 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21797, null);
        $r5 = staticinvoke <com.gluegadget.hndroid.LoginDialog: com.gluegadget.hndroid.LoginDialog$ReadyListener access$100(com.gluegadget.hndroid.LoginDialog)>($r4);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 535);
        $r6 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0>;
        _sym_tmp_4 = $r6.<com.gluegadget.hndroid.LoginDialog: int username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 536);
        $r7 = $r6.<com.gluegadget.hndroid.LoginDialog: android.widget.EditText username>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2403, null);
        $r8 = virtualinvoke $r7.<android.widget.EditText: android.text.Editable getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5814, null);
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 535);
        $r10 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0>;
        _sym_tmp_6 = $r10.<com.gluegadget.hndroid.LoginDialog: int password$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 537);
        $r11 = $r10.<com.gluegadget.hndroid.LoginDialog: android.widget.EditText password>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2403, null);
        $r12 = virtualinvoke $r11.<android.widget.EditText: android.text.Editable getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5814, null);
        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        interfaceinvoke $r5.<com.gluegadget.hndroid.LoginDialog$ReadyListener: void ready(java.lang.String,java.lang.String)>($r9, $r13);
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 535);
        $r14 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r14.<com.gluegadget.hndroid.LoginDialog: void dismiss()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    void <init>(com.gluegadget.hndroid.LoginDialog, com.gluegadget.hndroid.LoginDialog$1)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.LoginDialog$loginListener r0;
        com.gluegadget.hndroid.LoginDialog r1;
        com.gluegadget.hndroid.LoginDialog$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.LoginDialog$loginListener;
        r1 := @parameter0: com.gluegadget.hndroid.LoginDialog;
        r2 := @parameter1: com.gluegadget.hndroid.LoginDialog$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21798, 32574, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog$loginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 534);
        $r3 = <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45516, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45516, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21796, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.LoginDialog$loginListener: void <init>(com.gluegadget.hndroid.LoginDialog)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32575, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32576, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog$loginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 534);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.LoginDialog$loginListener: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(534);
        <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/LoginDialog$loginListener", -7355153245354491069L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.LoginDialog extends android.app.Dialog
{
    android.widget.Button loginButton;
    java.lang.String name;
    private com.gluegadget.hndroid.LoginDialog$ReadyListener readyListener;
    android.widget.EditText username;
    android.widget.EditText password;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int loginButton$a3tid;
    int name$a3tid;
    private int readyListener$a3tid;
    int username$a3tid;
    int password$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(android.content.Context, java.lang.String, com.gluegadget.hndroid.LoginDialog$ReadyListener)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.LoginDialog r0;
        android.content.Context r1;
        java.lang.String r2;
        com.gluegadget.hndroid.LoginDialog$ReadyListener r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: com.gluegadget.hndroid.LoginDialog;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: com.gluegadget.hndroid.LoginDialog$ReadyListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21799, 32577, 4);
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 538);
        $r4 = <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45517, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45517, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 0);
        r5 = $r4[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.LoginDialog: int readyListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 539);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.LoginDialog: int readyListener$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(539);
        r0.<com.gluegadget.hndroid.LoginDialog: com.gluegadget.hndroid.LoginDialog$ReadyListener readyListener> = r3;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.LoginDialog: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 540);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.LoginDialog: int name$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(540);
        r0.<com.gluegadget.hndroid.LoginDialog: java.lang.String name> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.LoginDialog r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.View $r4, $r8, $r10;
        android.widget.Button $r5, $r6;
        com.gluegadget.hndroid.LoginDialog$loginListener $r7;
        android.widget.EditText $r9, $r11;

        r0 := @this: com.gluegadget.hndroid.LoginDialog;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32578, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 538);
        $r2 = <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45518, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45518, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Dialog: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1626, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: void setContentView(int)>(2130903044);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1336, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: void setTitle(java.lang.CharSequence)>("Sign In");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r4 = virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: android.view.View findViewById(int)>(2131230730);
        $r5 = (android.widget.Button) $r4;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.LoginDialog: int loginButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 541);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.LoginDialog: int loginButton$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(541);
        r0.<com.gluegadget.hndroid.LoginDialog: android.widget.Button loginButton> = $r5;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.LoginDialog: int loginButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 541);
        $r6 = r0.<com.gluegadget.hndroid.LoginDialog: android.widget.Button loginButton>;
        $r7 = new com.gluegadget.hndroid.LoginDialog$loginListener;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21798, null, null, null);
        specialinvoke $r7.<com.gluegadget.hndroid.LoginDialog$loginListener: void <init>(com.gluegadget.hndroid.LoginDialog,com.gluegadget.hndroid.LoginDialog$1)>(r0, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1450, null, null);
        virtualinvoke $r6.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r8 = virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: android.view.View findViewById(int)>(2131230726);
        $r9 = (android.widget.EditText) $r8;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.LoginDialog: int username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 536);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.LoginDialog: int username$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(536);
        r0.<com.gluegadget.hndroid.LoginDialog: android.widget.EditText username> = $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r10 = virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: android.view.View findViewById(int)>(2131230729);
        $r11 = (android.widget.EditText) $r10;
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.LoginDialog: int password$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 537);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.LoginDialog: int password$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(537);
        r0.<com.gluegadget.hndroid.LoginDialog: android.widget.EditText password> = $r11;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.LoginDialog r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.Button $r4;

        r0 := @this: com.gluegadget.hndroid.LoginDialog;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32579, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 538);
        $r2 = <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45519, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45519, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.LoginDialog: int loginButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 541);
        $r4 = r0.<com.gluegadget.hndroid.LoginDialog: android.widget.Button loginButton>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = null;
        if r1 != $r4 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45520, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: void dismiss()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45520, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;
    }

    static com.gluegadget.hndroid.LoginDialog$ReadyListener access$100(com.gluegadget.hndroid.LoginDialog)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.LoginDialog r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.LoginDialog$ReadyListener $r3;

        r0 := @parameter0: com.gluegadget.hndroid.LoginDialog;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21797, 32580, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 538);
        $r1 = <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45521, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45521, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.LoginDialog: int readyListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 539);
        $r3 = r0.<com.gluegadget.hndroid.LoginDialog: com.gluegadget.hndroid.LoginDialog$ReadyListener readyListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32581, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32582, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <com.gluegadget.hndroid.LoginDialog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 538);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.LoginDialog: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(538);
        <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/LoginDialog", 4624087253961954012L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$1 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32583, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 542);
        $r2 = <com.gluegadget.hndroid.Main$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45522, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45522, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 543);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(543);
        r0.<com.gluegadget.hndroid.Main$1: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Main $r3, $r4, $r6;
        android.app.ProgressDialog $r5;
        android.os.Handler $r7;

        r0 := @this: com.gluegadget.hndroid.Main$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32584, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 542);
        $r1 = <com.gluegadget.hndroid.Main$1: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45523, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45523, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 543);
        $r3 = r0.<com.gluegadget.hndroid.Main$1: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21801, null);
        staticinvoke <com.gluegadget.hndroid.Main: void access$000(com.gluegadget.hndroid.Main)>($r3);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 543);
        $r4 = r0.<com.gluegadget.hndroid.Main$1: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_4 = $r4.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 544);
        $r5 = $r4.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r5.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 543);
        $r6 = r0.<com.gluegadget.hndroid.Main$1: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_6 = $r6.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 545);
        $r7 = $r6.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r7.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32585, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32586, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 542);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(542);
        <com.gluegadget.hndroid.Main$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$1", 4320153515061585109L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$10 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$10 r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$10;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21802, 32587, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$10: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 546);
        $r3 = <com.gluegadget.hndroid.Main$10: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45524, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$10: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45524, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$10: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 547);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$10: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(547);
        r0.<com.gluegadget.hndroid.Main$10: com.gluegadget.hndroid.Main this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$10: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 548);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$10: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(548);
        r0.<com.gluegadget.hndroid.Main$10: com.gluegadget.hndroid.News val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$10 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r7, $r10;
        android.content.Intent r5, $r6;
        com.gluegadget.hndroid.News $r8;
        java.lang.String $r9, $r11;
        android.net.Uri $r12;
        com.gluegadget.hndroid.Main $r13;

        r0 := @this: com.gluegadget.hndroid.Main$10;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32588, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$10: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 546);
        $r2 = <com.gluegadget.hndroid.Main$10: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45525, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$10: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45525, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r6 = new android.content.Intent;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.google.com/gwt/x?u=");
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$10: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 548);
        $r8 = r0.<com.gluegadget.hndroid.Main$10: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r9 = virtualinvoke $r8.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(287, null);
        $r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5115, null, null, null);
        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r12);
        r5 = $r6;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$10: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 547);
        $r13 = r0.<com.gluegadget.hndroid.Main$10: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r13.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32589, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$10: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32590, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$10: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 546);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$10: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(546);
        <com.gluegadget.hndroid.Main$10: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$10", 4705431565367906892L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$11 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$11 r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$11;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21802, 32591, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$11: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 549);
        $r3 = <com.gluegadget.hndroid.Main$11: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45526, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$11: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45526, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$11: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 550);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$11: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(550);
        r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.Main this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$11: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 551);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$11: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(551);
        r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.News val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$11 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        com.gluegadget.hndroid.Main $r6, $r13;
        com.gluegadget.hndroid.News $r7, $r10;
        java.lang.String $r8, $r11;

        r0 := @this: com.gluegadget.hndroid.Main$11;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32592, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$11: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 549);
        $r2 = <com.gluegadget.hndroid.Main$11: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45527, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$11: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45527, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$11: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 550);
        $r6 = r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/gluegadget/hndroid/Comments");
        r4 = $r5;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$11: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 551);
        $r7 = r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21803, null);
        $r8 = virtualinvoke $r7.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r8);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$11: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 551);
        $r10 = r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r11 = virtualinvoke $r10.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r11);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main$11: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r13 = r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r13.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32593, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$11: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32594, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$11: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 549);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$11: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(549);
        <com.gluegadget.hndroid.Main$11: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$11", 4705431566755851497L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$12 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$12 r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$12;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21802, 32595, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$12: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 552);
        $r3 = <com.gluegadget.hndroid.Main$12: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45528, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$12: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45528, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$12: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 553);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$12: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(553);
        r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.Main this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$12: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 554);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$12: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(554);
        r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.News val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$12 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        com.gluegadget.hndroid.Main $r6, $r17;
        com.gluegadget.hndroid.News $r7, $r11;
        java.lang.String $r8, $r12, $r15;
        java.lang.StringBuilder $r10, $r13, $r14;

        r0 := @this: com.gluegadget.hndroid.Main$12;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32596, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$12: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 552);
        $r2 = <com.gluegadget.hndroid.Main$12: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45529, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$12: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45529, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$12: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 553);
        $r6 = r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/gluegadget/hndroid/Submissions");
        r4 = $r5;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$12: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 554);
        $r7 = r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r8 = virtualinvoke $r7.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("user", $r8);
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$12: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 554);
        $r11 = r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r12 = virtualinvoke $r11.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" submissions");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r15);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main$12: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 553);
        $r17 = r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r17.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32597, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$12: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32598, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$12: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 552);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$12: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(552);
        <com.gluegadget.hndroid.Main$12: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$12", 4705431571752452075L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$13$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main$13 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main$13)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$13$1 r0;
        com.gluegadget.hndroid.Main$13 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$13$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$13;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21804, 32599, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$13$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 555);
        $r2 = <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45530, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45530, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$13$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 556);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$13$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(556);
        r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_12, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$13$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r15, $r19;
        org.apache.http.impl.client.DefaultHttpClient r5, $r11;
        org.apache.http.client.methods.HttpGet r6, $r12;
        org.apache.http.impl.client.BasicResponseHandler r7, $r20;
        org.apache.http.client.ClientProtocolException r8, $r22;
        com.gluegadget.hndroid.Main$13 $r9, $r13, $r25, $r28;
        com.gluegadget.hndroid.Main $r10, $r26, $r29;
        com.gluegadget.hndroid.News $r14;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.io.IOException $r23, r24;
        android.app.ProgressDialog $r27;
        android.os.Handler $r30;

        r0 := @this: com.gluegadget.hndroid.Main$13$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32600, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$13$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 555);
        $r1 = <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRc>;
        _sym_tmp_12 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45531, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45531, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$13$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 556);
        $r9 = r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1>;
        _sym_tmp_3 = $r9.<com.gluegadget.hndroid.Main$13: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 557);
        $r10 = $r9.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r3 = virtualinvoke $r10.<com.gluegadget.hndroid.Main: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r5 = $r11;
        $r12 = new org.apache.http.client.methods.HttpGet;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$13$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 556);
        $r13 = r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1>;
        _sym_tmp_5 = $r13.<com.gluegadget.hndroid.Main$13: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 558);
        $r14 = $r13.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21746, null);
        $r15 = virtualinvoke $r14.<com.gluegadget.hndroid.News: java.lang.String getUpVoteUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r12.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r15);
        r6 = $r12;
        $r16 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r19);
        $r20 = new org.apache.http.impl.client.BasicResponseHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r7 = $r20;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15331, null, null, null);
        virtualinvoke r5.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r6, r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label6;

     label4:
        $r22 := @caughtexception;
        r8 = $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r8.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label6;

     label5:
        $r23 := @caughtexception;
        r24 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label6:
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Main$13$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 556);
        $r25 = r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1>;
        _sym_tmp_7 = $r25.<com.gluegadget.hndroid.Main$13: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 557);
        $r26 = $r25.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_8 = $r26.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 544);
        $r27 = $r26.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r27.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Main$13$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 556);
        $r28 = r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1>;
        _sym_tmp_10 = $r28.<com.gluegadget.hndroid.Main$13: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 557);
        $r29 = $r28.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_11 = $r29.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 545);
        $r30 = $r29.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r30.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;

        catch org.apache.http.client.ClientProtocolException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32601, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32602, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$13$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 555);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$13$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(555);
        <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$13$1", -4124872408349886090L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$13 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$13 r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$13;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21802, 32603, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$13: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 559);
        $r3 = <com.gluegadget.hndroid.Main$13: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45532, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$13: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45532, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$13: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 557);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$13: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(557);
        r0.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$13: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 558);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$13: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(558);
        r0.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.News val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$13 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Main $r4, $r5;
        android.app.ProgressDialog $r6;
        java.lang.Thread $r7;
        com.gluegadget.hndroid.Main$13$1 $r8;

        r0 := @this: com.gluegadget.hndroid.Main$13;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32604, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$13: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 559);
        $r2 = <com.gluegadget.hndroid.Main$13: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45533, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$13: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45533, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$13: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 557);
        $r4 = r0.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$13: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 557);
        $r5 = r0.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r6 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r5, "", "Voting. Please wait...", 1);
        _sym_tmp_4 = $r4.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 544);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r4.<com.gluegadget.hndroid.Main: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        $r4.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r6;
        $r7 = new java.lang.Thread;
        $r8 = new com.gluegadget.hndroid.Main$13$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21804, null, null);
        specialinvoke $r8.<com.gluegadget.hndroid.Main$13$1: void <init>(com.gluegadget.hndroid.Main$13)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r7.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32605, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$13: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32606, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$13: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 559);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$13: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(559);
        <com.gluegadget.hndroid.Main$13: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$13", 4705431562869606603L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$2$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main$2 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main$2)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$2$1 r0;
        com.gluegadget.hndroid.Main$2 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$2$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$2;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21805, 32607, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$2$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 560);
        $r2 = <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45534, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45534, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 561);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$2$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(561);
        r0.<com.gluegadget.hndroid.Main$2$1: com.gluegadget.hndroid.Main$2 this$1> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$2$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Main$2 $r3, $r5, $r8;
        com.gluegadget.hndroid.Main $r4, $r6, $r9;
        android.app.ProgressDialog $r7;
        android.os.Handler $r10;

        r0 := @this: com.gluegadget.hndroid.Main$2$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32608, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$2$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 560);
        $r1 = <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45535, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45535, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 561);
        $r3 = r0.<com.gluegadget.hndroid.Main$2$1: com.gluegadget.hndroid.Main$2 this$1>;
        _sym_tmp_3 = $r3.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 562);
        $r4 = $r3.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21801, null);
        staticinvoke <com.gluegadget.hndroid.Main: void access$000(com.gluegadget.hndroid.Main)>($r4);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 561);
        $r5 = r0.<com.gluegadget.hndroid.Main$2$1: com.gluegadget.hndroid.Main$2 this$1>;
        _sym_tmp_5 = $r5.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 562);
        $r6 = $r5.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_6 = $r6.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 544);
        $r7 = $r6.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r7.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Main$2$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 561);
        $r8 = r0.<com.gluegadget.hndroid.Main$2$1: com.gluegadget.hndroid.Main$2 this$1>;
        _sym_tmp_8 = $r8.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 562);
        $r9 = $r8.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_9 = $r9.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 545);
        $r10 = $r9.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r10.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32609, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32610, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$2$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 560);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$2$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(560);
        <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$2$1", 4320153517559885398L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$2 extends android.os.Handler
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$2 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$2;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32611, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 563);
        $r2 = <com.gluegadget.hndroid.Main$2: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45536, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45536, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 562);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$2: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(562);
        r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.os.Handler: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        acteve.symbolic.integer.Expression _sym_tmp_11, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.Main$2 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Main $r4, $r6, $r8, $r10, $r12, $r13;
        com.gluegadget.hndroid.NewsAdapter $r5;
        android.widget.ListView $r7;
        android.widget.Toast $r9, $r11;
        android.app.ProgressDialog $r14;
        java.lang.Thread $r15;
        com.gluegadget.hndroid.Main$2$1 $r16;

        r0 := @this: com.gluegadget.hndroid.Main$2;
        r1 := @parameter0: android.os.Message;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(980, 32612, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 563);
        $r2 = <com.gluegadget.hndroid.Main$2: boolean[][] $VRc>;
        _sym_tmp_11 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45537, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45537, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $i0$sym = null;
        $i0 = r1.<android.os.Message: int what>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 == 1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45538, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 2);
        if $i0 == 2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45539, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 3);
        if $i0 == 3 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45540, 0);
        goto label8;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45538, 1);
        goto label3;

     label3:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 562);
        $r4 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_3 = $r4.<com.gluegadget.hndroid.Main: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 564);
        $r5 = $r4.<com.gluegadget.hndroid.Main: com.gluegadget.hndroid.NewsAdapter aa>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1390, null);
        virtualinvoke $r5.<com.gluegadget.hndroid.NewsAdapter: void notifyDataSetChanged()>();
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 562);
        $r6 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_5 = $r6.<com.gluegadget.hndroid.Main: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 565);
        $r7 = $r6.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1882, null, null);
        virtualinvoke $r7.<android.widget.ListView: void setSelection(int)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label8;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45539, 1);
        goto label5;

     label5:
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 562);
        $r8 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1714, null, null, null);
        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, "Login failed :(", 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke $r9.<android.widget.Toast: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45540, 1);
        goto label7;

     label7:
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 562);
        $r10 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1714, null, null, null);
        $r11 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r10, "Successful login :)", 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke $r11.<android.widget.Toast: void show()>();
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 562);
        $r12 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Main$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 562);
        $r13 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r14 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r13, "", "Reloading. Please wait...", 1);
        _sym_tmp_10 = $r12.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 544);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r12.<com.gluegadget.hndroid.Main: int dialog$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        $r12.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r14;
        $r15 = new java.lang.Thread;
        $r16 = new com.gluegadget.hndroid.Main$2$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, null);
        specialinvoke $r16.<com.gluegadget.hndroid.Main$2$1: void <init>(com.gluegadget.hndroid.Main$2)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r15.<java.lang.Thread: void <init>(java.lang.Runnable)>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r15.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32613, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$2: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32614, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 563);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$2: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(563);
        <com.gluegadget.hndroid.Main$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$2", -5600922579908256874L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$3$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.News val$item;
    final com.gluegadget.hndroid.Main$3 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$item$a3tid;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main$3, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$3$1 r0;
        com.gluegadget.hndroid.Main$3 r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$3$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$3;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21806, 32615, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 566);
        $r3 = <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45541, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45541, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 567);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$3$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(567);
        r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.Main$3 this$1> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$3$1: int val$item$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 568);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$3$1: int val$item$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(568);
        r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.News val$item> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_11, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$3$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Main$3 $r3, $r7, $r10;
        com.gluegadget.hndroid.Main $r4, $r8, $r11;
        com.gluegadget.hndroid.News $r5;
        java.lang.String $r6;
        android.app.ProgressDialog $r9;
        android.os.Handler $r12;

        r0 := @this: com.gluegadget.hndroid.Main$3$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32616, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 566);
        $r1 = <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRc>;
        _sym_tmp_11 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45542, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45542, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 567);
        $r3 = r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.Main$3 this$1>;
        _sym_tmp_3 = $r3.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 569);
        $r4 = $r3.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$3$1: int val$item$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 568);
        $r5 = r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.News val$item>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r6 = virtualinvoke $r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21807, null, null);
        staticinvoke <com.gluegadget.hndroid.Main: void access$100(com.gluegadget.hndroid.Main,java.lang.String)>($r4, $r6);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 567);
        $r7 = r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.Main$3 this$1>;
        _sym_tmp_6 = $r7.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 569);
        $r8 = $r7.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_7 = $r8.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 544);
        $r9 = $r8.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r9.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Main$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 567);
        $r10 = r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.Main$3 this$1>;
        _sym_tmp_9 = $r10.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 569);
        $r11 = $r10.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_10 = $r11.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 545);
        $r12 = $r11.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r12.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32617, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32618, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 566);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$3$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(566);
        <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$3$1", 4705431564812729050L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$3 extends java.lang.Object implements android.widget.AdapterView$OnItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$3 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$3;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32619, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 570);
        $r2 = <com.gluegadget.hndroid.Main$3: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45543, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45543, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 569);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(569);
        r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $z2$sym, $z1$sym, $z0$sym, $i3$sym, $i2$sym, $r10$sym, r4$sym, l1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i2, $i3;
        com.gluegadget.hndroid.Main$3 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        long l1;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.News r5;
        android.content.SharedPreferences r6;
        java.lang.String r7, $r15, $r21, $r23, $r29, $r31;
        android.content.Intent r8, $r14, $r18, r20, $r26, r33;
        android.widget.Adapter $r9, $r11;
        java.lang.Object $r10;
        com.gluegadget.hndroid.Main $r12, $r17, $r19, $r25, $r34, $r35, $r36;
        android.content.Context $r13;
        boolean $z0, $z1, $z2;
        android.net.Uri $r16, $r32;
        java.lang.StringBuilder $r27, $r28, $r30;
        android.app.ProgressDialog $r37;
        java.lang.Thread $r38;
        com.gluegadget.hndroid.Main$3$1 $r39;

        r0 := @this: com.gluegadget.hndroid.Main$3;
        r1 := @parameter0: android.widget.AdapterView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1394, 32620, 5);
        i0$sym = a3targs$symargs[3];
        l1$sym = a3targs$symargs[4];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 570);
        $r3 = <com.gluegadget.hndroid.Main$3: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45544, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45544, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(12445, null);
        $r9 = virtualinvoke r1.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1327, null, i0$sym);
        $r10 = interfaceinvoke $r9.<android.widget.Adapter: java.lang.Object getItem(int)>(i0);
        $r10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1327);
        r5 = (com.gluegadget.hndroid.News) $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(12445, null);
        $r11 = virtualinvoke r1.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(288, null);
        $i2 = interfaceinvoke $r11.<android.widget.Adapter: int getCount()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(288);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 - 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i3$sym, i0, $i3);
        if i0 >= $i3 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45545, 0);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 569);
        $r12 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8883, null);
        $r13 = virtualinvoke $r12.<com.gluegadget.hndroid.Main: android.content.Context getBaseContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4842, null);
        r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r7 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("PREF_DEFAULT_ACTION", "view-comments");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z0 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("open-in-browser");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45546, 0);
        $r14 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r15 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(287, null);
        $r16 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5115, null, null, null);
        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r16);
        r8 = $r14;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 569);
        $r17 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r17.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label7;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45546, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("view-comments");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45547, 0);
        $r18 = new android.content.Intent;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 569);
        $r19 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r18.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r19, class "com/gluegadget/hndroid/Comments");
        r20 = $r18;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21803, null);
        $r21 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r20.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r23 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r20.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r23);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 569);
        $r25 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r25.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r20);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        goto label7;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45547, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z2 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mobile-adapted-view");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45548, 0);
        $r26 = new android.content.Intent;
        $r27 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.google.com/gwt/x?u=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r29 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(287, null);
        $r32 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5115, null, null, null);
        specialinvoke $r26.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r32);
        r33 = $r26;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 569);
        $r34 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r34.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r33);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45548, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 7);
        r4[7] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45545, 1);
        goto label9;

     label9:
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 569);
        $r35 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Main$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 569);
        $r36 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r37 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r36, "", "Loading. Please wait...", 1);
        _sym_tmp_9 = $r35.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 544);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r35.<com.gluegadget.hndroid.Main: int dialog$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        $r35.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r37;
        $r38 = new java.lang.Thread;
        $r39 = new com.gluegadget.hndroid.Main$3$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null, null);
        specialinvoke $r39.<com.gluegadget.hndroid.Main$3$1: void <init>(com.gluegadget.hndroid.Main$3,com.gluegadget.hndroid.News)>(r0, r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r38.<java.lang.Thread: void <init>(java.lang.Runnable)>($r39);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r38.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 8);
        r4[8] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 9);
        r4[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32621, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$3: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32622, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 570);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$3: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(570);
        <com.gluegadget.hndroid.Main$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$3", 9143052549070454372L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$4$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main$4 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main$4)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$4$1 r0;
        com.gluegadget.hndroid.Main$4 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$4$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$4;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21808, 32623, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$4$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 571);
        $r2 = <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45549, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45549, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$4$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 572);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$4$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(572);
        r0.<com.gluegadget.hndroid.Main$4$1: com.gluegadget.hndroid.Main$4 this$1> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$4$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Main$4 $r3, $r5, $r8;
        com.gluegadget.hndroid.Main $r4, $r6, $r9;
        android.app.ProgressDialog $r7;
        android.os.Handler $r10;

        r0 := @this: com.gluegadget.hndroid.Main$4$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32624, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$4$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 571);
        $r1 = <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45550, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45550, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$4$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 572);
        $r3 = r0.<com.gluegadget.hndroid.Main$4$1: com.gluegadget.hndroid.Main$4 this$1>;
        _sym_tmp_3 = $r3.<com.gluegadget.hndroid.Main$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 573);
        $r4 = $r3.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21801, null);
        staticinvoke <com.gluegadget.hndroid.Main: void access$000(com.gluegadget.hndroid.Main)>($r4);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$4$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 572);
        $r5 = r0.<com.gluegadget.hndroid.Main$4$1: com.gluegadget.hndroid.Main$4 this$1>;
        _sym_tmp_5 = $r5.<com.gluegadget.hndroid.Main$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 573);
        $r6 = $r5.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_6 = $r6.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 544);
        $r7 = $r6.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r7.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Main$4$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 572);
        $r8 = r0.<com.gluegadget.hndroid.Main$4$1: com.gluegadget.hndroid.Main$4 this$1>;
        _sym_tmp_8 = $r8.<com.gluegadget.hndroid.Main$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 573);
        $r9 = $r8.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_9 = $r9.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 545);
        $r10 = $r9.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r10.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32625, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32626, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$4$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 571);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$4$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(571);
        <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$4$1", 4320153517559885398L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$4 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$4 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$4;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32627, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 574);
        $r2 = <com.gluegadget.hndroid.Main$4: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45551, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45551, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 573);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$4: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(573);
        r0.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$4 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r10;
        com.gluegadget.hndroid.Main $r5, $r6;
        android.app.ProgressDialog $r7;
        java.lang.Thread $r8;
        com.gluegadget.hndroid.Main$4$1 $r9;

        r0 := @this: com.gluegadget.hndroid.Main$4;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32628, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 574);
        $r2 = <com.gluegadget.hndroid.Main$4: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45552, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45552, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 573);
        $r5 = r0.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 573);
        $r6 = r0.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r7 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, "", "Reloading. Please wait...", 1);
        _sym_tmp_4 = $r5.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 544);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r5.<com.gluegadget.hndroid.Main: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        $r5.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r7;
        $r8 = new java.lang.Thread;
        $r9 = new com.gluegadget.hndroid.Main$4$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21808, null, null);
        specialinvoke $r9.<com.gluegadget.hndroid.Main$4$1: void <init>(com.gluegadget.hndroid.Main$4)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r8.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;
        r4 = $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32629, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$4: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32630, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 574);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$4: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(574);
        <com.gluegadget.hndroid.Main$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$4", -718148683936897661L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$5$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main$5 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main$5)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$5$1 r0;
        com.gluegadget.hndroid.Main$5 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$5$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$5;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21809, 32631, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$5$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 575);
        $r2 = <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45553, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45553, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$5$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 576);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$5$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(576);
        r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_12, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$5$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor r4;
        com.gluegadget.hndroid.Main$5 $r5, $r8, $r10, $r13;
        com.gluegadget.hndroid.Main $r6, $r9, $r11, $r14;
        android.app.ProgressDialog $r12;
        android.os.Handler $r15;

        r0 := @this: com.gluegadget.hndroid.Main$5$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32632, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$5$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 575);
        $r1 = <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRc>;
        _sym_tmp_12 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45554, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45554, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$5$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 576);
        $r5 = r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1>;
        _sym_tmp_3 = $r5.<com.gluegadget.hndroid.Main$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 577);
        $r6 = $r5.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r3 = virtualinvoke $r6.<com.gluegadget.hndroid.Main: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5321, null);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8334, null, null);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("cookie");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8350, null);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$5$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 576);
        $r8 = r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1>;
        _sym_tmp_5 = $r8.<com.gluegadget.hndroid.Main$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 577);
        $r9 = $r8.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21801, null);
        staticinvoke <com.gluegadget.hndroid.Main: void access$000(com.gluegadget.hndroid.Main)>($r9);
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Main$5$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 576);
        $r10 = r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1>;
        _sym_tmp_7 = $r10.<com.gluegadget.hndroid.Main$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 577);
        $r11 = $r10.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_8 = $r11.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 544);
        $r12 = $r11.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r12.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Main$5$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 576);
        $r13 = r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1>;
        _sym_tmp_10 = $r13.<com.gluegadget.hndroid.Main$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 577);
        $r14 = $r13.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_11 = $r14.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 545);
        $r15 = $r14.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r15.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32633, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32634, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$5$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 575);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$5$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(575);
        <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$5$1", 4320153527830675475L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$5 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$5 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$5;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32635, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 578);
        $r2 = <com.gluegadget.hndroid.Main$5: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45555, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45555, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 577);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$5: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(577);
        r0.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$5 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r10;
        com.gluegadget.hndroid.Main $r5, $r6;
        android.app.ProgressDialog $r7;
        java.lang.Thread $r8;
        com.gluegadget.hndroid.Main$5$1 $r9;

        r0 := @this: com.gluegadget.hndroid.Main$5;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32636, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 578);
        $r2 = <com.gluegadget.hndroid.Main$5: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45556, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45556, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 577);
        $r5 = r0.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 577);
        $r6 = r0.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r7 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, "", "Reloading. Please wait...", 1);
        _sym_tmp_4 = $r5.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 544);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r5.<com.gluegadget.hndroid.Main: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        $r5.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r7;
        $r8 = new java.lang.Thread;
        $r9 = new com.gluegadget.hndroid.Main$5$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21809, null, null);
        specialinvoke $r9.<com.gluegadget.hndroid.Main$5$1: void <init>(com.gluegadget.hndroid.Main$5)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r8.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;
        r4 = $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32637, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$5: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32638, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 578);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$5: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(578);
        <com.gluegadget.hndroid.Main$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$5", -718148683936897661L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$6 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$6 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$6;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32639, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 579);
        $r2 = <com.gluegadget.hndroid.Main$6: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45557, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45557, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 580);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$6: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(580);
        r0.<com.gluegadget.hndroid.Main$6: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$6 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Main$OnLoginListener $r4;
        com.gluegadget.hndroid.LoginDialog r5, $r6;
        com.gluegadget.hndroid.Main $r7, $r8;

        r0 := @this: com.gluegadget.hndroid.Main$6;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32640, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 579);
        $r2 = <com.gluegadget.hndroid.Main$6: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45558, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45558, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r6 = new com.gluegadget.hndroid.LoginDialog;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 580);
        $r7 = r0.<com.gluegadget.hndroid.Main$6: com.gluegadget.hndroid.Main this$0>;
        $r4 = new com.gluegadget.hndroid.Main$OnLoginListener;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 580);
        $r8 = r0.<com.gluegadget.hndroid.Main$6: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21810, null, null, null);
        specialinvoke $r4.<com.gluegadget.hndroid.Main$OnLoginListener: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.Main$1)>($r8, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21799, null, null, null, null);
        specialinvoke $r6.<com.gluegadget.hndroid.LoginDialog: void <init>(android.content.Context,java.lang.String,com.gluegadget.hndroid.LoginDialog$ReadyListener)>($r7, "", $r4);
        r5 = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke r5.<com.gluegadget.hndroid.LoginDialog: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32641, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$6: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32642, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 579);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$6: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(579);
        <com.gluegadget.hndroid.Main$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$6", 4320153515616762951L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$7 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$7 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$7;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32643, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 581);
        $r2 = <com.gluegadget.hndroid.Main$7: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45559, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$7: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45559, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 582);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$7: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(582);
        r0.<com.gluegadget.hndroid.Main$7: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$7 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        com.gluegadget.hndroid.Main $r6, $r7;

        r0 := @this: com.gluegadget.hndroid.Main$7;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32644, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 581);
        $r2 = <com.gluegadget.hndroid.Main$7: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45560, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$7: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45560, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 582);
        $r6 = r0.<com.gluegadget.hndroid.Main$7: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/gluegadget/hndroid/Preferences");
        r4 = $r5;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 582);
        $r7 = r0.<com.gluegadget.hndroid.Main$7: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r7.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32645, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$7: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32646, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 581);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$7: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(581);
        <com.gluegadget.hndroid.Main$7: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$7", 4320153513673640504L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$8 extends java.lang.Object implements java.lang.Runnable
{
    final android.view.MenuItem val$item;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$item$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main, android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$8 r0;
        com.gluegadget.hndroid.Main r1;
        android.view.MenuItem r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$8;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21811, 32647, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$8: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 583);
        $r3 = <com.gluegadget.hndroid.Main$8: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45561, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$8: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45561, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$8: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 584);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$8: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(584);
        r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$8: int val$item$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 585);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$8: int val$item$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(585);
        r0.<com.gluegadget.hndroid.Main$8: android.view.MenuItem val$item> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$8 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r9, $r11;
        com.gluegadget.hndroid.Main $r4, $r5, $r12, $r14;
        java.lang.StringBuilder $r6, $r7, $r10;
        android.view.MenuItem $r8;
        android.app.ProgressDialog $r13;
        android.os.Handler $r15;

        r0 := @this: com.gluegadget.hndroid.Main$8;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32648, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$8: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 583);
        $r1 = <com.gluegadget.hndroid.Main$8: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45562, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main$8: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45562, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$8: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 584);
        $r4 = r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        r3 = virtualinvoke $r4.<com.gluegadget.hndroid.Main: java.lang.String getString(int)>(2131099649);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$8: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 584);
        $r5 = r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0>;
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$8: int val$item$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 585);
        $r8 = r0.<com.gluegadget.hndroid.Main$8: android.view.MenuItem val$item>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21807, null, null);
        staticinvoke <com.gluegadget.hndroid.Main: void access$100(com.gluegadget.hndroid.Main,java.lang.String)>($r5, $r11);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main$8: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 584);
        $r12 = r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_6 = $r12.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 544);
        $r13 = $r12.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r13.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Main$8: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 584);
        $r14 = r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_8 = $r14.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 545);
        $r15 = $r14.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r15.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32649, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$8: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32650, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$8: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 583);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$8: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(583);
        <com.gluegadget.hndroid.Main$8: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$8", 4705431569809329628L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$9 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$9 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$9;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32651, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$9: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 586);
        $r2 = <com.gluegadget.hndroid.Main$9: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45563, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$9: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45563, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$9: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 587);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$9: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(587);
        r0.<com.gluegadget.hndroid.Main$9: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$9 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        java.lang.CharSequence $r6;
        java.lang.String $r7;
        android.net.Uri $r8;
        com.gluegadget.hndroid.Main $r9;

        r0 := @this: com.gluegadget.hndroid.Main$9;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32652, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$9: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 586);
        $r2 = <com.gluegadget.hndroid.Main$9: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45564, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$9: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45564, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1415, null);
        $r6 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getTitle()>();
        $r7 = (java.lang.String) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(287, null);
        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5115, null, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r8);
        r4 = $r5;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$9: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 587);
        $r9 = r0.<com.gluegadget.hndroid.Main$9: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r9.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32653, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$9: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32654, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$9: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 586);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$9: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(586);
        <com.gluegadget.hndroid.Main$9: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$9", 4320153515616762951L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$OnLoginListener$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$username;
    final java.lang.String val$password;
    final com.gluegadget.hndroid.Main$OnLoginListener this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$username$a3tid;
    final int val$password$a3tid;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Main$OnLoginListener, java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$OnLoginListener$1 r0;
        com.gluegadget.hndroid.Main$OnLoginListener r1;
        java.lang.String r2, r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$OnLoginListener;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21812, 32655, 4);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$OnLoginListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 588);
        $r4 = <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45565, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45565, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 0);
        r5 = $r4[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 589);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(589);
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int val$username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 590);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int val$username$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(590);
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: java.lang.String val$username> = r2;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int val$password$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 591);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int val$password$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(591);
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: java.lang.String val$password> = r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_21, $i1$sym, $i0$sym, $r45$sym, $z3$sym, $r29$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        com.gluegadget.hndroid.Main$OnLoginListener$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Integer r3;
        org.apache.http.impl.client.DefaultHttpClient r4, $r19;
        java.lang.StringBuilder $r5, $r21, $r25;
        org.apache.http.client.methods.HttpGet r6, $r20;
        org.htmlcleaner.HtmlCleaner r7, $r27;
        org.apache.http.HttpResponse r8, r40;
        org.apache.http.HttpEntity r9, r41;
        org.htmlcleaner.TagNode r10, r12;
        java.lang.Object[] r11;
        java.lang.String r13, $r24, $r26, $r30, $r31, $r35, $r37, $r47;
        org.apache.http.client.methods.HttpPost r14, $r32;
        java.util.ArrayList r15, $r33;
        java.util.List r16;
        android.content.SharedPreferences r17;
        android.content.SharedPreferences$Editor r18;
        com.gluegadget.hndroid.Main$OnLoginListener $r22, $r43, $r50, $r53, $r58, $r61;
        com.gluegadget.hndroid.Main $r23, $r44, $r51, $r54, $r59, $r62;
        java.io.InputStream $r28;
        java.lang.Object $r29, $r45;
        org.apache.http.message.BasicNameValuePair $r34, $r36, $r38;
        org.apache.http.client.entity.UrlEncodedFormEntity $r39;
        org.apache.http.client.CookieStore $r42;
        boolean $z3;
        org.apache.http.cookie.Cookie $r46;
        org.apache.http.conn.ClientConnectionManager $r49;
        android.app.ProgressDialog $r52, $r60;
        android.os.Handler $r55, $r63;
        java.lang.Exception $r56, r57;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32656, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$OnLoginListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 588);
        $r1 = <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRc>;
        _sym_tmp_21 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 45566, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 45566, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, null);
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label2:
        $r19 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r19.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r4 = $r19;
        $r20 = new org.apache.http.client.methods.HttpGet;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com");
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 589);
        $r22 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        _sym_tmp_3 = $r22.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 592);
        $r23 = $r22.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_4 = $r23.<com.gluegadget.hndroid.Main: int loginUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 593);
        $r24 = $r23.<com.gluegadget.hndroid.Main: java.lang.String loginUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r20.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r26);
        r6 = $r20;
        $r27 = new org.htmlcleaner.HtmlCleaner;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r27.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r7 = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15327, null, null);
        r8 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15289, null);
        r9 = interfaceinvoke r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1043, null);
        $r28 = interfaceinvoke r9.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21793, null, null);
        r10 = virtualinvoke r7.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream)>($r28);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r11 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//form[@method=\'post\']/input");
        $r29$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r11, 0);
        $r29 = r11[0];
        r12 = (org.htmlcleaner.TagNode) $r29;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r30 = virtualinvoke r12.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("value");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r13 = virtualinvoke $r31.<java.lang.String: java.lang.String trim()>();
        $r32 = new org.apache.http.client.methods.HttpPost;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r32.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://news.ycombinator.com/y");
        r14 = $r32;
        $r33 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r33.<java.util.ArrayList: void <init>()>();
        r15 = $r33;
        $r34 = new org.apache.http.message.BasicNameValuePair;
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int val$username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 590);
        $r35 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: java.lang.String val$username>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r34.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("u", $r35);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r34);
        $r36 = new org.apache.http.message.BasicNameValuePair;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int val$password$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 591);
        $r37 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: java.lang.String val$password>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r36.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("p", $r37);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r36);
        $r38 = new org.apache.http.message.BasicNameValuePair;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r38.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("fnid", r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r38);
        $r39 = new org.apache.http.client.entity.UrlEncodedFormEntity;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21763, null, null, null);
        specialinvoke $r39.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r15, "UTF-8");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15243, null, null);
        virtualinvoke r14.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r39);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15327, null, null);
        r40 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15289, null);
        r41 = interfaceinvoke r40.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_21 = null;
        if r41 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 45567, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21813, null);
        interfaceinvoke r41.<org.apache.http.HttpEntity: void consumeContent()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 45567, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21814, null);
        $r42 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21815, null);
        r16 = interfaceinvoke $r42.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z3 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_21 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 45568, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, null);
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 45568, 1);
        goto label6;

     label6:
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 589);
        $r43 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        _sym_tmp_8 = $r43.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 592);
        $r44 = $r43.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r17 = virtualinvoke $r44.<com.gluegadget.hndroid.Main: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5321, null);
        r18 = interfaceinvoke r17.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r45 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(0);
        $r45$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r46 = (org.apache.http.cookie.Cookie) $r45;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(396, null);
        $r47 = interfaceinvoke $r46.<org.apache.http.cookie.Cookie: java.lang.String getValue()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5322, null, null, null);
        interfaceinvoke r18.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("cookie", $r47);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8350, null);
        interfaceinvoke r18.<android.content.SharedPreferences$Editor: boolean commit()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, null);
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15325, null);
        $r49 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1825, null);
        interfaceinvoke $r49.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 589);
        $r50 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        _sym_tmp_10 = $r50.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 592);
        $r51 = $r50.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_11 = $r51.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 544);
        $r52 = $r51.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r52.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_12 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 589);
        $r53 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        _sym_tmp_13 = $r53.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 592);
        $r54 = $r53.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_14 = $r54.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 545);
        $r55 = $r54.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, $i0$sym);
        virtualinvoke $r55.<android.os.Handler: boolean sendEmptyMessage(int)>($i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label8:
        goto label10;

     label9:
        $r56 := @caughtexception;
        r57 = $r56;
        _sym_tmp_15 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 589);
        $r58 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        _sym_tmp_16 = $r58.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 592);
        $r59 = $r58.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_17 = $r59.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 544);
        $r60 = $r59.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r60.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_18 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 589);
        $r61 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        _sym_tmp_19 = $r61.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 592);
        $r62 = $r61.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_20 = $r62.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 545);
        $r63 = $r62.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, $i1$sym);
        virtualinvoke $r63.<android.os.Handler: boolean sendEmptyMessage(int)>($i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r57.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;

        catch java.lang.Exception from label2 to label8 with label9;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32657, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32658, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$OnLoginListener$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 588);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$OnLoginListener$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(588);
        <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$OnLoginListener$1", 7082022784488247232L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$OnLoginListener extends java.lang.Object implements com.gluegadget.hndroid.LoginDialog$ReadyListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    private void <init>(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$OnLoginListener r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32659, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$OnLoginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 594);
        $r2 = <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45569, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45569, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 592);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(592);
        r0.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void ready(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main$OnLoginListener r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Exception r5, $r11;
        com.gluegadget.hndroid.Main $r6, $r7;
        android.app.ProgressDialog $r8;
        java.lang.Thread $r9;
        com.gluegadget.hndroid.Main$OnLoginListener$1 $r10;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21751, 32660, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$OnLoginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 594);
        $r3 = <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45570, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45570, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 592);
        $r6 = r0.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main$OnLoginListener: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 592);
        $r7 = r0.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r8 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r7, "", "Trying to login. Please wait...", 1);
        _sym_tmp_4 = $r6.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 544);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r6.<com.gluegadget.hndroid.Main: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        $r6.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r8;
        $r9 = new java.lang.Thread;
        $r10 = new com.gluegadget.hndroid.Main$OnLoginListener$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21812, null, null, null, null);
        specialinvoke $r10.<com.gluegadget.hndroid.Main$OnLoginListener$1: void <init>(com.gluegadget.hndroid.Main$OnLoginListener,java.lang.String,java.lang.String)>(r0, r1, r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;
        r5 = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.Main$1)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Main$OnLoginListener r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.Main$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.Main$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21810, 32661, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$OnLoginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 594);
        $r3 = <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45571, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45571, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.Main$OnLoginListener: void <init>(com.gluegadget.hndroid.Main)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32662, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32663, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main$OnLoginListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 594);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main$OnLoginListener: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(594);
        <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$OnLoginListener", -7557084075324926850L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.Main extends android.app.Activity
{
    static final java.lang.String PREFS_NAME;
    private static final int MENU_UPDATE;
    private static final int MENU_LOGIN;
    private static final int MENU_LOGOUT;
    private static final int MENU_PREFERENCES;
    private static final int LIST_MENU_GROUP;
    private static final int LIST_NEWS_ID;
    private static final int LIST_BEST_ID;
    private static final int LIST_ACTIVE_ID;
    private static final int LIST_NOOB_ID;
    private static final int CONTEXT_USER_SUBMISSIONS;
    private static final int CONTEXT_COMMENTS;
    private static final int CONTEXT_USER_LINK;
    private static final int CONTEXT_USER_UPVOTE;
    private static final int CONTEXT_GOOGLE_MOBILE;
    private static final int NOTIFY_DATASET_CHANGED;
    private static final int LOGIN_FAILED;
    private static final int LOGIN_SUCCESSFULL;
    static int DEFAULT_ACTION_PREFERENCES;
    java.lang.String loginUrl;
    android.app.ProgressDialog dialog;
    android.widget.ListView newsListView;
    com.gluegadget.hndroid.NewsAdapter aa;
    java.util.ArrayList news;
    android.os.Handler handler;
    android.widget.AdapterView$OnItemClickListener clickListener;
    private static final boolean[][] $VRc;
    static final int PREFS_NAME$a3tid;
    private static final acteve.symbolic.integer.Expression MENU_UPDATE$sym;
    private static final int MENU_UPDATE$a3tid;
    private static final acteve.symbolic.integer.Expression MENU_LOGIN$sym;
    private static final int MENU_LOGIN$a3tid;
    private static final acteve.symbolic.integer.Expression MENU_LOGOUT$sym;
    private static final int MENU_LOGOUT$a3tid;
    private static final acteve.symbolic.integer.Expression MENU_PREFERENCES$sym;
    private static final int MENU_PREFERENCES$a3tid;
    private static final acteve.symbolic.integer.Expression LIST_MENU_GROUP$sym;
    private static final int LIST_MENU_GROUP$a3tid;
    private static final acteve.symbolic.integer.Expression LIST_NEWS_ID$sym;
    private static final int LIST_NEWS_ID$a3tid;
    private static final acteve.symbolic.integer.Expression LIST_BEST_ID$sym;
    private static final int LIST_BEST_ID$a3tid;
    private static final acteve.symbolic.integer.Expression LIST_ACTIVE_ID$sym;
    private static final int LIST_ACTIVE_ID$a3tid;
    private static final acteve.symbolic.integer.Expression LIST_NOOB_ID$sym;
    private static final int LIST_NOOB_ID$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_USER_SUBMISSIONS$sym;
    private static final int CONTEXT_USER_SUBMISSIONS$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_COMMENTS$sym;
    private static final int CONTEXT_COMMENTS$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_USER_LINK$sym;
    private static final int CONTEXT_USER_LINK$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_USER_UPVOTE$sym;
    private static final int CONTEXT_USER_UPVOTE$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_GOOGLE_MOBILE$sym;
    private static final int CONTEXT_GOOGLE_MOBILE$a3tid;
    private static final acteve.symbolic.integer.Expression NOTIFY_DATASET_CHANGED$sym;
    private static final int NOTIFY_DATASET_CHANGED$a3tid;
    private static final acteve.symbolic.integer.Expression LOGIN_FAILED$sym;
    private static final int LOGIN_FAILED$a3tid;
    private static final acteve.symbolic.integer.Expression LOGIN_SUCCESSFULL$sym;
    private static final int LOGIN_SUCCESSFULL$a3tid;
    static acteve.symbolic.integer.Expression DEFAULT_ACTION_PREFERENCES$sym;
    static int DEFAULT_ACTION_PREFERENCES$a3tid;
    int loginUrl$a3tid;
    int dialog$a3tid;
    int newsListView$a3tid;
    int aa$a3tid;
    int news$a3tid;
    int handler$a3tid;
    int clickListener$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList $r3;
        com.gluegadget.hndroid.Main$2 $r4;
        com.gluegadget.hndroid.Main$3 $r5;

        r0 := @this: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32664, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r1 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45572, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45572, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Activity: void <init>()>();
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main: int loginUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 593);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int loginUrl$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(593);
        r0.<com.gluegadget.hndroid.Main: java.lang.String loginUrl> = "";
        $r3 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main: int news$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 596);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int news$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(596);
        r0.<com.gluegadget.hndroid.Main: java.util.ArrayList news> = $r3;
        $r4 = new com.gluegadget.hndroid.Main$2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke $r4.<com.gluegadget.hndroid.Main$2: void <init>(com.gluegadget.hndroid.Main)>(r0);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 545);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int handler$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(545);
        r0.<com.gluegadget.hndroid.Main: android.os.Handler handler> = $r4;
        $r5 = new com.gluegadget.hndroid.Main$3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke $r5.<com.gluegadget.hndroid.Main$3: void <init>(com.gluegadget.hndroid.Main)>(r0);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main: int clickListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 597);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int clickListener$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(597);
        r0.<com.gluegadget.hndroid.Main: android.widget.AdapterView$OnItemClickListener clickListener> = $r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_11, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.gluegadget.hndroid.Main r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.View $r4;
        android.widget.ListView $r5, $r6, $r9, $r11;
        com.gluegadget.hndroid.NewsAdapter $r7, $r10;
        java.util.ArrayList $r8;
        android.widget.AdapterView$OnItemClickListener $r12;
        android.app.ProgressDialog $r13;
        java.lang.Thread $r14;
        com.gluegadget.hndroid.Main$1 $r15;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32665, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_11 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45573, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45573, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1626, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.Main: void setContentView(int)>(2130903045);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r4 = virtualinvoke r0.<com.gluegadget.hndroid.Main: android.view.View findViewById(int)>(2131230732);
        $r5 = (android.widget.ListView) $r4;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 565);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int newsListView$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(565);
        r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView> = $r5;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 565);
        $r6 = r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9569, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.Main: void registerForContextMenu(android.view.View)>($r6);
        i0$sym = null;
        i0 = 2130903046;
        $r7 = new com.gluegadget.hndroid.NewsAdapter;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main: int news$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 596);
        $r8 = r0.<com.gluegadget.hndroid.Main: java.util.ArrayList news>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11527, null, null, i0$sym, null);
        specialinvoke $r7.<com.gluegadget.hndroid.NewsAdapter: void <init>(android.content.Context,int,java.util.List)>(r0, i0, $r8);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Main: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 564);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int aa$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(564);
        r0.<com.gluegadget.hndroid.Main: com.gluegadget.hndroid.NewsAdapter aa> = $r7;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Main: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 565);
        $r9 = r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Main: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 564);
        $r10 = r0.<com.gluegadget.hndroid.Main: com.gluegadget.hndroid.NewsAdapter aa>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1387, null, null);
        virtualinvoke $r9.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r10);
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Main: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 565);
        $r11 = r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Main: int clickListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 597);
        $r12 = r0.<com.gluegadget.hndroid.Main: android.widget.AdapterView$OnItemClickListener clickListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1385, null, null);
        virtualinvoke $r11.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r13 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", "Loading. Please wait...", 1);
        _sym_tmp_10 = r0.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 544);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int dialog$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        r0.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r13;
        $r14 = new java.lang.Thread;
        $r15 = new com.gluegadget.hndroid.Main$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke $r15.<com.gluegadget.hndroid.Main$1: void <init>(com.gluegadget.hndroid.Main)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r14.<java.lang.Thread: void <init>(java.lang.Runnable)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r14.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Main r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.MenuItem r4, r6, r7, r8;
        android.view.SubMenu r5;
        com.gluegadget.hndroid.Main$4 $r10;
        com.gluegadget.hndroid.Main$5 $r18;
        com.gluegadget.hndroid.Main$6 $r21;
        com.gluegadget.hndroid.Main$7 $r24;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.view.Menu;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9554, 32666, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45574, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45574, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9554, null, null);
        specialinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r4 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 1, 0, 2131099650);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1423, null, null);
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837510);
        $r10 = new com.gluegadget.hndroid.Main$4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke $r10.<com.gluegadget.hndroid.Main$4: void <init>(com.gluegadget.hndroid.Main)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1224, null, null);
        r5 = interfaceinvoke r1.<android.view.Menu: android.view.SubMenu addSubMenu(int)>(2131099651);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1220, null, null, null, null, null);
        interfaceinvoke r5.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(10, 11, 0, "news");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1220, null, null, null, null, null);
        interfaceinvoke r5.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(10, 12, 1, "best");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1220, null, null, null, null, null);
        interfaceinvoke r5.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(10, 13, 2, "active");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1220, null, null, null, null, null);
        interfaceinvoke r5.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(10, 14, 3, "noobstories");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1488, null, null);
        interfaceinvoke r5.<android.view.SubMenu: android.view.SubMenu setIcon(int)>(2130837506);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1252, null, null, null, null);
        interfaceinvoke r5.<android.view.SubMenu: void setGroupCheckable(int,boolean,boolean)>(10, 1, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r6 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 3, 0, 2131099656);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1423, null, null);
        interfaceinvoke r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837508);
        $r18 = new com.gluegadget.hndroid.Main$5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke $r18.<com.gluegadget.hndroid.Main$5: void <init>(com.gluegadget.hndroid.Main)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r6.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r7 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 2, 0, 2131099655);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1423, null, null);
        interfaceinvoke r7.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837507);
        $r21 = new com.gluegadget.hndroid.Main$6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke $r21.<com.gluegadget.hndroid.Main$6: void <init>(com.gluegadget.hndroid.Main)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r7.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r8 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 4, 0, 2131099657);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1423, null, null);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837509);
        $r24 = new com.gluegadget.hndroid.Main$7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke $r24.<com.gluegadget.hndroid.Main$7: void <init>(com.gluegadget.hndroid.Main)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r24);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(9554, null);
        return 1;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Main r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;
        boolean $z0, $z1;
        android.view.MenuItem $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.view.Menu;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9556, 32667, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45575, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45575, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main: int loginUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 593);
        $r4 = r0.<com.gluegadget.hndroid.Main: java.lang.String loginUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("submit");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45576, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r5 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1426, null, null);
        interfaceinvoke $r5.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r7 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1255, null, null);
        interfaceinvoke $r7.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r9 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1426, null, null);
        interfaceinvoke $r9.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r11 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1255, null, null);
        interfaceinvoke $r11.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45576, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r13 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1426, null, null);
        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r15 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1255, null, null);
        interfaceinvoke $r15.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r17 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1426, null, null);
        interfaceinvoke $r17.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1260, null, null);
        $r19 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1255, null, null);
        interfaceinvoke $r19.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9556, null, null);
        $z1 = specialinvoke r0.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(9556);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(9556, $z1$sym);
        return $z1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.Main r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r8;
        android.app.ProgressDialog $r5;
        java.lang.Thread $r6;
        com.gluegadget.hndroid.Main$8 $r7;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9559, 32668, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45577, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45577, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 4);
        r3 = $r2[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1259, null);
        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1259);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 11);
        if $i0 == 11 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45578, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 12);
        if $i0 == 12 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45579, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 13);
        if $i0 == 13 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45580, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 14);
        if $i0 == 14 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45581, 0);
        goto label9;

        goto label6;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45578, 1);
        goto label6;

        goto label6;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45579, 1);
        goto label6;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45580, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45581, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r5 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", "Reloading. Please wait...", 1);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 544);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int dialog$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        r0.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r5;
        $r6 = new java.lang.Thread;
        $r7 = new com.gluegadget.hndroid.Main$8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21811, null, null, null);
        specialinvoke $r7.<com.gluegadget.hndroid.Main$8: void <init>(com.gluegadget.hndroid.Main,android.view.MenuItem)>(r0, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r6.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;
        r4 = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(9559, null);
        return 1;

        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, $r14$sym, $i1$sym, $i0$sym, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        com.gluegadget.hndroid.Main r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;
        boolean[][] $r4;
        boolean[] r5;
        android.widget.AdapterView$AdapterContextMenuInfo r6;
        com.gluegadget.hndroid.News r7;
        android.view.MenuItem r8, r9, r10, r11, r30;
        android.widget.ListView $r12;
        android.widget.ListAdapter $r13;
        java.lang.Object $r14;
        java.lang.String $r15, $r17, $r22, $r26, $r29, $r33, $r34;
        com.gluegadget.hndroid.Main$9 $r18;
        com.gluegadget.hndroid.Main$10 $r20;
        com.gluegadget.hndroid.Main$11 $r23;
        java.lang.StringBuilder $r25, $r27, $r28;
        com.gluegadget.hndroid.Main$12 $r31;
        boolean $z0;
        com.gluegadget.hndroid.Main$13 $r35;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.view.ContextMenu;
        r2 := @parameter1: android.view.View;
        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(6548, 32669, 4);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r4 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45582, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45582, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 5);
        r5 = $r4[5];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6548, null, null, null, null);
        specialinvoke r0.<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(r1, r2, r3);
        r6 = (android.widget.AdapterView$AdapterContextMenuInfo) r3;
        $i0$sym = null;
        $i0 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 30);
        if $i0 >= 30 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45583, 0);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 565);
        $r12 = r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1388, null);
        $r13 = virtualinvoke $r12.<android.widget.ListView: android.widget.ListAdapter getAdapter()>();
        $i1$sym = null;
        $i1 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1327, null, $i1$sym);
        $r14 = interfaceinvoke $r13.<android.widget.ListAdapter: java.lang.Object getItem(int)>($i1);
        $r14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1327);
        r7 = (com.gluegadget.hndroid.News) $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r15 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1495, null, null);
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r17 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1220, null, null, null, null, null);
        r8 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 4, 0, $r17);
        $r18 = new com.gluegadget.hndroid.Main$9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21800, null, null);
        specialinvoke $r18.<com.gluegadget.hndroid.Main$9: void <init>(com.gluegadget.hndroid.Main)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r9 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 6, 0, 2131099660);
        $r20 = new com.gluegadget.hndroid.Main$10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21802, null, null, null);
        specialinvoke $r20.<com.gluegadget.hndroid.Main$10: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.News)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r9.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21803, null);
        $r22 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 1);
        r5[1] = 1;
        _sym_tmp_4 = null;
        if $r22 == "" goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45584, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r10 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 3, 0, 2131099652);
        $r23 = new com.gluegadget.hndroid.Main$11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21802, null, null, null);
        specialinvoke $r23.<com.gluegadget.hndroid.Main$11: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.News)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r10.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r23);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 2);
        r5[2] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45584, 1);
        goto label3;

     label3:
        $r25 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r26 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" submissions");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1220, null, null, null, null, null);
        r30 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 2, 0, $r29);
        $r31 = new com.gluegadget.hndroid.Main$12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21802, null, null, null);
        specialinvoke $r31.<com.gluegadget.hndroid.Main$12: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.News)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r30.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r31);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main: int loginUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 593);
        $r33 = r0.<com.gluegadget.hndroid.Main: java.lang.String loginUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke $r33.<java.lang.String: boolean contains(java.lang.CharSequence)>("submit");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 3);
        r5[3] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45585, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21746, null);
        $r34 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getUpVoteUrl()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 4);
        r5[4] = 1;
        _sym_tmp_4 = null;
        if $r34 == "" goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45586, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r11 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 5, 0, 2131099659);
        $r35 = new com.gluegadget.hndroid.Main$13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21802, null, null, null);
        specialinvoke $r35.<com.gluegadget.hndroid.Main$13: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.News)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r11.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r35);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 5);
        r5[5] = 1;
        goto label7;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45583, 1);
        goto label7;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45585, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45586, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 6);
        r5[6] = 1;
        return;
    }

    private void refreshNews()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Main r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3;

        r0 := @this: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21817, 32670, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r1 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45587, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45587, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        r3 = virtualinvoke r0.<com.gluegadget.hndroid.Main: java.lang.String getString(int)>(2131099649);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21816, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.Main: void refreshNews(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void refreshNews(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $r85$sym, $r82$sym, $z0$sym, $r80$sym, $i8$sym, $r71$sym, $i7$sym, $r67$sym, $r64$sym, $i6$sym, $r62$sym, $r59$sym, $r58$sym, $i5$sym, $r57$sym, $i4$sym, $r53$sym, $r50$sym, $i3$sym, $r46$sym, $r44$sym, i2$sym, i1$sym, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.gluegadget.hndroid.Main r0;
        java.lang.String r1, r5, r9, r17, r18, r19, r20, r21, r22, r24, r25, $r42, $r47, $r48, $r49, $r54, $r55, $r56, $r63, $r68, $r72, $r73, $r76, $r77, $r81, $r86;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        org.apache.http.impl.client.DefaultHttpClient r6, $r37;
        org.apache.http.client.methods.HttpGet r7, $r38;
        org.apache.http.impl.client.BasicResponseHandler r8, $r43;
        org.htmlcleaner.HtmlCleaner r10, $r45;
        org.htmlcleaner.TagNode r11, r16, r23, r26, r28, r30, r31, r33, r34, $r69, r70, $r74;
        java.lang.Object[] r12, r13, r14, r15, r27, r29, r32, r75;
        java.lang.Throwable r35, $r96;
        java.util.ArrayList $r36, $r89;
        java.lang.StringBuilder $r39, $r40, $r41;
        java.lang.Object $r44, $r46, $r50, $r53, $r57, $r58, $r59, $r62, $r64, $r67, $r71, $r80, $r82, $r85;
        java.util.List $r51, $r60, $r65, $r78, $r83;
        java.util.Iterator $r52, $r61, $r66, $r79, $r84;
        boolean $z0;
        com.gluegadget.hndroid.News $r87, r88;
        java.net.MalformedURLException $r90, r91;
        java.io.IOException $r92, r93;
        org.htmlcleaner.XPatherException $r94, r95;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21816, 32671, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45588, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45588, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 7);
        r3 = $r2[7];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Main: int news$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 596);
        $r36 = r0.<com.gluegadget.hndroid.Main: java.util.ArrayList news>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        virtualinvoke $r36.<java.util.ArrayList: void clear()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r4 = virtualinvoke r0.<com.gluegadget.hndroid.Main: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r37 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r37.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r6 = $r37;
        $r38 = new org.apache.http.client.methods.HttpGet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r38.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r1);
        r7 = $r38;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = null;
        if r5 == "" goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45589, 0);
        $r39 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r7.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r42);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45589, 1);
        goto label4;

     label4:
        $r43 = new org.apache.http.impl.client.BasicResponseHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r43.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r8 = $r43;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15331, null, null, null);
        $r44 = virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r7, r8);
        $r44$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(15331);
        r9 = (java.lang.String) $r44;
        $r45 = new org.htmlcleaner.HtmlCleaner;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r45.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r10 = $r45;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null);
        r11 = virtualinvoke r10.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r12 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@class=\'title\']/a[1]");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r13 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@class=\'subtext\']");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r14 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'comhead\']");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r15 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'pagetop\']/a");
        $r46$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r15, 5);
        $r46 = r15[5];
        r16 = (org.htmlcleaner.TagNode) $r46;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r47 = virtualinvoke r16.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r48 = virtualinvoke $r47.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String trim()>();
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Main: int loginUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 593);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Main: int loginUrl$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(593);
        r0.<com.gluegadget.hndroid.Main: java.lang.String loginUrl> = $r49;
        $i3$sym = null;
        $i3 = lengthof r12;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 0);
        if $i3 <= 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45590, 0);
        i0$sym = null;
        i0 = 0;
        i1$sym = null;
        i1 = lengthof r12;
        i2$sym = null;
        i2 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, i1$sym, i2, i1);
        if i2 >= i1 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45591, 0);
        r17 = "";
        r18 = "";
        r19 = "";
        r20 = "";
        r21 = "";
        r22 = "";
        $r50$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r12, i2);
        $r50 = r12[i2];
        r23 = (org.htmlcleaner.TagNode) $r50;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r51 = virtualinvoke r23.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r52 = interfaceinvoke $r51.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();
        $r53$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r54 = virtualinvoke $r53.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r24 = virtualinvoke $r54.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r55 = virtualinvoke r23.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r56 = virtualinvoke $r55.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r25 = virtualinvoke $r56.<java.lang.String: java.lang.String trim()>();
        $i4$sym = null;
        $i4 = lengthof r13;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, $i4$sym, i2, $i4);
        if i2 >= $i4 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45592, 0);
        $r57$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r13, i2);
        $r57 = r13[i2];
        r26 = (org.htmlcleaner.TagNode) $r57;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r27 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/span");
        $i5$sym = null;
        $i5 = lengthof r27;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 0);
        if $i5 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45593, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        goto label17;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45593, 1);
        goto label7;

     label7:
        $r58$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r27, 0);
        $r58 = r27[0];
        r28 = (org.htmlcleaner.TagNode) $r58;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r29 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/a");
        $r59$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r29, 0);
        $r59 = r29[0];
        r30 = (org.htmlcleaner.TagNode) $r59;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r60 = virtualinvoke r30.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r61 = interfaceinvoke $r60.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r62 = interfaceinvoke $r61.<java.util.Iterator: java.lang.Object next()>();
        $r62$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r63 = virtualinvoke $r62.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r18 = virtualinvoke $r63.<java.lang.String: java.lang.String trim()>();
        $i6$sym = null;
        $i6 = lengthof r29;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 2);
        if $i6 != 2 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45594, 0);
        $r64$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r29, 1);
        $r64 = r29[1];
        r31 = (org.htmlcleaner.TagNode) $r64;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r65 = virtualinvoke r31.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r66 = interfaceinvoke $r65.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r67 = interfaceinvoke $r66.<java.util.Iterator: java.lang.Object next()>();
        $r67$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r68 = virtualinvoke $r67.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r19 = virtualinvoke $r68.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45594, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r69 = virtualinvoke r23.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r70 = virtualinvoke $r69.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r32 = virtualinvoke r70.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td/center/a[1]");
        $i7$sym = null;
        $i7 = lengthof r32;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, null, $i7, 0);
        if $i7 <= 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45595, 0);
        $r71$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r32, 0);
        $r71 = r32[0];
        r33 = (org.htmlcleaner.TagNode) $r71;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r72 = virtualinvoke r33.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r73 = virtualinvoke $r72.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r22 = virtualinvoke $r73.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45595, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r74 = virtualinvoke r30.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r75 = virtualinvoke $r74.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/a");
        $i8$sym = null;
        $i8 = lengthof r75;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 12);
        r3[12] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i8$sym, null, $i8, 2);
        if $i8 != 2 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45596, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r76 = virtualinvoke r28.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("id");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r77 = virtualinvoke $r76.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r21 = virtualinvoke $r77.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 13);
        r3[13] = 1;
        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45596, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r78 = virtualinvoke r28.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r79 = interfaceinvoke $r78.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r80 = interfaceinvoke $r79.<java.util.Iterator: java.lang.Object next()>();
        $r80$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r81 = virtualinvoke $r80.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r17 = virtualinvoke $r81.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>("http");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 14);
        r3[14] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45597, 0);
        $r82$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r14, i0);
        $r82 = r14[i0];
        r34 = (org.htmlcleaner.TagNode) $r82;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r83 = virtualinvoke r34.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r84 = interfaceinvoke $r83.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r85 = interfaceinvoke $r84.<java.util.Iterator: java.lang.Object next()>();
        $r85$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r86 = virtualinvoke $r85.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r20 = virtualinvoke $r86.<java.lang.String: java.lang.String trim()>();
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 15);
        r3[15] = 1;
        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45592, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45597, 1);
        goto label16;

     label16:
        $r87 = new com.gluegadget.hndroid.News;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21818, null, null, null, null, null, null, null, null, null);
        specialinvoke $r87.<com.gluegadget.hndroid.News: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r24, r17, r19, r18, r20, r25, r21, r22);
        r88 = $r87;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Main: int news$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 596);
        $r89 = r0.<com.gluegadget.hndroid.Main: java.util.ArrayList news>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke $r89.<java.util.ArrayList: boolean add(java.lang.Object)>(r88);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 16);
        r3[16] = 1;

     label17:
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 17);
        r3[17] = 1;
        goto label5;

        goto label20;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45590, 1);
        goto label20;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45591, 1);
        goto label20;

     label20:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 18);
        r3[18] = 1;

     label21:
        goto label34;

     label22:
        $r90 := @caughtexception;

     label23:
        r91 = $r90;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r91.<java.net.MalformedURLException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 19);
        r3[19] = 1;

     label24:
        goto label34;

     label25:
        $r92 := @caughtexception;

     label26:
        r93 = $r92;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r93.<java.io.IOException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 20);
        r3[20] = 1;

     label27:
        goto label34;

     label28:
        $r94 := @caughtexception;

     label29:
        r95 = $r94;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r95.<org.htmlcleaner.XPatherException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 21);
        r3[21] = 1;

     label30:
        goto label34;

     label31:
        $r96 := @caughtexception;

     label32:
        r35 = $r96;

     label33:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 22);
        r3[22] = 1;
        throw r35;

     label34:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 23);
        r3[23] = 1;
        return;

        catch java.net.MalformedURLException from label2 to label21 with label22;
        catch java.io.IOException from label2 to label21 with label25;
        catch org.htmlcleaner.XPatherException from label2 to label21 with label28;
        catch java.lang.Throwable from label2 to label21 with label31;
        catch java.lang.Throwable from label23 to label24 with label31;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    static void access$000(com.gluegadget.hndroid.Main)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Main r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.gluegadget.hndroid.Main;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21801, 32672, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r1 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45598, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45598, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21817, null);
        specialinvoke r0.<com.gluegadget.hndroid.Main: void refreshNews()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    static void access$100(com.gluegadget.hndroid.Main, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Main r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: com.gluegadget.hndroid.Main;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21807, 32673, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45599, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45599, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 9);
        r3 = $r2[9];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21816, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.Main: void refreshNews(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32674, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 10);
        r1 = $r0[10];
        <com.gluegadget.hndroid.Main: acteve.symbolic.integer.Expression DEFAULT_ACTION_PREFERENCES$sym> = null;
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int DEFAULT_ACTION_PREFERENCES$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 598);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main: int DEFAULT_ACTION_PREFERENCES$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(598);
        <com.gluegadget.hndroid.Main: int DEFAULT_ACTION_PREFERENCES> = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32675, 0);
        $r0 = newmultiarray (boolean)[11][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Main: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 595);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Main: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(595);
        <com.gluegadget.hndroid.Main: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[7];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[24];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main", -7043197830386564122L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.News extends java.lang.Object
{
    private java.lang.String title;
    private java.lang.String author;
    private java.lang.String score;
    private java.lang.String comment;
    private java.lang.String url;
    private java.lang.String domain;
    private java.lang.String commentsUrl;
    private java.lang.String upVoteUrl;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int title$a3tid;
    private int author$a3tid;
    private int score$a3tid;
    private int comment$a3tid;
    private int url$a3tid;
    private int domain$a3tid;
    private int commentsUrl$a3tid;
    private int upVoteUrl$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r10$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i4;
        com.gluegadget.hndroid.News r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, $r13, $r15, $r16, $r19, $r21;
        boolean[][] $r9;
        boolean[] r10;
        java.lang.StringBuilder $r11, $r12, $r14, $r17, $r18, $r20;

        r0 := @this: com.gluegadget.hndroid.News;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        r6 := @parameter5: java.lang.String;
        r7 := @parameter6: java.lang.String;
        r8 := @parameter7: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21818, 32676, 9);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r9 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r9 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45600, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r9 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45600, 1);
        goto label1;

     label1:
        r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r9, 0);
        r10 = $r9[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 600);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int title$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(600);
        r0.<com.gluegadget.hndroid.News: java.lang.String title> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.News: int score$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 601);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int score$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(601);
        r0.<com.gluegadget.hndroid.News: java.lang.String score> = r2;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.News: int comment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 602);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int comment$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(602);
        r0.<com.gluegadget.hndroid.News: java.lang.String comment> = r3;
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.News: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 603);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int author$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(603);
        r0.<com.gluegadget.hndroid.News: java.lang.String author> = r4;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.News: int url$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 604);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int url$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(604);
        r0.<com.gluegadget.hndroid.News: java.lang.String url> = r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r7.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 0);
        r10[0] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 7);
        if $i0 <= 7 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45601, 0);
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/item?id=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, null);
        $r13 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.News: int commentsUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 605);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int commentsUrl$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(605);
        r0.<com.gluegadget.hndroid.News: java.lang.String commentsUrl> = $r15;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 1);
        r10[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45601, 1);
        goto label3;

     label3:
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.News: int commentsUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 605);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int commentsUrl$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(605);
        r0.<com.gluegadget.hndroid.News: java.lang.String commentsUrl> = r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 2);
        r10[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 3);
        r10[3] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 2);
        if $i1 <= 2 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45602, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r5.<java.lang.String: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, $i3$sym);
        $r16 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(1, $i3);
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.News: int domain$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 606);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int domain$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(606);
        r0.<com.gluegadget.hndroid.News: java.lang.String domain> = $r16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 4);
        r10[4] = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45602, 1);
        goto label6;

     label6:
        _sym_tmp_10 = r0.<com.gluegadget.hndroid.News: int domain$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 606);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int domain$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(606);
        r0.<com.gluegadget.hndroid.News: java.lang.String domain> = r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 5);
        r10[5] = 1;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i4 = virtualinvoke r8.<java.lang.String: int length()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 6);
        r10[6] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 1);
        if $i4 <= 1 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45603, 0);
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6240, null, null, null);
        $r19 = virtualinvoke r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&amp", "&");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_11 = r0.<com.gluegadget.hndroid.News: int upVoteUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 607);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int upVoteUrl$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(607);
        r0.<com.gluegadget.hndroid.News: java.lang.String upVoteUrl> = $r21;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 7);
        r10[7] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45603, 1);
        goto label9;

     label9:
        _sym_tmp_12 = r0.<com.gluegadget.hndroid.News: int upVoteUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 607);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.News: int upVoteUrl$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(607);
        r0.<com.gluegadget.hndroid.News: java.lang.String upVoteUrl> = r8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 8);
        r10[8] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r10$sym, null, null, r10, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r10, 9);
        r10[9] = 1;
        return;
    }

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.News;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 32677, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r2 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45604, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45604, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21818, null, null, null, null, null, null, null, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.News: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, "", "", "", "", "", "", "");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public java.lang.String getCommentsUrl()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21803, 32678, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45605, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45605, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int commentsUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 605);
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String commentsUrl>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getTitle()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10998, 32679, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45606, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45606, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 600);
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String title>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getScore()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21819, 32680, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45607, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45607, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int score$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 601);
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String score>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getComment()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i0$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r5, r6, $r7;
        boolean $z0;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17218, 32681, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45608, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45608, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        r3 = "";
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int comment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 602);
        $r5 = r0.<com.gluegadget.hndroid.News: java.lang.String comment>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("discuss");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45609, 0);
        r6 = "0";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label6;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45609, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.News: int comment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 602);
        $r7 = r0.<com.gluegadget.hndroid.News: java.lang.String comment>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r4 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("comments?", "");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45610, 0);
        r6 = "?";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45610, 1);
        goto label5;

     label5:
        r6 = r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        return r6;
    }

    public java.lang.String getAuthor()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21744, 32682, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45611, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45611, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 603);
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String author>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getUrl()
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4, $r7, $r9, $r12, $r14, $r15;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r11, $r13;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(450, 32683, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45612, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45612, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int url$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 604);
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("http");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45613, 0);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.News: int url$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 604);
        $r4 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45614, 0);
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com");
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.News: int url$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 604);
        $r7 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r9;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45614, 1);
        goto label3;

     label3:
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/");
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.News: int url$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 604);
        $r12 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return $r14;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45613, 1);
        goto label5;

     label5:
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.News: int url$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 604);
        $r15 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return $r15;
    }

    public java.lang.String getUpVoteUrl()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21746, 32684, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45615, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45615, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int upVoteUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 607);
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String upVoteUrl>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getDomain()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21820, 32685, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45616, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45616, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int domain$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 606);
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String domain>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String toString()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4, $r6, $r9, $r11;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;

        r0 := @this: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(148, 32686, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45617, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45617, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.News: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 603);
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String author>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_6 = null;
        if $r3 != "" goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45618, 0);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.News: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 600);
        $r4 = r0.<com.gluegadget.hndroid.News: java.lang.String title>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return $r4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45618, 1);
        goto label3;

     label3:
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.News: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 600);
        $r6 = r0.<com.gluegadget.hndroid.News: java.lang.String title>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ");
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.News: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 603);
        $r9 = r0.<com.gluegadget.hndroid.News: java.lang.String author>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r11;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32687, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 11);
        r1 = $r0[11];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32688, 0);
        $r0 = newmultiarray (boolean)[12][];
        _sym_tmp_1 = <com.gluegadget.hndroid.News: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 599);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.News: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(599);
        <com.gluegadget.hndroid.News: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[10];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[6];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[5];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[3];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/News", -5893545371135291423L);
        return $r0;
    }
}
class com.gluegadget.hndroid.NewsAdapter$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.gluegadget.hndroid.NewsAdapter this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.NewsAdapter)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.NewsAdapter$1 r0;
        com.gluegadget.hndroid.NewsAdapter r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter$1;
        r1 := @parameter0: com.gluegadget.hndroid.NewsAdapter;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21821, 32689, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.NewsAdapter$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 608);
        $r2 = <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45619, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45619, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.NewsAdapter$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 609);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.NewsAdapter$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(609);
        r0.<com.gluegadget.hndroid.NewsAdapter$1: com.gluegadget.hndroid.NewsAdapter this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $r6$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.NewsAdapter$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4, $r7;
        android.content.Intent r5, $r8;
        java.lang.Object $r6;
        com.gluegadget.hndroid.NewsAdapter $r9, $r15;
        android.content.Context $r10, $r16;
        java.lang.String $r11, $r13;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter$1;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32690, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.NewsAdapter$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 608);
        $r2 = <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45620, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45620, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(6682, null);
        $r6 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(6682);
        $r7 = (java.lang.String[]) $r6;
        r4 = (java.lang.String[]) $r7;
        $r8 = new android.content.Intent;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.NewsAdapter$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 609);
        $r9 = r0.<com.gluegadget.hndroid.NewsAdapter$1: com.gluegadget.hndroid.NewsAdapter this$0>;
        _sym_tmp_3 = $r9.<com.gluegadget.hndroid.NewsAdapter: int context$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 610);
        $r10 = $r9.<com.gluegadget.hndroid.NewsAdapter: android.content.Context context>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r10, class "com/gluegadget/hndroid/Comments");
        r5 = $r8;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, 0);
        $r11 = r4[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r11);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, 1);
        $r13 = r4[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r13);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.NewsAdapter$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 609);
        $r15 = r0.<com.gluegadget.hndroid.NewsAdapter$1: com.gluegadget.hndroid.NewsAdapter this$0>;
        _sym_tmp_5 = $r15.<com.gluegadget.hndroid.NewsAdapter: int context$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 610);
        $r16 = $r15.<com.gluegadget.hndroid.NewsAdapter: android.content.Context context>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r16.<android.content.Context: void startActivity(android.content.Intent)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32691, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32692, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.NewsAdapter$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 608);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.NewsAdapter$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(608);
        <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/NewsAdapter$1", 4320153523666841660L);
        return $r0;
    }
}
class com.gluegadget.hndroid.NewsAdapter$ViewHolder extends java.lang.Object
{
    android.widget.TextView title;
    android.widget.TextView score;
    android.widget.TextView comment;
    android.widget.TextView author;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int title$a3tid;
    int score$a3tid;
    int comment$a3tid;
    int author$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.NewsAdapter$ViewHolder r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter$ViewHolder;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32693, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.NewsAdapter$ViewHolder: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 611);
        $r1 = <com.gluegadget.hndroid.NewsAdapter$ViewHolder: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45621, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$ViewHolder: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45621, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32694, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$ViewHolder: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 1);
        r1 = $r0[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32695, 0);
        $r0 = newmultiarray (boolean)[2][];
        _sym_tmp_1 = <com.gluegadget.hndroid.NewsAdapter$ViewHolder: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 611);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.NewsAdapter$ViewHolder: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(611);
        <com.gluegadget.hndroid.NewsAdapter$ViewHolder: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/NewsAdapter$ViewHolder", 9251206036812L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.NewsAdapter extends android.widget.ArrayAdapter
{
    private android.view.LayoutInflater mInflater;
    android.content.Context context;
    int resource;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int mInflater$a3tid;
    int context$a3tid;
    acteve.symbolic.integer.Expression resource$sym;
    int resource$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(android.content.Context, int, java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $r5$sym, r4$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.gluegadget.hndroid.NewsAdapter r0;
        android.content.Context r1;
        java.util.List r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Object $r5;
        android.view.LayoutInflater $r6;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter;
        r1 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        r2 := @parameter2: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11527, 32696, 4);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.gluegadget.hndroid.NewsAdapter: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 612);
        $r3 = <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45622, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45622, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11527, null, null, i0$sym, null);
        specialinvoke r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>(r1, i0, r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        $r6 = (android.view.LayoutInflater) $r5;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.NewsAdapter: int mInflater$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 613);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.NewsAdapter: int mInflater$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(613);
        r0.<com.gluegadget.hndroid.NewsAdapter: android.view.LayoutInflater mInflater> = $r6;
        r0.<com.gluegadget.hndroid.NewsAdapter: acteve.symbolic.integer.Expression resource$sym> = i0$sym;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.NewsAdapter: int resource$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 614);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.NewsAdapter: int resource$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(614);
        r0.<com.gluegadget.hndroid.NewsAdapter: int resource> = i0;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.NewsAdapter: int context$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 610);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.NewsAdapter: int context$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(610);
        r0.<com.gluegadget.hndroid.NewsAdapter: android.content.Context context> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        acteve.symbolic.integer.Expression _sym_tmp_16, $r19$sym, $i1$sym, $r8$sym, r4$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1;
        com.gluegadget.hndroid.NewsAdapter r0;
        android.view.View r1, $r11, $r13, $r15, $r17;
        android.view.ViewGroup r2;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.News r5;
        com.gluegadget.hndroid.NewsAdapter$ViewHolder r6, $r10;
        java.lang.String[] r7, $r26;
        java.lang.Object $r8, $r19;
        android.view.LayoutInflater $r9;
        android.widget.TextView $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r29, $r30, $r33, $r36, $r42;
        java.lang.String $r21, $r23, $r25, $r27, $r28, $r32, $r34, $r35, $r39, $r41, $r45, $r48, $r50;
        com.gluegadget.hndroid.NewsAdapter$1 $r31;
        java.lang.StringBuilder $r37, $r38, $r40, $r43, $r44, $r46, $r47, $r49;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.View;
        r2 := @parameter2: android.view.ViewGroup;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1326, 32697, 4);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.gluegadget.hndroid.NewsAdapter: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 612);
        $r3 = <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRc>;
        _sym_tmp_16 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45623, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45623, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1327, null, i0$sym);
        $r8 = virtualinvoke r0.<com.gluegadget.hndroid.NewsAdapter: java.lang.Object getItem(int)>(i0);
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1327);
        r5 = (com.gluegadget.hndroid.News) $r8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_16 = null;
        if r1 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45624, 0);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.NewsAdapter: int mInflater$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 613);
        $r9 = r0.<com.gluegadget.hndroid.NewsAdapter: android.view.LayoutInflater mInflater>;
        $i1$sym = r0.<com.gluegadget.hndroid.NewsAdapter: acteve.symbolic.integer.Expression resource$sym>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.NewsAdapter: int resource$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 614);
        $i1 = r0.<com.gluegadget.hndroid.NewsAdapter: int resource>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1318, null, $i1$sym, null, null);
        r1 = virtualinvoke $r9.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, r2, 0);
        $r10 = new com.gluegadget.hndroid.NewsAdapter$ViewHolder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: void <init>()>();
        r6 = $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r11 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230724);
        $r12 = (android.widget.TextView) $r11;
        _sym_tmp_4 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 615);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int title$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(615);
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView title> = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r13 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230725);
        $r14 = (android.widget.TextView) $r13;
        _sym_tmp_5 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int score$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 616);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int score$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(616);
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView score> = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r15 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230735);
        $r16 = (android.widget.TextView) $r15;
        _sym_tmp_6 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int comment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 617);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int comment$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(617);
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView comment> = $r16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r17 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230723);
        $r18 = (android.widget.TextView) $r17;
        _sym_tmp_7 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 618);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int author$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(618);
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView author> = $r18;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6683, null, null);
        virtualinvoke r1.<android.view.View: void setTag(java.lang.Object)>(r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45624, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(6682, null);
        $r19 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();
        $r19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(6682);
        r6 = (com.gluegadget.hndroid.NewsAdapter$ViewHolder) $r19;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;

     label4:
        _sym_tmp_8 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int title$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 615);
        $r20 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView title>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r21 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r20.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);
        _sym_tmp_9 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int score$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 616);
        $r22 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView score>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21819, null);
        $r23 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getScore()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r23);
        _sym_tmp_10 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int comment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 617);
        $r24 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView comment>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(17218, null);
        $r25 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getComment()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r24.<android.widget.TextView: void setText(java.lang.CharSequence)>($r25);
        $r26 = newarray (java.lang.String)[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r27 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r26, 0);
        $r26[0] = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21803, null);
        $r28 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r26, 1);
        $r26[1] = $r28;
        r7 = $r26;
        _sym_tmp_11 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int comment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 617);
        $r29 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView comment>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6683, null, null);
        virtualinvoke $r29.<android.widget.TextView: void setTag(java.lang.Object)>(r7);
        _sym_tmp_12 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int comment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 617);
        $r30 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView comment>;
        $r31 = new com.gluegadget.hndroid.NewsAdapter$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21821, null, null);
        specialinvoke $r31.<com.gluegadget.hndroid.NewsAdapter$1: void <init>(com.gluegadget.hndroid.NewsAdapter)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1450, null, null);
        virtualinvoke $r30.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r32 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_16 = null;
        if $r32 != "" goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45625, 0);
        _sym_tmp_13 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 618);
        $r33 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView author>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r34 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r33.<android.widget.TextView: void setText(java.lang.CharSequence)>($r34);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        goto label9;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45625, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21820, null);
        $r35 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getDomain()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        _sym_tmp_16 = null;
        if $r35 != "" goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45626, 0);
        _sym_tmp_14 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 618);
        $r36 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView author>;
        $r37 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("by ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r39 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r36.<android.widget.TextView: void setText(java.lang.CharSequence)>($r41);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        goto label9;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45626, 1);
        goto label8;

     label8:
        _sym_tmp_15 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: int author$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 618);
        $r42 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView author>;
        $r43 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("by ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r45 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21820, null);
        $r48 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getDomain()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r42.<android.widget.TextView: void setText(java.lang.CharSequence)>($r50);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 7);
        r4[7] = 1;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 8);
        r4[8] = 1;
        return r1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32698, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32699, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.NewsAdapter: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 612);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.NewsAdapter: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(612);
        <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[9];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/NewsAdapter", 4457176509824375L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.Preferences extends android.preference.PreferenceActivity
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Preferences r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.Preferences;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32700, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Preferences: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 619);
        $r1 = <com.gluegadget.hndroid.Preferences: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45627, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Preferences: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45627, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.preference.PreferenceActivity: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Preferences r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Preferences;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32701, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Preferences: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 619);
        $r2 = <com.gluegadget.hndroid.Preferences: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45628, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Preferences: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45628, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18567, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.Preferences: void addPreferencesFromResource(int)>(2130968577);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32702, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Preferences: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32703, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Preferences: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 619);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Preferences: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(619);
        <com.gluegadget.hndroid.Preferences: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Preferences", 3934875464755263326L);
        return $r0;
    }
}
public final class com.gluegadget.hndroid.R$array extends java.lang.Object
{
    public static final int default_action_options;
    public static final int default_action_values;
    public static final acteve.symbolic.integer.Expression default_action_options$sym;
    public static final int default_action_options$a3tid;
    public static final acteve.symbolic.integer.Expression default_action_values$sym;
    public static final int default_action_values$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R$array r0;

        r0 := @this: com.gluegadget.hndroid.R$array;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32704, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$attr extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R$attr r0;

        r0 := @this: com.gluegadget.hndroid.R$attr;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32705, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$drawable extends java.lang.Object
{
    public static final int comments;
    public static final int ic_menu_compose;
    public static final int ic_menu_friendslist;
    public static final int ic_menu_login;
    public static final int ic_menu_logout;
    public static final int ic_menu_preferences;
    public static final int ic_menu_refresh;
    public static final int icon;
    public static final int panel_background;
    public static final int widget_bg;
    public static final int widget_bg_normal;
    public static final int widget_bg_pressed;
    public static final int widget_bg_selected;
    public static final acteve.symbolic.integer.Expression comments$sym;
    public static final int comments$a3tid;
    public static final acteve.symbolic.integer.Expression ic_menu_compose$sym;
    public static final int ic_menu_compose$a3tid;
    public static final acteve.symbolic.integer.Expression ic_menu_friendslist$sym;
    public static final int ic_menu_friendslist$a3tid;
    public static final acteve.symbolic.integer.Expression ic_menu_login$sym;
    public static final int ic_menu_login$a3tid;
    public static final acteve.symbolic.integer.Expression ic_menu_logout$sym;
    public static final int ic_menu_logout$a3tid;
    public static final acteve.symbolic.integer.Expression ic_menu_preferences$sym;
    public static final int ic_menu_preferences$a3tid;
    public static final acteve.symbolic.integer.Expression ic_menu_refresh$sym;
    public static final int ic_menu_refresh$a3tid;
    public static final acteve.symbolic.integer.Expression icon$sym;
    public static final int icon$a3tid;
    public static final acteve.symbolic.integer.Expression panel_background$sym;
    public static final int panel_background$a3tid;
    public static final acteve.symbolic.integer.Expression widget_bg$sym;
    public static final int widget_bg$a3tid;
    public static final acteve.symbolic.integer.Expression widget_bg_normal$sym;
    public static final int widget_bg_normal$a3tid;
    public static final acteve.symbolic.integer.Expression widget_bg_pressed$sym;
    public static final int widget_bg_pressed$a3tid;
    public static final acteve.symbolic.integer.Expression widget_bg_selected$sym;
    public static final int widget_bg_selected$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R$drawable r0;

        r0 := @this: com.gluegadget.hndroid.R$drawable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32706, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$id extends java.lang.Object
{
    public static final int author;
    public static final int comments;
    public static final int hnListView;
    public static final int hnTop;
    public static final int hnTopDesc;
    public static final int hnTopTitle;
    public static final int karma;
    public static final int layout_root;
    public static final int login_button;
    public static final int password;
    public static final int save_button;
    public static final int score;
    public static final int submit_button;
    public static final int text;
    public static final int title;
    public static final int username;
    public static final acteve.symbolic.integer.Expression author$sym;
    public static final int author$a3tid;
    public static final acteve.symbolic.integer.Expression comments$sym;
    public static final int comments$a3tid;
    public static final acteve.symbolic.integer.Expression hnListView$sym;
    public static final int hnListView$a3tid;
    public static final acteve.symbolic.integer.Expression hnTop$sym;
    public static final int hnTop$a3tid;
    public static final acteve.symbolic.integer.Expression hnTopDesc$sym;
    public static final int hnTopDesc$a3tid;
    public static final acteve.symbolic.integer.Expression hnTopTitle$sym;
    public static final int hnTopTitle$a3tid;
    public static final acteve.symbolic.integer.Expression karma$sym;
    public static final int karma$a3tid;
    public static final acteve.symbolic.integer.Expression layout_root$sym;
    public static final int layout_root$a3tid;
    public static final acteve.symbolic.integer.Expression login_button$sym;
    public static final int login_button$a3tid;
    public static final acteve.symbolic.integer.Expression password$sym;
    public static final int password$a3tid;
    public static final acteve.symbolic.integer.Expression save_button$sym;
    public static final int save_button$a3tid;
    public static final acteve.symbolic.integer.Expression score$sym;
    public static final int score$a3tid;
    public static final acteve.symbolic.integer.Expression submit_button$sym;
    public static final int submit_button$a3tid;
    public static final acteve.symbolic.integer.Expression text$sym;
    public static final int text$a3tid;
    public static final acteve.symbolic.integer.Expression title$sym;
    public static final int title$a3tid;
    public static final acteve.symbolic.integer.Expression username$sym;
    public static final int username$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R$id r0;

        r0 := @this: com.gluegadget.hndroid.R$id;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32707, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$layout extends java.lang.Object
{
    public static final int comment;
    public static final int comments_list_item;
    public static final int karma_widget;
    public static final int karma_widget_configure;
    public static final int login;
    public static final int main;
    public static final int news_list_item;
    public static final acteve.symbolic.integer.Expression comment$sym;
    public static final int comment$a3tid;
    public static final acteve.symbolic.integer.Expression comments_list_item$sym;
    public static final int comments_list_item$a3tid;
    public static final acteve.symbolic.integer.Expression karma_widget$sym;
    public static final int karma_widget$a3tid;
    public static final acteve.symbolic.integer.Expression karma_widget_configure$sym;
    public static final int karma_widget_configure$a3tid;
    public static final acteve.symbolic.integer.Expression login$sym;
    public static final int login$a3tid;
    public static final acteve.symbolic.integer.Expression main$sym;
    public static final int main$a3tid;
    public static final acteve.symbolic.integer.Expression news_list_item$sym;
    public static final int news_list_item$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R$layout r0;

        r0 := @this: com.gluegadget.hndroid.R$layout;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32708, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$string extends java.lang.Object
{
    public static final int app_name;
    public static final int context_google_mobile;
    public static final int context_reply;
    public static final int context_upvote;
    public static final int hnfeed;
    public static final int menu_comment;
    public static final int menu_comments;
    public static final int menu_lists;
    public static final int menu_login;
    public static final int menu_logout;
    public static final int menu_preferences;
    public static final int menu_refresh;
    public static final int menu_submissions;
    public static final acteve.symbolic.integer.Expression app_name$sym;
    public static final int app_name$a3tid;
    public static final acteve.symbolic.integer.Expression context_google_mobile$sym;
    public static final int context_google_mobile$a3tid;
    public static final acteve.symbolic.integer.Expression context_reply$sym;
    public static final int context_reply$a3tid;
    public static final acteve.symbolic.integer.Expression context_upvote$sym;
    public static final int context_upvote$a3tid;
    public static final acteve.symbolic.integer.Expression hnfeed$sym;
    public static final int hnfeed$a3tid;
    public static final acteve.symbolic.integer.Expression menu_comment$sym;
    public static final int menu_comment$a3tid;
    public static final acteve.symbolic.integer.Expression menu_comments$sym;
    public static final int menu_comments$a3tid;
    public static final acteve.symbolic.integer.Expression menu_lists$sym;
    public static final int menu_lists$a3tid;
    public static final acteve.symbolic.integer.Expression menu_login$sym;
    public static final int menu_login$a3tid;
    public static final acteve.symbolic.integer.Expression menu_logout$sym;
    public static final int menu_logout$a3tid;
    public static final acteve.symbolic.integer.Expression menu_preferences$sym;
    public static final int menu_preferences$a3tid;
    public static final acteve.symbolic.integer.Expression menu_refresh$sym;
    public static final int menu_refresh$a3tid;
    public static final acteve.symbolic.integer.Expression menu_submissions$sym;
    public static final int menu_submissions$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R$string r0;

        r0 := @this: com.gluegadget.hndroid.R$string;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32709, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$style extends java.lang.Object
{
    public static final int WidgetBackground;
    public static final acteve.symbolic.integer.Expression WidgetBackground$sym;
    public static final int WidgetBackground$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R$style r0;

        r0 := @this: com.gluegadget.hndroid.R$style;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32710, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$xml extends java.lang.Object
{
    public static final int karma_widget;
    public static final int preferences;
    public static final acteve.symbolic.integer.Expression karma_widget$sym;
    public static final int karma_widget$a3tid;
    public static final acteve.symbolic.integer.Expression preferences$sym;
    public static final int preferences$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R$xml r0;

        r0 := @this: com.gluegadget.hndroid.R$xml;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32711, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.gluegadget.hndroid.R r0;

        r0 := @this: com.gluegadget.hndroid.R;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32712, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
class com.gluegadget.hndroid.Submissions$1 extends java.lang.Object implements java.lang.Runnable
{
    final android.os.Bundle val$extras;
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$extras$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions, android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$1 r0;
        com.gluegadget.hndroid.Submissions r1;
        android.os.Bundle r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$1;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        r2 := @parameter1: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21822, 32713, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 620);
        $r3 = <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45629, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45629, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 621);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(621);
        r0.<com.gluegadget.hndroid.Submissions$1: com.gluegadget.hndroid.Submissions this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$1: int val$extras$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 622);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$1: int val$extras$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(622);
        r0.<com.gluegadget.hndroid.Submissions$1: android.os.Bundle val$extras> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Submissions $r3, $r10, $r12;
        java.lang.StringBuilder $r4, $r5, $r8;
        android.os.Bundle $r6;
        java.lang.String $r7, $r9;
        android.app.ProgressDialog $r11;
        android.os.Handler $r13;

        r0 := @this: com.gluegadget.hndroid.Submissions$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32714, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 620);
        $r1 = <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45630, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45630, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 621);
        $r3 = r0.<com.gluegadget.hndroid.Submissions$1: com.gluegadget.hndroid.Submissions this$0>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/submitted?id=");
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$1: int val$extras$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 622);
        $r6 = r0.<com.gluegadget.hndroid.Submissions$1: android.os.Bundle val$extras>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r7 = virtualinvoke $r6.<android.os.Bundle: java.lang.String getString(java.lang.String)>("user");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21823, null, null);
        staticinvoke <com.gluegadget.hndroid.Submissions: void access$000(com.gluegadget.hndroid.Submissions,java.lang.String)>($r3, $r9);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 621);
        $r10 = r0.<com.gluegadget.hndroid.Submissions$1: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_5 = $r10.<com.gluegadget.hndroid.Submissions: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 623);
        $r11 = $r10.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r11.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Submissions$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 621);
        $r12 = r0.<com.gluegadget.hndroid.Submissions$1: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_7 = $r12.<com.gluegadget.hndroid.Submissions: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 624);
        $r13 = $r12.<com.gluegadget.hndroid.Submissions: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r13.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32715, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32716, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 620);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(620);
        <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$1", 4705431567866207181L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$2 extends android.os.Handler
{
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$2 r0;
        com.gluegadget.hndroid.Submissions r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Submissions$2;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21824, 32717, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 625);
        $r2 = <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45631, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45631, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 626);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$2: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(626);
        r0.<com.gluegadget.hndroid.Submissions$2: com.gluegadget.hndroid.Submissions this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.os.Handler: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.gluegadget.hndroid.Submissions$2 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Submissions $r4, $r6;
        com.gluegadget.hndroid.NewsAdapter $r5;
        android.widget.ListView $r7;

        r0 := @this: com.gluegadget.hndroid.Submissions$2;
        r1 := @parameter0: android.os.Message;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(980, 32718, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 625);
        $r2 = <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45632, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45632, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $i0$sym = null;
        $i0 = r1.<android.os.Message: int what>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 == 1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45633, 0);
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45633, 1);
        goto label3;

     label3:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 626);
        $r4 = r0.<com.gluegadget.hndroid.Submissions$2: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_3 = $r4.<com.gluegadget.hndroid.Submissions: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 627);
        $r5 = $r4.<com.gluegadget.hndroid.Submissions: com.gluegadget.hndroid.NewsAdapter aa>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1390, null);
        virtualinvoke $r5.<com.gluegadget.hndroid.NewsAdapter: void notifyDataSetChanged()>();
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 626);
        $r6 = r0.<com.gluegadget.hndroid.Submissions$2: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_5 = $r6.<com.gluegadget.hndroid.Submissions: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 628);
        $r7 = $r6.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1882, null, null);
        virtualinvoke $r7.<android.widget.ListView: void setSelection(int)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32719, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32720, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 625);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$2: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(625);
        <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$2", -1951038429205594438L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$3$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.News val$item;
    final com.gluegadget.hndroid.Submissions$3 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$item$a3tid;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions$3, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$3$1 r0;
        com.gluegadget.hndroid.Submissions$3 r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$3$1;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions$3;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21825, 32721, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 629);
        $r3 = <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45634, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45634, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 630);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$3$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(630);
        r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.Submissions$3 this$1> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$3$1: int val$item$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 631);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$3$1: int val$item$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(631);
        r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.News val$item> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_11, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$3$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Submissions$3 $r3, $r7, $r10;
        com.gluegadget.hndroid.Submissions $r4, $r8, $r11;
        com.gluegadget.hndroid.News $r5;
        java.lang.String $r6;
        android.app.ProgressDialog $r9;
        android.os.Handler $r12;

        r0 := @this: com.gluegadget.hndroid.Submissions$3$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32722, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 629);
        $r1 = <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRc>;
        _sym_tmp_11 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45635, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45635, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 630);
        $r3 = r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.Submissions$3 this$1>;
        _sym_tmp_3 = $r3.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 632);
        $r4 = $r3.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions$3$1: int val$item$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 631);
        $r5 = r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.News val$item>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r6 = virtualinvoke $r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21823, null, null);
        staticinvoke <com.gluegadget.hndroid.Submissions: void access$000(com.gluegadget.hndroid.Submissions,java.lang.String)>($r4, $r6);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Submissions$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 630);
        $r7 = r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.Submissions$3 this$1>;
        _sym_tmp_6 = $r7.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 632);
        $r8 = $r7.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_7 = $r8.<com.gluegadget.hndroid.Submissions: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 623);
        $r9 = $r8.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r9.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Submissions$3$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 630);
        $r10 = r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.Submissions$3 this$1>;
        _sym_tmp_9 = $r10.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 632);
        $r11 = $r10.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_10 = $r11.<com.gluegadget.hndroid.Submissions: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 624);
        $r12 = $r11.<com.gluegadget.hndroid.Submissions: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r12.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32723, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32724, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$3$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 629);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$3$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(629);
        <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$3$1", 4705431564812729050L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$3 extends java.lang.Object implements android.widget.AdapterView$OnItemClickListener
{
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$3 r0;
        com.gluegadget.hndroid.Submissions r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Submissions$3;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21824, 32725, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 633);
        $r2 = <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45636, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45636, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 632);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(632);
        r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $z2$sym, $z1$sym, $z0$sym, $r10$sym, r4$sym, l1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.gluegadget.hndroid.Submissions$3 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        long l1;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.News r5;
        android.content.SharedPreferences r6;
        java.lang.String r7, $r14, $r20, $r22, $r28, $r30;
        android.content.Intent r8, $r13, $r17, r19, $r25, r32;
        android.widget.Adapter $r9;
        java.lang.Object $r10;
        com.gluegadget.hndroid.Submissions $r11, $r16, $r18, $r24, $r33, $r34, $r35;
        android.content.Context $r12;
        boolean $z0, $z1, $z2;
        android.net.Uri $r15, $r31;
        java.lang.StringBuilder $r26, $r27, $r29;
        android.app.ProgressDialog $r36;
        java.lang.Thread $r37;
        com.gluegadget.hndroid.Submissions$3$1 $r38;

        r0 := @this: com.gluegadget.hndroid.Submissions$3;
        r1 := @parameter0: android.widget.AdapterView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1394, 32726, 5);
        i0$sym = a3targs$symargs[3];
        l1$sym = a3targs$symargs[4];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 633);
        $r3 = <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45637, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45637, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(12445, null);
        $r9 = virtualinvoke r1.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1327, null, i0$sym);
        $r10 = interfaceinvoke $r9.<android.widget.Adapter: java.lang.Object getItem(int)>(i0);
        $r10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1327);
        r5 = (com.gluegadget.hndroid.News) $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 30);
        if i0 >= 30 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45638, 0);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 632);
        $r11 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8883, null);
        $r12 = virtualinvoke $r11.<com.gluegadget.hndroid.Submissions: android.content.Context getBaseContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4842, null);
        r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r7 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("PREF_DEFAULT_ACTION", "view-comments");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z0 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("open-in-browser");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45639, 0);
        $r13 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r14 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(287, null);
        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5115, null, null, null);
        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r15);
        r8 = $r13;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 632);
        $r16 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r16.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label7;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45639, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("view-comments");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45640, 0);
        $r17 = new android.content.Intent;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 632);
        $r18 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r17.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r18, class "com/gluegadget/hndroid/Comments");
        r19 = $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21803, null);
        $r20 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r22 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r22);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 632);
        $r24 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r24.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r19);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        goto label7;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45640, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z2 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mobile-adapted-view");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45641, 0);
        $r25 = new android.content.Intent;
        $r26 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.google.com/gwt/x?u=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r28 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(287, null);
        $r31 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r30);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5115, null, null, null);
        specialinvoke $r25.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r31);
        r32 = $r25;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 632);
        $r33 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r33.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r32);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45641, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 7);
        r4[7] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45638, 1);
        goto label9;

     label9:
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 632);
        $r34 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Submissions$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 632);
        $r35 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r36 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r35, "", "Loading. Please wait...", 1);
        _sym_tmp_9 = $r34.<com.gluegadget.hndroid.Submissions: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 623);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r34.<com.gluegadget.hndroid.Submissions: int dialog$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        $r34.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog> = $r36;
        $r37 = new java.lang.Thread;
        $r38 = new com.gluegadget.hndroid.Submissions$3$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21825, null, null, null);
        specialinvoke $r38.<com.gluegadget.hndroid.Submissions$3$1: void <init>(com.gluegadget.hndroid.Submissions$3,com.gluegadget.hndroid.News)>(r0, r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r37.<java.lang.Thread: void <init>(java.lang.Runnable)>($r38);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r37.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 8);
        r4[8] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 9);
        r4[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32727, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32728, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 633);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$3: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(633);
        <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$3", -2162702341999630634L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$4 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$4 r0;
        com.gluegadget.hndroid.Submissions r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Submissions$4;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21824, 32729, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 634);
        $r2 = <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45642, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45642, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 635);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$4: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(635);
        r0.<com.gluegadget.hndroid.Submissions$4: com.gluegadget.hndroid.Submissions this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$4 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        java.lang.CharSequence $r6;
        java.lang.String $r7;
        android.net.Uri $r8;
        com.gluegadget.hndroid.Submissions $r9;

        r0 := @this: com.gluegadget.hndroid.Submissions$4;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32730, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 634);
        $r2 = <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45643, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45643, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1415, null);
        $r6 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getTitle()>();
        $r7 = (java.lang.String) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(287, null);
        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5115, null, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r8);
        r4 = $r5;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 635);
        $r9 = r0.<com.gluegadget.hndroid.Submissions$4: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r9.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32731, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32732, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 634);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$4: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(634);
        <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$4", 4320153515616762951L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$5 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$5 r0;
        com.gluegadget.hndroid.Submissions r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$5;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32733, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 636);
        $r3 = <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45644, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45644, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 637);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$5: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(637);
        r0.<com.gluegadget.hndroid.Submissions$5: com.gluegadget.hndroid.Submissions this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$5: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 638);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$5: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(638);
        r0.<com.gluegadget.hndroid.Submissions$5: com.gluegadget.hndroid.News val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$5 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r7, $r10;
        android.content.Intent r5, $r6;
        com.gluegadget.hndroid.News $r8;
        java.lang.String $r9, $r11;
        android.net.Uri $r12;
        com.gluegadget.hndroid.Submissions $r13;

        r0 := @this: com.gluegadget.hndroid.Submissions$5;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32734, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 636);
        $r2 = <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45645, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45645, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r6 = new android.content.Intent;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.google.com/gwt/x?u=");
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$5: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 638);
        $r8 = r0.<com.gluegadget.hndroid.Submissions$5: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r9 = virtualinvoke $r8.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(287, null);
        $r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5115, null, null, null);
        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r12);
        r5 = $r6;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 637);
        $r13 = r0.<com.gluegadget.hndroid.Submissions$5: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r13.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32735, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32736, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 636);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$5: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(636);
        <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$5", 4705431565367906892L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$6 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$6 r0;
        com.gluegadget.hndroid.Submissions r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$6;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32737, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 639);
        $r3 = <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45646, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45646, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 640);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$6: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(640);
        r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.Submissions this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$6: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 641);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$6: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(641);
        r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.News val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$6 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        com.gluegadget.hndroid.Submissions $r6, $r13;
        com.gluegadget.hndroid.News $r7, $r10;
        java.lang.String $r8, $r11;

        r0 := @this: com.gluegadget.hndroid.Submissions$6;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32738, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 639);
        $r2 = <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45647, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45647, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 640);
        $r6 = r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/gluegadget/hndroid/Comments");
        r4 = $r5;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$6: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 641);
        $r7 = r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21803, null);
        $r8 = virtualinvoke $r7.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r8);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions$6: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 641);
        $r10 = r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r11 = virtualinvoke $r10.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(965, null, null, null);
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r11);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Submissions$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 640);
        $r13 = r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke $r13.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32739, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32740, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 639);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$6: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(639);
        <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$6", 4705431566755851497L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$7$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Submissions$7 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$1$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions$7)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$7$1 r0;
        com.gluegadget.hndroid.Submissions$7 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Submissions$7$1;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions$7;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21827, 32741, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$7$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 642);
        $r2 = <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45648, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45648, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$7$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 643);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$7$1: int this$1$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(643);
        r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_12, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$7$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r15, $r19;
        org.apache.http.impl.client.DefaultHttpClient r5, $r11;
        org.apache.http.client.methods.HttpGet r6, $r12;
        org.apache.http.impl.client.BasicResponseHandler r7, $r20;
        org.apache.http.client.ClientProtocolException r8, $r22;
        com.gluegadget.hndroid.Submissions$7 $r9, $r13, $r25, $r28;
        com.gluegadget.hndroid.Submissions $r10, $r26, $r29;
        com.gluegadget.hndroid.News $r14;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.io.IOException $r23, r24;
        android.app.ProgressDialog $r27;
        android.os.Handler $r30;

        r0 := @this: com.gluegadget.hndroid.Submissions$7$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32742, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$7$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 642);
        $r1 = <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRc>;
        _sym_tmp_12 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45649, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45649, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$7$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 643);
        $r9 = r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1>;
        _sym_tmp_3 = $r9.<com.gluegadget.hndroid.Submissions$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 644);
        $r10 = $r9.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r3 = virtualinvoke $r10.<com.gluegadget.hndroid.Submissions: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r5 = $r11;
        $r12 = new org.apache.http.client.methods.HttpGet;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions$7$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 643);
        $r13 = r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1>;
        _sym_tmp_5 = $r13.<com.gluegadget.hndroid.Submissions$7: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 645);
        $r14 = $r13.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.News val$newsContexted>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21746, null);
        $r15 = virtualinvoke $r14.<com.gluegadget.hndroid.News: java.lang.String getUpVoteUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r12.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r15);
        r6 = $r12;
        $r16 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r19);
        $r20 = new org.apache.http.impl.client.BasicResponseHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r7 = $r20;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15331, null, null, null);
        virtualinvoke r5.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r6, r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label6;

     label4:
        $r22 := @caughtexception;
        r8 = $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r8.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label6;

     label5:
        $r23 := @caughtexception;
        r24 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label6:
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Submissions$7$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 643);
        $r25 = r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1>;
        _sym_tmp_7 = $r25.<com.gluegadget.hndroid.Submissions$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 644);
        $r26 = $r25.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_8 = $r26.<com.gluegadget.hndroid.Submissions: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 623);
        $r27 = $r26.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        virtualinvoke $r27.<android.app.ProgressDialog: void dismiss()>();
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Submissions$7$1: int this$1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 643);
        $r28 = r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1>;
        _sym_tmp_10 = $r28.<com.gluegadget.hndroid.Submissions$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 644);
        $r29 = $r28.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_11 = $r29.<com.gluegadget.hndroid.Submissions: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 624);
        $r30 = $r29.<com.gluegadget.hndroid.Submissions: android.os.Handler handler>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6335, null, null);
        virtualinvoke $r30.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;

        catch org.apache.http.client.ClientProtocolException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32743, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32744, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$7$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 642);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$7$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(642);
        <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$7$1", -4124872408349886090L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$7 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$newsContexted$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.gluegadget.hndroid.Submissions, com.gluegadget.hndroid.News)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$7 r0;
        com.gluegadget.hndroid.Submissions r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$7;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32745, 3);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 646);
        $r3 = <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45650, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45650, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 644);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$7: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(644);
        r0.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0> = r1;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$7: int val$newsContexted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 645);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions$7: int val$newsContexted$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(645);
        r0.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.News val$newsContexted> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions$7 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Submissions $r4, $r5;
        android.app.ProgressDialog $r6;
        java.lang.Thread $r7;
        com.gluegadget.hndroid.Submissions$7$1 $r8;

        r0 := @this: com.gluegadget.hndroid.Submissions$7;
        r1 := @parameter0: android.view.MenuItem;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1402, 32746, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 646);
        $r2 = <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45651, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45651, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 644);
        $r4 = r0.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 644);
        $r5 = r0.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r6 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r5, "", "Voting. Please wait...", 1);
        _sym_tmp_4 = $r4.<com.gluegadget.hndroid.Submissions: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 623);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r4.<com.gluegadget.hndroid.Submissions: int dialog$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        $r4.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog> = $r6;
        $r7 = new java.lang.Thread;
        $r8 = new com.gluegadget.hndroid.Submissions$7$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21827, null, null);
        specialinvoke $r8.<com.gluegadget.hndroid.Submissions$7$1: void <init>(com.gluegadget.hndroid.Submissions$7)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r7.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1402, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32747, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32748, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 646);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions$7: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(646);
        <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$7", 4705431562869606603L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.Submissions extends android.app.Activity
{
    private static final int CONTEXT_COMMENTS;
    private static final int CONTEXT_USER_LINK;
    private static final int CONTEXT_USER_UPVOTE;
    private static final int CONTEXT_GOOGLE_MOBILE;
    private static final int NOTIFY_DATASET_CHANGED;
    android.app.ProgressDialog dialog;
    android.widget.ListView newsListView;
    com.gluegadget.hndroid.NewsAdapter aa;
    java.util.ArrayList news;
    java.lang.String loginUrl;
    android.os.Handler handler;
    android.widget.AdapterView$OnItemClickListener clickListener;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final acteve.symbolic.integer.Expression CONTEXT_COMMENTS$sym;
    private static final int CONTEXT_COMMENTS$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_USER_LINK$sym;
    private static final int CONTEXT_USER_LINK$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_USER_UPVOTE$sym;
    private static final int CONTEXT_USER_UPVOTE$a3tid;
    private static final acteve.symbolic.integer.Expression CONTEXT_GOOGLE_MOBILE$sym;
    private static final int CONTEXT_GOOGLE_MOBILE$a3tid;
    private static final acteve.symbolic.integer.Expression NOTIFY_DATASET_CHANGED$sym;
    private static final int NOTIFY_DATASET_CHANGED$a3tid;
    int dialog$a3tid;
    int newsListView$a3tid;
    int aa$a3tid;
    int news$a3tid;
    int loginUrl$a3tid;
    int handler$a3tid;
    int clickListener$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.gluegadget.hndroid.Submissions r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList $r3;
        com.gluegadget.hndroid.Submissions$2 $r4;
        com.gluegadget.hndroid.Submissions$3 $r5;

        r0 := @this: com.gluegadget.hndroid.Submissions;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32749, 1);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 647);
        $r1 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45652, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45652, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Activity: void <init>()>();
        $r3 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions: int news$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 648);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions: int news$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(648);
        r0.<com.gluegadget.hndroid.Submissions: java.util.ArrayList news> = $r3;
        $r4 = new com.gluegadget.hndroid.Submissions$2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21824, null, null);
        specialinvoke $r4.<com.gluegadget.hndroid.Submissions$2: void <init>(com.gluegadget.hndroid.Submissions)>(r0);
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 624);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions: int handler$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(624);
        r0.<com.gluegadget.hndroid.Submissions: android.os.Handler handler> = $r4;
        $r5 = new com.gluegadget.hndroid.Submissions$3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21824, null, null);
        specialinvoke $r5.<com.gluegadget.hndroid.Submissions$3: void <init>(com.gluegadget.hndroid.Submissions)>(r0);
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions: int clickListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 649);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions: int clickListener$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(649);
        r0.<com.gluegadget.hndroid.Submissions: android.widget.AdapterView$OnItemClickListener clickListener> = $r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_11, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.gluegadget.hndroid.Submissions r0;
        android.os.Bundle r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.TextView r5;
        android.view.View $r6, $r16;
        android.widget.ListView $r7, $r8, $r11, $r13;
        com.gluegadget.hndroid.NewsAdapter $r9, $r12;
        java.util.ArrayList $r10;
        android.widget.AdapterView$OnItemClickListener $r14;
        android.content.Intent $r15;
        java.lang.String $r17;
        android.app.ProgressDialog $r18;
        java.lang.Thread $r19;
        com.gluegadget.hndroid.Submissions$1 $r20;

        r0 := @this: com.gluegadget.hndroid.Submissions;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32750, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 647);
        $r2 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        _sym_tmp_11 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45653, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45653, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1626, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.Submissions: void setContentView(int)>(2130903045);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r6 = virtualinvoke r0.<com.gluegadget.hndroid.Submissions: android.view.View findViewById(int)>(2131230732);
        $r7 = (android.widget.ListView) $r6;
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 628);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions: int newsListView$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(628);
        r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView> = $r7;
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 628);
        $r8 = r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9569, null, null);
        virtualinvoke r0.<com.gluegadget.hndroid.Submissions: void registerForContextMenu(android.view.View)>($r8);
        i0$sym = null;
        i0 = 2130903046;
        $r9 = new com.gluegadget.hndroid.NewsAdapter;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions: int news$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 648);
        $r10 = r0.<com.gluegadget.hndroid.Submissions: java.util.ArrayList news>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11527, null, null, i0$sym, null);
        specialinvoke $r9.<com.gluegadget.hndroid.NewsAdapter: void <init>(android.content.Context,int,java.util.List)>(r0, i0, $r10);
        _sym_tmp_5 = r0.<com.gluegadget.hndroid.Submissions: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 627);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions: int aa$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(627);
        r0.<com.gluegadget.hndroid.Submissions: com.gluegadget.hndroid.NewsAdapter aa> = $r9;
        _sym_tmp_6 = r0.<com.gluegadget.hndroid.Submissions: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 628);
        $r11 = r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        _sym_tmp_7 = r0.<com.gluegadget.hndroid.Submissions: int aa$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 627);
        $r12 = r0.<com.gluegadget.hndroid.Submissions: com.gluegadget.hndroid.NewsAdapter aa>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1387, null, null);
        virtualinvoke $r11.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r12);
        _sym_tmp_8 = r0.<com.gluegadget.hndroid.Submissions: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 628);
        $r13 = r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        _sym_tmp_9 = r0.<com.gluegadget.hndroid.Submissions: int clickListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 649);
        $r14 = r0.<com.gluegadget.hndroid.Submissions: android.widget.AdapterView$OnItemClickListener clickListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1385, null, null);
        virtualinvoke $r13.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1407, null);
        $r15 = virtualinvoke r0.<com.gluegadget.hndroid.Submissions: android.content.Intent getIntent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        r4 = virtualinvoke $r15.<android.content.Intent: android.os.Bundle getExtras()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r16 = virtualinvoke r0.<com.gluegadget.hndroid.Submissions: android.view.View findViewById(int)>(2131230734);
        r5 = (android.widget.TextView) $r16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r17 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("title");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r17);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9499, null, null, null, null);
        $r18 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", "Loading. Please wait...", 1);
        _sym_tmp_10 = r0.<com.gluegadget.hndroid.Submissions: int dialog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 623);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions: int dialog$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog> = $r18;
        $r19 = new java.lang.Thread;
        $r20 = new com.gluegadget.hndroid.Submissions$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21822, null, null, null);
        specialinvoke $r20.<com.gluegadget.hndroid.Submissions$1: void <init>(com.gluegadget.hndroid.Submissions,android.os.Bundle)>(r0, r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r19.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, $r13$sym, $i1$sym, $i0$sym, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        com.gluegadget.hndroid.Submissions r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;
        boolean[][] $r4;
        boolean[] r5;
        android.widget.AdapterView$AdapterContextMenuInfo r6;
        com.gluegadget.hndroid.News r7;
        android.view.MenuItem r8, r9, r10, r26;
        android.widget.ListView $r11;
        android.widget.ListAdapter $r12;
        java.lang.Object $r13;
        java.lang.String $r14, $r16, $r21, $r24, $r25;
        com.gluegadget.hndroid.Submissions$4 $r17;
        com.gluegadget.hndroid.Submissions$5 $r19;
        com.gluegadget.hndroid.Submissions$6 $r22;
        boolean $z0;
        com.gluegadget.hndroid.Submissions$7 $r27;

        r0 := @this: com.gluegadget.hndroid.Submissions;
        r1 := @parameter0: android.view.ContextMenu;
        r2 := @parameter1: android.view.View;
        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(6548, 32751, 4);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 647);
        $r4 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45654, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45654, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 2);
        r5 = $r4[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6548, null, null, null, null);
        specialinvoke r0.<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(r1, r2, r3);
        r6 = (android.widget.AdapterView$AdapterContextMenuInfo) r3;
        $i0$sym = null;
        $i0 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 30);
        if $i0 >= 30 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45655, 0);
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions: int newsListView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 628);
        $r11 = r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1388, null);
        $r12 = virtualinvoke $r11.<android.widget.ListView: android.widget.ListAdapter getAdapter()>();
        $i1$sym = null;
        $i1 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1327, null, $i1$sym);
        $r13 = interfaceinvoke $r12.<android.widget.ListAdapter: java.lang.Object getItem(int)>($i1);
        $r13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1327);
        r7 = (com.gluegadget.hndroid.News) $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10998, null);
        $r14 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1495, null, null);
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(450, null);
        $r16 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1220, null, null, null, null, null);
        r8 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 4, 0, $r16);
        $r17 = new com.gluegadget.hndroid.Submissions$4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21824, null, null);
        specialinvoke $r17.<com.gluegadget.hndroid.Submissions$4: void <init>(com.gluegadget.hndroid.Submissions)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r17);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r9 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 6, 0, 2131099660);
        $r19 = new com.gluegadget.hndroid.Submissions$5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null, null);
        specialinvoke $r19.<com.gluegadget.hndroid.Submissions$5: void <init>(com.gluegadget.hndroid.Submissions,com.gluegadget.hndroid.News)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r9.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r19);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21803, null);
        $r21 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 1);
        r5[1] = 1;
        _sym_tmp_4 = null;
        if $r21 == "" goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45656, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r10 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 3, 0, 2131099652);
        $r22 = new com.gluegadget.hndroid.Submissions$6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null, null);
        specialinvoke $r22.<com.gluegadget.hndroid.Submissions$6: void <init>(com.gluegadget.hndroid.Submissions,com.gluegadget.hndroid.News)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r10.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r22);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 2);
        r5[2] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45656, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions: int loginUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 650);
        $r24 = r0.<com.gluegadget.hndroid.Submissions: java.lang.String loginUrl>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke $r24.<java.lang.String: boolean contains(java.lang.CharSequence)>("submit");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 3);
        r5[3] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45657, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21746, null);
        $r25 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getUpVoteUrl()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 4);
        r5[4] = 1;
        _sym_tmp_4 = null;
        if $r25 == "" goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45658, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1221, null, null, null, null, null);
        r26 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 5, 0, 2131099659);
        $r27 = new com.gluegadget.hndroid.Submissions$7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null, null);
        specialinvoke $r27.<com.gluegadget.hndroid.Submissions$7: void <init>(com.gluegadget.hndroid.Submissions,com.gluegadget.hndroid.News)>(r0, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1427, null, null);
        interfaceinvoke r26.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r27);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 5);
        r5[5] = 1;
        goto label7;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45655, 1);
        goto label7;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45657, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45658, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 6);
        r5[6] = 1;
        return;
    }

    private void refreshNews(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $r90$sym, $r87$sym, $z0$sym, $r85$sym, $r81$sym, $i7$sym, $r72$sym, $i6$sym, $r68$sym, $r65$sym, $i5$sym, $r62$sym, $r59$sym, $r58$sym, $r57$sym, $i4$sym, $r53$sym, $r50$sym, $i3$sym, $r46$sym, $r44$sym, i2$sym, i1$sym, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        com.gluegadget.hndroid.Submissions r0;
        java.lang.String r1, r5, r9, r17, r18, r19, r20, r21, r22, r24, r25, $r42, $r47, $r48, $r49, $r54, $r55, $r56, $r63, $r69, $r73, $r74, $r77, $r78, $r82, $r86, $r91;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        org.apache.http.impl.client.DefaultHttpClient r6, $r37;
        org.apache.http.client.methods.HttpGet r7, $r38;
        org.apache.http.impl.client.BasicResponseHandler r8, $r43;
        org.htmlcleaner.HtmlCleaner r10, $r45;
        org.htmlcleaner.TagNode r11, r16, r23, r26, r28, r30, r31, r33, r34, $r70, r71, $r75;
        java.lang.Object[] r12, r13, r14, r15, r27, r29, r32, r76;
        java.lang.Throwable r35, $r101;
        java.util.ArrayList $r36, $r94;
        java.lang.StringBuilder $r39, $r40, $r41;
        java.lang.Object $r44, $r46, $r50, $r53, $r57, $r58, $r59, $r62, $r65, $r68, $r72, $r81, $r85, $r87, $r90;
        java.util.List $r51, $r60, $r66, $r79, $r83, $r88;
        java.util.Iterator $r52, $r61, $r67, $r80, $r84, $r89;
        boolean $z0;
        com.gluegadget.hndroid.News $r92, r93;
        java.net.MalformedURLException $r95, r96;
        java.io.IOException $r97, r98;
        org.htmlcleaner.XPatherException $r99, r100;

        r0 := @this: com.gluegadget.hndroid.Submissions;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21816, 32752, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 647);
        $r2 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45659, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45659, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];

     label2:
        _sym_tmp_2 = r0.<com.gluegadget.hndroid.Submissions: int news$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 648);
        $r36 = r0.<com.gluegadget.hndroid.Submissions: java.util.ArrayList news>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        virtualinvoke $r36.<java.util.ArrayList: void clear()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r4 = virtualinvoke r0.<com.gluegadget.hndroid.Submissions: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r37 = new org.apache.http.impl.client.DefaultHttpClient;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r37.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r6 = $r37;
        $r38 = new org.apache.http.client.methods.HttpGet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r38.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r1);
        r7 = $r38;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = null;
        if r5 == "" goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45660, 0);
        $r39 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15220, null, null, null);
        virtualinvoke r7.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r42);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45660, 1);
        goto label4;

     label4:
        $r43 = new org.apache.http.impl.client.BasicResponseHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r43.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r8 = $r43;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15331, null, null, null);
        $r44 = virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r7, r8);
        $r44$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(15331);
        r9 = (java.lang.String) $r44;
        $r45 = new org.htmlcleaner.HtmlCleaner;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r45.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r10 = $r45;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null);
        r11 = virtualinvoke r10.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r12 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@class=\'title\']/a");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r13 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@class=\'subtext\']");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r14 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'comhead\']");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r15 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'pagetop\']/a");
        $r46$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r15, 5);
        $r46 = r15[5];
        r16 = (org.htmlcleaner.TagNode) $r46;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r47 = virtualinvoke r16.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r48 = virtualinvoke $r47.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String trim()>();
        _sym_tmp_3 = r0.<com.gluegadget.hndroid.Submissions: int loginUrl$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 650);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.gluegadget.hndroid.Submissions: int loginUrl$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(650);
        r0.<com.gluegadget.hndroid.Submissions: java.lang.String loginUrl> = $r49;
        $i3$sym = null;
        $i3 = lengthof r12;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 0);
        if $i3 <= 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45661, 0);
        i0$sym = null;
        i0 = 0;
        i1$sym = null;
        i1 = lengthof r12;
        i2$sym = null;
        i2 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, i1$sym, i2, i1);
        if i2 >= i1 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45662, 0);
        r17 = "";
        r18 = "";
        r19 = "";
        r20 = "";
        r21 = "";
        r22 = "";
        $r50$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r12, i2);
        $r50 = r12[i2];
        r23 = (org.htmlcleaner.TagNode) $r50;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r51 = virtualinvoke r23.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r52 = interfaceinvoke $r51.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();
        $r53$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r54 = virtualinvoke $r53.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r24 = virtualinvoke $r54.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r55 = virtualinvoke r23.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r56 = virtualinvoke $r55.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r25 = virtualinvoke $r56.<java.lang.String: java.lang.String trim()>();
        $i4$sym = null;
        $i4 = lengthof r13;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, $i4$sym, i2, $i4);
        if i2 >= $i4 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45663, 0);
        $r57$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r13, i2);
        $r57 = r13[i2];
        r26 = (org.htmlcleaner.TagNode) $r57;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r27 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/span");
        $r58$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r27, 0);
        $r58 = r27[0];
        r28 = (org.htmlcleaner.TagNode) $r58;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r29 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/a");
        $r59$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r29, 0);
        $r59 = r29[0];
        r30 = (org.htmlcleaner.TagNode) $r59;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r60 = virtualinvoke r30.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r61 = interfaceinvoke $r60.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r62 = interfaceinvoke $r61.<java.util.Iterator: java.lang.Object next()>();
        $r62$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r63 = virtualinvoke $r62.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        virtualinvoke $r63.<java.lang.String: java.lang.String trim()>();
        $i5$sym = null;
        $i5 = lengthof r29;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 2);
        if $i5 != 2 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45664, 0);
        $r65$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r29, 1);
        $r65 = r29[1];
        r31 = (org.htmlcleaner.TagNode) $r65;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r66 = virtualinvoke r31.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r67 = interfaceinvoke $r66.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r68 = interfaceinvoke $r67.<java.util.Iterator: java.lang.Object next()>();
        $r68$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r69 = virtualinvoke $r68.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r19 = virtualinvoke $r69.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45664, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r70 = virtualinvoke r23.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r71 = virtualinvoke $r70.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r32 = virtualinvoke r71.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td/center/a[1]");
        $i6$sym = null;
        $i6 = lengthof r32;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 0);
        if $i6 <= 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45665, 0);
        $r72$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r32, 0);
        $r72 = r32[0];
        r33 = (org.htmlcleaner.TagNode) $r72;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r73 = virtualinvoke r33.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r74 = virtualinvoke $r73.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r22 = virtualinvoke $r74.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45665, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r75 = virtualinvoke r30.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r76 = virtualinvoke $r75.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/a");
        $i7$sym = null;
        $i7 = lengthof r76;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, null, $i7, 2);
        if $i7 != 2 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45666, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r77 = virtualinvoke r28.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("id");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r78 = virtualinvoke $r77.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r21 = virtualinvoke $r78.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45666, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r79 = virtualinvoke r28.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r80 = interfaceinvoke $r79.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r81 = interfaceinvoke $r80.<java.util.Iterator: java.lang.Object next()>();
        $r81$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r82 = virtualinvoke $r81.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r17 = virtualinvoke $r82.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r83 = virtualinvoke r30.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r84 = interfaceinvoke $r83.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r85 = interfaceinvoke $r84.<java.util.Iterator: java.lang.Object next()>();
        $r85$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r86 = virtualinvoke $r85.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r18 = virtualinvoke $r86.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>("http");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 12);
        r3[12] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45667, 0);
        $r87$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r14, i0);
        $r87 = r14[i0];
        r34 = (org.htmlcleaner.TagNode) $r87;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r88 = virtualinvoke r34.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r89 = interfaceinvoke $r88.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r90 = interfaceinvoke $r89.<java.util.Iterator: java.lang.Object next()>();
        $r90$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r91 = virtualinvoke $r90.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r20 = virtualinvoke $r91.<java.lang.String: java.lang.String trim()>();
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 13);
        r3[13] = 1;
        goto label14;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45663, 1);
        goto label14;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45667, 1);
        goto label14;

     label14:
        $r92 = new com.gluegadget.hndroid.News;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21818, null, null, null, null, null, null, null, null, null);
        specialinvoke $r92.<com.gluegadget.hndroid.News: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r24, r17, r19, r18, r20, r25, r21, r22);
        r93 = $r92;
        _sym_tmp_4 = r0.<com.gluegadget.hndroid.Submissions: int news$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 648);
        $r94 = r0.<com.gluegadget.hndroid.Submissions: java.util.ArrayList news>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke $r94.<java.util.ArrayList: boolean add(java.lang.Object)>(r93);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 14);
        r3[14] = 1;
        goto label5;

        goto label17;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45661, 1);
        goto label17;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45662, 1);
        goto label17;

     label17:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 15);
        r3[15] = 1;

     label18:
        goto label31;

     label19:
        $r95 := @caughtexception;

     label20:
        r96 = $r95;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r96.<java.net.MalformedURLException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 16);
        r3[16] = 1;

     label21:
        goto label31;

     label22:
        $r97 := @caughtexception;

     label23:
        r98 = $r97;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r98.<java.io.IOException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 17);
        r3[17] = 1;

     label24:
        goto label31;

     label25:
        $r99 := @caughtexception;

     label26:
        r100 = $r99;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(143, null);
        virtualinvoke r100.<org.htmlcleaner.XPatherException: void printStackTrace()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 18);
        r3[18] = 1;

     label27:
        goto label31;

     label28:
        $r101 := @caughtexception;

     label29:
        r35 = $r101;

     label30:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 19);
        r3[19] = 1;
        throw r35;

     label31:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 20);
        r3[20] = 1;
        return;

        catch java.net.MalformedURLException from label2 to label18 with label19;
        catch java.io.IOException from label2 to label18 with label22;
        catch org.htmlcleaner.XPatherException from label2 to label18 with label25;
        catch java.lang.Throwable from label2 to label18 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    static void access$000(com.gluegadget.hndroid.Submissions, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.gluegadget.hndroid.Submissions r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: com.gluegadget.hndroid.Submissions;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21823, 32753, 2);
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 647);
        $r2 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45668, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45668, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 4);
        r3 = $r2[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21816, null, null);
        specialinvoke r0.<com.gluegadget.hndroid.Submissions: void refreshNews(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32754, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32755, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.gluegadget.hndroid.Submissions: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 647);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.gluegadget.hndroid.Submissions: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(647);
        <com.gluegadget.hndroid.Submissions: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[21];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions", -6259202371077174736L);
        return $r0;
    }
}
public interface  org.htmlcleaner.BaseToken extends java.lang.Object
{

    public abstract void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException;
}
public class org.htmlcleaner.BrowserCompactXmlSerializer extends org.htmlcleaner.XmlSerializer
{

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.BrowserCompactXmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.BrowserCompactXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 32756, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke r0.<org.htmlcleaner.XmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z13$sym, $z12$sym, $z11$sym, $r11$sym, $z10$sym, $i6$sym, $z9$sym, $z8$sym, $z7$sym, $c5$sym, $i4$sym, $i3$sym, $i2$sym, $z6$sym, $z5$sym, $c1$sym, $i0$sym, $z4$sym, $z3$sym, $z2$sym, z1$sym, z0$sym, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.BrowserCompactXmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.util.List r3;
        java.util.ListIterator r4;
        java.lang.Object r5, $r11;
        java.lang.String r6, $r7, $r8, $r9, r10, $r14, r15;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        int $i0, $i2, $i3, $i4, $i6;
        char $c1, $c5;
        org.htmlcleaner.CommentNode $r13;
        org.htmlcleaner.BaseToken $r16;

        r0 := @this: org.htmlcleaner.BrowserCompactXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21838, 32757, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21829, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21830, null, null);
        $z2 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21830);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45669, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11442, null);
        r4 = interfaceinvoke r3.<java.util.List: java.util.ListIterator listIterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z3 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45670, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z4$sym = null;
        $z4 = r5 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45671, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r6.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45672, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, null);
        $c1 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);
        $c1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(462, $c1$sym);
        $z5 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(462);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45673, 0);
        $z6$sym = null;
        $z6 = 1;
        goto label4;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45672, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45673, 1);
        goto label3;

     label3:
        $z6$sym = null;
        $z6 = 0;

     label4:
        z0$sym = $z6$sym;
        z0 = $z6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r6.<java.lang.String: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        if $i2 <= 1 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45674, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i3 = virtualinvoke r6.<java.lang.String: int length()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 1);
        $i4 = $i3 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i4$sym);
        $c5 = virtualinvoke r6.<java.lang.String: char charAt(int)>($i4);
        $c5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(462, $c5$sym);
        $z7 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(462);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45675, 0);
        $z8$sym = null;
        $z8 = 1;
        goto label8;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45674, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45675, 1);
        goto label7;

     label7:
        $z8$sym = null;
        $z8 = 0;

     label8:
        z1$sym = $z8$sym;
        z1 = $z8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21831, null, null);
        $z9 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21831);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45676, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r7 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("]]>", "]]&gt;");
        goto label11;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45676, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r9 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21832, null, null);
        $r8 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: java.lang.String escapeXml(java.lang.String)>($r9);

     label11:
        r10 = $r8;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45677, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(192, null, null);
        virtualinvoke r2.<java.io.Writer: void write(int)>(32);
        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45677, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i6 = virtualinvoke r10.<java.lang.String: int length()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 0);
        if $i6 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45678, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r10);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45679, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(192, null, null);
        virtualinvoke r2.<java.io.Writer: void write(int)>(32);
        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45678, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45679, 1);
        goto label16;

     label16:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z10 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45680, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r11 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21833, $r11$sym);
        $z11 = staticinvoke <org.htmlcleaner.Utils: boolean isWhitespaceString(java.lang.Object)>($r11);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21833);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 != 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45681, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45681, 1);
        goto label18;

     label18:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        interfaceinvoke r4.<java.util.ListIterator: java.lang.Object previous()>();
        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45680, 1);
        goto label20;

     label20:
        goto label26;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45671, 1);
        goto label22;

     label22:
        $z12$sym = null;
        $z12 = r5 instanceof org.htmlcleaner.CommentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45682, 0);
        $r13 = (org.htmlcleaner.CommentNode) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        $r14 = virtualinvoke $r13.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r15);
        goto label26;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45682, 1);
        goto label24;

     label24:
        $z13$sym = null;
        $z13 = r5 instanceof org.htmlcleaner.BaseToken;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45683, 0);
        $r16 = (org.htmlcleaner.BaseToken) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21836, null, null, null);
        interfaceinvoke $r16.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);
        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45683, 1);
        goto label26;

     label26:
        goto label0;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45670, 1);
        goto label28;

     label28:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21837, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45669, 1);
        goto label30;

     label30:
        return;
    }
}
public class org.htmlcleaner.CleanerProperties extends java.lang.Object
{
    public static final java.lang.String BOOL_ATT_SELF;
    public static final java.lang.String BOOL_ATT_EMPTY;
    public static final java.lang.String BOOL_ATT_TRUE;
    org.htmlcleaner.ITagInfoProvider tagInfoProvider;
    boolean advancedXmlEscape;
    boolean transResCharsToNCR;
    boolean useCdataForScriptAndStyle;
    boolean translateSpecialEntities;
    boolean transSpecialEntitiesToNCR;
    boolean recognizeUnicodeChars;
    boolean omitUnknownTags;
    boolean treatUnknownTagsAsContent;
    boolean omitDeprecatedTags;
    boolean treatDeprecatedTagsAsContent;
    boolean omitComments;
    boolean omitXmlDeclaration;
    boolean omitDoctypeDeclaration;
    boolean omitHtmlEnvelope;
    boolean useEmptyElementTags;
    boolean allowMultiWordAttributes;
    boolean allowHtmlInsideAttributes;
    boolean ignoreQuestAndExclam;
    boolean namespacesAware;
    java.lang.String hyphenReplacementInComment;
    java.lang.String pruneTags;
    java.lang.String booleanAttributeValues;
    public static final int BOOL_ATT_SELF$a3tid;
    public static final int BOOL_ATT_EMPTY$a3tid;
    public static final int BOOL_ATT_TRUE$a3tid;
    int tagInfoProvider$a3tid;
    acteve.symbolic.integer.Expression advancedXmlEscape$sym;
    int advancedXmlEscape$a3tid;
    acteve.symbolic.integer.Expression transResCharsToNCR$sym;
    int transResCharsToNCR$a3tid;
    acteve.symbolic.integer.Expression useCdataForScriptAndStyle$sym;
    int useCdataForScriptAndStyle$a3tid;
    acteve.symbolic.integer.Expression translateSpecialEntities$sym;
    int translateSpecialEntities$a3tid;
    acteve.symbolic.integer.Expression transSpecialEntitiesToNCR$sym;
    int transSpecialEntitiesToNCR$a3tid;
    acteve.symbolic.integer.Expression recognizeUnicodeChars$sym;
    int recognizeUnicodeChars$a3tid;
    acteve.symbolic.integer.Expression omitUnknownTags$sym;
    int omitUnknownTags$a3tid;
    acteve.symbolic.integer.Expression treatUnknownTagsAsContent$sym;
    int treatUnknownTagsAsContent$a3tid;
    acteve.symbolic.integer.Expression omitDeprecatedTags$sym;
    int omitDeprecatedTags$a3tid;
    acteve.symbolic.integer.Expression treatDeprecatedTagsAsContent$sym;
    int treatDeprecatedTagsAsContent$a3tid;
    acteve.symbolic.integer.Expression omitComments$sym;
    int omitComments$a3tid;
    acteve.symbolic.integer.Expression omitXmlDeclaration$sym;
    int omitXmlDeclaration$a3tid;
    acteve.symbolic.integer.Expression omitDoctypeDeclaration$sym;
    int omitDoctypeDeclaration$a3tid;
    acteve.symbolic.integer.Expression omitHtmlEnvelope$sym;
    int omitHtmlEnvelope$a3tid;
    acteve.symbolic.integer.Expression useEmptyElementTags$sym;
    int useEmptyElementTags$a3tid;
    acteve.symbolic.integer.Expression allowMultiWordAttributes$sym;
    int allowMultiWordAttributes$a3tid;
    acteve.symbolic.integer.Expression allowHtmlInsideAttributes$sym;
    int allowHtmlInsideAttributes$a3tid;
    acteve.symbolic.integer.Expression ignoreQuestAndExclam$sym;
    int ignoreQuestAndExclam$a3tid;
    acteve.symbolic.integer.Expression namespacesAware$sym;
    int namespacesAware$a3tid;
    int hyphenReplacementInComment$a3tid;
    int pruneTags$a3tid;
    int booleanAttributeValues$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.CleanerProperties r0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32758, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 651);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int tagInfoProvider$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(651);
        r0.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider tagInfoProvider> = null;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression advancedXmlEscape$sym> = null;
        _sym_tmp_2 = r0.<org.htmlcleaner.CleanerProperties: int advancedXmlEscape$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 652);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int advancedXmlEscape$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(652);
        r0.<org.htmlcleaner.CleanerProperties: boolean advancedXmlEscape> = 1;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym> = null;
        _sym_tmp_3 = r0.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 653);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(653);
        r0.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression useCdataForScriptAndStyle$sym> = null;
        _sym_tmp_4 = r0.<org.htmlcleaner.CleanerProperties: int useCdataForScriptAndStyle$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 654);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int useCdataForScriptAndStyle$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(654);
        r0.<org.htmlcleaner.CleanerProperties: boolean useCdataForScriptAndStyle> = 1;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression translateSpecialEntities$sym> = null;
        _sym_tmp_5 = r0.<org.htmlcleaner.CleanerProperties: int translateSpecialEntities$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 655);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int translateSpecialEntities$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(655);
        r0.<org.htmlcleaner.CleanerProperties: boolean translateSpecialEntities> = 1;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transSpecialEntitiesToNCR$sym> = null;
        _sym_tmp_6 = r0.<org.htmlcleaner.CleanerProperties: int transSpecialEntitiesToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 656);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int transSpecialEntitiesToNCR$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(656);
        r0.<org.htmlcleaner.CleanerProperties: boolean transSpecialEntitiesToNCR> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression recognizeUnicodeChars$sym> = null;
        _sym_tmp_7 = r0.<org.htmlcleaner.CleanerProperties: int recognizeUnicodeChars$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 657);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int recognizeUnicodeChars$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(657);
        r0.<org.htmlcleaner.CleanerProperties: boolean recognizeUnicodeChars> = 1;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitUnknownTags$sym> = null;
        _sym_tmp_8 = r0.<org.htmlcleaner.CleanerProperties: int omitUnknownTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 658);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitUnknownTags$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(658);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression treatUnknownTagsAsContent$sym> = null;
        _sym_tmp_9 = r0.<org.htmlcleaner.CleanerProperties: int treatUnknownTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 659);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int treatUnknownTagsAsContent$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(659);
        r0.<org.htmlcleaner.CleanerProperties: boolean treatUnknownTagsAsContent> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitDeprecatedTags$sym> = null;
        _sym_tmp_10 = r0.<org.htmlcleaner.CleanerProperties: int omitDeprecatedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 660);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitDeprecatedTags$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(660);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression treatDeprecatedTagsAsContent$sym> = null;
        _sym_tmp_11 = r0.<org.htmlcleaner.CleanerProperties: int treatDeprecatedTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 661);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int treatDeprecatedTagsAsContent$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(661);
        r0.<org.htmlcleaner.CleanerProperties: boolean treatDeprecatedTagsAsContent> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitComments$sym> = null;
        _sym_tmp_12 = r0.<org.htmlcleaner.CleanerProperties: int omitComments$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 662);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitComments$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(662);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitComments> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitXmlDeclaration$sym> = null;
        _sym_tmp_13 = r0.<org.htmlcleaner.CleanerProperties: int omitXmlDeclaration$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 663);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitXmlDeclaration$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(663);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitXmlDeclaration> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitDoctypeDeclaration$sym> = null;
        _sym_tmp_14 = r0.<org.htmlcleaner.CleanerProperties: int omitDoctypeDeclaration$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_14, 664);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitDoctypeDeclaration$a3tid> = _sym_tmp_14;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(664);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitDoctypeDeclaration> = 1;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitHtmlEnvelope$sym> = null;
        _sym_tmp_15 = r0.<org.htmlcleaner.CleanerProperties: int omitHtmlEnvelope$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_15, 665);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitHtmlEnvelope$a3tid> = _sym_tmp_15;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(665);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitHtmlEnvelope> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression useEmptyElementTags$sym> = null;
        _sym_tmp_16 = r0.<org.htmlcleaner.CleanerProperties: int useEmptyElementTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_16, 666);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int useEmptyElementTags$a3tid> = _sym_tmp_16;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(666);
        r0.<org.htmlcleaner.CleanerProperties: boolean useEmptyElementTags> = 1;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression allowMultiWordAttributes$sym> = null;
        _sym_tmp_17 = r0.<org.htmlcleaner.CleanerProperties: int allowMultiWordAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_17, 667);
        _sym_tmp_17 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int allowMultiWordAttributes$a3tid> = _sym_tmp_17;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(667);
        r0.<org.htmlcleaner.CleanerProperties: boolean allowMultiWordAttributes> = 1;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression allowHtmlInsideAttributes$sym> = null;
        _sym_tmp_18 = r0.<org.htmlcleaner.CleanerProperties: int allowHtmlInsideAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_18, 668);
        _sym_tmp_18 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int allowHtmlInsideAttributes$a3tid> = _sym_tmp_18;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(668);
        r0.<org.htmlcleaner.CleanerProperties: boolean allowHtmlInsideAttributes> = 0;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression ignoreQuestAndExclam$sym> = null;
        _sym_tmp_19 = r0.<org.htmlcleaner.CleanerProperties: int ignoreQuestAndExclam$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_19, 669);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int ignoreQuestAndExclam$a3tid> = _sym_tmp_19;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(669);
        r0.<org.htmlcleaner.CleanerProperties: boolean ignoreQuestAndExclam> = 1;
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression namespacesAware$sym> = null;
        _sym_tmp_20 = r0.<org.htmlcleaner.CleanerProperties: int namespacesAware$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_20, 670);
        _sym_tmp_20 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int namespacesAware$a3tid> = _sym_tmp_20;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(670);
        r0.<org.htmlcleaner.CleanerProperties: boolean namespacesAware> = 1;
        _sym_tmp_21 = r0.<org.htmlcleaner.CleanerProperties: int hyphenReplacementInComment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_21, 671);
        _sym_tmp_21 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int hyphenReplacementInComment$a3tid> = _sym_tmp_21;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(671);
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String hyphenReplacementInComment> = "=";
        _sym_tmp_22 = r0.<org.htmlcleaner.CleanerProperties: int pruneTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_22, 672);
        _sym_tmp_22 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int pruneTags$a3tid> = _sym_tmp_22;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(672);
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String pruneTags> = null;
        _sym_tmp_23 = r0.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_23, 673);
        _sym_tmp_23 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid> = _sym_tmp_23;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(673);
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues> = "self";
        return;
    }

    public org.htmlcleaner.ITagInfoProvider getTagInfoProvider()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerProperties r0;
        org.htmlcleaner.ITagInfoProvider $r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21839, 32759, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 651);
        $r1 = r0.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        return $r1;
    }

    public boolean isAdvancedXmlEscape()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21840, 32760, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression advancedXmlEscape$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int advancedXmlEscape$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 652);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean advancedXmlEscape>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21840, $z0$sym);
        return $z0;
    }

    public void setAdvancedXmlEscape(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21841, 32761, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression advancedXmlEscape$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int advancedXmlEscape$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 652);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int advancedXmlEscape$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(652);
        r0.<org.htmlcleaner.CleanerProperties: boolean advancedXmlEscape> = z0;
        return;
    }

    public boolean isTransResCharsToNCR()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21842, 32762, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 653);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21842, $z0$sym);
        return $z0;
    }

    public void setTransResCharsToNCR(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21843, 32763, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 653);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(653);
        r0.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR> = z0;
        return;
    }

    public boolean isUseCdataForScriptAndStyle()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21844, 32764, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression useCdataForScriptAndStyle$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int useCdataForScriptAndStyle$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 654);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean useCdataForScriptAndStyle>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21844, $z0$sym);
        return $z0;
    }

    public void setUseCdataForScriptAndStyle(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21845, 32765, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression useCdataForScriptAndStyle$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int useCdataForScriptAndStyle$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 654);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int useCdataForScriptAndStyle$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(654);
        r0.<org.htmlcleaner.CleanerProperties: boolean useCdataForScriptAndStyle> = z0;
        return;
    }

    public boolean isTranslateSpecialEntities()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21846, 32766, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression translateSpecialEntities$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int translateSpecialEntities$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 655);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean translateSpecialEntities>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21846, $z0$sym);
        return $z0;
    }

    public void setTranslateSpecialEntities(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21847, 32767, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression translateSpecialEntities$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int translateSpecialEntities$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 655);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int translateSpecialEntities$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(655);
        r0.<org.htmlcleaner.CleanerProperties: boolean translateSpecialEntities> = z0;
        return;
    }

    public boolean isTransSpecialEntitiesToNCR()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21848, 32768, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transSpecialEntitiesToNCR$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int transSpecialEntitiesToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 656);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean transSpecialEntitiesToNCR>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21848, $z0$sym);
        return $z0;
    }

    public void setTransSpecialEntitiesToNCR(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21849, 32769, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transSpecialEntitiesToNCR$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int transSpecialEntitiesToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 656);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int transSpecialEntitiesToNCR$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(656);
        r0.<org.htmlcleaner.CleanerProperties: boolean transSpecialEntitiesToNCR> = z0;
        return;
    }

    public boolean isRecognizeUnicodeChars()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21850, 32770, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression recognizeUnicodeChars$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int recognizeUnicodeChars$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 657);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean recognizeUnicodeChars>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21850, $z0$sym);
        return $z0;
    }

    public void setRecognizeUnicodeChars(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21851, 32771, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression recognizeUnicodeChars$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int recognizeUnicodeChars$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 657);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int recognizeUnicodeChars$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(657);
        r0.<org.htmlcleaner.CleanerProperties: boolean recognizeUnicodeChars> = z0;
        return;
    }

    public boolean isOmitUnknownTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21852, 32772, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitUnknownTags$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitUnknownTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 658);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21852, $z0$sym);
        return $z0;
    }

    public void setOmitUnknownTags(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21853, 32773, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitUnknownTags$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitUnknownTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 658);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitUnknownTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(658);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags> = z0;
        return;
    }

    public boolean isTreatUnknownTagsAsContent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21854, 32774, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression treatUnknownTagsAsContent$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int treatUnknownTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 659);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean treatUnknownTagsAsContent>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21854, $z0$sym);
        return $z0;
    }

    public void setTreatUnknownTagsAsContent(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21855, 32775, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression treatUnknownTagsAsContent$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int treatUnknownTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 659);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int treatUnknownTagsAsContent$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(659);
        r0.<org.htmlcleaner.CleanerProperties: boolean treatUnknownTagsAsContent> = z0;
        return;
    }

    public boolean isOmitDeprecatedTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21856, 32776, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitDeprecatedTags$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitDeprecatedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 660);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21856, $z0$sym);
        return $z0;
    }

    public void setOmitDeprecatedTags(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21857, 32777, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitDeprecatedTags$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitDeprecatedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 660);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitDeprecatedTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(660);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags> = z0;
        return;
    }

    public boolean isTreatDeprecatedTagsAsContent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21858, 32778, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression treatDeprecatedTagsAsContent$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int treatDeprecatedTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 661);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean treatDeprecatedTagsAsContent>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21858, $z0$sym);
        return $z0;
    }

    public void setTreatDeprecatedTagsAsContent(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21859, 32779, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression treatDeprecatedTagsAsContent$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int treatDeprecatedTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 661);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int treatDeprecatedTagsAsContent$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(661);
        r0.<org.htmlcleaner.CleanerProperties: boolean treatDeprecatedTagsAsContent> = z0;
        return;
    }

    public boolean isOmitComments()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21860, 32780, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitComments$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitComments$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 662);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitComments>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21860, $z0$sym);
        return $z0;
    }

    public void setOmitComments(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21861, 32781, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitComments$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitComments$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 662);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitComments$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(662);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitComments> = z0;
        return;
    }

    public boolean isOmitXmlDeclaration()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21862, 32782, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitXmlDeclaration$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitXmlDeclaration$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 663);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitXmlDeclaration>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21862, $z0$sym);
        return $z0;
    }

    public void setOmitXmlDeclaration(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21863, 32783, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitXmlDeclaration$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitXmlDeclaration$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 663);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitXmlDeclaration$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(663);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitXmlDeclaration> = z0;
        return;
    }

    public boolean isOmitDoctypeDeclaration()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21864, 32784, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitDoctypeDeclaration$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitDoctypeDeclaration$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 664);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitDoctypeDeclaration>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21864, $z0$sym);
        return $z0;
    }

    public void setOmitDoctypeDeclaration(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21865, 32785, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitDoctypeDeclaration$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitDoctypeDeclaration$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 664);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitDoctypeDeclaration$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(664);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitDoctypeDeclaration> = z0;
        return;
    }

    public boolean isOmitHtmlEnvelope()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21866, 32786, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitHtmlEnvelope$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitHtmlEnvelope$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 665);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitHtmlEnvelope>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21866, $z0$sym);
        return $z0;
    }

    public void setOmitHtmlEnvelope(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21867, 32787, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitHtmlEnvelope$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int omitHtmlEnvelope$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 665);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int omitHtmlEnvelope$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(665);
        r0.<org.htmlcleaner.CleanerProperties: boolean omitHtmlEnvelope> = z0;
        return;
    }

    public boolean isUseEmptyElementTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21868, 32788, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression useEmptyElementTags$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int useEmptyElementTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 666);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean useEmptyElementTags>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21868, $z0$sym);
        return $z0;
    }

    public void setUseEmptyElementTags(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21869, 32789, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression useEmptyElementTags$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int useEmptyElementTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 666);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int useEmptyElementTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(666);
        r0.<org.htmlcleaner.CleanerProperties: boolean useEmptyElementTags> = z0;
        return;
    }

    public boolean isAllowMultiWordAttributes()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21870, 32790, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression allowMultiWordAttributes$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int allowMultiWordAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 667);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean allowMultiWordAttributes>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21870, $z0$sym);
        return $z0;
    }

    public void setAllowMultiWordAttributes(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21871, 32791, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression allowMultiWordAttributes$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int allowMultiWordAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 667);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int allowMultiWordAttributes$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(667);
        r0.<org.htmlcleaner.CleanerProperties: boolean allowMultiWordAttributes> = z0;
        return;
    }

    public boolean isAllowHtmlInsideAttributes()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21872, 32792, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression allowHtmlInsideAttributes$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int allowHtmlInsideAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 668);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean allowHtmlInsideAttributes>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21872, $z0$sym);
        return $z0;
    }

    public void setAllowHtmlInsideAttributes(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21873, 32793, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression allowHtmlInsideAttributes$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int allowHtmlInsideAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 668);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int allowHtmlInsideAttributes$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(668);
        r0.<org.htmlcleaner.CleanerProperties: boolean allowHtmlInsideAttributes> = z0;
        return;
    }

    public boolean isIgnoreQuestAndExclam()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21874, 32794, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression ignoreQuestAndExclam$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int ignoreQuestAndExclam$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 669);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean ignoreQuestAndExclam>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21874, $z0$sym);
        return $z0;
    }

    public void setIgnoreQuestAndExclam(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21875, 32795, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression ignoreQuestAndExclam$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int ignoreQuestAndExclam$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 669);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int ignoreQuestAndExclam$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(669);
        r0.<org.htmlcleaner.CleanerProperties: boolean ignoreQuestAndExclam> = z0;
        return;
    }

    public boolean isNamespacesAware()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21876, 32796, 1);
        $z0$sym = r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression namespacesAware$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int namespacesAware$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 670);
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean namespacesAware>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21876, $z0$sym);
        return $z0;
    }

    public void setNamespacesAware(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21877, 32797, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression namespacesAware$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int namespacesAware$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 670);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int namespacesAware$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(670);
        r0.<org.htmlcleaner.CleanerProperties: boolean namespacesAware> = z0;
        return;
    }

    public java.lang.String getHyphenReplacementInComment()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21878, 32798, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int hyphenReplacementInComment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 671);
        $r1 = r0.<org.htmlcleaner.CleanerProperties: java.lang.String hyphenReplacementInComment>;
        return $r1;
    }

    public void setHyphenReplacementInComment(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21879, 32799, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int hyphenReplacementInComment$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 671);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int hyphenReplacementInComment$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(671);
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String hyphenReplacementInComment> = r1;
        return;
    }

    public java.lang.String getPruneTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21880, 32800, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int pruneTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 672);
        $r1 = r0.<org.htmlcleaner.CleanerProperties: java.lang.String pruneTags>;
        return $r1;
    }

    public void setPruneTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21881, 32801, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int pruneTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 672);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int pruneTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(672);
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String pruneTags> = r1;
        return;
    }

    public java.lang.String getBooleanAttributeValues()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21882, 32802, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 673);
        $r1 = r0.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues>;
        return $r1;
    }

    public void setBooleanAttributeValues(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21883, 32803, 2);
        $r2 = "self";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45684, 0);
        $r3 = "empty";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45685, 0);
        $r4 = "true";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45686, 0);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45684, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45685, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 673);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(673);
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues> = $r5;
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45686, 1);
        goto label4;

     label4:
        _sym_tmp_2 = r0.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 673);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(673);
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues> = "self";

     label5:
        return;
    }
}
public class org.htmlcleaner.CleanerTransformations extends java.lang.Object
{
    private java.util.Map mappings;
    private int mappings$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerTransformations r0;
        java.util.HashMap $r1;

        r0 := @this: org.htmlcleaner.CleanerTransformations;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32804, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.HashMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerTransformations: int mappings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 674);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CleanerTransformations: int mappings$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(674);
        r0.<org.htmlcleaner.CleanerTransformations: java.util.Map mappings> = $r1;
        return;
    }

    public void addTransformation(org.htmlcleaner.TagTransformation)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerTransformations r0;
        org.htmlcleaner.TagTransformation r1;
        java.util.Map $r2;
        java.lang.String $r3;

        r0 := @this: org.htmlcleaner.CleanerTransformations;
        r1 := @parameter0: org.htmlcleaner.TagTransformation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21885, 32805, 2);
        _sym_tmp_2 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45687, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerTransformations: int mappings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 674);
        $r2 = r0.<org.htmlcleaner.CleanerTransformations: java.util.Map mappings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21884, null);
        $r3 = virtualinvoke r1.<org.htmlcleaner.TagTransformation: java.lang.String getSourceTag()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45687, 1);
        goto label1;

     label1:
        return;
    }

    public boolean hasTransformationForTag(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerTransformations r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.CleanerTransformations;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21886, 32806, 2);
        _sym_tmp_2 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45688, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerTransformations: int mappings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 674);
        $r2 = r0.<org.htmlcleaner.CleanerTransformations: java.util.Map mappings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(496, null, null);
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(496);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45689, 0);
        $z1$sym = null;
        $z1 = 1;
        goto label3;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45688, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45689, 1);
        goto label2;

     label2:
        $z1$sym = null;
        $z1 = 0;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21886, $z1$sym);
        return $z1;
    }

    public org.htmlcleaner.TagTransformation getTransformation(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CleanerTransformations r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        java.lang.Object $r4;
        org.htmlcleaner.TagTransformation $r5;

        r0 := @this: org.htmlcleaner.CleanerTransformations;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21887, 32807, 2);
        _sym_tmp_2 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45690, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.CleanerTransformations: int mappings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 674);
        $r2 = r0.<org.htmlcleaner.CleanerTransformations: java.util.Map mappings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);
        $r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        $r5 = (org.htmlcleaner.TagTransformation) $r4;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45690, 1);
        goto label1;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }
}
public class org.htmlcleaner.CommandLine extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.CommandLine r0;

        r0 := @this: org.htmlcleaner.CommandLine;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32808, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static java.lang.String getArgValue(java.lang.String[], java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym, $i3$sym, $i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String[] r0;
        java.lang.String r1, r2, r3, r4, $r5, $r6, $r7, $r8;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21888, 32809, 2);
        i0$sym = null;
        i0 = 0;

     label0:
        $i2$sym = null;
        $i2 = lengthof r0;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        if i0 >= $i2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45691, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r0, i0);
        r2 = r0[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(61);
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 < 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45692, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, i1$sym);
        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r3 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i3 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i3$sym);
        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r4 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>($r8);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45693, 0);
        return r4;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45692, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45693, 1);
        goto label3;

     label3:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45691, 1);
        goto label5;

     label5:
        return "";
    }

    private static boolean toBoolean(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21889, 32810, 1);
        _sym_tmp_1 = null;
        if r0 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45694, 0);
        $r1 = "on";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45695, 0);
        $r2 = "true";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45696, 0);
        $r3 = "yes";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45697, 0);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45695, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45696, 1);
        goto label2;

     label2:
        $z3$sym = null;
        $z3 = 1;
        goto label6;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45694, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45697, 1);
        goto label5;

     label5:
        $z3$sym = null;
        $z3 = 0;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21889, $z3$sym);
        return $z3;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.htmlcleaner.XPatherException
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $l10$sym, $l9$sym, $z58$sym, $z57$sym, $z56$sym, $z55$sym, $z54$sym, $z53$sym, $z52$sym, $i8$sym, $r118$sym, $z51$sym, $r117$sym, $i7$sym, $z50$sym, $z49$sym, $z48$sym, l6$sym, $r109$sym, $r107$sym, $r105$sym, $z47$sym, $i5$sym, $i4$sym, $z46$sym, $i3$sym, $z45$sym, $z44$sym, $z43$sym, $z42$sym, $z41$sym, $z40$sym, $z39$sym, $z38$sym, $z37$sym, $z36$sym, $z35$sym, $z34$sym, $z33$sym, $z32$sym, $z31$sym, $z30$sym, $z29$sym, $z28$sym, $z27$sym, $z26$sym, $z25$sym, $z24$sym, $z23$sym, $z22$sym, $z21$sym, $z20$sym, $z19$sym, $z18$sym, $z17$sym, $z16$sym, $z15$sym, $z14$sym, $z13$sym, $z12$sym, $z11$sym, $z10$sym, $z9$sym, $z8$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, i2$sym, i1$sym, i0$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, i1, i2, $i3, $i4, $i5, $i7, $i8;
        java.lang.String[] r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r35, r36, r37, $r38, $r68, $r69, $r70, $r71, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, r97, $r98, $r99, r108, r110, r111, $r115, $r121, $r122, $r125, $r127, $r129, $r131, $r133, $r135, $r143;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58;
        org.htmlcleaner.ConfigFileTagProvider $r30;
        java.io.File $r31, $r114;
        org.htmlcleaner.HtmlCleaner r32, $r72, $r73;
        org.htmlcleaner.CleanerProperties r33;
        java.util.TreeMap r34, $r96;
        java.io.PrintStream $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r119, $r120, $r138;
        org.htmlcleaner.CleanerTransformations $r101, r102;
        java.util.Set $r103;
        java.util.Iterator r104;
        java.lang.Object $r105, $r107, $r109, $r117, $r118;
        java.util.Map$Entry r106;
        long l6, $l9, $l10;
        java.net.URL $r112;
        org.htmlcleaner.TagNode r113;
        java.lang.Object[] r116;
        java.io.OutputStream r123;
        java.io.FileOutputStream $r124;
        org.htmlcleaner.CompactXmlSerializer $r126;
        org.htmlcleaner.BrowserCompactXmlSerializer $r128;
        org.htmlcleaner.PrettyXmlSerializer $r130;
        org.htmlcleaner.SimpleHtmlSerializer $r132;
        org.htmlcleaner.CompactHtmlSerializer $r134;
        org.htmlcleaner.PrettyHtmlSerializer $r136;
        org.htmlcleaner.SimpleXmlSerializer $r137;
        java.lang.StringBuilder $r139, $r140, $r141, $r142;

        r0 := @parameter0: java.lang.String[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2772, 32811, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r1 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "src");
        $r38 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45698, 0);
        $r39 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("Usage: java -jar htmlcleanerXX.jar src = <url | file> [incharset = <charset>] [dest = <file>] [outcharset = <charset>] [taginfofile=<file>] [options...]");
        $r40 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("");
        $r41 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("where options include:");
        $r42 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>("    outputtype=simple* | compact | browser-compact | pretty | htmlsimple | htmlcompact | htmlpretty");
        $r43 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("    advancedxmlescape=true* | false");
        $r44 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("    transrescharstoncr=true | false*");
        $r45 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>("    usecdata=true* | false");
        $r46 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("    specialentities=true* | false");
        $r47 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("    transspecialentitiestoncr=true | false*");
        $r48 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("    unicodechars=true* | false");
        $r49 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("    omitunknowntags=true | false*");
        $r50 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>("    treatunknowntagsascontent=true | false*");
        $r51 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("    omitdeprtags=true | false*");
        $r52 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("    treatdeprtagsascontent=true | false*");
        $r53 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>("    omitcomments=true | false*");
        $r54 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("    omitxmldecl=true | false*");
        $r55 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>("    omitdoctypedecl=true* | false");
        $r56 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("    useemptyelementtags=true* | false");
        $r57 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("    allowmultiwordattributes=true* | false");
        $r58 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>("    allowhtmlinsideattributes=true | false*");
        $r59 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>("    ignoreqe=true* | false");
        $r60 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>("    namespacesaware=true* | false");
        $r61 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>("    hyphenreplacement=<string value> [=]");
        $r62 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("    prunetags=<string value> []");
        $r63 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>("    booleanatts=self* | empty | true");
        $r64 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("    nodebyxpath=<xpath expression>");
        $r65 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>("    omitenvelope=true | false*");
        $r66 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>("    t:<sourcetagX>[=<desttag>[,<preserveatts>]]");
        $r67 = <java.lang.System: java.io.PrintStream err>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>("    t:<sourcetagX>.<destattrY>[=<template>]");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3010, null);
        staticinvoke <java.lang.System: void exit(int)>(1);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45698, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r2 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "incharset");
        $r68 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45699, 0);
        _sym_tmp_1 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 675);
        r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45699, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r3 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "outcharset");
        $r69 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z3 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45700, 0);
        _sym_tmp_2 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 675);
        r3 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45700, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r4 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "dest");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r5 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "outputtype");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r6 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "advancedxmlescape");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r7 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "transrescharstoncr");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r8 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "usecdata");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r9 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "specialentities");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r10 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "transspecialentitiestoncr");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r11 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "unicodechars");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r12 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitunknowntags");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r13 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "treatunknowntagsascontent");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r14 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitdeprtags");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r15 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "treatdeprtagsascontent");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r16 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitcomments");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r17 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitxmldecl");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r18 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitdoctypedecl");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r19 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omithtmlenvelope");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r20 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "useemptyelementtags");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r21 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "allowmultiwordattributes");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r22 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "allowhtmlinsideattributes");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r23 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "ignoreqe");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r24 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "namespacesaware");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r25 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "hyphenreplacement");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r26 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "prunetags");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r27 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "booleanatts");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r28 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "nodebyxpath");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        $r70 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitenvelope");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        z0 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>($r70);
        z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null);
        r29 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "taginfofile");
        $r71 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(r29);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45701, 0);
        $r72 = new org.htmlcleaner.HtmlCleaner;
        $r30 = new org.htmlcleaner.ConfigFileTagProvider;
        $r31 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r31.<java.io.File: void <init>(java.lang.String)>(r29);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(994, null, null);
        specialinvoke $r30.<org.htmlcleaner.ConfigFileTagProvider: void <init>(java.io.File)>($r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21890, null, null);
        specialinvoke $r72.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.ITagInfoProvider)>($r30);
        r32 = $r72;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45701, 1);
        goto label7;

     label7:
        $r73 = new org.htmlcleaner.HtmlCleaner;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r73.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r32 = $r73;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21891, null);
        r33 = virtualinvoke r32.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties getProperties()>();
        $r74 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z5 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>(r12);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45702, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z6 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r12);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21853, null, $z6$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitUnknownTags(boolean)>($z6);
        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45702, 1);
        goto label10;

     label10:
        $r75 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z7 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>(r13);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 != 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45703, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z8 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r13);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21855, null, $z8$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTreatUnknownTagsAsContent(boolean)>($z8);
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45703, 1);
        goto label12;

     label12:
        $r76 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z9 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>(r14);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 != 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45704, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z10 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r14);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21857, null, $z10$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitDeprecatedTags(boolean)>($z10);
        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45704, 1);
        goto label14;

     label14:
        $r77 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z11 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>(r15);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45705, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z12 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r15);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21859, null, $z12$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTreatDeprecatedTagsAsContent(boolean)>($z12);
        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45705, 1);
        goto label16;

     label16:
        $r78 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z13 = virtualinvoke $r78.<java.lang.String: boolean equals(java.lang.Object)>(r6);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 != 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45706, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z14 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r6);
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21841, null, $z14$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setAdvancedXmlEscape(boolean)>($z14);
        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45706, 1);
        goto label18;

     label18:
        $r79 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z15 = virtualinvoke $r79.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 != 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45707, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z16 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r7);
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21843, null, $z16$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTransResCharsToNCR(boolean)>($z16);
        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45707, 1);
        goto label20;

     label20:
        $r80 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z17 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 != 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45708, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z18 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r8);
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, $z18$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setUseCdataForScriptAndStyle(boolean)>($z18);
        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45708, 1);
        goto label22;

     label22:
        $r81 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z19 = virtualinvoke $r81.<java.lang.String: boolean equals(java.lang.Object)>(r9);
        $z19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z19$sym, null, $z19, 0);
        if $z19 != 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45709, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z20 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r9);
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21847, null, $z20$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTranslateSpecialEntities(boolean)>($z20);
        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45709, 1);
        goto label24;

     label24:
        $r82 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z21 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        $z21$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z21$sym, null, $z21, 0);
        if $z21 != 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45710, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z22 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r10);
        $z22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21849, null, $z22$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTransSpecialEntitiesToNCR(boolean)>($z22);
        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45710, 1);
        goto label26;

     label26:
        $r83 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z23 = virtualinvoke $r83.<java.lang.String: boolean equals(java.lang.Object)>(r11);
        $z23$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z23$sym, null, $z23, 0);
        if $z23 != 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45711, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z24 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r11);
        $z24$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21851, null, $z24$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setRecognizeUnicodeChars(boolean)>($z24);
        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45711, 1);
        goto label28;

     label28:
        $r84 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z25 = virtualinvoke $r84.<java.lang.String: boolean equals(java.lang.Object)>(r16);
        $z25$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z25$sym, null, $z25, 0);
        if $z25 != 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45712, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z26 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r16);
        $z26$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21861, null, $z26$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitComments(boolean)>($z26);
        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45712, 1);
        goto label30;

     label30:
        $r85 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z27 = virtualinvoke $r85.<java.lang.String: boolean equals(java.lang.Object)>(r17);
        $z27$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z27$sym, null, $z27, 0);
        if $z27 != 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45713, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z28 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r17);
        $z28$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21863, null, $z28$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitXmlDeclaration(boolean)>($z28);
        goto label32;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45713, 1);
        goto label32;

     label32:
        $r86 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z29 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>(r18);
        $z29$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z29$sym, null, $z29, 0);
        if $z29 != 0 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45714, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z30 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r18);
        $z30$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21865, null, $z30$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitDoctypeDeclaration(boolean)>($z30);
        goto label34;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45714, 1);
        goto label34;

     label34:
        $r87 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z31 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>(r19);
        $z31$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z31$sym, null, $z31, 0);
        if $z31 != 0 goto label35;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45715, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z32 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r19);
        $z32$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21867, null, $z32$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitHtmlEnvelope(boolean)>($z32);
        goto label36;

     label35:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45715, 1);
        goto label36;

     label36:
        $r88 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z33 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>(r20);
        $z33$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z33$sym, null, $z33, 0);
        if $z33 != 0 goto label37;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45716, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z34 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r20);
        $z34$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21869, null, $z34$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setUseEmptyElementTags(boolean)>($z34);
        goto label38;

     label37:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45716, 1);
        goto label38;

     label38:
        $r89 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z35 = virtualinvoke $r89.<java.lang.String: boolean equals(java.lang.Object)>(r21);
        $z35$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z35$sym, null, $z35, 0);
        if $z35 != 0 goto label39;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45717, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z36 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r21);
        $z36$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21871, null, $z36$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setAllowMultiWordAttributes(boolean)>($z36);
        goto label40;

     label39:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45717, 1);
        goto label40;

     label40:
        $r90 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z37 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>(r22);
        $z37$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z37$sym, null, $z37, 0);
        if $z37 != 0 goto label41;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45718, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z38 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r22);
        $z38$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21873, null, $z38$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setAllowHtmlInsideAttributes(boolean)>($z38);
        goto label42;

     label41:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45718, 1);
        goto label42;

     label42:
        $r91 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z39 = virtualinvoke $r91.<java.lang.String: boolean equals(java.lang.Object)>(r23);
        $z39$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z39$sym, null, $z39, 0);
        if $z39 != 0 goto label43;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45719, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z40 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r23);
        $z40$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21875, null, $z40$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setIgnoreQuestAndExclam(boolean)>($z40);
        goto label44;

     label43:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45719, 1);
        goto label44;

     label44:
        $r92 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z41 = virtualinvoke $r92.<java.lang.String: boolean equals(java.lang.Object)>(r24);
        $z41$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z41$sym, null, $z41, 0);
        if $z41 != 0 goto label45;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45720, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21889, null);
        $z42 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r24);
        $z42$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21889);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21877, null, $z42$sym);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setNamespacesAware(boolean)>($z42);
        goto label46;

     label45:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45720, 1);
        goto label46;

     label46:
        $r93 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z43 = virtualinvoke $r93.<java.lang.String: boolean equals(java.lang.Object)>(r25);
        $z43$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z43$sym, null, $z43, 0);
        if $z43 != 0 goto label47;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45721, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21879, null, null);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setHyphenReplacementInComment(java.lang.String)>(r25);
        goto label48;

     label47:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45721, 1);
        goto label48;

     label48:
        $r94 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z44 = virtualinvoke $r94.<java.lang.String: boolean equals(java.lang.Object)>(r26);
        $z44$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z44$sym, null, $z44, 0);
        if $z44 != 0 goto label49;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45722, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21881, null, null);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setPruneTags(java.lang.String)>(r26);
        goto label50;

     label49:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45722, 1);
        goto label50;

     label50:
        $r95 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z45 = virtualinvoke $r95.<java.lang.String: boolean equals(java.lang.Object)>(r27);
        $z45$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z45$sym, null, $z45, 0);
        if $z45 != 0 goto label51;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45723, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21883, null, null);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setBooleanAttributeValues(java.lang.String)>(r27);
        goto label52;

     label51:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45723, 1);
        goto label52;

     label52:
        $r96 = new java.util.TreeMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r96.<java.util.TreeMap: void <init>()>();
        r34 = $r96;
        i0$sym = null;
        i0 = 0;

     label53:
        $i3$sym = null;
        $i3 = lengthof r0;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i3$sym, i0, $i3);
        if i0 >= $i3 goto label63;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45724, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r0, i0);
        r35 = r0[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z46 = virtualinvoke r35.<java.lang.String: boolean startsWith(java.lang.String)>("t:");
        $z46$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z46$sym, null, $z46, 0);
        if $z46 == 0 goto label60;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45725, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i4 = virtualinvoke r35.<java.lang.String: int length()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 2);
        if $i4 <= 2 goto label61;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45726, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, null);
        r97 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i1 = virtualinvoke r97.<java.lang.String: int indexOf(int)>(61);
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 > 0 goto label54;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45727, 0);
        $r98 = r97;
        goto label56;

        goto label55;

     label54:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45727, 1);
        goto label55;

     label55:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, i1$sym);
        $r98 = virtualinvoke r97.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label56:
        r36 = $r98;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 > 0 goto label57;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45728, 0);
        $r99 = null;
        goto label59;

        goto label58;

     label57:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45728, 1);
        goto label58;

     label58:
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i5 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i5$sym);
        $r99 = virtualinvoke r97.<java.lang.String: java.lang.String substring(int)>($i5);

     label59:
        r37 = $r99;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r36, r37);
        goto label62;

     label60:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45725, 1);
        goto label62;

        goto label62;

     label61:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45726, 1);
        goto label62;

     label62:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label53;

        goto label64;

     label63:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45724, 1);
        goto label64;

     label64:
        _sym_tmp_3 = null;
        if r34 == null goto label68;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45729, 0);
        $r101 = new org.htmlcleaner.CleanerTransformations;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r101.<org.htmlcleaner.CleanerTransformations: void <init>()>();
        r102 = $r101;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r103 = interfaceinvoke r34.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r104 = interfaceinvoke $r103.<java.util.Set: java.util.Iterator iterator()>();

     label65:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z47 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();
        $z47$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z47$sym, null, $z47, 0);
        if $z47 == 0 goto label66;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45730, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r105 = interfaceinvoke r104.<java.util.Iterator: java.lang.Object next()>();
        $r105$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r106 = (java.util.Map$Entry) $r105;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r107 = interfaceinvoke r106.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r107$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r108 = (java.lang.String) $r107;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r109 = interfaceinvoke r106.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r109$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        r110 = (java.lang.String) $r109;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21892, null, null, null);
        staticinvoke <org.htmlcleaner.Utils: void updateTagTransformations(org.htmlcleaner.CleanerTransformations,java.lang.String,java.lang.String)>(r102, r108, r110);
        goto label65;

        goto label67;

     label66:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45730, 1);
        goto label67;

     label67:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21893, null, null);
        virtualinvoke r32.<org.htmlcleaner.HtmlCleaner: void setTransformations(org.htmlcleaner.CleanerTransformations)>(r102);
        goto label69;

     label68:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45729, 1);
        goto label69;

     label69:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(212);
        l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        l6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(212);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        r111 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z48 = virtualinvoke r111.<java.lang.String: boolean startsWith(java.lang.String)>("http://");
        $z48$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z48$sym, null, $z48, 0);
        if $z48 != 0 goto label70;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45731, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z49 = virtualinvoke r111.<java.lang.String: boolean startsWith(java.lang.String)>("https://");
        $z49$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z49$sym, null, $z49, 0);
        if $z49 == 0 goto label72;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45732, 0);
        goto label71;

     label70:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45731, 1);
        goto label71;

     label71:
        $r112 = new java.net.URL;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r112.<java.net.URL: void <init>(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21894, null, null, null);
        r113 = virtualinvoke r32.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.net.URL,java.lang.String)>($r112, r2);
        goto label74;

        goto label73;

     label72:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45732, 1);
        goto label73;

     label73:
        $r114 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r114.<java.io.File: void <init>(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21895, null, null, null);
        r113 = virtualinvoke r32.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.File,java.lang.String)>($r114, r2);

     label74:
        $r115 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z50 = virtualinvoke $r115.<java.lang.String: boolean equals(java.lang.Object)>(r28);
        $z50$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z50$sym, null, $z50, 0);
        if $z50 != 0 goto label80;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45733, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        r116 = virtualinvoke r113.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>(r28);
        i2$sym = null;
        i2 = 0;

     label75:
        $i7$sym = null;
        $i7 = lengthof r116;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, $i7$sym, i2, $i7);
        if i2 >= $i7 goto label78;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45734, 0);
        $r117$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r116, i2);
        $r117 = r116[i2];
        $z51$sym = null;
        $z51 = $r117 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z51$sym, null, $z51, 0);
        if $z51 == 0 goto label76;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45735, 0);
        $r118$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r116, i2);
        $r118 = r116[i2];
        r113 = (org.htmlcleaner.TagNode) $r118;
        $r119 = <java.lang.System: java.io.PrintStream out>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r119.<java.io.PrintStream: void println(java.lang.String)>("Node successfully found by XPath.");
        goto label79;

        goto label77;

     label76:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45735, 1);
        goto label77;

     label77:
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        goto label75;

        goto label79;

     label78:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45734, 1);
        goto label79;

     label79:
        $i8$sym = null;
        $i8 = lengthof r116;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, $i8$sym, i2, $i8);
        if i2 != $i8 goto label81;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45736, 0);
        $r120 = <java.lang.System: java.io.PrintStream out>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r120.<java.io.PrintStream: void println(java.lang.String)>("Node not found by XPath expression - whole html tree is going to be serialized!");
        goto label82;

     label80:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45733, 1);
        goto label82;

        goto label82;

     label81:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45736, 1);
        goto label82;

     label82:
        _sym_tmp_3 = null;
        if r4 == null goto label83;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45737, 0);
        $r121 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r122 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z52 = virtualinvoke $r121.<java.lang.String: boolean equals(java.lang.Object)>($r122);
        $z52$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z52$sym, null, $z52, 0);
        if $z52 == 0 goto label85;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45738, 0);
        goto label84;

     label83:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45737, 1);
        goto label84;

     label84:
        r123 = <java.lang.System: java.io.PrintStream out>;
        goto label87;

        goto label86;

     label85:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45738, 1);
        goto label86;

     label86:
        $r124 = new java.io.FileOutputStream;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r124.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4);
        r123 = $r124;

     label87:
        $r125 = "compact";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z53 = virtualinvoke $r125.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        $z53$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z53$sym, null, $z53, 0);
        if $z53 == 0 goto label88;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45739, 0);
        $r126 = new org.htmlcleaner.CompactXmlSerializer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke $r126.<org.htmlcleaner.CompactXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke $r126.<org.htmlcleaner.CompactXmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label100;

        goto label89;

     label88:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45739, 1);
        goto label89;

     label89:
        $r127 = "browser-compact";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z54 = virtualinvoke $r127.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        $z54$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z54$sym, null, $z54, 0);
        if $z54 == 0 goto label90;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45740, 0);
        $r128 = new org.htmlcleaner.BrowserCompactXmlSerializer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke $r128.<org.htmlcleaner.BrowserCompactXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke $r128.<org.htmlcleaner.BrowserCompactXmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label100;

        goto label91;

     label90:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45740, 1);
        goto label91;

     label91:
        $r129 = "pretty";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z55 = virtualinvoke $r129.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        $z55$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z55$sym, null, $z55, 0);
        if $z55 == 0 goto label92;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45741, 0);
        $r130 = new org.htmlcleaner.PrettyXmlSerializer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke $r130.<org.htmlcleaner.PrettyXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke $r130.<org.htmlcleaner.PrettyXmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label100;

        goto label93;

     label92:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45741, 1);
        goto label93;

     label93:
        $r131 = "htmlsimple";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z56 = virtualinvoke $r131.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        $z56$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z56$sym, null, $z56, 0);
        if $z56 == 0 goto label94;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45742, 0);
        $r132 = new org.htmlcleaner.SimpleHtmlSerializer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke $r132.<org.htmlcleaner.SimpleHtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke $r132.<org.htmlcleaner.SimpleHtmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label100;

        goto label95;

     label94:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45742, 1);
        goto label95;

     label95:
        $r133 = "htmlcompact";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z57 = virtualinvoke $r133.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        $z57$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z57$sym, null, $z57, 0);
        if $z57 == 0 goto label96;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45743, 0);
        $r134 = new org.htmlcleaner.CompactHtmlSerializer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke $r134.<org.htmlcleaner.CompactHtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke $r134.<org.htmlcleaner.CompactHtmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label100;

        goto label97;

     label96:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45743, 1);
        goto label97;

     label97:
        $r135 = "htmlpretty";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z58 = virtualinvoke $r135.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        $z58$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z58$sym, null, $z58, 0);
        if $z58 == 0 goto label98;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45744, 0);
        $r136 = new org.htmlcleaner.PrettyHtmlSerializer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke $r136.<org.htmlcleaner.PrettyHtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke $r136.<org.htmlcleaner.PrettyHtmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label100;

        goto label99;

     label98:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45744, 1);
        goto label99;

     label99:
        $r137 = new org.htmlcleaner.SimpleXmlSerializer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke $r137.<org.htmlcleaner.SimpleXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke $r137.<org.htmlcleaner.SimpleXmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);

     label100:
        $r138 = <java.lang.System: java.io.PrintStream out>;
        $r139 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r139.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished successfully in ");
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(212);
        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(212);
        $l10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l9$sym, l6$sym, $l9, l6);
        $l10 = $l9 - l6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(286, null, $l10$sym);
        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r138.<java.io.PrintStream: void println(java.lang.String)>($r143);
        return;
    }
}
public class org.htmlcleaner.CommentNode extends java.lang.Object implements org.htmlcleaner.BaseToken, org.htmlcleaner.HtmlNode
{
    private java.lang.StringBuilder content;
    private int content$a3tid;

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CommentNode r0;
        java.lang.String r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.htmlcleaner.CommentNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 32812, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);
        _sym_tmp_1 = r0.<org.htmlcleaner.CommentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 676);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CommentNode: int content$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(676);
        r0.<org.htmlcleaner.CommentNode: java.lang.StringBuilder content> = $r2;
        return;
    }

    public java.lang.String getCommentedContent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CommentNode r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.htmlcleaner.CommentNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21835, 32813, 1);
        $r1 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!--");
        _sym_tmp_1 = r0.<org.htmlcleaner.CommentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 676);
        $r3 = r0.<org.htmlcleaner.CommentNode: java.lang.StringBuilder content>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    public java.lang.StringBuilder getContent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CommentNode r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.htmlcleaner.CommentNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21897, 32814, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.CommentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 676);
        $r1 = r0.<org.htmlcleaner.CommentNode: java.lang.StringBuilder content>;
        return $r1;
    }

    public java.lang.String toString()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.CommentNode r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CommentNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(148, 32815, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        $r1 = virtualinvoke r0.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        return $r1;
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.CommentNode r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;
        java.lang.String $r3;

        r0 := @this: org.htmlcleaner.CommentNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21836, 32816, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        $r3 = virtualinvoke r0.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r3);
        return;
    }
}
public class org.htmlcleaner.CompactHtmlSerializer extends org.htmlcleaner.HtmlSerializer
{
    private int openPreTags;
    private acteve.symbolic.integer.Expression openPreTags$sym;
    private int openPreTags$a3tid;

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.CompactHtmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.CompactHtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 32817, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        r0.<org.htmlcleaner.CompactHtmlSerializer: acteve.symbolic.integer.Expression openPreTags$sym> = null;
        _sym_tmp_1 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 677);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(677);
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags> = 0;
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i11$sym, $i10$sym, $z14$sym, $z13$sym, $z12$sym, $r13$sym, $z11$sym, $i9$sym, $z10$sym, $z9$sym, $z8$sym, $c8$sym, $i7$sym, $i6$sym, $i5$sym, $z7$sym, $z6$sym, $c4$sym, $i3$sym, $i2$sym, $z5$sym, $z4$sym, $z3$sym, $i1$sym, $i0$sym, z2$sym, z1$sym, r6$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11;
        org.htmlcleaner.CompactHtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.lang.String $r3, r7, $r8, $r10, $r11, r12, $r16, r17;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.List r4;
        java.util.ListIterator r5;
        java.lang.Object r6, $r13;
        char $c4, $c8;
        org.htmlcleaner.CommentNode $r15;
        org.htmlcleaner.BaseToken $r18;

        r0 := @this: org.htmlcleaner.CompactHtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21838, 32818, 3);
        $r3 = "pre";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r8 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);
        z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45745, 0);
        $i0$sym = r0.<org.htmlcleaner.CompactHtmlSerializer: acteve.symbolic.integer.Expression openPreTags$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 677);
        $i0 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        $i1 = $i0 + 1;
        r0.<org.htmlcleaner.CompactHtmlSerializer: acteve.symbolic.integer.Expression openPreTags$sym> = $i1$sym;
        _sym_tmp_2 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 677);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(677);
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags> = $i1;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45745, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21829, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        r4 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21830, null, null);
        $z3 = virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21830);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45746, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11442, null);
        r5 = interfaceinvoke r4.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z4 = interfaceinvoke r5.<java.util.ListIterator: boolean hasNext()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45747, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r6 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object next()>();
        r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z5$sym = null;
        $z5 = r6 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45748, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();
        $i2$sym = r0.<org.htmlcleaner.CompactHtmlSerializer: acteve.symbolic.integer.Expression openPreTags$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 677);
        $i2 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 <= 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45749, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r7);
        goto label24;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45749, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i3 = virtualinvoke r7.<java.lang.String: int length()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 0);
        if $i3 <= 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45750, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, null);
        $c4 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);
        $c4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(462, $c4$sym);
        $z6 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(462);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45751, 0);
        $z7$sym = null;
        $z7 = 1;
        goto label8;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45750, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45751, 1);
        goto label7;

     label7:
        $z7$sym = null;
        $z7 = 0;

     label8:
        z1$sym = $z7$sym;
        z1 = $z7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i5 = virtualinvoke r7.<java.lang.String: int length()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 1);
        if $i5 <= 1 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45752, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i6 = virtualinvoke r7.<java.lang.String: int length()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 1);
        $i7 = $i6 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i7$sym);
        $c8 = virtualinvoke r7.<java.lang.String: char charAt(int)>($i7);
        $c8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(462, $c8$sym);
        $z8 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c8);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(462);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45753, 0);
        $z9$sym = null;
        $z9 = 1;
        goto label12;

        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45752, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45753, 1);
        goto label11;

     label11:
        $z9$sym = null;
        $z9 = 0;

     label12:
        z2$sym = $z9$sym;
        z2 = $z9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21831, null, null);
        $z10 = virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21831);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45754, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r10 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();
        goto label15;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45754, 1);
        goto label14;

     label14:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r11 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21898, null, null);
        $r10 = virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: java.lang.String escapeText(java.lang.String)>($r11);

     label15:
        r12 = $r10;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45755, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(192, null, null);
        virtualinvoke r2.<java.io.Writer: void write(int)>(32);
        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45755, 1);
        goto label17;

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i9 = virtualinvoke r12.<java.lang.String: int length()>();
        $i9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i9$sym, null, $i9, 0);
        if $i9 == 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45756, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r12);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45757, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(192, null, null);
        virtualinvoke r2.<java.io.Writer: void write(int)>(32);
        goto label20;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45756, 1);
        goto label20;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45757, 1);
        goto label20;

     label20:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z11 = interfaceinvoke r5.<java.util.ListIterator: boolean hasNext()>();
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45758, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r13 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object next()>();
        $r13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21833, $r13$sym);
        $z12 = staticinvoke <org.htmlcleaner.Utils: boolean isWhitespaceString(java.lang.Object)>($r13);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21833);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 != 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45759, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45759, 1);
        goto label22;

     label22:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        interfaceinvoke r5.<java.util.ListIterator: java.lang.Object previous()>();
        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45758, 1);
        goto label24;

     label24:
        goto label30;

        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45748, 1);
        goto label26;

     label26:
        $z13$sym = null;
        $z13 = r6 instanceof org.htmlcleaner.CommentNode;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45760, 0);
        $r15 = (org.htmlcleaner.CommentNode) r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        $r16 = virtualinvoke $r15.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r17 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r17);
        goto label30;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45760, 1);
        goto label28;

     label28:
        $z14$sym = null;
        $z14 = r6 instanceof org.htmlcleaner.BaseToken;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45761, 0);
        $r18 = (org.htmlcleaner.BaseToken) r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21836, null, null, null);
        interfaceinvoke $r18.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);
        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45761, 1);
        goto label30;

     label30:
        goto label2;

        goto label32;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45747, 1);
        goto label32;

     label32:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21837, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label34;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45762, 0);
        $i10$sym = r0.<org.htmlcleaner.CompactHtmlSerializer: acteve.symbolic.integer.Expression openPreTags$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 677);
        $i10 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags>;
        $i11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i10$sym, null, $i10, 1);
        $i11 = $i10 - 1;
        r0.<org.htmlcleaner.CompactHtmlSerializer: acteve.symbolic.integer.Expression openPreTags$sym> = $i11$sym;
        _sym_tmp_5 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 677);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(677);
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags> = $i11;
        goto label35;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45746, 1);
        goto label35;

        goto label35;

     label34:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45762, 1);
        goto label35;

     label35:
        return;
    }
}
public class org.htmlcleaner.CompactXmlSerializer extends org.htmlcleaner.XmlSerializer
{

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.CompactXmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.CompactXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 32819, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke r0.<org.htmlcleaner.XmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z7$sym, $z6$sym, $z5$sym, $r10$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.CompactXmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.util.List r3;
        java.util.ListIterator r4;
        java.lang.Object r5, $r10;
        java.lang.String r6, $r7, $r9, $r13, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.htmlcleaner.CommentNode $r12;
        org.htmlcleaner.BaseToken $r15;

        r0 := @this: org.htmlcleaner.CompactXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21838, 32820, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21829, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21830, null, null);
        $z0 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21830);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45763, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11442, null);
        r4 = interfaceinvoke r3.<java.util.List: java.util.ListIterator listIterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45764, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z2$sym = null;
        $z2 = r5 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45765, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r6 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21831, null, null);
        $z3 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21831);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45766, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        $r9 = virtualinvoke r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("]]>", "]]&gt;");
        goto label3;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45766, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21832, null, null);
        $r9 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: java.lang.String escapeXml(java.lang.String)>(r6);

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z4 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45767, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r10 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        $r10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21833, $r10$sym);
        $z5 = staticinvoke <org.htmlcleaner.Utils: boolean isWhitespaceString(java.lang.Object)>($r10);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21833);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45768, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45768, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        interfaceinvoke r4.<java.util.ListIterator: java.lang.Object previous()>();
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45767, 1);
        goto label7;

     label7:
        goto label13;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45765, 1);
        goto label9;

     label9:
        $z6$sym = null;
        $z6 = r5 instanceof org.htmlcleaner.CommentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45769, 0);
        $r12 = (org.htmlcleaner.CommentNode) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        $r13 = virtualinvoke $r12.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r14);
        goto label13;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45769, 1);
        goto label11;

     label11:
        $z7$sym = null;
        $z7 = r5 instanceof org.htmlcleaner.BaseToken;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45770, 0);
        $r15 = (org.htmlcleaner.BaseToken) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21836, null, null, null);
        interfaceinvoke $r15.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);
        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45770, 1);
        goto label13;

     label13:
        goto label0;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45764, 1);
        goto label15;

     label15:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21837, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45763, 1);
        goto label17;

     label17:
        return;
    }
}
class org.htmlcleaner.ConfigFileTagProvider$ConfigParser extends org.xml.sax.helpers.DefaultHandler
{
    private org.htmlcleaner.TagInfo tagInfo;
    private java.lang.String dependencyName;
    private java.util.Map tagInfoMap;
    final org.htmlcleaner.ConfigFileTagProvider this$0;
    private int tagInfo$a3tid;
    private int dependencyName$a3tid;
    private int tagInfoMap$a3tid;
    final int this$0$a3tid;

    void <init>(org.htmlcleaner.ConfigFileTagProvider, java.util.Map)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        org.htmlcleaner.ConfigFileTagProvider r1;
        java.util.Map r2;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: org.htmlcleaner.ConfigFileTagProvider;
        r2 := @parameter1: java.util.Map;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21899, 32821, 3);
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 678);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(678);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 679);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(679);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = null;
        _sym_tmp_3 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 680);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(680);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = null;
        _sym_tmp_4 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfoMap$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 681);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfoMap$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(681);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.util.Map tagInfoMap> = r2;
        return;
    }

    public void parse(org.xml.sax.InputSource) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException, java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        org.xml.sax.InputSource r1;
        javax.xml.parsers.SAXParserFactory $r2;
        javax.xml.parsers.SAXParser r3;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: org.xml.sax.InputSource;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(14337, 32822, 2);
        _sym_tmp_1 = <org.htmlcleaner.ConfigFileTagProvider: int parserFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 682);
        $r2 = <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21900, null);
        r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21901, null, null, null);
        virtualinvoke r3.<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>(r1, r0);
        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        acteve.symbolic.integer.Expression _sym_tmp_26, $z15$sym, $z14$sym, $z13$sym, $z12$sym, $z11$sym, $z10$sym, $z9$sym, $z8$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, i1$sym, i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        char[] r1;
        java.lang.String r2, $r4, $r5, $r6, $r14, $r15, $r16, $r24, $r25, $r26, $r34, $r35, $r36, $r44, $r45, $r46, $r54, $r55, $r56, $r64, $r65, $r66, $r74, $r75, $r76, $r84;
        org.htmlcleaner.TagInfo $r3, $r7, $r17, $r27, $r37, $r47, $r57, $r67, $r77;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.htmlcleaner.ConfigFileTagProvider $r8, $r18, $r28, $r38, $r48, $r58, $r68, $r78;
        java.io.PrintStream $r9, $r19, $r29, $r39, $r49, $r59, $r69, $r79;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r20, $r21, $r22, $r23, $r30, $r31, $r32, $r33, $r40, $r41, $r42, $r43, $r50, $r51, $r52, $r53, $r60, $r61, $r62, $r63, $r70, $r71, $r72, $r73, $r80, $r81, $r82, $r83;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(13934, 32823, 4);
        r1$sym = a3targs$symargs[1];
        i0$sym = a3targs$symargs[2];
        i1$sym = a3targs$symargs[3];
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 679);
        $r3 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        _sym_tmp_26 = null;
        if $r3 == null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45771, 0);
        $r4 = new java.lang.String;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2510, null, r1$sym, i0$sym, i1$sym);
        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();
        $r5 = "fatal-tags";
        _sym_tmp_2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 680);
        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45772, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 679);
        $r7 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke $r7.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>(r2);
        _sym_tmp_4 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 678);
        $r8 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z1 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r8);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45773, 0);
        $r9 = <java.lang.System: java.io.PrintStream out>;
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineFatalTags(\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14);
        goto label24;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45772, 1);
        goto label1;

     label1:
        $r15 = "req-enclosing-tags";
        _sym_tmp_5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 680);
        $r16 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45774, 0);
        _sym_tmp_6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 679);
        $r17 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21904, null, null);
        virtualinvoke $r17.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>(r2);
        _sym_tmp_7 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 678);
        $r18 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z3 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r18);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45775, 0);
        $r19 = <java.lang.System: java.io.PrintStream out>;
        $r20 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineRequiredEnclosingTags(\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24);
        goto label24;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45774, 1);
        goto label3;

     label3:
        $r25 = "forbidden-tags";
        _sym_tmp_8 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 680);
        $r26 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45776, 0);
        _sym_tmp_9 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 679);
        $r27 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21905, null, null);
        virtualinvoke $r27.<org.htmlcleaner.TagInfo: void defineForbiddenTags(java.lang.String)>(r2);
        _sym_tmp_10 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 678);
        $r28 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z5 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r28);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45777, 0);
        $r29 = <java.lang.System: java.io.PrintStream out>;
        $r30 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineForbiddenTags(\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r34);
        goto label24;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45776, 1);
        goto label5;

     label5:
        $r35 = "allowed-children-tags";
        _sym_tmp_11 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 680);
        $r36 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z6 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r36);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45778, 0);
        _sym_tmp_12 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 679);
        $r37 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke $r37.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>(r2);
        _sym_tmp_13 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 678);
        $r38 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z7 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r38);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45779, 0);
        $r39 = <java.lang.System: java.io.PrintStream out>;
        $r40 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineAllowedChildrenTags(\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r44);
        goto label24;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45778, 1);
        goto label7;

     label7:
        $r45 = "higher-level-tags";
        _sym_tmp_14 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 680);
        $r46 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z8 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45780, 0);
        _sym_tmp_15 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 679);
        $r47 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21907, null, null);
        virtualinvoke $r47.<org.htmlcleaner.TagInfo: void defineHigherLevelTags(java.lang.String)>(r2);
        _sym_tmp_16 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 678);
        $r48 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z9 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r48);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45781, 0);
        $r49 = <java.lang.System: java.io.PrintStream out>;
        $r50 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineHigherLevelTags(\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r54);
        goto label24;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45780, 1);
        goto label9;

     label9:
        $r55 = "close-before-copy-inside-tags";
        _sym_tmp_17 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 680);
        $r56 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z10 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>($r56);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45782, 0);
        _sym_tmp_18 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 679);
        $r57 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke $r57.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>(r2);
        _sym_tmp_19 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 678);
        $r58 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z11 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r58);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45783, 0);
        $r59 = <java.lang.System: java.io.PrintStream out>;
        $r60 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseBeforeCopyInsideTags(\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>($r64);
        goto label24;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45782, 1);
        goto label11;

     label11:
        $r65 = "close-inside-copy-after-tags";
        _sym_tmp_20 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 680);
        $r66 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z12 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>($r66);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45784, 0);
        _sym_tmp_21 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 679);
        $r67 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke $r67.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>(r2);
        _sym_tmp_22 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 678);
        $r68 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z13 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r68);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45785, 0);
        $r69 = <java.lang.System: java.io.PrintStream out>;
        $r70 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseInsideCopyAfterTags(\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r74);
        goto label24;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45784, 1);
        goto label13;

     label13:
        $r75 = "close-before-tags";
        _sym_tmp_23 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 680);
        $r76 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z14 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>($r76);
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45786, 0);
        _sym_tmp_24 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 679);
        $r77 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke $r77.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>(r2);
        _sym_tmp_25 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_25, 678);
        $r78 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z15 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r78);
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_26 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45787, 0);
        $r79 = <java.lang.System: java.io.PrintStream out>;
        $r80 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseBeforeTags(\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r84);
        goto label24;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45771, 1);
        goto label24;

        goto label24;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45773, 1);
        goto label24;

        goto label24;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45775, 1);
        goto label24;

        goto label24;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45777, 1);
        goto label24;

        goto label24;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45779, 1);
        goto label24;

        goto label24;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45781, 1);
        goto label24;

        goto label24;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45783, 1);
        goto label24;

        goto label24;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45785, 1);
        goto label24;

        goto label24;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45786, 1);
        goto label24;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_26, 45787, 1);
        goto label24;

     label24:
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z22$sym, $z21$sym, $z20$sym, $z19$sym, $z18$sym, $z17$sym, $z16$sym, $z15$sym, $z14$sym, $z13$sym, $z12$sym, $z11$sym, $z10$sym, $z9$sym, $z8$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $b1$sym, $z3$sym, $z2$sym, $b0$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        java.lang.String r1, r2, r3, $r5, r6, r7, r8, r9, r10, r11, $r14, r15, $r18, $r19, $r20, $r21, $r22, $r23, r25, $r27, $r28, $r29, $r30, r31, $r33, $r34, $r35, $r36, r37, $r39, $r40, $r41, r42, $r44, $r45, $r46, r47, $r49, $r50, $r51, r52, $r54;
        org.xml.sax.Attributes r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        org.htmlcleaner.TagInfo $r17;
        byte $b0, $b1;
        org.htmlcleaner.ConfigFileTagProvider $r24;
        java.io.PrintStream $r53;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: org.xml.sax.Attributes;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(13929, 32824, 5);
        $r5 = "tag";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label46;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45788, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15867, null, null);
        r6 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15867, null, null);
        r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("content");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15867, null, null);
        r8 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("section");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15867, null, null);
        r9 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("deprecated");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15867, null, null);
        r10 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("unique");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15867, null, null);
        r11 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("ignore-permitted");
        $r17 = new org.htmlcleaner.TagInfo;
        $r14 = "all";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45789, 0);
        $b0$sym = null;
        $b0 = 0;
        goto label4;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45789, 1);
        goto label1;

     label1:
        $r18 = "none";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45790, 0);
        $b0$sym = null;
        $b0 = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45790, 1);
        goto label3;

     label3:
        $b0$sym = null;
        $b0 = 2;

     label4:
        $r19 = "all";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45791, 0);
        $b1$sym = null;
        $b1 = 0;
        goto label9;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45791, 1);
        goto label6;

     label6:
        $r20 = "head";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45792, 0);
        $b1$sym = null;
        $b1 = 1;
        goto label9;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45792, 1);
        goto label8;

     label8:
        $b1$sym = null;
        $b1 = 2;

     label9:
        _sym_tmp_4 = null;
        if r9 == null goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45793, 0);
        $r21 = "true";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r9);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45794, 0);
        $z6$sym = null;
        $z6 = 1;
        goto label13;

        goto label12;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45793, 1);
        goto label12;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45794, 1);
        goto label12;

     label12:
        $z6$sym = null;
        $z6 = 0;

     label13:
        _sym_tmp_4 = null;
        if r10 == null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45795, 0);
        $r22 = "true";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z7 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45796, 0);
        $z8$sym = null;
        $z8 = 1;
        goto label17;

        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45795, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45796, 1);
        goto label16;

     label16:
        $z8$sym = null;
        $z8 = 0;

     label17:
        _sym_tmp_4 = null;
        if r11 == null goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45797, 0);
        $r23 = "true";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z9 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r11);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45798, 0);
        $z10$sym = null;
        $z10 = 1;
        goto label21;

        goto label20;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45797, 1);
        goto label20;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45798, 1);
        goto label20;

     label20:
        $z10$sym = null;
        $z10 = 0;

     label21:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, $b0$sym, $b1$sym, $z6$sym, $z8$sym, $z10$sym);
        specialinvoke $r17.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>(r6, $b0, $b1, $z6, $z8, $z10);
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 679);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(679);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = $r17;
        _sym_tmp_2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 678);
        $r24 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z11 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r24);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label44;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45799, 0);
        r15 = "tagInfo = new TagInfo(\"#1\", #2, #3, #4, #5, #6);";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r25 = virtualinvoke r15.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#1", r6);
        $r27 = "#2";
        $r28 = "all";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z12 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45800, 0);
        $r29 = "TagInfo.CONTENT_ALL";
        goto label26;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45800, 1);
        goto label23;

     label23:
        $r30 = "none";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z13 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45801, 0);
        $r29 = "TagInfo.CONTENT_NONE";
        goto label26;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45801, 1);
        goto label25;

     label25:
        $r29 = " TagInfo.CONTENT_TEXT";

     label26:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r31 = virtualinvoke r25.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r27, $r29);
        $r33 = "#3";
        $r34 = "all";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z14 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45802, 0);
        $r35 = "TagInfo.HEAD_AND_BODY";
        goto label31;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45802, 1);
        goto label28;

     label28:
        $r36 = "head";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z15 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45803, 0);
        $r35 = "TagInfo.HEAD";
        goto label31;

        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45803, 1);
        goto label30;

     label30:
        $r35 = "TagInfo.BODY";

     label31:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r37 = virtualinvoke r31.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r33, $r35);
        $r39 = "#4";
        _sym_tmp_4 = null;
        if r9 == null goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45804, 0);
        $r40 = "true";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z16 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r9);
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 == 0 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45805, 0);
        $z17$sym = null;
        $z17 = 1;
        goto label35;

        goto label34;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45804, 1);
        goto label34;

        goto label34;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45805, 1);
        goto label34;

     label34:
        $z17$sym = null;
        $z17 = 0;

     label35:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21026, $z17$sym);
        $r41 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z17);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r42 = virtualinvoke r37.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r39, $r41);
        $r44 = "#5";
        _sym_tmp_4 = null;
        if r10 == null goto label36;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45806, 0);
        $r45 = "true";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z18 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label37;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45807, 0);
        $z19$sym = null;
        $z19 = 1;
        goto label39;

        goto label38;

     label36:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45806, 1);
        goto label38;

        goto label38;

     label37:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45807, 1);
        goto label38;

     label38:
        $z19$sym = null;
        $z19 = 0;

     label39:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21026, $z19$sym);
        $r46 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z19);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r47 = virtualinvoke r42.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r44, $r46);
        $r49 = "#6";
        _sym_tmp_4 = null;
        if r11 == null goto label40;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45808, 0);
        $r50 = "true";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z20 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r11);
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z20$sym, null, $z20, 0);
        if $z20 == 0 goto label41;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45809, 0);
        $z21$sym = null;
        $z21 = 1;
        goto label43;

        goto label42;

     label40:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45808, 1);
        goto label42;

        goto label42;

     label41:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45809, 1);
        goto label42;

     label42:
        $z21$sym = null;
        $z21 = 0;

     label43:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21026, $z21$sym);
        $r51 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r52 = virtualinvoke r47.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r49, $r51);
        $r53 = <java.lang.System: java.io.PrintStream out>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>(r52);
        goto label45;

     label44:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45799, 1);
        goto label45;

     label45:
        goto label49;

        goto label47;

     label46:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45788, 1);
        goto label47;

     label47:
        $r54 = "tags";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z22 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z22$sym, null, $z22, 0);
        if $z22 != 0 goto label48;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45810, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 680);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(680);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = r3;
        goto label49;

     label48:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45810, 1);
        goto label49;

     label49:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        java.lang.String r1, r2, r3, $r4, $r8, $r16, $r19, $r20;
        boolean $z0, $z1, $z2;
        org.htmlcleaner.TagInfo $r5, $r7, $r9, $r15;
        java.util.Map $r6;
        org.htmlcleaner.ConfigFileTagProvider $r11;
        java.io.PrintStream $r12;
        java.lang.StringBuilder $r13, $r14, $r17, $r18;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(13938, 32825, 4);
        $r4 = "tag";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45811, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 679);
        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        _sym_tmp_9 = null;
        if $r5 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45812, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfoMap$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 681);
        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.util.Map tagInfoMap>;
        _sym_tmp_3 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 679);
        $r7 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r8 = virtualinvoke $r7.<org.htmlcleaner.TagInfo: java.lang.String getName()>();
        _sym_tmp_4 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 679);
        $r9 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);
        _sym_tmp_5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 678);
        $r11 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $z1 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r11);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21903);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45813, 0);
        $r12 = <java.lang.System: java.io.PrintStream out>;
        $r13 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this.put(\"");
        _sym_tmp_6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 679);
        $r15 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r16 = virtualinvoke $r15.<org.htmlcleaner.TagInfo: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", tagInfo);\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r19);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45812, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45813, 1);
        goto label2;

     label2:
        _sym_tmp_7 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 679);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int tagInfo$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(679);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = null;
        goto label6;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45811, 1);
        goto label4;

     label4:
        $r20 = "tags";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45814, 0);
        _sym_tmp_8 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 680);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: int dependencyName$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(680);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = null;
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45814, 1);
        goto label6;

     label6:
        return;
    }
}
public class org.htmlcleaner.ConfigFileTagProvider extends java.util.HashMap implements org.htmlcleaner.ITagInfoProvider
{
    static javax.xml.parsers.SAXParserFactory parserFactory;
    private boolean generateCode;
    static int parserFactory$a3tid;
    private acteve.symbolic.integer.Expression generateCode$sym;
    private int generateCode$a3tid;

    private void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ConfigFileTagProvider r0;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32826, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: acteve.symbolic.integer.Expression generateCode$sym> = null;
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 683);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(683);
        r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 0;
        return;
    }

    public void <init>(org.xml.sax.InputSource)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ConfigFileTagProvider r0;
        org.xml.sax.InputSource r1;
        java.lang.Exception r2, $r4;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser $r3;
        org.htmlcleaner.HtmlCleanerException $r5;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        r1 := @parameter0: org.xml.sax.InputSource;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21912, 32827, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: acteve.symbolic.integer.Expression generateCode$sym> = null;
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 683);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(683);
        r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 0;

     label0:
        $r3 = new org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21899, null, null, null);
        specialinvoke $r3.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void <init>(org.htmlcleaner.ConfigFileTagProvider,java.util.Map)>(r0, r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(14337, null, null);
        virtualinvoke $r3.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void parse(org.xml.sax.InputSource)>(r1);

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        $r5 = new org.htmlcleaner.HtmlCleanerException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(393, null, null, null);
        specialinvoke $r5.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing tag configuration file!", r2);
        throw $r5;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void <init>(java.io.File)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ConfigFileTagProvider r0;
        java.io.File r1;
        java.lang.Exception r2, $r6;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser $r3;
        org.xml.sax.InputSource $r4;
        java.io.FileReader $r5;
        org.htmlcleaner.HtmlCleanerException $r7;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        r1 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(994, 32828, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: acteve.symbolic.integer.Expression generateCode$sym> = null;
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 683);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(683);
        r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 0;

     label0:
        $r3 = new org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21899, null, null, null);
        specialinvoke $r3.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void <init>(org.htmlcleaner.ConfigFileTagProvider,java.util.Map)>(r0, r0);
        $r4 = new org.xml.sax.InputSource;
        $r5 = new java.io.FileReader;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(994, null, null);
        specialinvoke $r5.<java.io.FileReader: void <init>(java.io.File)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2664, null, null);
        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(14337, null, null);
        virtualinvoke $r3.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void parse(org.xml.sax.InputSource)>($r4);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new org.htmlcleaner.HtmlCleanerException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(393, null, null, null);
        specialinvoke $r7.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing tag configuration file!", r2);
        throw $r7;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void <init>(java.net.URL)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ConfigFileTagProvider r0;
        java.net.URL r1;
        java.lang.Object r2;
        java.io.InputStreamReader r3, $r4;
        boolean $z0;
        java.io.InputStream $r5;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser $r6;
        org.xml.sax.InputSource $r7;
        java.lang.Exception $r8, r9;
        org.htmlcleaner.HtmlCleanerException $r10;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        r1 := @parameter0: java.net.URL;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21914, 32829, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: acteve.symbolic.integer.Expression generateCode$sym> = null;
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 683);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(683);
        r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 0;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21913, null);
        r2 = virtualinvoke r1.<java.net.URL: java.lang.Object getContent()>();
        r2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21913);
        $z0$sym = null;
        $z0 = r2 instanceof java.io.InputStream;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45815, 0);
        $r4 = new java.io.InputStreamReader;
        $r5 = (java.io.InputStream) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3360, null, null);
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);
        r3 = $r4;
        $r6 = new org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21899, null, null, null);
        specialinvoke $r6.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void <init>(org.htmlcleaner.ConfigFileTagProvider,java.util.Map)>(r0, r0);
        $r7 = new org.xml.sax.InputSource;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2664, null, null);
        specialinvoke $r7.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(14337, null, null);
        virtualinvoke $r6.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void parse(org.xml.sax.InputSource)>($r7);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45815, 1);
        goto label2;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new org.htmlcleaner.HtmlCleanerException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(393, null, null, null);
        specialinvoke $r10.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing tag configuration file!", r9);
        throw $r10;

     label4:
        return;

        catch java.lang.Exception from label0 to label2 with label3;
    }

    public org.htmlcleaner.TagInfo getTagInfo(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $r2$sym;
        org.htmlcleaner.ConfigFileTagProvider r0;
        java.lang.String r1;
        java.lang.Object $r2;
        org.htmlcleaner.TagInfo $r3;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21915, 32830, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r2 = virtualinvoke r0.<org.htmlcleaner.ConfigFileTagProvider: java.lang.Object get(java.lang.Object)>(r1);
        $r2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        $r3 = (org.htmlcleaner.TagInfo) $r2;
        return $r3;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.lang.String[] r0;
        org.htmlcleaner.ConfigFileTagProvider $r1, r2;
        java.io.File r3, $r7;
        java.lang.String r4, r5, $r16, $r23, $r29;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r6, $r8;
        java.io.PrintStream $r11, $r17, $r18, $r24, $r30, $r33, $r34;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28;
        org.xml.sax.InputSource $r31;
        java.io.FileReader $r32;

        r0 := @parameter0: java.lang.String[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2772, 32831, 1);
        $r1 = new org.htmlcleaner.ConfigFileTagProvider;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<org.htmlcleaner.ConfigFileTagProvider: void <init>()>();
        r2 = $r1;
        r2.<org.htmlcleaner.ConfigFileTagProvider: acteve.symbolic.integer.Expression generateCode$sym> = null;
        _sym_tmp_1 = r2.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 683);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r2.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(683);
        r2.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 1;
        $r7 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>("default.xml");
        r3 = $r7;
        r4 = "org.htmlcleaner";
        r5 = "DefaultTagProvider";
        $r8 = new org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21899, null, null, null);
        specialinvoke $r8.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void <init>(org.htmlcleaner.ConfigFileTagProvider,java.util.Map)>(r2, r2);
        r6 = $r8;
        $r11 = <java.lang.System: java.io.PrintStream out>;
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);
        $r17 = <java.lang.System: java.io.PrintStream out>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("import java.util.HashMap;");
        $r18 = <java.lang.System: java.io.PrintStream out>;
        $r19 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public class ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extends HashMap implements ITagInfoProvider {");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23);
        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() {");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
        $r30 = <java.lang.System: java.io.PrintStream out>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("TagInfo tagInfo;");
        $r31 = new org.xml.sax.InputSource;
        $r32 = new java.io.FileReader;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(994, null, null);
        specialinvoke $r32.<java.io.FileReader: void <init>(java.io.File)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2664, null, null);
        specialinvoke $r31.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r32);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(14337, null, null);
        virtualinvoke r6.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void parse(org.xml.sax.InputSource)>($r31);
        $r33 = <java.lang.System: java.io.PrintStream out>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("}");
        $r34 = <java.lang.System: java.io.PrintStream out>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("}");
        return;
    }

    static boolean access$000(org.htmlcleaner.ConfigFileTagProvider)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.ConfigFileTagProvider r0;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.ConfigFileTagProvider;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21903, 32832, 1);
        $z0$sym = r0.<org.htmlcleaner.ConfigFileTagProvider: acteve.symbolic.integer.Expression generateCode$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.ConfigFileTagProvider: int generateCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 683);
        $z0 = r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21903, $z0$sym);
        return $z0;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        javax.xml.parsers.SAXParserFactory $r0, $r1, $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32833, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21916);
        $r0 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();
        _sym_tmp_1 = <org.htmlcleaner.ConfigFileTagProvider: int parserFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 682);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.ConfigFileTagProvider: int parserFactory$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(682);
        <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory> = $r0;
        _sym_tmp_2 = <org.htmlcleaner.ConfigFileTagProvider: int parserFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 682);
        $r1 = <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21917, null, null);
        virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(0);
        _sym_tmp_3 = <org.htmlcleaner.ConfigFileTagProvider: int parserFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 682);
        $r2 = <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21918, null, null);
        virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(0);
        return;
    }
}
public class org.htmlcleaner.ContentNode extends java.lang.Object implements org.htmlcleaner.BaseToken, org.htmlcleaner.HtmlNode
{
    private java.lang.StringBuilder content;
    private int content$a3tid;

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ContentNode r0;
        java.lang.String r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.htmlcleaner.ContentNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 32834, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);
        _sym_tmp_1 = r0.<org.htmlcleaner.ContentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 684);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ContentNode: int content$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(684);
        r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content> = $r2;
        return;
    }

    void <init>(char[], int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, $i1;
        acteve.symbolic.integer.Expression $i1$sym, i0$sym, r1$sym;
        org.htmlcleaner.ContentNode r0;
        char[] r1;
        java.lang.StringBuilder $r2, $r3;

        r0 := @this: org.htmlcleaner.ContentNode;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21919, 32835, 3);
        r1$sym = a3targs$symargs[1];
        i0$sym = a3targs$symargs[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.StringBuilder;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 16);
        $i1 = i0 + 16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, $i1$sym);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);
        _sym_tmp_1 = r0.<org.htmlcleaner.ContentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 684);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.ContentNode: int content$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(684);
        r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content> = $r2;
        _sym_tmp_2 = r0.<org.htmlcleaner.ContentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 684);
        $r3 = r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13933, null, r1$sym, null, i0$sym);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, 0, i0);
        return;
    }

    public java.lang.String toString()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ContentNode r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.ContentNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(148, 32836, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.ContentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 684);
        $r1 = r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    public java.lang.StringBuilder getContent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ContentNode r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.htmlcleaner.ContentNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21897, 32837, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.ContentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 684);
        $r1 = r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content>;
        return $r1;
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.ContentNode r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: org.htmlcleaner.ContentNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21836, 32838, 3);
        _sym_tmp_1 = r0.<org.htmlcleaner.ContentNode: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 684);
        $r3 = r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r4);
        return;
    }
}
public class org.htmlcleaner.DefaultTagProvider extends java.util.HashMap implements org.htmlcleaner.ITagInfoProvider
{
    private static org.htmlcleaner.DefaultTagProvider _instance;
    private static int _instance$a3tid;

    public static synchronized org.htmlcleaner.DefaultTagProvider getInstance()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.DefaultTagProvider $r0, $r1, $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21920, 32839, 0);
        _sym_tmp_1 = <org.htmlcleaner.DefaultTagProvider: int _instance$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 685);
        $r0 = <org.htmlcleaner.DefaultTagProvider: org.htmlcleaner.DefaultTagProvider _instance>;
        _sym_tmp_4 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45816, 0);
        $r1 = new org.htmlcleaner.DefaultTagProvider;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<org.htmlcleaner.DefaultTagProvider: void <init>()>();
        _sym_tmp_2 = <org.htmlcleaner.DefaultTagProvider: int _instance$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 685);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.DefaultTagProvider: int _instance$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(685);
        <org.htmlcleaner.DefaultTagProvider: org.htmlcleaner.DefaultTagProvider _instance> = $r1;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45816, 1);
        goto label1;

     label1:
        _sym_tmp_3 = <org.htmlcleaner.DefaultTagProvider: int _instance$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 685);
        $r2 = <org.htmlcleaner.DefaultTagProvider: org.htmlcleaner.DefaultTagProvider _instance>;
        return $r2;
    }

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DefaultTagProvider r0;
        org.htmlcleaner.TagInfo r1, $r2, $r4, r5, $r7, r8, $r10, r11, $r13, r14, $r16, r17, $r19, r20, $r22, r23, $r25, r26, $r28, r29, $r31, r32, $r34, r35, $r37, r38, $r40, r41, $r43, r44, $r46, r47, $r49, r50, $r52, r53, $r55, r56, $r58, r59, $r61, r62, $r64, r65, $r67, r68, $r70, r71, $r73, r74, $r76, r77, $r79, r80, $r82, r83, $r85, r86, $r88, r89, $r91, r92, $r94, r95, $r97, r98, $r100, r101, $r103, r104, $r106, r107, $r109, r110, $r112, r113, $r115, r116, $r118, r119, $r121, r122, $r124, r125, $r127, r128, $r130, r131, $r133, r134, $r136, r137, $r139, r140, $r142, r143, $r145, r146, $r148, r149, $r151, r152, $r154, r155, $r157, r158, $r160, r161, $r163, r164, $r166, r167, $r169, r170, $r172, r173, $r175, r176, $r178, r179, $r181, r182, $r184, r185, $r187, r188, $r190, r191, $r193, r194, $r196, r197, $r199, r200, $r202, r203, $r205, r206, $r208, r209, $r211, r212, $r214, r215, $r217, r218, $r220, r221, $r223, r224, $r226, r227, $r229, r230, $r232, r233, $r235, r236, $r238, r239, $r241, r242, $r244, r245, $r247, r248, $r250, r251, $r253, r254, $r256, r257, $r259, r260, $r262, r263, $r265, r266, $r268, r269, $r271, r272, $r274, r275, $r277, r278, $r280, r281, $r283, r284, $r286, r287;

        r0 := @this: org.htmlcleaner.DefaultTagProvider;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32840, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        $r2 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r2.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("div", 0, 2, 0, 0, 0);
        r1 = $r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r1.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r1.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("div", r1);
        $r4 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r4.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("span", 0, 2, 0, 0, 0);
        r5 = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("span", r5);
        $r7 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r7.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("meta", 1, 1, 0, 0, 0);
        r8 = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("meta", r8);
        $r10 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r10.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("link", 1, 1, 0, 0, 0);
        r11 = $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("link", r11);
        $r13 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r13.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("title", 2, 1, 0, 1, 0);
        r14 = $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("title", r14);
        $r16 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r16.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("style", 2, 1, 0, 0, 0);
        r17 = $r16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("style", r17);
        $r19 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r19.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("bgsound", 1, 1, 0, 0, 0);
        r20 = $r19;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("bgsound", r20);
        $r22 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r22.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h1", 0, 2, 0, 0, 0);
        r23 = $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r23.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r23.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h1", r23);
        $r25 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r25.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h2", 0, 2, 0, 0, 0);
        r26 = $r25;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r26.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r26.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h2", r26);
        $r28 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r28.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h3", 0, 2, 0, 0, 0);
        r29 = $r28;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r29.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r29.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h3", r29);
        $r31 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r31.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h4", 0, 2, 0, 0, 0);
        r32 = $r31;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r32.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r32.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h4", r32);
        $r34 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r34.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h5", 0, 2, 0, 0, 0);
        r35 = $r34;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r35.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r35.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h5", r35);
        $r37 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r37.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h6", 0, 2, 0, 0, 0);
        r38 = $r37;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r38.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r38.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h6", r38);
        $r40 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r40.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("p", 0, 2, 0, 0, 0);
        r41 = $r40;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r41.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r41.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("p", r41);
        $r43 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r43.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("strong", 0, 2, 0, 0, 0);
        r44 = $r43;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("strong", r44);
        $r46 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r46.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("em", 0, 2, 0, 0, 0);
        r47 = $r46;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("em", r47);
        $r49 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r49.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("abbr", 0, 2, 0, 0, 0);
        r50 = $r49;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("abbr", r50);
        $r52 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r52.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("acronym", 0, 2, 0, 0, 0);
        r53 = $r52;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("acronym", r53);
        $r55 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r55.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("address", 0, 2, 0, 0, 0);
        r56 = $r55;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r56.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r56.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("address", r56);
        $r58 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r58.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("bdo", 0, 2, 0, 0, 0);
        r59 = $r58;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("bdo", r59);
        $r61 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r61.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("blockquote", 0, 2, 0, 0, 0);
        r62 = $r61;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r62.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r62.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("blockquote", r62);
        $r64 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r64.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("cite", 0, 2, 0, 0, 0);
        r65 = $r64;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("cite", r65);
        $r67 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r67.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("q", 0, 2, 0, 0, 0);
        r68 = $r67;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("q", r68);
        $r70 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r70.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("code", 0, 2, 0, 0, 0);
        r71 = $r70;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("code", r71);
        $r73 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r73.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("ins", 0, 2, 0, 0, 0);
        r74 = $r73;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("ins", r74);
        $r76 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r76.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("del", 0, 2, 0, 0, 0);
        r77 = $r76;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("del", r77);
        $r79 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r79.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dfn", 0, 2, 0, 0, 0);
        r80 = $r79;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfn", r80);
        $r82 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r82.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("kbd", 0, 2, 0, 0, 0);
        r83 = $r82;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("kbd", r83);
        $r85 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r85.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("pre", 0, 2, 0, 0, 0);
        r86 = $r85;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r86.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r86.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("pre", r86);
        $r88 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r88.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("samp", 0, 2, 0, 0, 0);
        r89 = $r88;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("samp", r89);
        $r91 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r91.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("listing", 0, 2, 0, 0, 0);
        r92 = $r91;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r92.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r92.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("listing", r92);
        $r94 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r94.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("var", 0, 2, 0, 0, 0);
        r95 = $r94;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("var", r95);
        $r97 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r97.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("br", 1, 2, 0, 0, 0);
        r98 = $r97;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("br", r98);
        $r100 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r100.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("wbr", 1, 2, 0, 0, 0);
        r101 = $r100;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("wbr", r101);
        $r103 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r103.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("nobr", 0, 2, 0, 0, 0);
        r104 = $r103;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r104.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("nobr");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("nobr", r104);
        $r106 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r106.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("xmp", 2, 2, 0, 0, 0);
        r107 = $r106;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("xmp", r107);
        $r109 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r109.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("a", 0, 2, 0, 0, 0);
        r110 = $r109;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r110.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("a");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", r110);
        $r112 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r112.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("base", 1, 1, 0, 0, 0);
        r113 = $r112;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("base", r113);
        $r115 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r115.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("img", 1, 2, 0, 0, 0);
        r116 = $r115;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("img", r116);
        $r118 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r118.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("area", 1, 2, 0, 0, 0);
        r119 = $r118;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r119.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("map");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r119.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("area");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("area", r119);
        $r121 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r121.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("map", 0, 2, 0, 0, 0);
        r122 = $r121;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r122.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("map");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("map", r122);
        $r124 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r124.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("object", 0, 2, 0, 0, 0);
        r125 = $r124;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("object", r125);
        $r127 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r127.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("param", 1, 2, 0, 0, 0);
        r128 = $r127;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r128.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r128.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("param", r128);
        $r130 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r130.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("applet", 0, 2, 1, 0, 0);
        r131 = $r130;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("applet", r131);
        $r133 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r133.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("xml", 0, 2, 0, 0, 0);
        r134 = $r133;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("xml", r134);
        $r136 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r136.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("ul", 0, 2, 0, 0, 0);
        r137 = $r136;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r137.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r137.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("ul", r137);
        $r139 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r139.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("ol", 0, 2, 0, 0, 0);
        r140 = $r139;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r140.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r140.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("ol", r140);
        $r142 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r142.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("li", 0, 2, 0, 0, 0);
        r143 = $r142;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r143.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r143.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("li,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("li", r143);
        $r145 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r145.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dl", 0, 2, 0, 0, 0);
        r146 = $r145;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r146.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r146.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dl", r146);
        $r148 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r148.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dt", 0, 2, 0, 0, 0);
        r149 = $r148;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r149.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("dt,dd");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dt", r149);
        $r151 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r151.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dd", 0, 2, 0, 0, 0);
        r152 = $r151;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r152.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("dt,dd");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dd", r152);
        $r154 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r154.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("menu", 0, 2, 1, 0, 0);
        r155 = $r154;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r155.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r155.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu", r155);
        $r157 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r157.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dir", 0, 2, 1, 0, 0);
        r158 = $r157;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r158.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r158.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dir", r158);
        $r160 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r160.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("table", 0, 2, 0, 0, 0);
        r161 = $r160;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke r161.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("tr,tbody,thead,tfoot,colgroup,col,form,caption,tr");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r161.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r161.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("tr,thead,tbody,tfoot,caption,colgroup,table,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("table", r161);
        $r163 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r163.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("tr", 0, 2, 0, 0, 0);
        r164 = $r163;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21904, null, null);
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>("tbody");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("td,th");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21907, null, null);
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineHigherLevelTags(java.lang.String)>("thead,tfoot");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("tr,td,th,caption,colgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("tr", r164);
        $r166 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r166.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("td", 0, 2, 0, 0, 0);
        r167 = $r166;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r167.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21904, null, null);
        virtualinvoke r167.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>("tr");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r167.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,caption,colgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("td", r167);
        $r169 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r169.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("th", 0, 2, 0, 0, 0);
        r170 = $r169;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r170.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21904, null, null);
        virtualinvoke r170.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>("tr");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r170.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,caption,colgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("th", r170);
        $r172 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r172.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("tbody", 0, 2, 0, 0, 0);
        r173 = $r172;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r173.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke r173.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("tr,form");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r173.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("tbody", r173);
        $r175 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r175.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("thead", 0, 2, 0, 0, 0);
        r176 = $r175;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r176.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke r176.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("tr,form");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r176.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("thead", r176);
        $r178 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r178.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("tfoot", 0, 2, 0, 0, 0);
        r179 = $r178;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r179.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke r179.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("tr,form");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r179.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("tfoot", r179);
        $r181 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r181.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("col", 1, 2, 0, 0, 0);
        r182 = $r181;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r182.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("col", r182);
        $r184 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r184.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("colgroup", 0, 2, 0, 0, 0);
        r185 = $r184;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r185.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke r185.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("col");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r185.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("colgroup", r185);
        $r187 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r187.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("caption", 0, 2, 0, 0, 0);
        r188 = $r187;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r188.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r188.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("caption", r188);
        $r190 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r190.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("form", 0, 2, 0, 0, 1);
        r191 = $r190;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21905, null, null);
        virtualinvoke r191.<org.htmlcleaner.TagInfo: void defineForbiddenTags(java.lang.String)>("form");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r191.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r191.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("option,optgroup,textarea,select,fieldset,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("form", r191);
        $r193 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r193.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("input", 1, 2, 0, 0, 0);
        r194 = $r193;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r194.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("select,optgroup,option");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("input", r194);
        $r196 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r196.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("textarea", 0, 2, 0, 0, 0);
        r197 = $r196;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r197.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("select,optgroup,option");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("textarea", r197);
        $r199 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r199.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("select", 0, 2, 0, 0, 1);
        r200 = $r199;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke r200.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("option,optgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r200.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("option,optgroup,select");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("select", r200);
        $r202 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r202.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("option", 2, 2, 0, 0, 1);
        r203 = $r202;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r203.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("select");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r203.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("option");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("option", r203);
        $r205 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r205.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("optgroup", 0, 2, 0, 0, 1);
        r206 = $r205;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21902, null, null);
        virtualinvoke r206.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("select");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21906, null, null);
        virtualinvoke r206.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("option");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r206.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("optgroup");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("optgroup", r206);
        $r208 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r208.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("button", 0, 2, 0, 0, 0);
        r209 = $r208;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r209.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("select,optgroup,option");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("button", r209);
        $r211 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r211.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("label", 0, 2, 0, 0, 0);
        r212 = $r211;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("label", r212);
        $r214 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r214.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("fieldset", 0, 2, 0, 0, 0);
        r215 = $r214;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r215.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r215.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("fieldset", r215);
        $r217 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r217.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("legend", 2, 2, 0, 0, 0);
        r218 = $r217;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21904, null, null);
        virtualinvoke r218.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>("fieldset");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r218.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("legend");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("legend", r218);
        $r220 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r220.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("isindex", 1, 2, 1, 0, 0);
        r221 = $r220;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r221.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r221.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("isindex", r221);
        $r223 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r223.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("script", 0, 0, 0, 0, 0);
        r224 = $r223;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("script", r224);
        $r226 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r226.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("noscript", 0, 0, 0, 0, 0);
        r227 = $r226;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("noscript", r227);
        $r229 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r229.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("b", 0, 2, 0, 0, 0);
        r230 = $r229;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r230.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("u,i,tt,sub,sup,big,small,strike,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", r230);
        $r232 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r232.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("i", 0, 2, 0, 0, 0);
        r233 = $r232;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r233.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,tt,sub,sup,big,small,strike,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("i", r233);
        $r235 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r235.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("u", 0, 2, 1, 0, 0);
        r236 = $r235;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r236.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,i,tt,sub,sup,big,small,strike,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("u", r236);
        $r238 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r238.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("tt", 0, 2, 0, 0, 0);
        r239 = $r238;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r239.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,sub,sup,big,small,strike,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("tt", r239);
        $r241 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r241.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("sub", 0, 2, 0, 0, 0);
        r242 = $r241;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r242.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sup,big,small,strike,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("sub", r242);
        $r244 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r244.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("sup", 0, 2, 0, 0, 0);
        r245 = $r244;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r245.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,big,small,strike,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("sup", r245);
        $r247 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r247.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("big", 0, 2, 0, 0, 0);
        r248 = $r247;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r248.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,small,strike,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("big", r248);
        $r250 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r250.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("small", 0, 2, 0, 0, 0);
        r251 = $r250;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r251.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,big,strike,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("small", r251);
        $r253 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r253.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("strike", 0, 2, 1, 0, 0);
        r254 = $r253;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r254.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,big,small,blink,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("strike", r254);
        $r256 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r256.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("blink", 0, 2, 0, 0, 0);
        r257 = $r256;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r257.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,big,small,strike,s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("blink", r257);
        $r259 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r259.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("marquee", 0, 2, 0, 0, 0);
        r260 = $r259;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r260.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r260.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("marquee", r260);
        $r262 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r262.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("s", 0, 2, 1, 0, 0);
        r263 = $r262;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21909, null, null);
        virtualinvoke r263.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,big,small,strike,blink");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("s", r263);
        $r265 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r265.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("hr", 1, 2, 0, 0, 0);
        r266 = $r265;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r266.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r266.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("hr", r266);
        $r268 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r268.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("font", 0, 2, 1, 0, 0);
        r269 = $r268;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("font", r269);
        $r271 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r271.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("basefont", 1, 2, 1, 0, 0);
        r272 = $r271;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("basefont", r272);
        $r274 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r274.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("center", 0, 2, 1, 0, 0);
        r275 = $r274;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r275.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r275.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("center", r275);
        $r277 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r277.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("comment", 0, 2, 0, 0, 0);
        r278 = $r277;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("comment", r278);
        $r280 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r280.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("server", 0, 2, 0, 0, 0);
        r281 = $r280;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("server", r281);
        $r283 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r283.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("iframe", 0, 2, 0, 0, 0);
        r284 = $r283;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("iframe", r284);
        $r286 = new org.htmlcleaner.TagInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21911, null, null, null, null, null, null, null);
        specialinvoke $r286.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("embed", 1, 2, 0, 0, 0);
        r287 = $r286;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21908, null, null);
        virtualinvoke r287.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, null);
        virtualinvoke r287.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("embed", r287);
        return;
    }

    public org.htmlcleaner.TagInfo getTagInfo(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $r2$sym;
        org.htmlcleaner.DefaultTagProvider r0;
        java.lang.String r1;
        java.lang.Object $r2;
        org.htmlcleaner.TagInfo $r3;

        r0 := @this: org.htmlcleaner.DefaultTagProvider;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21915, 32841, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r2 = virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object get(java.lang.Object)>(r1);
        $r2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        $r3 = (org.htmlcleaner.TagInfo) $r2;
        return $r3;
    }

    public void removeTagInfo(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DefaultTagProvider r0;
        java.lang.String r1, $r2;

        r0 := @this: org.htmlcleaner.DefaultTagProvider;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21921, 32842, 2);
        _sym_tmp_1 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45817, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(74, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object remove(java.lang.Object)>($r2);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45817, 1);
        goto label1;

     label1:
        return;
    }

    public void addTagInfo(org.htmlcleaner.TagInfo)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DefaultTagProvider r0;
        org.htmlcleaner.TagInfo r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.htmlcleaner.DefaultTagProvider;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21922, 32843, 2);
        _sym_tmp_1 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45818, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r2 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45818, 1);
        goto label1;

     label1:
        return;
    }
}
public class org.htmlcleaner.DoctypeToken extends java.lang.Object implements org.htmlcleaner.BaseToken
{
    private java.lang.String part1;
    private java.lang.String part2;
    private java.lang.String part3;
    private java.lang.String part4;
    private int part1$a3tid;
    private int part2$a3tid;
    private int part3$a3tid;
    private int part4$a3tid;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String r1, r2, r3, r4, $r6, $r8, $r9, $r10;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(419, 32844, 5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_5 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45819, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(504, null);
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45819, 1);
        goto label1;

     label1:
        $r6 = r1;

     label2:
        _sym_tmp_1 = r0.<org.htmlcleaner.DoctypeToken: int part1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 686);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.DoctypeToken: int part1$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(686);
        r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1> = $r6;
        _sym_tmp_5 = null;
        if r2 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45820, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(504, null);
        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45820, 1);
        goto label4;

     label4:
        $r8 = r2;

     label5:
        _sym_tmp_2 = r0.<org.htmlcleaner.DoctypeToken: int part2$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 687);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.DoctypeToken: int part2$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(687);
        r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2> = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11907, null, null);
        $r9 = specialinvoke r0.<org.htmlcleaner.DoctypeToken: java.lang.String clean(java.lang.String)>(r3);
        _sym_tmp_3 = r0.<org.htmlcleaner.DoctypeToken: int part3$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 688);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.DoctypeToken: int part3$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(688);
        r0.<org.htmlcleaner.DoctypeToken: java.lang.String part3> = $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11907, null, null);
        $r10 = specialinvoke r0.<org.htmlcleaner.DoctypeToken: java.lang.String clean(java.lang.String)>(r4);
        _sym_tmp_4 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 689);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(689);
        r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4> = $r10;
        return;
    }

    private java.lang.String clean(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11907, 32845, 2);
        _sym_tmp_1 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45821, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3496, null, null, null);
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(62, 32);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3496, null, null, null);
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(60, 32);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3496, null, null, null);
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String replace(char,char)>(38, 32);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3496, null, null, null);
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String replace(char,char)>(39, 32);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3496, null, null, null);
        r1 = virtualinvoke r5.<java.lang.String: java.lang.String replace(char,char)>(34, 32);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45821, 1);
        goto label1;

     label1:
        return r1;
    }

    public boolean isValid()
    {
        acteve.symbolic.integer.Expression _sym_tmp_11, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(7557, 32846, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.DoctypeToken: int part1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 686);
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1>;
        _sym_tmp_11 = null;
        if $r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45822, 0);
        $r2 = "";
        _sym_tmp_2 = r0.<org.htmlcleaner.DoctypeToken: int part1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 686);
        $r3 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45823, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45822, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(7557, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45823, 1);
        goto label3;

     label3:
        $r4 = "public";
        _sym_tmp_3 = r0.<org.htmlcleaner.DoctypeToken: int part2$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 687);
        $r5 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45824, 0);
        $r6 = "system";
        _sym_tmp_4 = r0.<org.htmlcleaner.DoctypeToken: int part2$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 687);
        $r7 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45825, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(7557, null);
        return 0;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45824, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45825, 1);
        goto label6;

     label6:
        $r8 = "system";
        _sym_tmp_5 = r0.<org.htmlcleaner.DoctypeToken: int part2$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 687);
        $r9 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z3 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45826, 0);
        _sym_tmp_6 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 689);
        $r10 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        _sym_tmp_11 = null;
        if $r10 == null goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45827, 0);
        $r11 = "";
        _sym_tmp_7 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 689);
        $r12 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45828, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(7557, null);
        return 0;

        goto label10;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45826, 1);
        goto label10;

        goto label10;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45827, 1);
        goto label10;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45828, 1);
        goto label10;

     label10:
        $r13 = "public";
        _sym_tmp_8 = r0.<org.htmlcleaner.DoctypeToken: int part2$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 687);
        $r14 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z5 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45829, 0);
        _sym_tmp_9 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 689);
        $r15 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        _sym_tmp_11 = null;
        if $r15 == null goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45830, 0);
        $r16 = "";
        _sym_tmp_10 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 689);
        $r17 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45831, 0);
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45830, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(7557, null);
        return 0;

        goto label15;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45829, 1);
        goto label15;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45831, 1);
        goto label15;

     label15:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(7557, null);
        return 1;
    }

    public java.lang.String getContent()
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27;
        java.lang.String r2, $r4, $r9, $r12, r15, $r16, $r17, $r18, $r22, r28;
        boolean $z0;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21923, 32847, 1);
        $r1 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!DOCTYPE ");
        _sym_tmp_1 = r0.<org.htmlcleaner.DoctypeToken: int part1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 686);
        $r4 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r7 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        _sym_tmp_2 = r0.<org.htmlcleaner.DoctypeToken: int part2$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 687);
        $r9 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");
        _sym_tmp_3 = r0.<org.htmlcleaner.DoctypeToken: int part3$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 688);
        $r12 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part3>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_4 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 689);
        $r16 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        _sym_tmp_7 = null;
        if $r16 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45832, 0);
        $r17 = "";
        _sym_tmp_5 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 689);
        $r18 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45833, 0);
        $r19 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");
        _sym_tmp_6 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 689);
        $r22 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r15 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45832, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45833, 1);
        goto label2;

     label2:
        $r25 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        return r28;
    }

    public java.lang.String toString()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(148, 32848, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21923, null);
        $r1 = virtualinvoke r0.<org.htmlcleaner.DoctypeToken: java.lang.String getContent()>();
        return $r1;
    }

    public java.lang.String getName()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DoctypeToken r0;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(993, 32849, 1);
        return "";
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DoctypeToken r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21836, 32850, 3);
        $r3 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21923, null);
        $r4 = virtualinvoke r0.<org.htmlcleaner.DoctypeToken: java.lang.String getContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r7);
        return;
    }

    public java.lang.String getPart1()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21924, 32851, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.DoctypeToken: int part1$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 686);
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1>;
        return $r1;
    }

    public java.lang.String getPart2()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21925, 32852, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.DoctypeToken: int part2$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 687);
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        return $r1;
    }

    public java.lang.String getPart3()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21926, 32853, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.DoctypeToken: int part3$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 688);
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part3>;
        return $r1;
    }

    public java.lang.String getPart4()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21927, 32854, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.DoctypeToken: int part4$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 689);
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        return $r1;
    }
}
public class org.htmlcleaner.DomSerializer extends java.lang.Object
{
    protected org.htmlcleaner.CleanerProperties props;
    protected boolean escapeXml;
    protected int props$a3tid;
    protected acteve.symbolic.integer.Expression escapeXml$sym;
    protected int escapeXml$a3tid;

    public void <init>(org.htmlcleaner.CleanerProperties, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.CleanerProperties r1;
        boolean z0;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21928, 32855, 3);
        z0$sym = a3targs$symargs[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.DomSerializer: acteve.symbolic.integer.Expression escapeXml$sym> = null;
        _sym_tmp_1 = r0.<org.htmlcleaner.DomSerializer: int escapeXml$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 690);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.DomSerializer: int escapeXml$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(690);
        r0.<org.htmlcleaner.DomSerializer: boolean escapeXml> = 1;
        _sym_tmp_2 = r0.<org.htmlcleaner.DomSerializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 691);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.DomSerializer: int props$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(691);
        r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props> = r1;
        r0.<org.htmlcleaner.DomSerializer: acteve.symbolic.integer.Expression escapeXml$sym> = z0$sym;
        _sym_tmp_3 = r0.<org.htmlcleaner.DomSerializer: int escapeXml$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 690);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.DomSerializer: int escapeXml$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(690);
        r0.<org.htmlcleaner.DomSerializer: boolean escapeXml> = z0;
        return;
    }

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 32856, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21928, null, null, null);
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void <init>(org.htmlcleaner.CleanerProperties,boolean)>(r1, 1);
        return;
    }

    public org.w3c.dom.Document createDOM(org.htmlcleaner.TagNode) throws javax.xml.parsers.ParserConfigurationException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.TagNode r1;
        javax.xml.parsers.DocumentBuilderFactory r2;
        org.w3c.dom.Document r3;
        org.w3c.dom.Element r4;
        javax.xml.parsers.DocumentBuilder $r5;
        java.util.List $r7;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21936, 32857, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21929);
        r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21930, null);
        $r5 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21931, null);
        r3 = virtualinvoke $r5.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21932, null, null, null);
        r4 = specialinvoke r0.<org.htmlcleaner.DomSerializer: org.w3c.dom.Element createElement(org.htmlcleaner.TagNode,org.w3c.dom.Document)>(r1, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21933, null, null);
        interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21934, null, null, null);
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void setAttributes(org.htmlcleaner.TagNode,org.w3c.dom.Element)>(r1, r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r7 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21935, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void createSubnodes(org.w3c.dom.Document,org.w3c.dom.Element,java.util.List)>(r3, r4, $r7);
        return r3;
    }

    private org.w3c.dom.Element createElement(org.htmlcleaner.TagNode, org.w3c.dom.Document)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $r9$sym, $r8$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.w3c.dom.Document r2;
        java.lang.String r3, r4, r6;
        boolean z0;
        java.util.Map r5;
        org.htmlcleaner.CleanerProperties $r7;
        java.lang.Object $r8, $r9;
        org.w3c.dom.Element $r10, $r11;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: org.w3c.dom.Document;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21932, 32858, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.DomSerializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 691);
        $r7 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21876, null);
        z0 = virtualinvoke $r7.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21876);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21937, null);
        r4 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21938, null);
        r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        r6 = null;
        _sym_tmp_2 = null;
        if r4 == null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45834, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45835, 0);
        _sym_tmp_2 = null;
        if r5 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45836, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        r6 = (java.lang.String) $r8;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45836, 1);
        goto label1;

     label1:
        _sym_tmp_2 = null;
        if r6 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45837, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21939, null, null);
        r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getNamespaceURIOnPath(java.lang.String)>(r4);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45837, 1);
        goto label3;

     label3:
        _sym_tmp_2 = null;
        if r6 != null goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45838, 0);
        r6 = r4;
        goto label13;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45835, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21940, null);
        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);
        goto label13;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45834, 1);
        goto label7;

     label7:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45839, 0);
        _sym_tmp_2 = null;
        if r5 == null goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45840, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r9 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("");
        $r9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        r6 = (java.lang.String) $r9;
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45840, 1);
        goto label9;

     label9:
        _sym_tmp_2 = null;
        if r6 != null goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45841, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21939, null, null);
        r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getNamespaceURIOnPath(java.lang.String)>(r4);
        goto label13;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45838, 1);
        goto label13;

        goto label13;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45839, 1);
        goto label13;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45841, 1);
        goto label13;

     label13:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45842, 0);
        _sym_tmp_2 = null;
        if r6 == null goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45843, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21941, null, null, null);
        $r10 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r6, r3);
        return $r10;

        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45842, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45843, 1);
        goto label16;

     label16:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21942, null, null);
        $r11 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r3);
        return $r11;
    }

    private void setAttributes(org.htmlcleaner.TagNode, org.w3c.dom.Element)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z2$sym, $z1$sym, $r13$sym, $r12$sym, $r11$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.w3c.dom.Element r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, r6, r7, r8, $r16;
        java.util.Map $r9;
        java.util.Set $r10;
        boolean $z0, $z1, $z2;
        java.lang.Object $r11, $r12, $r13;
        org.htmlcleaner.CleanerProperties $r14, $r15;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: org.w3c.dom.Element;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21934, 32859, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r9 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45844, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (java.util.Map$Entry) $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r5 = (java.lang.String) $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        r6 = (java.lang.String) $r13;
        $z1$sym = r0.<org.htmlcleaner.DomSerializer: acteve.symbolic.integer.Expression escapeXml$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.DomSerializer: int escapeXml$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 690);
        $z1 = r0.<org.htmlcleaner.DomSerializer: boolean escapeXml>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45845, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.DomSerializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 691);
        $r14 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21944, null, null, null);
        r6 = staticinvoke <org.htmlcleaner.Utils: java.lang.String escapeXml(java.lang.String,org.htmlcleaner.CleanerProperties,boolean)>(r6, $r14, 1);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45845, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21937, null);
        r7 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r5);
        _sym_tmp_4 = null;
        if r7 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45846, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.DomSerializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 691);
        $r15 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21876, null);
        $z2 = virtualinvoke $r15.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21876);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45847, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21939, null, null);
        r8 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getNamespaceURIOnPath(java.lang.String)>(r7);
        _sym_tmp_4 = null;
        if r8 != null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45848, 0);
        r8 = r7;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45848, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21945, null, null, null, null);
        interfaceinvoke r2.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(r8, r5, r6);
        goto label9;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45847, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21940, null);
        $r16 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16108, null, null, null);
        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r16, r6);
        goto label9;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45846, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16108, null, null, null);
        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>(r5, r6);

     label9:
        goto label0;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45844, 1);
        goto label11;

     label11:
        return;
    }

    private void createSubnodes(org.w3c.dom.Document, org.w3c.dom.Element, java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z10$sym, $z9$sym, $z8$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, z0$sym, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.DomSerializer r0;
        org.w3c.dom.Document r1;
        org.w3c.dom.Element r2, r21;
        java.util.List r3, $r22, r24;
        java.util.Iterator r4;
        java.lang.Object r5;
        org.htmlcleaner.CommentNode r6;
        org.w3c.dom.Comment r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.StringBuilder $r8;
        java.lang.String $r9, r11, r12, $r14, $r15;
        org.htmlcleaner.CleanerProperties $r13, $r16;
        org.w3c.dom.Text $r18;
        org.htmlcleaner.TagNode r20;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.w3c.dom.Document;
        r2 := @parameter1: org.w3c.dom.Element;
        r3 := @parameter2: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21935, 32860, 4);
        _sym_tmp_4 = null;
        if r3 == null goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45849, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45850, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z2$sym = null;
        $z2 = r5 instanceof org.htmlcleaner.CommentNode;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45851, 0);
        r6 = (org.htmlcleaner.CommentNode) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21897, null);
        $r8 = virtualinvoke r6.<org.htmlcleaner.CommentNode: java.lang.StringBuilder getContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21946, null, null);
        r7 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21933, null, null);
        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);
        goto label20;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45851, 1);
        goto label2;

     label2:
        $z3$sym = null;
        $z3 = r5 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45852, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21947, null);
        r11 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNodeName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r12 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.DomSerializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 691);
        $r13 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21844, null);
        $z4 = virtualinvoke $r13.<org.htmlcleaner.CleanerProperties: boolean isUseCdataForScriptAndStyle()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21844);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45853, 0);
        $r14 = "script";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z5 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r11);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45854, 0);
        $r15 = "style";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z6 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r11);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45855, 0);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45854, 1);
        goto label4;

     label4:
        $z7$sym = null;
        $z7 = 1;
        goto label8;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45853, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45855, 1);
        goto label7;

     label7:
        $z7$sym = null;
        $z7 = 0;

     label8:
        z0$sym = $z7$sym;
        z0 = $z7;
        $z8$sym = r0.<org.htmlcleaner.DomSerializer: acteve.symbolic.integer.Expression escapeXml$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.DomSerializer: int escapeXml$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 690);
        $z8 = r0.<org.htmlcleaner.DomSerializer: boolean escapeXml>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45856, 0);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45857, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.DomSerializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 691);
        $r16 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21944, null, null, null);
        r12 = staticinvoke <org.htmlcleaner.Utils: java.lang.String escapeXml(java.lang.String,org.htmlcleaner.CleanerProperties,boolean)>(r12, $r16, 1);
        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45856, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45857, 1);
        goto label11;

     label11:
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45858, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21948, null, null);
        $r18 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>(r12);
        goto label14;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45858, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21949, null, null);
        $r18 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r12);

     label14:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21933, null, null);
        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);
        goto label20;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45852, 1);
        goto label16;

     label16:
        $z9$sym = null;
        $z9 = r5 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45859, 0);
        r20 = (org.htmlcleaner.TagNode) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21932, null, null, null);
        r21 = specialinvoke r0.<org.htmlcleaner.DomSerializer: org.w3c.dom.Element createElement(org.htmlcleaner.TagNode,org.w3c.dom.Document)>(r20, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21934, null, null, null);
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void setAttributes(org.htmlcleaner.TagNode,org.w3c.dom.Element)>(r20, r21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r22 = virtualinvoke r20.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21935, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void createSubnodes(org.w3c.dom.Document,org.w3c.dom.Element,java.util.List)>(r1, r21, $r22);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21933, null, null);
        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r21);
        goto label20;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45859, 1);
        goto label18;

     label18:
        $z10$sym = null;
        $z10 = r5 instanceof java.util.List;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45860, 0);
        r24 = (java.util.List) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21935, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void createSubnodes(org.w3c.dom.Document,org.w3c.dom.Element,java.util.List)>(r1, r2, r24);
        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45860, 1);
        goto label20;

     label20:
        goto label0;

        goto label23;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45849, 1);
        goto label23;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45850, 1);
        goto label23;

     label23:
        return;
    }
}
public class org.htmlcleaner.EndTagToken extends org.htmlcleaner.TagToken
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.EndTagToken r0;

        r0 := @this: org.htmlcleaner.EndTagToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32861, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<org.htmlcleaner.TagToken: void <init>()>();
        return;
    }

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.EndTagToken r0;
        java.lang.String r1, $r3;

        r0 := @this: org.htmlcleaner.EndTagToken;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 32862, 2);
        _sym_tmp_1 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45861, 0);
        $r3 = null;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45861, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke r0.<org.htmlcleaner.TagToken: void <init>(java.lang.String)>($r3);
        return;
    }

    void setAttribute(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.EndTagToken r0;
        java.lang.String r1, r2;

        r0 := @this: org.htmlcleaner.EndTagToken;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(16108, 32863, 3);
        return;
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.EndTagToken r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;

        r0 := @this: org.htmlcleaner.EndTagToken;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21836, 32864, 3);
        return;
    }
}
final class org.htmlcleaner.HtmlCleaner$1 extends org.htmlcleaner.HtmlTokenizer
{
    final org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues;
    final org.htmlcleaner.HtmlCleaner this$0;
    final int val$cleanTimeValues$a3tid;
    final int this$0$a3tid;

    void <init>(org.htmlcleaner.HtmlCleaner, java.io.Reader, org.htmlcleaner.CleanerProperties, org.htmlcleaner.CleanerTransformations, org.htmlcleaner.ITagInfoProvider, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$1 r0;
        org.htmlcleaner.HtmlCleaner r1;
        java.io.Reader r2;
        org.htmlcleaner.CleanerProperties r3;
        org.htmlcleaner.CleanerTransformations r4;
        org.htmlcleaner.ITagInfoProvider r5;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner$1;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r2 := @parameter1: java.io.Reader;
        r3 := @parameter2: org.htmlcleaner.CleanerProperties;
        r4 := @parameter3: org.htmlcleaner.CleanerTransformations;
        r5 := @parameter4: org.htmlcleaner.ITagInfoProvider;
        r6 := @parameter5: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21951, 32865, 7);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 692);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$1: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(692);
        r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner this$0> = r1;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$1: int val$cleanTimeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 693);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$1: int val$cleanTimeValues$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(693);
        r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues> = r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21950, null, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void <init>(java.io.Reader,org.htmlcleaner.CleanerProperties,org.htmlcleaner.CleanerTransformations,org.htmlcleaner.ITagInfoProvider)>(r2, r3, r4, r5);
        return;
    }

    void makeTree(java.util.List)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        acteve.symbolic.integer.Expression $i1$sym, $i0$sym;
        org.htmlcleaner.HtmlCleaner$1 r0;
        java.util.List r1;
        org.htmlcleaner.HtmlCleaner $r2;
        java.util.ListIterator $r3;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner$1;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21953, 32866, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 692);
        $r2 = r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        $i1 = $i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11271, null, $i1$sym);
        $r3 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator(int)>($i1);
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$1: int val$cleanTimeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 693);
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21952, null, null, null, null);
        virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: void makeTree(java.util.List,java.util.ListIterator,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, $r3, $r4);
        return;
    }

    org.htmlcleaner.TagNode createTagNode(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$1 r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues $r3;
        org.htmlcleaner.TagNode $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner$1;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21955, 32867, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 692);
        $r2 = r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner this$0>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$1: int val$cleanTimeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 693);
        $r3 = r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21954, null, null, null);
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode access$1400(org.htmlcleaner.HtmlCleaner,java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>($r2, r1, $r3);
        return $r4;
    }
}
class org.htmlcleaner.HtmlCleaner$CleanTimeValues extends java.lang.Object
{
    private org.htmlcleaner.HtmlCleaner$OpenTags _openTags;
    private boolean _headOpened;
    private boolean _bodyOpened;
    private java.util.Set _headTags;
    private java.util.Set allTags;
    private org.htmlcleaner.TagNode htmlNode;
    private org.htmlcleaner.TagNode bodyNode;
    private org.htmlcleaner.TagNode headNode;
    private org.htmlcleaner.TagNode rootNode;
    private java.util.Set pruneTagSet;
    private java.util.Set pruneNodeSet;
    final org.htmlcleaner.HtmlCleaner this$0;
    private int _openTags$a3tid;
    private acteve.symbolic.integer.Expression _headOpened$sym;
    private int _headOpened$a3tid;
    private acteve.symbolic.integer.Expression _bodyOpened$sym;
    private int _bodyOpened$a3tid;
    private int _headTags$a3tid;
    private int allTags$a3tid;
    private int htmlNode$a3tid;
    private int bodyNode$a3tid;
    private int headNode$a3tid;
    private int rootNode$a3tid;
    private int pruneTagSet$a3tid;
    private int pruneNodeSet$a3tid;
    final int this$0$a3tid;

    private void <init>(org.htmlcleaner.HtmlCleaner)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.HtmlCleaner r1;
        java.util.LinkedHashSet $r2;
        java.util.TreeSet $r3;
        java.util.HashSet $r4, $r5;

        r0 := @this: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21956, 32868, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 694);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(694);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: acteve.symbolic.integer.Expression _headOpened$sym> = null;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _headOpened$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 695);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _headOpened$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(695);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _headOpened> = 0;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: acteve.symbolic.integer.Expression _bodyOpened$sym> = null;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _bodyOpened$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 696);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _bodyOpened$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(696);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _bodyOpened> = 0;
        $r2 = new java.util.LinkedHashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _headTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 697);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _headTags$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(697);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set _headTags> = $r2;
        $r3 = new java.util.TreeSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.TreeSet: void <init>()>();
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int allTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 698);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int allTags$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(698);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set allTags> = $r3;
        $r4 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.util.HashSet: void <init>()>();
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int pruneTagSet$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 699);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int pruneTagSet$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(699);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set pruneTagSet> = $r4;
        $r5 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.util.HashSet: void <init>()>();
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int pruneNodeSet$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 700);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int pruneNodeSet$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(700);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set pruneNodeSet> = $r5;
        return;
    }

    void <init>(org.htmlcleaner.HtmlCleaner, org.htmlcleaner.HtmlCleaner$1)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.HtmlCleaner r1;
        org.htmlcleaner.HtmlCleaner$1 r2;

        r0 := @this: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21957, 32869, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21956, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: void <init>(org.htmlcleaner.HtmlCleaner)>(r1);
        return;
    }

    static org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.HtmlCleaner$OpenTags r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21958, 32870, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _openTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 701);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _openTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(701);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags _openTags> = r1;
        return r1;
    }

    static boolean access$602(org.htmlcleaner.HtmlCleaner$CleanTimeValues, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        boolean z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21959, 32871, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: acteve.symbolic.integer.Expression _headOpened$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _headOpened$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 695);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _headOpened$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(695);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _headOpened> = z0;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21959, z0$sym);
        return z0;
    }

    static boolean access$702(org.htmlcleaner.HtmlCleaner$CleanTimeValues, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        boolean z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21960, 32872, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: acteve.symbolic.integer.Expression _bodyOpened$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _bodyOpened$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 696);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _bodyOpened$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(696);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _bodyOpened> = z0;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21960, z0$sym);
        return z0;
    }

    static java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        java.util.Set $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21961, 32873, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _headTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 697);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set _headTags>;
        return $r1;
    }

    static java.util.Set access$900(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        java.util.Set $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21962, 32874, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int allTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 698);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set allTags>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1002(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21963, 32875, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int htmlNode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 702);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int htmlNode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(702);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode htmlNode> = r1;
        return r1;
    }

    static org.htmlcleaner.TagNode access$1102(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21964, 32876, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int bodyNode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 703);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int bodyNode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(703);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode bodyNode> = r1;
        return r1;
    }

    static org.htmlcleaner.TagNode access$1202(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21965, 32877, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int headNode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 704);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int headNode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(704);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode headNode> = r1;
        return r1;
    }

    static org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21966, 32878, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int rootNode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 705);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int rootNode$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(705);
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode rootNode> = r1;
        return r1;
    }

    static org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21967, 32879, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int headNode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 704);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode headNode>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21968, 32880, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int htmlNode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 702);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode htmlNode>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21969, 32881, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int bodyNode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 703);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode bodyNode>;
        return $r1;
    }

    static java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        java.util.Set $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21970, 32882, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int pruneNodeSet$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 700);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set pruneNodeSet>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1300(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21971, 32883, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int rootNode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 705);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode rootNode>;
        return $r1;
    }

    static java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        java.util.Set $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21972, 32884, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int pruneTagSet$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 699);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set pruneTagSet>;
        return $r1;
    }

    static org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.HtmlCleaner$OpenTags $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21973, 32885, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _openTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 701);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags _openTags>;
        return $r1;
    }

    static boolean access$600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21974, 32886, 1);
        $z0$sym = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: acteve.symbolic.integer.Expression _headOpened$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _headOpened$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 695);
        $z0 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _headOpened>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21974, $z0$sym);
        return $z0;
    }

    static boolean access$700(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21975, 32887, 1);
        $z0$sym = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: acteve.symbolic.integer.Expression _bodyOpened$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: int _bodyOpened$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 696);
        $z0 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _bodyOpened>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21975, $z0$sym);
        return $z0;
    }
}
class org.htmlcleaner.HtmlCleaner$OpenTags extends java.lang.Object
{
    private java.util.List list;
    private org.htmlcleaner.HtmlCleaner$TagPos last;
    private java.util.Set set;
    final org.htmlcleaner.HtmlCleaner this$0;
    private int list$a3tid;
    private int last$a3tid;
    private int set$a3tid;
    final int this$0$a3tid;

    private void <init>(org.htmlcleaner.HtmlCleaner)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner r1;
        java.util.ArrayList $r2;
        java.util.HashSet $r3;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21956, 32888, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 706);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(706);
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 707);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(707);
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list> = $r2;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int last$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 708);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int last$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(708);
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last> = null;
        $r3 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.HashSet: void <init>()>();
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int set$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 709);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int set$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(709);
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.Set set> = $r3;
        return;
    }

    private boolean isEmpty()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(755, 32889, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 707);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(755, $z0$sym);
        return $z0;
    }

    private void addTag(java.lang.String, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        acteve.symbolic.integer.Expression i0$sym;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner$TagPos $r2, $r5;
        org.htmlcleaner.HtmlCleaner $r3;
        java.util.List $r4;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21977, 32890, 3);
        i0$sym = a3targs$symargs[2];
        $r2 = new org.htmlcleaner.HtmlCleaner$TagPos;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 706);
        $r3 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21976, null, null, i0$sym, null);
        specialinvoke $r2.<org.htmlcleaner.HtmlCleaner$TagPos: void <init>(org.htmlcleaner.HtmlCleaner,int,java.lang.String)>($r3, i0, r1);
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int last$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 708);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int last$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(708);
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last> = $r2;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 707);
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int last$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 708);
        $r5 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int set$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 709);
        $r6 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.Set set>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r1);
        return;
    }

    private void removeTag(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $r13$sym, $i2$sym, $i1$sym, $z2$sym, $z1$sym, $r6$sym, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1, $r7;
        java.util.ListIterator r2;
        org.htmlcleaner.HtmlCleaner$TagPos r3, $r10;
        java.util.List $r4, $r5, $r9, $r11, $r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6, $r13;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21980, 32891, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 707);
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 707);
        $r5 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11271, null, $i0$sym);
        r2 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21978, null);
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21978);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45862, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        $r6 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21834);
        r3 = (org.htmlcleaner.HtmlCleaner$TagPos) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21979, null);
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45863, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(837, null);
        interfaceinvoke r2.<java.util.ListIterator: void remove()>();
        goto label4;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45863, 1);
        goto label2;

     label2:
        goto label0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45862, 1);
        goto label4;

     label4:
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 707);
        $r9 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z2 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45864, 0);
        $r10 = null;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45864, 1);
        goto label6;

     label6:
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 707);
        $r11 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 707);
        $r12 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, $i2$sym);
        $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i2);
        $r13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r10 = (org.htmlcleaner.HtmlCleaner$TagPos) $r13;

     label7:
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int last$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 708);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int last$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(708);
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last> = $r10;
        return;
    }

    private org.htmlcleaner.HtmlCleaner$TagPos findFirstTagPos()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $r4$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.List $r1, $r3;
        boolean $z0;
        org.htmlcleaner.HtmlCleaner$TagPos $r2;
        java.lang.Object $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21981, 32892, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 707);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45865, 0);
        $r2 = null;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45865, 1);
        goto label1;

     label1:
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 707);
        $r3 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);
        $r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r2 = (org.htmlcleaner.HtmlCleaner$TagPos) $r4;

     label2:
        return $r2;
    }

    private org.htmlcleaner.HtmlCleaner$TagPos getLastTagPos()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos $r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21982, 32893, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int last$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 708);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last>;
        return $r1;
    }

    private org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z2$sym, $z1$sym, $r10$sym, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1, r3, $r11, $r12;
        java.util.ListIterator r2;
        org.htmlcleaner.TagInfo r4;
        org.htmlcleaner.HtmlCleaner$TagPos r5;
        java.util.List $r6, $r7;
        org.htmlcleaner.HtmlCleaner $r8;
        org.htmlcleaner.ITagInfoProvider $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21985, 32894, 2);
        _sym_tmp_4 = null;
        if r1 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45866, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 707);
        $r6 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 707);
        $r7 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11271, null, $i0$sym);
        r2 = interfaceinvoke $r6.<java.util.List: java.util.ListIterator listIterator(int)>($i0);
        r3 = null;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 706);
        $r8 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21983, null);
        $r9 = staticinvoke <org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider access$000(org.htmlcleaner.HtmlCleaner)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r4 = interfaceinvoke $r9.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r1);
        _sym_tmp_4 = null;
        if r4 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45867, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21984, null);
        r3 = virtualinvoke r4.<org.htmlcleaner.TagInfo: java.lang.String getFatalTag()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45867, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21978, null);
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21978);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45868, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        $r10 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        $r10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21834);
        r5 = (org.htmlcleaner.HtmlCleaner$TagPos) $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21979, null);
        $r11 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45869, 0);
        return r5;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45869, 1);
        goto label3;

     label3:
        _sym_tmp_4 = null;
        if r3 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45870, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21979, null);
        $r12 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r12);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45871, 0);
        return null;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45870, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45871, 1);
        goto label6;

     label6:
        goto label1;

        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45866, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45868, 1);
        goto label9;

     label9:
        return null;
    }

    private boolean tagExists(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner$TagPos r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21986, 32895, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21985, null, null);
        r2 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String)>(r1);
        _sym_tmp_1 = null;
        if r2 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45872, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45872, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21986, $z0$sym);
        return $z0;
    }

    private org.htmlcleaner.HtmlCleaner$TagPos findTagToPlaceRubbish()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $r6$sym, $z1$sym, $i0$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos r1, r2;
        java.util.ListIterator r3;
        boolean $z0, $z1, $z2;
        java.util.List $r4, $r5;
        java.lang.Object $r6;
        org.htmlcleaner.TagInfo $r7, $r8;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21989, 32896, 1);
        r1 = null;
        r2 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45873, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 707);
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 707);
        $r5 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11271, null, $i0$sym);
        r3 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21978, null);
        $z1 = interfaceinvoke r3.<java.util.ListIterator: boolean hasPrevious()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21978);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45874, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        $r6 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21834);
        r1 = (org.htmlcleaner.HtmlCleaner$TagPos) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21987, null);
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r1);
        _sym_tmp_3 = null;
        if $r7 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45875, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21987, null);
        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21988, null);
        $z2 = virtualinvoke $r8.<org.htmlcleaner.TagInfo: boolean allowsAnything()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21988);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45876, 0);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45875, 1);
        goto label2;

     label2:
        _sym_tmp_3 = null;
        if r2 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45877, 0);
        return r2;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45876, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45877, 1);
        goto label5;

     label5:
        r2 = r1;
        goto label0;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45873, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45874, 1);
        goto label8;

     label8:
        return r1;
    }

    private boolean tagEncountered(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21990, 32897, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int set$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 709);
        $r2 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.Set set>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21990, $z0$sym);
        return $z0;
    }

    private boolean someAlreadyOpen(java.util.Set)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $r5$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.Set r1;
        java.util.Iterator r2;
        org.htmlcleaner.HtmlCleaner$TagPos r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21991, 32898, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 707);
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45878, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r3 = (org.htmlcleaner.HtmlCleaner$TagPos) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21979, null);
        $r6 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r6);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45879, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21991, null);
        return 1;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45879, 1);
        goto label2;

     label2:
        goto label0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45878, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21991, null);
        return 0;
    }

    void <init>(org.htmlcleaner.HtmlCleaner, org.htmlcleaner.HtmlCleaner$1)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner r1;
        org.htmlcleaner.HtmlCleaner$1 r2;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21957, 32899, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21956, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: void <init>(org.htmlcleaner.HtmlCleaner)>(r1);
        return;
    }

    static boolean access$1700(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21992, 32900, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21986, null, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean tagExists(java.lang.String)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21986);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21992, $z0$sym);
        return $z0;
    }

    static org.htmlcleaner.HtmlCleaner$TagPos access$1800(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner$TagPos $r2;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21993, 32901, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21985, null, null);
        $r2 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String)>(r1);
        return $r2;
    }

    static java.util.List access$2000(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.List $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21994, 32902, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: int list$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 707);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        return $r1;
    }

    static org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21995, 32903, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21982, null);
        $r1 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos getLastTagPos()>();
        return $r1;
    }

    static org.htmlcleaner.HtmlCleaner$TagPos access$2200(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21996, 32904, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21989, null);
        $r1 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos findTagToPlaceRubbish()>();
        return $r1;
    }

    static boolean access$2300(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21997, 32905, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21997, $z0$sym);
        return $z0;
    }

    static boolean access$2400(org.htmlcleaner.HtmlCleaner$OpenTags, java.util.Set)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.Set r1;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21998, 32906, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21991, null, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean someAlreadyOpen(java.util.Set)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21991);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21998, $z0$sym);
        return $z0;
    }

    static boolean access$2500(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21999, 32907, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21990, null, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean tagEncountered(java.lang.String)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21990);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21999, $z0$sym);
        return $z0;
    }

    static void access$2600(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i0$sym;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22000, 32908, 3);
        i0$sym = a3targs$symargs[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21977, null, null, i0$sym);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: void addTag(java.lang.String,int)>(r1, i0);
        return;
    }

    static void access$2700(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22001, 32909, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21980, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: void removeTag(java.lang.String)>(r1);
        return;
    }

    static org.htmlcleaner.HtmlCleaner$TagPos access$2800(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22002, 32910, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21981, null);
        $r1 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos findFirstTagPos()>();
        return $r1;
    }
}
class org.htmlcleaner.HtmlCleaner$TagPos extends java.lang.Object
{
    private int position;
    private java.lang.String name;
    private org.htmlcleaner.TagInfo info;
    final org.htmlcleaner.HtmlCleaner this$0;
    private acteve.symbolic.integer.Expression position$sym;
    private int position$a3tid;
    private int name$a3tid;
    private int info$a3tid;
    final int this$0$a3tid;

    void <init>(org.htmlcleaner.HtmlCleaner, int, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        acteve.symbolic.integer.Expression i0$sym;
        org.htmlcleaner.HtmlCleaner$TagPos r0;
        org.htmlcleaner.HtmlCleaner r1;
        java.lang.String r2;
        org.htmlcleaner.ITagInfoProvider $r3;
        org.htmlcleaner.TagInfo $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner$TagPos;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21976, 32911, 4);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 710);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(710);
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.HtmlCleaner this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: acteve.symbolic.integer.Expression position$sym> = i0$sym;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int position$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 711);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: int position$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(711);
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: int position> = i0;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 712);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: int name$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(712);
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String name> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21983, null);
        $r3 = staticinvoke <org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider access$000(org.htmlcleaner.HtmlCleaner)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        $r4 = interfaceinvoke $r3.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r2);
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int info$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 713);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: int info$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(713);
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo info> = $r4;
        return;
    }

    static java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$TagPos r0;
        java.lang.String $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$TagPos;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21979, 32912, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 712);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String name>;
        return $r1;
    }

    static org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner$TagPos r0;
        org.htmlcleaner.TagInfo $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$TagPos;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21987, 32913, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int info$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 713);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo info>;
        return $r1;
    }

    static int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        org.htmlcleaner.HtmlCleaner$TagPos r0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$TagPos;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22003, 32914, 1);
        $i0$sym = r0.<org.htmlcleaner.HtmlCleaner$TagPos: acteve.symbolic.integer.Expression position$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int position$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 711);
        $i0 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int position>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22003, $i0$sym);
        return $i0;
    }
}
public class org.htmlcleaner.HtmlCleaner extends java.lang.Object
{
    public static final java.lang.String DEFAULT_CHARSET;
    private org.htmlcleaner.CleanerProperties properties;
    private org.htmlcleaner.ITagInfoProvider tagInfoProvider;
    private org.htmlcleaner.CleanerTransformations transformations;
    public static final int DEFAULT_CHARSET$a3tid;
    private int properties$a3tid;
    private int tagInfoProvider$a3tid;
    private int transformations$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32915, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22004, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.CleanerProperties)>(null, null);
        return;
    }

    public void <init>(org.htmlcleaner.ITagInfoProvider)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.ITagInfoProvider r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.ITagInfoProvider;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21890, 32916, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22004, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.CleanerProperties)>(r1, null);
        return;
    }

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 32917, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22004, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.CleanerProperties)>(null, r1);
        return;
    }

    public void <init>(org.htmlcleaner.ITagInfoProvider, org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.ITagInfoProvider r1, $r4, $r8;
        org.htmlcleaner.CleanerProperties r2, $r6, $r7;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.ITagInfoProvider;
        r2 := @parameter1: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22004, 32918, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 714);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner: int transformations$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(714);
        r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerTransformations transformations> = null;
        _sym_tmp_7 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45880, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21920);
        $r4 = staticinvoke <org.htmlcleaner.DefaultTagProvider: org.htmlcleaner.DefaultTagProvider getInstance()>();
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45880, 1);
        goto label1;

     label1:
        $r4 = r1;

     label2:
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 715);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(715);
        r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider> = $r4;
        _sym_tmp_7 = null;
        if r2 != null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45881, 0);
        $r6 = new org.htmlcleaner.CleanerProperties;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<org.htmlcleaner.CleanerProperties: void <init>()>();
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45881, 1);
        goto label4;

     label4:
        $r6 = r2;

     label5:
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 716);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(716);
        r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties> = $r6;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 716);
        $r7 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 715);
        $r8 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        _sym_tmp_6 = $r7.<org.htmlcleaner.CleanerProperties: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 651);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        $r7.<org.htmlcleaner.CleanerProperties: int tagInfoProvider$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(651);
        $r7.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider tagInfoProvider> = $r8;
        return;
    }

    public org.htmlcleaner.TagNode clean(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.String r1;
        java.io.StringReader $r2;
        java.io.IOException r3, $r5;
        org.htmlcleaner.TagNode $r4;
        org.htmlcleaner.HtmlCleanerException $r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21765, 32919, 2);

     label0:
        $r2 = new java.io.StringReader;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22005, null, null);
        $r4 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader)>($r2);

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = new org.htmlcleaner.HtmlCleanerException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(296, null, null);
        specialinvoke $r6.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.Throwable)>(r3);
        throw $r6;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public org.htmlcleaner.TagNode clean(java.io.File, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.io.File r1;
        java.lang.String r2;
        java.io.FileInputStream $r3, r4;
        java.io.InputStreamReader r5, $r6;
        org.htmlcleaner.TagNode $r7;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21895, 32920, 3);
        $r3 = new java.io.FileInputStream;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(994, null, null);
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(r1);
        r4 = $r3;
        $r6 = new java.io.InputStreamReader;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16778, null, null, null);
        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r4, r2);
        r5 = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22005, null, null);
        $r7 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader)>(r5);
        return $r7;
    }

    public org.htmlcleaner.TagNode clean(java.io.File) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        java.io.File r1;
        java.lang.String $r2;
        org.htmlcleaner.TagNode $r3;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22006, 32921, 2);
        _sym_tmp_1 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 675);
        $r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21895, null, null, null);
        $r3 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.File,java.lang.String)>(r1, $r2);
        return $r3;
    }

    public org.htmlcleaner.TagNode clean(java.net.URL, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        java.net.URL r1;
        java.lang.String r2, $r4;
        java.net.URLConnection r3;
        java.io.InputStream $r5;
        org.htmlcleaner.TagNode $r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21894, 32922, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        r3 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();
        _sym_tmp_2 = null;
        if r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45882, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22007, null, null);
        $r4 = virtualinvoke r3.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Type");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22008, null);
        r2 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getCharsetFromContentTypeString(java.lang.String)>($r4);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45882, 1);
        goto label1;

     label1:
        _sym_tmp_2 = null;
        if r2 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45883, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22009, null);
        r2 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getCharsetFromContent(java.net.URL)>(r1);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45883, 1);
        goto label3;

     label3:
        _sym_tmp_2 = null;
        if r2 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45884, 0);
        _sym_tmp_1 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 675);
        r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45884, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22010, null);
        $r5 = virtualinvoke r1.<java.net.URL: java.io.InputStream openStream()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22011, null, null, null);
        $r6 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream,java.lang.String)>($r5, r2);
        return $r6;
    }

    public org.htmlcleaner.TagNode clean(java.net.URL) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.net.URL r1;
        org.htmlcleaner.TagNode $r2;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.net.URL;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22012, 32923, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21894, null, null, null);
        $r2 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.net.URL,java.lang.String)>(r1, null);
        return $r2;
    }

    public org.htmlcleaner.TagNode clean(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.io.InputStream r1;
        java.lang.String r2;
        java.io.InputStreamReader $r3;
        org.htmlcleaner.TagNode $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22011, 32924, 3);
        $r3 = new java.io.InputStreamReader;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16778, null, null, null);
        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22005, null, null);
        $r4 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader)>($r3);
        return $r4;
    }

    public org.htmlcleaner.TagNode clean(java.io.InputStream) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        java.io.InputStream r1;
        java.lang.String $r2;
        org.htmlcleaner.TagNode $r3;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.InputStream;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32925, 2);
        _sym_tmp_1 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 675);
        $r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22011, null, null, null);
        $r3 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream,java.lang.String)>(r1, $r2);
        return $r3;
    }

    public org.htmlcleaner.TagNode clean(java.io.Reader) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.io.Reader r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues $r2;
        org.htmlcleaner.TagNode $r3;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.Reader;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22005, 32926, 2);
        $r2 = new org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21957, null, null, null);
        specialinvoke $r2.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: void <init>(org.htmlcleaner.HtmlCleaner,org.htmlcleaner.HtmlCleaner$1)>(r0, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22013, null, null, null);
        $r3 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, $r2);
        return $r3;
    }

    public org.htmlcleaner.TagNode clean(java.io.Reader, org.htmlcleaner.HtmlCleaner$CleanTimeValues) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $r32$sym, $z3$sym, $z2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        java.io.Reader r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.HtmlCleaner$OpenTags $r3;
        org.htmlcleaner.HtmlCleaner$1 r4, $r25;
        java.util.List r5;
        java.util.Iterator r6;
        org.htmlcleaner.TagNode r7, r8, $r14, $r16, $r18, $r21, $r22, $r23, $r24, $r33, $r35;
        java.util.Set $r10, $r11, $r29, $r30, $r31;
        org.htmlcleaner.CleanerProperties $r12, $r26;
        java.lang.String $r13;
        org.htmlcleaner.CleanerTransformations $r27;
        org.htmlcleaner.ITagInfoProvider $r28;
        boolean $z2, $z3;
        java.lang.Object $r32;
        org.htmlcleaner.DoctypeToken $r34;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.Reader;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22013, 32927, 3);
        $r3 = new org.htmlcleaner.HtmlCleaner$OpenTags;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21957, null, null, null);
        specialinvoke $r3.<org.htmlcleaner.HtmlCleaner$OpenTags: void <init>(org.htmlcleaner.HtmlCleaner,org.htmlcleaner.HtmlCleaner$1)>(r0, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21958, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.HtmlCleaner$OpenTags)>(r2, $r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21959, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$602(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean)>(r2, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21960, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$702(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean)>(r2, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21961, null);
        $r10 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        interfaceinvoke $r10.<java.util.Set: void clear()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21962, null);
        $r11 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$900(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        interfaceinvoke $r11.<java.util.Set: void clear()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 716);
        $r12 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        _sym_tmp_2 = $r12.<org.htmlcleaner.CleanerProperties: int pruneTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 672);
        $r13 = $r12.<org.htmlcleaner.CleanerProperties: java.lang.String pruneTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22014, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void setPruneTags(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>($r13, r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22015, null, null, null);
        $r14 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>("html", r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21963, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1002(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r2, $r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22015, null, null, null);
        $r16 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>("body", r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21964, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1102(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r2, $r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22015, null, null, null);
        $r18 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>("head", r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21965, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1202(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r2, $r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21966, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r2, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21968, null);
        $r21 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21967, null);
        $r22 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22016, null, null);
        virtualinvoke $r21.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>($r22);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21968, null);
        $r23 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21969, null);
        $r24 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22016, null, null);
        virtualinvoke $r23.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>($r24);
        $r25 = new org.htmlcleaner.HtmlCleaner$1;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 716);
        $r26 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlCleaner: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 714);
        $r27 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerTransformations transformations>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 715);
        $r28 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21951, null, null, null, null, null, null, null);
        specialinvoke $r25.<org.htmlcleaner.HtmlCleaner$1: void <init>(org.htmlcleaner.HtmlCleaner,java.io.Reader,org.htmlcleaner.CleanerProperties,org.htmlcleaner.CleanerTransformations,org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r0, r1, $r26, $r27, $r28, r2);
        r4 = $r25;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke r4.<org.htmlcleaner.HtmlTokenizer: void start()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22017, null);
        r5 = virtualinvoke r4.<org.htmlcleaner.HtmlTokenizer: java.util.List getTokenList()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22018, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void closeAll(java.util.List,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r5, r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22019, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void createDocumentNodes(java.util.List,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r5, r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22020, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void calculateRootNode(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21970, null);
        $r29 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        _sym_tmp_6 = null;
        if $r29 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45885, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21970, null);
        $r30 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z2 = interfaceinvoke $r30.<java.util.Set: boolean isEmpty()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45886, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21970, null);
        $r31 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r6 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45887, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r32 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        $r32$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r7 = (org.htmlcleaner.TagNode) $r32;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r8 = virtualinvoke r7.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        _sym_tmp_6 = null;
        if r8 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45888, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22021, null, null);
        virtualinvoke r8.<org.htmlcleaner.TagNode: boolean removeChild(java.lang.Object)>(r7);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45888, 1);
        goto label2;

     label2:
        goto label0;

        goto label6;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45885, 1);
        goto label6;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45886, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45887, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21971, null);
        $r33 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1300(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22022, null);
        $r34 = virtualinvoke r4.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.DoctypeToken getDocType()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22023, null, null);
        virtualinvoke $r33.<org.htmlcleaner.TagNode: void setDocType(org.htmlcleaner.DoctypeToken)>($r34);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21971, null);
        $r35 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1300(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        return $r35;
    }

    private org.htmlcleaner.TagNode createTagNode(java.lang.String, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.String r1, $r7;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.TagNode $r3, r4;
        java.util.Set $r5, $r6, $r8;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22015, 32928, 3);
        $r3 = new org.htmlcleaner.TagNode;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<org.htmlcleaner.TagNode: void <init>(java.lang.String)>(r1);
        r4 = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21972, null);
        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        _sym_tmp_1 = null;
        if $r5 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45889, 0);
        _sym_tmp_1 = null;
        if r1 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45890, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21972, null);
        $r6 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45891, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21970, null);
        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45889, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45890, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45891, 1);
        goto label3;

     label3:
        return r4;
    }

    private org.htmlcleaner.TagNode makeTagNodeCopy(org.htmlcleaner.TagNode, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1, r3;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.util.Set $r4, $r5, $r7;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22025, 32929, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22024, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode makeCopy()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21972, null);
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        _sym_tmp_1 = null;
        if $r4 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45892, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21972, null);
        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45893, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21970, null);
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r3);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45892, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45893, 1);
        goto label2;

     label2:
        return r3;
    }

    private void calculateRootNode(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $z1$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r1;
        java.util.List r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        org.htmlcleaner.TagNode $r5, $r8, $r9;
        org.htmlcleaner.CleanerProperties $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22020, 32930, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21968, null);
        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21966, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r1, $r5);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 716);
        $r7 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z0$sym = $r7.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitHtmlEnvelope$sym>;
        _sym_tmp_2 = $r7.<org.htmlcleaner.CleanerProperties: int omitHtmlEnvelope$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 665);
        $z0 = $r7.<org.htmlcleaner.CleanerProperties: boolean omitHtmlEnvelope>;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45894, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21969, null);
        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        r2 = virtualinvoke $r8.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        _sym_tmp_3 = null;
        if r2 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45895, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45896, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z2$sym = null;
        $z2 = r4 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45897, 0);
        $r9 = (org.htmlcleaner.TagNode) r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21966, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r1, $r9);
        goto label6;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45897, 1);
        goto label2;

     label2:
        goto label0;

        goto label6;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45894, 1);
        goto label6;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45895, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45896, 1);
        goto label6;

     label6:
        return;
    }

    private void addAttributesToTag(org.htmlcleaner.TagNode, java.util.Map)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $r11$sym, $z1$sym, $r10$sym, $r9$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1;
        java.util.Map r2, r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.String r6, r7;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10, $r11;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.util.Map;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22026, 32931, 3);
        _sym_tmp_1 = null;
        if r2 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45898, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45899, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r5 = (java.util.Map$Entry) $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r6 = (java.lang.String) $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(496, null, null);
        $z1 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(496);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45900, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        r7 = (java.lang.String) $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16108, null, null, null);
        virtualinvoke r1.<org.htmlcleaner.TagNode: void setAttribute(java.lang.String,java.lang.String)>(r6, r7);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45900, 1);
        goto label2;

     label2:
        goto label0;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45898, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45899, 1);
        goto label5;

     label5:
        return;
    }

    private boolean isFatalTagSatisfied(org.htmlcleaner.TagInfo, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagInfo r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.lang.String r3;
        boolean $z0;
        org.htmlcleaner.HtmlCleaner$OpenTags $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22027, 32932, 3);
        _sym_tmp_1 = null;
        if r1 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45901, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21984, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getFatalTag()>();
        _sym_tmp_1 = null;
        if r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45902, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45902, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21992, null, null);
        $z0 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: boolean access$1700(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r4, r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21992);

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22027, $z0$sym);
        return $z0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45901, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22027, null);
        return 1;
    }

    private boolean mustAddRequiredParent(org.htmlcleaner.TagInfo, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z2$sym, $i2$sym, $z1$sym, $r13$sym, $z0$sym, $i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagInfo r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.lang.String r3, r4, $r14;
        int i0, $i1, $i2;
        org.htmlcleaner.HtmlCleaner$TagPos r5, r6;
        org.htmlcleaner.HtmlCleaner$OpenTags $r7, $r8, $r10;
        java.util.List $r9, $r11;
        java.util.ListIterator r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r13;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22030, 32933, 3);
        _sym_tmp_1 = null;
        if r1 == null goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45903, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22028, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getRequiredParent()>();
        _sym_tmp_1 = null;
        if r3 == null goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45904, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21984, null);
        r4 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getFatalTag()>();
        i0$sym = null;
        i0 = -1;
        _sym_tmp_1 = null;
        if r4 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45905, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21993, null, null);
        r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$1800(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r7, r4);
        _sym_tmp_1 = null;
        if r5 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45906, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22003, null);
        i0 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)>(r5);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22003);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45905, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45906, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21994, null);
        $r9 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List access$2000(org.htmlcleaner.HtmlCleaner$OpenTags)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r10 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21994, null);
        $r11 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List access$2000(org.htmlcleaner.HtmlCleaner$OpenTags)>($r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11271, null, $i1$sym);
        r12 = interfaceinvoke $r9.<java.util.List: java.util.ListIterator listIterator(int)>($i1);

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21978, null);
        $z0 = interfaceinvoke r12.<java.util.ListIterator: boolean hasPrevious()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21978);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45907, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        $r13 = interfaceinvoke r12.<java.util.ListIterator: java.lang.Object previous()>();
        $r13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21834);
        r6 = (org.htmlcleaner.HtmlCleaner$TagPos) $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21979, null);
        $r14 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22029, null, null);
        $z1 = virtualinvoke r1.<org.htmlcleaner.TagInfo: boolean isHigher(java.lang.String)>($r14);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22029);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45908, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22003, null);
        $i2 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)>(r6);
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22003);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, i0$sym, $i2, i0);
        if $i2 > i0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45909, 0);
        $z2$sym = null;
        $z2 = 1;
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45909, 1);
        goto label5;

     label5:
        $z2$sym = null;
        $z2 = 0;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22030, $z2$sym);
        return $z2;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45908, 1);
        goto label8;

     label8:
        goto label3;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45907, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22030, null);
        return 1;

        goto label13;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45903, 1);
        goto label13;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45904, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22030, null);
        return 0;
    }

    private org.htmlcleaner.TagNode createTagNode(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22032, 32934, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22031, null);
        virtualinvoke r1.<org.htmlcleaner.TagNode: void setFormed()>();
        return r1;
    }

    private boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.BaseToken r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.HtmlCleaner$TagPos r3;
        org.htmlcleaner.HtmlCleaner$OpenTags $r4;
        org.htmlcleaner.TagInfo $r5, $r6;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.BaseToken;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22034, 32935, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21995, null);
        r3 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags)>($r4);
        _sym_tmp_1 = null;
        if r3 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45910, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21987, null);
        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r3);
        _sym_tmp_1 = null;
        if $r5 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45911, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21987, null);
        $r6 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22033, null, null);
        $z0 = virtualinvoke $r6.<org.htmlcleaner.TagInfo: boolean allowsItem(org.htmlcleaner.BaseToken)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22033);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22034, $z0$sym);
        return $z0;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45910, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45911, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22034, null);
        return 1;
    }

    private void saveToLastOpenTag(java.util.List, org.htmlcleaner.BaseToken, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $r11$sym, $i0$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1;
        org.htmlcleaner.BaseToken r2;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r3;
        org.htmlcleaner.HtmlCleaner$TagPos r4, r5;
        org.htmlcleaner.TagNode r6;
        org.htmlcleaner.HtmlCleaner$OpenTags $r7, $r10;
        org.htmlcleaner.TagInfo $r8, $r9;
        boolean $z0;
        int $i0;
        java.lang.Object $r11;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: org.htmlcleaner.BaseToken;
        r3 := @parameter2: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22037, 32936, 4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21995, null);
        r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags)>($r7);
        _sym_tmp_1 = null;
        if r4 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45912, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21987, null);
        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r4);
        _sym_tmp_1 = null;
        if $r8 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45913, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21987, null);
        $r9 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22035, null);
        $z0 = virtualinvoke $r9.<org.htmlcleaner.TagInfo: boolean isIgnorePermitted()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22035);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45914, 0);
        return;

        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45912, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45913, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45914, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r10 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21996, null);
        r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2200(org.htmlcleaner.HtmlCleaner$OpenTags)>($r10);
        _sym_tmp_1 = null;
        if r5 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45915, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22003, null);
        $i0 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)>(r5);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22003);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, $i0$sym);
        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        r6 = (org.htmlcleaner.TagNode) $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22036, null, null);
        virtualinvoke r6.<org.htmlcleaner.TagNode: void addItemForMoving(org.htmlcleaner.BaseToken)>(r2);
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45915, 1);
        goto label5;

     label5:
        return;
    }

    private boolean isStartToken(java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z2$sym, $z1$sym, $z0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.htmlcleaner.TagNode $r2;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22039, 32937, 2);
        r1$sym = a3targs$symargs[1];
        $z0$sym = null;
        $z0 = r1 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45916, 0);
        $r2 = (org.htmlcleaner.TagNode) r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22038, null);
        $z1 = virtualinvoke $r2.<org.htmlcleaner.TagNode: boolean isFormed()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22038);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45917, 0);
        $z2$sym = null;
        $z2 = 1;
        goto label3;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45916, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45917, 1);
        goto label2;

     label2:
        $z2$sym = null;
        $z2 = 0;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22039, $z2$sym);
        return $z2;
    }

    void makeTree(java.util.List, java.util.ListIterator, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_12, $z33$sym, $i6$sym, $z32$sym, $z31$sym, $i5$sym, i4$sym, $r60$sym, $z30$sym, $i3$sym, $z29$sym, $r57$sym, $z28$sym, $z27$sym, i2$sym, $z26$sym, $z25$sym, $z24$sym, $z23$sym, $z22$sym, $z21$sym, $z20$sym, $z19$sym, $z18$sym, $z17$sym, $z16$sym, $z14$sym, $z12$sym, $z11$sym, $z9$sym, $z8$sym, $z7$sym, $z6$sym, $r20$sym, $i1$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $r15$sym, $z0$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, i2, $i3, i4, $i5, $i6;
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1, r9, r55;
        java.util.ListIterator r2, r11;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r3;
        org.htmlcleaner.BaseToken r4;
        org.htmlcleaner.EndTagToken r5;
        java.lang.String r6, $r21, r25, $r34, $r37, $r40, $r43, r51, $r58;
        org.htmlcleaner.TagInfo r7, r27, $r32, r35;
        org.htmlcleaner.HtmlCleaner$TagPos r8, $r29, r31;
        org.htmlcleaner.TagNode r10, r13, r14, $r22, r24, $r38, $r41, $r44, r52, $r61, r64;
        java.util.ArrayList r12, $r56;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z14, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33;
        java.lang.Object $r15, $r20, $r57, $r60;
        org.htmlcleaner.ITagInfoProvider $r16, $r26, $r33;
        org.htmlcleaner.CleanerProperties $r17, $r18, $r46, $r47;
        org.htmlcleaner.HtmlCleaner$OpenTags $r19, $r28, $r30, $r48, $r50, $r65;
        java.util.Set $r36, $r49;
        java.util.Map $r39, $r42, $r45;
        java.util.Iterator r59;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: java.util.ListIterator;
        r3 := @parameter2: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21952, 32938, 4);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label87;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45918, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r15 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();
        $r15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (org.htmlcleaner.BaseToken) $r15;
        $z1$sym = null;
        $z1 = r4 instanceof org.htmlcleaner.EndTagToken;
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45919, 0);
        r5 = (org.htmlcleaner.EndTagToken) r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r6 = virtualinvoke r5.<org.htmlcleaner.EndTagToken: java.lang.String getName()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 715);
        $r16 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r7 = interfaceinvoke $r16.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r6);
        _sym_tmp_12 = null;
        if r7 != null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45920, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 716);
        $r17 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z2$sym = $r17.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitUnknownTags$sym>;
        _sym_tmp_3 = $r17.<org.htmlcleaner.CleanerProperties: int omitUnknownTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 658);
        $z2 = $r17.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags>;
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45921, 0);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45920, 1);
        goto label2;

     label2:
        _sym_tmp_12 = null;
        if r7 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45922, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22040, null);
        $z3 = virtualinvoke r7.<org.htmlcleaner.TagInfo: boolean isDeprecated()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22040);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45923, 0);
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 716);
        $r18 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z4$sym = $r18.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitDeprecatedTags$sym>;
        _sym_tmp_5 = $r18.<org.htmlcleaner.CleanerProperties: int omitDeprecatedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 660);
        $z4 = $r18.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags>;
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45924, 0);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45921, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label21;

        goto label8;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45922, 1);
        goto label8;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45923, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45924, 1);
        goto label8;

     label8:
        _sym_tmp_12 = null;
        if r7 == null goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45925, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22041, null);
        $z5 = virtualinvoke r7.<org.htmlcleaner.TagInfo: boolean allowsBody()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22041);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45926, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label21;

        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45925, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45926, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r19 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21993, null, null);
        r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$1800(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r19, r6);
        _sym_tmp_12 = null;
        if r8 == null goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45927, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22042, null, null, null, null, null);
        r9 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: java.util.List closeSnippet(java.util.List,org.htmlcleaner.HtmlCleaner$TagPos,java.lang.Object,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r8, r5, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke r9.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        i0 = $i1 - 1;

     label12:
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        if i0 < 1 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45928, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        $r20 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i0);
        $r20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        r10 = (org.htmlcleaner.TagNode) $r20;
        _sym_tmp_12 = null;
        if r7 == null goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45929, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r21 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22043, null, null);
        $z6 = virtualinvoke r7.<org.htmlcleaner.TagInfo: boolean isContinueAfter(java.lang.String)>($r21);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22043);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45930, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22025, null, null, null);
        $r22 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode makeTagNodeCopy(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r10, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13700, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>($r22);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        goto label15;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45929, 1);
        goto label15;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45930, 1);
        goto label15;

     label15:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, -1);
        i0 = i0 + -1;
        goto label12;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45928, 1);
        goto label17;

     label17:
        goto label21;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45927, 1);
        goto label19;

     label19:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22034, null, null, null);
        $z7 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4, r3);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22034);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 != 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45931, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22037, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r4, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45931, 1);
        goto label21;

     label21:
        goto label86;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45919, 1);
        goto label23;

     label23:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22039, null, null);
        $z8 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isStartToken(java.lang.Object)>(r4);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22039);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label83;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45932, 0);
        r24 = (org.htmlcleaner.TagNode) r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r25 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 715);
        $r26 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r27 = interfaceinvoke $r26.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r25);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r28 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21997, null);
        $z9 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: boolean access$2300(org.htmlcleaner.HtmlCleaner$OpenTags)>($r28);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21997);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45933, 0);
        $r29 = null;
        goto label26;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45933, 1);
        goto label25;

     label25:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r30 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21995, null);
        $r29 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags)>($r30);

     label26:
        r31 = $r29;
        _sym_tmp_12 = null;
        if r31 != null goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45934, 0);
        $r32 = null;
        goto label29;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45934, 1);
        goto label28;

     label28:
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 715);
        $r33 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21979, null);
        $r34 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        $r32 = interfaceinvoke $r33.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r34);

     label29:
        r35 = $r32;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21962, null);
        $r36 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$900(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r36.<java.util.Set: boolean add(java.lang.Object)>(r25);
        $r37 = "html";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z11 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r25);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label30;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45935, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21968, null);
        $r38 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r39 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22026, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addAttributesToTag(org.htmlcleaner.TagNode,java.util.Map)>($r38, $r39);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label31;

     label30:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45935, 1);
        goto label31;

     label31:
        $r40 = "body";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z12 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r25);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45936, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21960, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$702(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean)>(r3, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21969, null);
        $r41 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r42 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22026, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addAttributesToTag(org.htmlcleaner.TagNode,java.util.Map)>($r41, $r42);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label33;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45936, 1);
        goto label33;

     label33:
        $r43 = "head";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z14 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r25);
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label34;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45937, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21959, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$602(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean)>(r3, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21967, null);
        $r44 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r45 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22026, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addAttributesToTag(org.htmlcleaner.TagNode,java.util.Map)>($r44, $r45);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label35;

     label34:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45937, 1);
        goto label35;

     label35:
        _sym_tmp_12 = null;
        if r27 != null goto label36;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45938, 0);
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 716);
        $r46 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z16$sym = $r46.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitUnknownTags$sym>;
        _sym_tmp_9 = $r46.<org.htmlcleaner.CleanerProperties: int omitUnknownTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 658);
        $z16 = $r46.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags>;
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 != 0 goto label38;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45939, 0);
        goto label37;

     label36:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45938, 1);
        goto label37;

     label37:
        _sym_tmp_12 = null;
        if r27 == null goto label40;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45940, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22040, null);
        $z17 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean isDeprecated()>();
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22040);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 == 0 goto label41;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45941, 0);
        _sym_tmp_10 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 716);
        $r47 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z18$sym = $r47.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression omitDeprecatedTags$sym>;
        _sym_tmp_11 = $r47.<org.htmlcleaner.CleanerProperties: int omitDeprecatedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 660);
        $z18 = $r47.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags>;
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label42;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45942, 0);
        goto label39;

     label38:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45939, 1);
        goto label39;

     label39:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label43;

     label40:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45940, 1);
        goto label43;

        goto label43;

     label41:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45941, 1);
        goto label43;

        goto label43;

     label42:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45942, 1);
        goto label43;

     label43:
        _sym_tmp_12 = null;
        if r27 != null goto label44;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45943, 0);
        _sym_tmp_12 = null;
        if r35 == null goto label45;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45944, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21988, null);
        $z19 = virtualinvoke r35.<org.htmlcleaner.TagInfo: boolean allowsAnything()>();
        $z19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21988);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z19$sym, null, $z19, 0);
        if $z19 != 0 goto label46;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45945, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22037, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r4, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label47;

     label44:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45943, 1);
        goto label47;

        goto label47;

     label45:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45944, 1);
        goto label47;

        goto label47;

     label46:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45945, 1);
        goto label47;

     label47:
        _sym_tmp_12 = null;
        if r27 == null goto label48;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45946, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22044, null);
        $z20 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean hasPermittedTags()>();
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22044);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z20$sym, null, $z20, 0);
        if $z20 == 0 goto label49;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45947, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r48 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22045, null);
        $r49 = virtualinvoke r27.<org.htmlcleaner.TagInfo: java.util.Set getPermittedTags()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21998, null, null);
        $z21 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: boolean access$2400(org.htmlcleaner.HtmlCleaner$OpenTags,java.util.Set)>($r48, $r49);
        $z21$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21998);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z21$sym, null, $z21, 0);
        if $z21 == 0 goto label50;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45948, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label51;

     label48:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45946, 1);
        goto label51;

        goto label51;

     label49:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45947, 1);
        goto label51;

        goto label51;

     label50:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45948, 1);
        goto label51;

     label51:
        _sym_tmp_12 = null;
        if r27 == null goto label52;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45949, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22046, null);
        $z22 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean isUnique()>();
        $z22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22046);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z22$sym, null, $z22, 0);
        if $z22 == 0 goto label53;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45950, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r50 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21999, null, null);
        $z23 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: boolean access$2500(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r50, r25);
        $z23$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21999);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z23$sym, null, $z23, 0);
        if $z23 == 0 goto label54;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45951, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label55;

     label52:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45949, 1);
        goto label55;

        goto label55;

     label53:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45950, 1);
        goto label55;

        goto label55;

     label54:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45951, 1);
        goto label55;

     label55:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22027, null, null, null);
        $z24 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isFatalTagSatisfied(org.htmlcleaner.TagInfo,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r27, r3);
        $z24$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22027);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z24$sym, null, $z24, 0);
        if $z24 != 0 goto label56;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45952, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label57;

     label56:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45952, 1);
        goto label57;

     label57:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22030, null, null, null);
        $z25 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean mustAddRequiredParent(org.htmlcleaner.TagInfo,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r27, r3);
        $z25$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22030);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z25$sym, null, $z25, 0);
        if $z25 == 0 goto label58;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45953, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22028, null);
        r51 = virtualinvoke r27.<org.htmlcleaner.TagInfo: java.lang.String getRequiredParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22015, null, null, null);
        r52 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r51, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13700, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>(r52);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        goto label82;

        goto label59;

     label58:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45953, 1);
        goto label59;

     label59:
        _sym_tmp_12 = null;
        if r27 == null goto label73;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45954, 0);
        _sym_tmp_12 = null;
        if r31 == null goto label74;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45955, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22047, null, null);
        $z26 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean isMustCloseTag(org.htmlcleaner.TagInfo)>(r35);
        $z26$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22047);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z26$sym, null, $z26, 0);
        if $z26 == 0 goto label75;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45956, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22042, null, null, null, null, null);
        r55 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: java.util.List closeSnippet(java.util.List,org.htmlcleaner.HtmlCleaner$TagPos,java.lang.Object,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r31, r24, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        i2 = interfaceinvoke r55.<java.util.List: int size()>();
        i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22048, null);
        $z27 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean hasCopyTags()>();
        $z27$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22048);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z27$sym, null, $z27, 0);
        if $z27 == 0 goto label68;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45957, 0);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 0);
        if i2 <= 0 goto label69;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45958, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11271, null, i2$sym);
        r11 = interfaceinvoke r55.<java.util.List: java.util.ListIterator listIterator(int)>(i2);
        $r56 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r56.<java.util.ArrayList: void <init>()>();
        r12 = $r56;

     label60:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21978, null);
        $z28 = interfaceinvoke r11.<java.util.ListIterator: boolean hasPrevious()>();
        $z28$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21978);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z28$sym, null, $z28, 0);
        if $z28 == 0 goto label61;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45959, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        $r57 = interfaceinvoke r11.<java.util.ListIterator: java.lang.Object previous()>();
        $r57$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21834);
        r13 = (org.htmlcleaner.TagNode) $r57;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r58 = virtualinvoke r13.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22049, null, null);
        $z29 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean isCopy(java.lang.String)>($r58);
        $z29$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22049);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z29$sym, null, $z29, 0);
        if $z29 == 0 goto label62;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45960, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(344, null, null, null);
        interfaceinvoke r12.<java.util.List: void add(int,java.lang.Object)>(0, r13);
        goto label60;

        goto label63;

     label61:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45959, 1);
        goto label63;

        goto label63;

     label62:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45960, 1);
        goto label63;

     label63:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i3 = interfaceinvoke r12.<java.util.List: int size()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 0);
        if $i3 <= 0 goto label70;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45961, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r59 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label64:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z30 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();
        $z30$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z30$sym, null, $z30, 0);
        if $z30 == 0 goto label65;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45962, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r60 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();
        $r60$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r14 = (org.htmlcleaner.TagNode) $r60;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22025, null, null, null);
        $r61 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode makeTagNodeCopy(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r14, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13700, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>($r61);
        goto label64;

        goto label66;

     label65:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45962, 1);
        goto label66;

     label66:
        i4$sym = null;
        i4 = 0;

     label67:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i5 = interfaceinvoke r12.<java.util.List: int size()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, $i5$sym, i4, $i5);
        if i4 >= $i5 goto label71;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45963, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 1);
        i4 = i4 + 1;
        goto label67;

        goto label72;

     label68:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45957, 1);
        goto label72;

        goto label72;

     label69:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45958, 1);
        goto label72;

        goto label72;

     label70:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45961, 1);
        goto label72;

        goto label72;

     label71:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45963, 1);
        goto label72;

     label72:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21834, null);
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        goto label82;

        goto label76;

     label73:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45954, 1);
        goto label76;

        goto label76;

     label74:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45955, 1);
        goto label76;

        goto label76;

     label75:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45956, 1);
        goto label76;

     label76:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22034, null, null, null);
        $z31 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4, r3);
        $z31$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22034);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z31$sym, null, $z31, 0);
        if $z31 != 0 goto label77;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45964, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22037, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r4, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label82;

        goto label78;

     label77:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45964, 1);
        goto label78;

     label78:
        _sym_tmp_12 = null;
        if r27 == null goto label79;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45965, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22041, null);
        $z32 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean allowsBody()>();
        $z32$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22041);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z32$sym, null, $z32, 0);
        if $z32 != 0 goto label80;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45966, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22032, null, null);
        r64 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(org.htmlcleaner.TagNode)>(r24);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22050, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addPossibleHeadCandidate(org.htmlcleaner.TagInfo,org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r27, r64, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(r64);
        goto label82;

        goto label81;

     label79:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45965, 1);
        goto label81;

        goto label81;

     label80:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45966, 1);
        goto label81;

     label81:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r65 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22051, null);
        $i6 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22051);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22000, null, null, $i6$sym);
        staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: void access$2600(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String,int)>($r65, r25, $i6);

     label82:
        goto label86;

        goto label84;

     label83:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45932, 1);
        goto label84;

     label84:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22034, null, null, null);
        $z33 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4, r3);
        $z33$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22034);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z33$sym, null, $z33, 0);
        if $z33 != 0 goto label85;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45967, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22037, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r4, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label86;

     label85:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45967, 1);
        goto label86;

     label86:
        goto label0;

        goto label88;

     label87:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45918, 1);
        goto label88;

     label88:
        return;
    }

    private void createDocumentNodes(java.util.List, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z8$sym, z7$sym, $r14$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.util.Iterator r3, r13;
        java.lang.Object r4, $r14;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        org.htmlcleaner.TagNode r5, $r11, r15, r16, $r18;
        org.htmlcleaner.TagInfo r6;
        org.htmlcleaner.ITagInfoProvider $r7;
        java.lang.String $r8, $r9, $r10;
        java.util.Set $r12, $r17;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22019, 32939, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45968, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        _sym_tmp_2 = null;
        if r4 != null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45969, 0);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45969, 1);
        goto label2;

     label2:
        z0$sym = null;
        z0 = 1;
        $z2$sym = null;
        $z2 = r4 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45970, 0);
        r5 = (org.htmlcleaner.TagNode) r4;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 715);
        $r7 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r8 = virtualinvoke r5.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r6 = interfaceinvoke $r7.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22050, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addPossibleHeadCandidate(org.htmlcleaner.TagInfo,org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r6, r5, r2);
        goto label9;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45970, 1);
        goto label4;

     label4:
        $z3$sym = null;
        $z3 = r4 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45971, 0);
        $r9 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r10 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45972, 0);
        $z5$sym = null;
        $z5 = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45972, 1);
        goto label6;

     label6:
        $z5$sym = null;
        $z5 = 0;

     label7:
        z0$sym = $z5$sym;
        z0 = $z5;
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45971, 1);
        goto label9;

     label9:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45973, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21969, null);
        $r11 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22016, null, r4$sym);
        virtualinvoke $r11.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r4);
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45973, 1);
        goto label11;

     label11:
        goto label0;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45968, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21961, null);
        $r12 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45974, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r14 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
        $r14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r15 = (org.htmlcleaner.TagNode) $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r16 = virtualinvoke r15.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        z7$sym = null;
        z7 = 1;

     label15:
        _sym_tmp_2 = null;
        if r16 == null goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45975, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21961, null);
        $r17 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z8 = interfaceinvoke $r17.<java.util.Set: boolean contains(java.lang.Object)>(r16);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45976, 0);
        z7$sym = null;
        z7 = 0;
        goto label19;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45976, 1);
        goto label17;

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r16 = virtualinvoke r16.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        goto label15;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45975, 1);
        goto label19;

     label19:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z7$sym, null, z7, 0);
        if z7 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45977, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22052, null);
        virtualinvoke r15.<org.htmlcleaner.TagNode: boolean removeFromTree()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21967, null);
        $r18 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22016, null, null);
        virtualinvoke $r18.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r15);
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45977, 1);
        goto label21;

     label21:
        goto label14;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45974, 1);
        goto label23;

     label23:
        return;
    }

    private java.util.List closeSnippet(java.util.List, org.htmlcleaner.HtmlCleaner$TagPos, java.lang.Object, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z4$sym, $z1$sym, $i0$sym, z0$sym, r9$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1, r11;
        org.htmlcleaner.HtmlCleaner$TagPos r2;
        java.lang.Object r3, r9;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r4;
        java.util.ArrayList $r5, r6;
        java.util.ListIterator r7, $r16;
        org.htmlcleaner.TagNode r8, r10, r18;
        boolean z0, $z1, $z4;
        org.htmlcleaner.HtmlCleaner$OpenTags r12, $r14, $r21;
        org.htmlcleaner.TagInfo r13;
        org.htmlcleaner.ITagInfoProvider $r19;
        java.lang.String $r20, $r22;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$TagPos;
        r3 := @parameter2: java.lang.Object;
        r4 := @parameter3: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22042, 32940, 5);
        r3$sym = a3targs$symargs[3];
        $r5 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r6 = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22003, null);
        $i0 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)>(r2);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22003);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11271, null, $i0$sym);
        r7 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);
        r8 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r9 = interfaceinvoke r7.<java.util.ListIterator: java.lang.Object next()>();
        r9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        z0$sym = null;
        z0 = 0;

     label0:
        _sym_tmp_2 = null;
        if r3 != null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45978, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45979, 0);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45978, 1);
        goto label2;

     label2:
        _sym_tmp_2 = null;
        if r3 == null goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45980, 0);
        _sym_tmp_2 = null;
        if r9 == r3 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45981, 0);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45979, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22039, null, r9$sym);
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isStartToken(java.lang.Object)>(r9);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22039);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45982, 0);
        r10 = (org.htmlcleaner.TagNode) r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22053, null);
        r11 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.util.List getItemsToMove()>();
        _sym_tmp_2 = null;
        if r11 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45983, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        r12 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4);
        $r14 = new org.htmlcleaner.HtmlCleaner$OpenTags;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21957, null, null, null);
        specialinvoke $r14.<org.htmlcleaner.HtmlCleaner$OpenTags: void <init>(org.htmlcleaner.HtmlCleaner,org.htmlcleaner.HtmlCleaner$1)>(r0, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21958, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.HtmlCleaner$OpenTags)>(r4, $r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11271, null, null);
        $r16 = interfaceinvoke r11.<java.util.List: java.util.ListIterator listIterator(int)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21952, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: void makeTree(java.util.List,java.util.ListIterator,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r11, $r16, r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22018, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void closeAll(java.util.List,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r11, r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22054, null, null);
        virtualinvoke r10.<org.htmlcleaner.TagNode: void setItemsToMove(java.util.List)>(null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21958, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.HtmlCleaner$OpenTags)>(r4, r12);
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45983, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22032, null, null);
        r18 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(org.htmlcleaner.TagNode)>(r10);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 715);
        $r19 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r20 = virtualinvoke r18.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r13 = interfaceinvoke $r19.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22050, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addPossibleHeadCandidate(org.htmlcleaner.TagInfo,org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r13, r18, r4);
        _sym_tmp_2 = null;
        if r8 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45984, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22055, null, null);
        virtualinvoke r8.<org.htmlcleaner.TagNode: void addChildren(java.util.List)>(r11);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22016, null, null);
        virtualinvoke r8.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r7.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label11;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45984, 1);
        goto label8;

     label8:
        _sym_tmp_2 = null;
        if r11 == null goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45985, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r7.<java.util.ListIterator: void set(java.lang.Object)>(r11);
        goto label11;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45985, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r7.<java.util.ListIterator: void set(java.lang.Object)>(r18);

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r21 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r22 = virtualinvoke r18.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22001, null, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: void access$2700(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r21, $r22);
        r8 = r18;
        goto label16;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45982, 1);
        goto label13;

     label13:
        _sym_tmp_2 = null;
        if r8 == null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45986, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r7.<java.util.ListIterator: void set(java.lang.Object)>(null);
        _sym_tmp_2 = null;
        if r9 == null goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45987, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22016, null, r9$sym);
        virtualinvoke r8.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r9);
        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45986, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45987, 1);
        goto label16;

     label16:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z4 = interfaceinvoke r7.<java.util.ListIterator: boolean hasNext()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45988, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r9 = interfaceinvoke r7.<java.util.ListIterator: java.lang.Object next()>();
        r9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        goto label0;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45988, 1);
        goto label18;

     label18:
        z0$sym = null;
        z0 = 1;
        goto label0;

        goto label21;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45980, 1);
        goto label21;

        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45981, 1);
        goto label21;

     label21:
        return r6;
    }

    private void closeAll(java.util.List, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.HtmlCleaner$TagPos r3;
        org.htmlcleaner.HtmlCleaner$OpenTags $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22018, 32941, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21973, null);
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22002, null);
        r3 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2800(org.htmlcleaner.HtmlCleaner$OpenTags)>($r4);
        _sym_tmp_1 = null;
        if r3 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45989, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22042, null, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: java.util.List closeSnippet(java.util.List,org.htmlcleaner.HtmlCleaner$TagPos,java.lang.Object,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r3, null, r2);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45989, 1);
        goto label1;

     label1:
        return;
    }

    private void addPossibleHeadCandidate(org.htmlcleaner.TagInfo, org.htmlcleaner.TagNode, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagInfo r1;
        org.htmlcleaner.TagNode r2;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r3;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        r2 := @parameter1: org.htmlcleaner.TagNode;
        r3 := @parameter2: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22050, 32942, 4);
        _sym_tmp_1 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45990, 0);
        _sym_tmp_1 = null;
        if r2 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45991, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22056, null);
        $z0 = virtualinvoke r1.<org.htmlcleaner.TagInfo: boolean isHeadTag()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22056);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45992, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22057, null);
        $z1 = virtualinvoke r1.<org.htmlcleaner.TagInfo: boolean isHeadAndBodyTag()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22057);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45993, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21974, null);
        $z2 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21974);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45994, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21975, null);
        $z3 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$700(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21975);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45995, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45992, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21961, null);
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r2);
        goto label7;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45990, 1);
        goto label7;

        goto label7;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45991, 1);
        goto label7;

        goto label7;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45993, 1);
        goto label7;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45994, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45995, 1);
        goto label7;

     label7:
        return;
    }

    public org.htmlcleaner.CleanerProperties getProperties()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.CleanerProperties $r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21891, 32943, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 716);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        return $r1;
    }

    private void setPruneTags(java.lang.String, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.String r1, $r8, $r9, $r10;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.util.StringTokenizer r3, $r6;
        java.util.Set $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22014, 32944, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21972, null);
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        interfaceinvoke $r4.<java.util.Set: void clear()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21970, null);
        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        interfaceinvoke $r5.<java.util.Set: void clear()>();
        _sym_tmp_1 = null;
        if r1 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45996, 0);
        $r6 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");
        r3 = $r6;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45997, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21972, null);
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        $r8 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r10);
        goto label0;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45996, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 45997, 1);
        goto label3;

     label3:
        return;
    }

    public org.htmlcleaner.ITagInfoProvider getTagInfoProvider()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.ITagInfoProvider $r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21839, 32945, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 715);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        return $r1;
    }

    public org.htmlcleaner.CleanerTransformations getTransformations()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.CleanerTransformations $r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22058, 32946, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 714);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerTransformations transformations>;
        return $r1;
    }

    public void setTransformations(org.htmlcleaner.CleanerTransformations)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.CleanerTransformations r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.CleanerTransformations;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21893, 32947, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 714);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlCleaner: int transformations$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(714);
        r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerTransformations transformations> = r1;
        return;
    }

    public java.lang.String getInnerHtml(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i4$sym, i3$sym, $i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, $i2, i3, $i4;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r7, $r9, $r10;
        org.htmlcleaner.SimpleXmlSerializer $r3;
        org.htmlcleaner.CleanerProperties $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.io.IOException $r11, r12;
        org.htmlcleaner.HtmlCleanerException $r13, $r14;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22060, 32948, 2);
        _sym_tmp_2 = null;
        if r1 == null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45998, 0);

     label0:
        $r3 = new org.htmlcleaner.SimpleXmlSerializer;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int properties$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 716);
        $r4 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke $r3.<org.htmlcleaner.SimpleXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22059, null, null);
        r2 = virtualinvoke $r3.<org.htmlcleaner.SimpleXmlSerializer: java.lang.String getAsString(org.htmlcleaner.TagNode)>(r1);
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r7 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(209, null, null);
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>($r9);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(209);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i2 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3059, null, null, $i2$sym);
        i3 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(62, $i2);
        i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3059);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2834, null, null);
        i1 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(60);
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2834);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 0);
        if i3 < 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45999, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, i1$sym, i3, i1);
        if i3 > i1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46000, 0);
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 1);
        $i4 = i3 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, $i4$sym, i1$sym);
        $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i4, i1);
        goto label4;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45999, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46000, 1);
        goto label3;

     label3:
        $r10 = null;

     label4:
        return $r10;

     label5:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = new org.htmlcleaner.HtmlCleanerException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(296, null, null);
        specialinvoke $r13.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.Throwable)>(r12);
        throw $r13;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45998, 1);
        goto label7;

     label7:
        $r14 = new org.htmlcleaner.HtmlCleanerException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r14.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String)>("Cannot return inner html of the null node!");
        throw $r14;

        catch java.io.IOException from label0 to label4 with label5;
    }

    public void setInnerHtml(org.htmlcleaner.TagNode, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1, r5, r7, r35;
        java.lang.String r2, r3, r6, $r13, $r20, $r26, $r32, $r34;
        java.lang.StringBuilder r4, $r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r31;
        java.util.List $r36;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22063, 32949, 3);
        _sym_tmp_1 = null;
        if r1 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46001, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        r4 = $r8;
        $r9 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" marker=\'\'>");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r16 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();

     label0:
        _sym_tmp_1 = null;
        if r5 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46002, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r6 = virtualinvoke r5.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r22 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(17338, null, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r26);
        $r28 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r5 = virtualinvoke r5.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46002, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r34 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null);
        r35 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>($r34);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22061, null, null, null);
        r7 = virtualinvoke r35.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElementHavingAttribute(java.lang.String,boolean)>("marker", 1);
        _sym_tmp_1 = null;
        if r7 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46003, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r36 = virtualinvoke r7.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22062, null, null);
        virtualinvoke r1.<org.htmlcleaner.TagNode: void setChildren(java.util.List)>($r36);
        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46001, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46003, 1);
        goto label5;

     label5:
        return;
    }

    static org.htmlcleaner.ITagInfoProvider access$000(org.htmlcleaner.HtmlCleaner)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.ITagInfoProvider $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21983, 32950, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlCleaner: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 715);
        $r1 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1400(org.htmlcleaner.HtmlCleaner, java.lang.String, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.TagNode $r3;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21954, 32951, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22015, null, null, null);
        $r3 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r2);
        return $r3;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.lang.String $r0;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32952, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3457, null);
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");
        _sym_tmp_1 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 675);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(675);
        <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET> = $r0;
        return;
    }
}
public class org.htmlcleaner.HtmlCleanerException extends java.lang.RuntimeException
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleanerException r0;

        r0 := @this: org.htmlcleaner.HtmlCleanerException;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32953, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String)>("HtmlCleaner expression occureed!");
        return;
    }

    public void <init>(java.lang.Throwable)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleanerException r0;
        java.lang.Throwable r1;

        r0 := @this: org.htmlcleaner.HtmlCleanerException;
        r1 := @parameter0: java.lang.Throwable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(296, 32954, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(296, null, null);
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);
        return;
    }

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleanerException r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.HtmlCleanerException;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 32955, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleanerException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: org.htmlcleaner.HtmlCleanerException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(393, 32956, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(393, null, null, null);
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);
        return;
    }
}
public abstract class org.htmlcleaner.HtmlSerializer extends org.htmlcleaner.Serializer
{

    protected void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 32957, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke r0.<org.htmlcleaner.Serializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.htmlcleaner.TagInfo r2;
        org.htmlcleaner.CleanerProperties $r3;
        org.htmlcleaner.ITagInfoProvider $r4;
        java.lang.String $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21830, 32958, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r3 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21839, null);
        $r4 = virtualinvoke $r3.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider getTagInfoProvider()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r2 = interfaceinvoke $r4.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r5);
        _sym_tmp_2 = null;
        if r2 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46004, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(6738, null);
        $z0 = virtualinvoke r1.<org.htmlcleaner.TagNode: boolean hasChildren()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(6738);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46005, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22064, null);
        $z1 = virtualinvoke r2.<org.htmlcleaner.TagInfo: boolean isEmptyTag()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22064);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46006, 0);
        $z2$sym = null;
        $z2 = 1;
        goto label4;

        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46004, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46005, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46006, 1);
        goto label3;

     label3:
        $z2$sym = null;
        $z2 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21830, $z2$sym);
        return $z2;
    }

    protected boolean dontEscape(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21831, 32959, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22065, null, null);
        $z0 = virtualinvoke r0.<org.htmlcleaner.HtmlSerializer: boolean isScriptOrStyle(org.htmlcleaner.TagNode)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22065);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21831, $z0$sym);
        return $z0;
    }

    protected java.lang.String escapeText(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, $r68$sym, $z16$sym, $z15$sym, $z14$sym, $i28$sym, $i27$sym, $c26$sym, $r52$sym, $z13$sym, $z12$sym, $r46$sym, $r45$sym, $z11$sym, z10$sym, $i25$sym, $i24$sym, $c23$sym, $r37$sym, $z9$sym, i22$sym, $i21$sym, $i20$sym, $i19$sym, $i18$sym, $z8$sym, $z7$sym, $z6$sym, c17$sym, $i16$sym, $z5$sym, $z4$sym, $b15$sym, $b14$sym, $i13$sym, $z3$sym, $c12$sym, $c11$sym, $i10$sym, $c9$sym, $i8$sym, $i7$sym, $i6$sym, c5$sym, b4$sym, i3$sym, z2$sym, c2$sym, i1$sym, i0$sym, z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i3, $i6, $i7, $i8, $i10, $i13, $i16, $i18, $i19, $i20, $i21, i22, $i24, $i25, $i27, $i28;
        org.htmlcleaner.HtmlSerializer r0;
        java.lang.String r1, r3, $r11, $r16, $r26, $r30, r32, r33, $r39, r41, r47, $r56, $r60, $r71;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.lang.StringBuilder r2, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r50, $r51, $r54, $r55, $r64, $r65, $r66, $r67;
        char c2, c5, $c9, $c11, $c12, c17, $c23, $c26;
        byte b4, $b14, $b15;
        java.util.Map$Entry r4;
        org.htmlcleaner.CleanerProperties $r5, $r6, $r29, $r36, $r49, $r59, $r63;
        org.htmlcleaner.SpecialEntity r34;
        java.io.Serializable $r37, $r68;
        java.util.Map $r42;
        java.util.Set $r43;
        java.util.Iterator r44;
        java.lang.Object $r45, $r46, $r52;
        java.lang.Character $r53;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21898, 32960, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r5 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21850, null);
        z0 = virtualinvoke $r5.<org.htmlcleaner.CleanerProperties: boolean isRecognizeUnicodeChars()>();
        z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21850);
        _sym_tmp_2 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 717);
        $r6 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21846, null);
        z1 = virtualinvoke $r6.<org.htmlcleaner.CleanerProperties: boolean isTranslateSpecialEntities()>();
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21846);
        _sym_tmp_13 = null;
        if r1 == null goto label67;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46007, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $r7 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, i0$sym);
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(i0);
        r2 = $r7;
        i1$sym = null;
        i1 = 0;

     label0:
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label65;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46008, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i1$sym);
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        c2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c2$sym, null, c2, 38);
        if c2 != 38 goto label57;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46009, 0);
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i7 = i0 - 2;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i7$sym, i1, $i7);
        if i1 >= $i7 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46010, 0);
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i8 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i8$sym);
        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);
        $c9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c9$sym, null, $c9, 35);
        if $c9 != 35 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46011, 0);
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 2);
        $i10 = i1 + 2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i10$sym);
        $c11 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i10);
        $c11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(989, $c11$sym);
        $c12 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);
        $c12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(989);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c12$sym, null, $c12, 120);
        if $c12 != 120 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46012, 0);
        $z3$sym = null;
        $z3 = 1;
        goto label3;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46012, 1);
        goto label2;

     label2:
        $z3$sym = null;
        $z3 = 0;

     label3:
        z2$sym = $z3$sym;
        z2 = $z3;
        $i13$sym = i1$sym;
        $i13 = i1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46013, 0);
        $b14$sym = null;
        $b14 = 3;
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46013, 1);
        goto label5;

     label5:
        $b14$sym = null;
        $b14 = 2;

     label6:
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i13$sym, $b14$sym, $i13, $b14);
        i3 = $i13 + $b14;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46014, 0);
        $b15$sym = null;
        $b15 = 16;
        goto label9;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46014, 1);
        goto label8;

     label8:
        $b15$sym = null;
        $b15 = 10;

     label9:
        b4$sym = $b15$sym;
        b4 = $b15;
        r3 = "";

     label10:
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, i0$sym, i3, i0);
        if i3 >= i0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46015, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i3$sym);
        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);
        c5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c5$sym, null, c5, 59);
        if c5 != 59 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46016, 0);
        goto label17;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46016, 1);
        goto label12;

     label12:
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, c5$sym);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22066, null, b4$sym);
        $z4 = staticinvoke <org.htmlcleaner.Utils: boolean isValidInt(java.lang.String,int)>($r11, b4);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22066);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46017, 0);
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, c5$sym);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 1);
        i3 = i3 + 1;
        goto label15;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46017, 1);
        goto label14;

     label14:
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, -1);
        i3 = i3 + -1;
        goto label17;

     label15:
        goto label10;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46015, 1);
        goto label17;

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22066, null, b4$sym);
        $z5 = staticinvoke <org.htmlcleaner.Utils: boolean isValidInt(java.lang.String,int)>(r3, b4);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22066);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46018, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1594, null, b4$sym);
        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, b4);
        $i16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1594);
        c17$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i16$sym, 1);
        c17 = (char) $i16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22067, c17$sym);
        $z6 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlChar(char)>(c17);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22067);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46019, 0);
        i1$sym = i3$sym;
        i1 = i3;
        goto label25;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46019, 1);
        goto label19;

     label19:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22068, c17$sym);
        $z7 = staticinvoke <org.htmlcleaner.Utils: boolean isReservedXmlChar(char)>(c17);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22068);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 != 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46020, 0);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46021, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(400, c17$sym);
        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c17);
        goto label22;

        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46021, 1);
        goto label21;

     label21:
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r16 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        i1$sym = i3$sym;
        i1 = i3;
        goto label25;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46020, 1);
        goto label24;

     label24:
        i1$sym = i3$sym;
        i1 = i3;
        $r22 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

     label25:
        goto label31;

        goto label27;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46018, 1);
        goto label27;

     label27:
        _sym_tmp_3 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 717);
        $r29 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z8$sym = $r29.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym>;
        _sym_tmp_4 = $r29.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 653);
        $z8 = $r29.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46022, 0);
        $r30 = "&#38;";
        goto label30;

        goto label29;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46022, 1);
        goto label29;

     label29:
        $r30 = "&";

     label30:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

     label31:
        goto label64;

        goto label34;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46010, 1);
        goto label34;

        goto label34;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46011, 1);
        goto label34;

     label34:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(22069);
        $i6 = staticinvoke <org.htmlcleaner.SpecialEntity: int getMaxEntityLength()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22069);
        $i18$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 2);
        $i18 = $i6 + 2;
        $i19$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        $i19 = i0 - i1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1439, $i18$sym, $i19$sym);
        $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i19);
        $i20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1439);
        $i21$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i20$sym, i1, $i20);
        $i21 = i1 + $i20;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, i1$sym, $i21$sym);
        r32 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i1, $i21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i22 = virtualinvoke r32.<java.lang.String: int indexOf(int)>(59);
        i22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i22$sym, null, i22, 0);
        if i22 <= 0 goto label41;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46023, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, i22$sym);
        r33 = virtualinvoke r32.<java.lang.String: java.lang.String substring(int,int)>(1, i22);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22070, null);
        r34 = staticinvoke <org.htmlcleaner.SpecialEntity: org.htmlcleaner.SpecialEntity getEntity(java.lang.String)>(r33);
        _sym_tmp_13 = null;
        if r34 == null goto label42;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46024, 0);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label38;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46025, 0);
        _sym_tmp_5 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 717);
        $r36 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21848, null);
        $z9 = virtualinvoke $r36.<org.htmlcleaner.CleanerProperties: boolean isTransSpecialEntitiesToNCR()>();
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21848);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label35;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46026, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22071, null);
        $r37 = virtualinvoke r34.<org.htmlcleaner.SpecialEntity: java.lang.String getDecimalNCR()>();
        $r37$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22071);
        goto label37;

        goto label36;

     label35:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46026, 1);
        goto label36;

     label36:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22072, null);
        $c23 = virtualinvoke r34.<org.htmlcleaner.SpecialEntity: char getCharacter()>();
        $c23$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22072);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, $c23$sym);
        $r37 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c23);
        $r37$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(398);

     label37:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, $r37$sym);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);
        goto label40;

        goto label39;

     label38:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46025, 1);
        goto label39;

     label39:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22073, null);
        $r39 = virtualinvoke r34.<org.htmlcleaner.SpecialEntity: java.lang.String getEscapedValue()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

     label40:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i24 = virtualinvoke r33.<java.lang.String: int length()>();
        $i24$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i25$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i24$sym, null, $i24, 1);
        $i25 = $i24 + 1;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i25$sym, i1, $i25);
        i1 = i1 + $i25;
        goto label64;

        goto label43;

     label41:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46023, 1);
        goto label43;

        goto label43;

     label42:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46024, 1);
        goto label43;

     label43:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, i1$sym);
        r41 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i1);
        z10$sym = null;
        z10 = 0;
        _sym_tmp_6 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 718);
        $r42 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r43 = interfaceinvoke $r42.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r44 = interfaceinvoke $r43.<java.util.Set: java.util.Iterator iterator()>();

     label44:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z11 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label50;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46027, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();
        $r45$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (java.util.Map$Entry) $r45;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r46 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r46$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        r47 = (java.lang.String) $r46;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z12 = virtualinvoke r41.<java.lang.String: boolean startsWith(java.lang.String)>(r47);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label48;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46028, 0);
        _sym_tmp_7 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 717);
        $r49 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z13$sym = $r49.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym>;
        _sym_tmp_8 = $r49.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 653);
        $z13 = $r49.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label45;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46029, 0);
        $r50 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r52 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r52$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        $r53 = (java.lang.Character) $r52;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(500, null);
        $c26 = virtualinvoke $r53.<java.lang.Character: char charValue()>();
        $c26$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(500);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $c26$sym);
        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($c26);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label47;

        goto label46;

     label45:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46029, 1);
        goto label46;

     label46:
        $r56 = r47;

     label47:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i27 = virtualinvoke r47.<java.lang.String: int length()>();
        $i27$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i28$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i27$sym, null, $i27, 1);
        $i28 = $i27 - 1;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i28$sym, i1, $i28);
        i1 = i1 + $i28;
        z10$sym = null;
        z10 = 1;
        goto label51;

        goto label49;

     label48:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46028, 1);
        goto label49;

     label49:
        goto label44;

        goto label51;

     label50:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46027, 1);
        goto label51;

     label51:
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z10$sym, null, z10, 0);
        if z10 != 0 goto label55;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46030, 0);
        _sym_tmp_9 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 717);
        $r59 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z14$sym = $r59.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym>;
        _sym_tmp_10 = $r59.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 653);
        $z14 = $r59.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label52;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46031, 0);
        $r60 = "&#38;";
        goto label54;

        goto label53;

     label52:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46031, 1);
        goto label53;

     label53:
        $r60 = "&";

     label54:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
        goto label56;

     label55:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46030, 1);
        goto label56;

     label56:
        goto label64;

        goto label58;

     label57:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46009, 1);
        goto label58;

     label58:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22068, c2$sym);
        $z15 = staticinvoke <org.htmlcleaner.Utils: boolean isReservedXmlChar(char)>(c2);
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22068);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label62;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46032, 0);
        _sym_tmp_11 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 717);
        $r63 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z16$sym = $r63.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym>;
        _sym_tmp_12 = $r63.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 653);
        $z16 = $r63.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 == 0 goto label59;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46033, 0);
        $r64 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, c2$sym);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
        $r68$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(148);
        goto label61;

        goto label60;

     label59:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46033, 1);
        goto label60;

     label60:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, c2$sym);
        $r68 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c2);
        $r68$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(398);

     label61:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, $r68$sym);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68);
        goto label64;

        goto label63;

     label62:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46032, 1);
        goto label63;

     label63:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, c2$sym);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label64:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        goto label0;

        goto label66;

     label65:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46008, 1);
        goto label66;

     label66:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r71 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r71;

        goto label68;

     label67:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 46007, 1);
        goto label68;

     label68:
        return null;
    }

    protected void serializeOpenTag(org.htmlcleaner.TagNode, java.io.Writer, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z5$sym, $r44$sym, $i0$sym, $r35$sym, $r33$sym, $z4$sym, $r24$sym, $r18$sym, $r17$sym, $z3$sym, $z2$sym, z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.String r3, r7, r8, r9, $r11, $r14, $r19, $r25, $r26, $r29, $r45, $r46, $r49;
        java.lang.StringBuilder $r4, $r12, $r13, $r20, $r21, $r22, $r23, $r27, $r28, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r48;
        java.util.Iterator r5, r32;
        java.util.Map$Entry r6, r34;
        org.htmlcleaner.CleanerProperties $r10;
        java.util.Map $r15, r30;
        java.util.Set $r16, $r31;
        java.lang.Object $r17, $r18, $r24, $r33, $r35, $r44;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21829, 32961, 4);
        z0$sym = a3targs$symargs[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22074, null);
        $z2 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>(r3);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22074);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46034, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46034, 1);
        goto label1;

     label1:
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r10 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21876, null);
        z1 = virtualinvoke $r10.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21876);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46035, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21937, null);
        $r11 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        _sym_tmp_2 = null;
        if $r11 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46036, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21940, null);
        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);
        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46035, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46036, 1);
        goto label4;

     label4:
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r15 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r5 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46037, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        $r17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r6 = (java.util.Map$Entry) $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r18 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r7 = (java.lang.String) $r18;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46038, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21937, null);
        $r19 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r7);
        _sym_tmp_2 = null;
        if $r19 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46039, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21940, null);
        r7 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r7);
        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46038, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46039, 1);
        goto label8;

     label8:
        $r20 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r24 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r24$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        $r25 = (java.lang.String) $r24;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21898, null, null);
        $r26 = virtualinvoke r0.<org.htmlcleaner.HtmlSerializer: java.lang.String escapeText(java.lang.String)>($r25);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r29);
        goto label5;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46037, 1);
        goto label10;

     label10:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46040, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21938, null);
        r30 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        _sym_tmp_2 = null;
        if r30 == null goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46041, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r31 = interfaceinvoke r30.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r32 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46042, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
        $r33$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r34 = (java.util.Map$Entry) $r33;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r35 = interfaceinvoke r34.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r35$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r8 = (java.lang.String) $r35;
        r9 = "xmlns";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r8.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46043, 0);
        $r36 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r9 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46043, 1);
        goto label13;

     label13:
        $r40 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r44 = interfaceinvoke r34.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r44$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        $r45 = (java.lang.String) $r44;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21898, null, null);
        $r46 = virtualinvoke r0.<org.htmlcleaner.HtmlSerializer: java.lang.String escapeText(java.lang.String)>($r45);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r47 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r49);
        goto label11;

        goto label17;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46040, 1);
        goto label17;

        goto label17;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46041, 1);
        goto label17;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46042, 1);
        goto label17;

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21830, null, null);
        $z5 = virtualinvoke r0.<org.htmlcleaner.HtmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21830);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46044, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(" />");
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46045, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label21;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46044, 1);
        goto label19;

     label19:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(">");
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46045, 1);
        goto label21;

     label21:
        return;
    }

    protected void serializeEndTag(org.htmlcleaner.TagNode, java.io.Writer, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z2$sym, $z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        boolean z0, $z1, $z2;
        java.lang.String r3, $r5, $r10;
        java.lang.StringBuilder $r4, $r7, $r8, $r9;
        org.htmlcleaner.CleanerProperties $r6;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21837, 32962, 4);
        z0$sym = a3targs$symargs[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22074, null);
        $z1 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>(r3);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22074);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46046, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46046, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21937, null);
        $r5 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        _sym_tmp_2 = null;
        if $r5 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46047, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r6 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21876, null);
        $z2 = virtualinvoke $r6.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21876);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46048, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21940, null);
        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);
        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46047, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46048, 1);
        goto label4;

     label4:
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r10);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46049, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46049, 1);
        goto label6;

     label6:
        return;
    }
}
public abstract class org.htmlcleaner.HtmlTokenizer extends java.lang.Object
{
    private static final int WORKING_BUFFER_SIZE;
    private java.io.BufferedReader _reader;
    private char[] _working;
    private transient int _pos;
    private transient int _len;
    private transient char[] _saved;
    private transient int _savedLen;
    private transient org.htmlcleaner.DoctypeToken _docType;
    private transient org.htmlcleaner.TagToken _currentTagToken;
    private transient java.util.List _tokenList;
    private boolean _asExpected;
    private boolean _isScriptContext;
    private org.htmlcleaner.CleanerProperties props;
    private boolean isOmitUnknownTags;
    private boolean isTreatUnknownTagsAsContent;
    private boolean isOmitDeprecatedTags;
    private boolean isTreatDeprecatedTagsAsContent;
    private boolean isNamespacesAware;
    private boolean isOmitComments;
    private boolean isAllowMultiWordAttributes;
    private boolean isAllowHtmlInsideAttributes;
    private org.htmlcleaner.CleanerTransformations transformations;
    private org.htmlcleaner.ITagInfoProvider tagInfoProvider;
    private java.lang.StringBuilder commonStr;
    private static final acteve.symbolic.integer.Expression WORKING_BUFFER_SIZE$sym;
    private static final int WORKING_BUFFER_SIZE$a3tid;
    private int _reader$a3tid;
    private acteve.symbolic.integer.Expression _working$sym;
    private int _working$a3tid;
    private transient acteve.symbolic.integer.Expression _pos$sym;
    private transient int _pos$a3tid;
    private transient acteve.symbolic.integer.Expression _len$sym;
    private transient int _len$a3tid;
    private transient acteve.symbolic.integer.Expression _saved$sym;
    private transient int _saved$a3tid;
    private transient acteve.symbolic.integer.Expression _savedLen$sym;
    private transient int _savedLen$a3tid;
    private transient int _docType$a3tid;
    private transient int _currentTagToken$a3tid;
    private transient int _tokenList$a3tid;
    private acteve.symbolic.integer.Expression _asExpected$sym;
    private int _asExpected$a3tid;
    private acteve.symbolic.integer.Expression _isScriptContext$sym;
    private int _isScriptContext$a3tid;
    private int props$a3tid;
    private acteve.symbolic.integer.Expression isOmitUnknownTags$sym;
    private int isOmitUnknownTags$a3tid;
    private acteve.symbolic.integer.Expression isTreatUnknownTagsAsContent$sym;
    private int isTreatUnknownTagsAsContent$a3tid;
    private acteve.symbolic.integer.Expression isOmitDeprecatedTags$sym;
    private int isOmitDeprecatedTags$a3tid;
    private acteve.symbolic.integer.Expression isTreatDeprecatedTagsAsContent$sym;
    private int isTreatDeprecatedTagsAsContent$a3tid;
    private acteve.symbolic.integer.Expression isNamespacesAware$sym;
    private int isNamespacesAware$a3tid;
    private acteve.symbolic.integer.Expression isOmitComments$sym;
    private int isOmitComments$a3tid;
    private acteve.symbolic.integer.Expression isAllowMultiWordAttributes$sym;
    private int isAllowMultiWordAttributes$a3tid;
    private acteve.symbolic.integer.Expression isAllowHtmlInsideAttributes$sym;
    private int isAllowHtmlInsideAttributes$a3tid;
    private int transformations$a3tid;
    private int tagInfoProvider$a3tid;
    private int commonStr$a3tid;

    public void <init>(java.io.Reader, org.htmlcleaner.CleanerProperties, org.htmlcleaner.CleanerTransformations, org.htmlcleaner.ITagInfoProvider) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, $r6$sym, $r5$sym;
        org.htmlcleaner.HtmlTokenizer r0;
        java.io.Reader r1;
        org.htmlcleaner.CleanerProperties r2;
        org.htmlcleaner.CleanerTransformations r3;
        org.htmlcleaner.ITagInfoProvider r4;
        char[] $r5, $r6;
        java.util.ArrayList $r7;
        java.lang.StringBuilder $r8;
        java.io.BufferedReader $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: java.io.Reader;
        r2 := @parameter1: org.htmlcleaner.CleanerProperties;
        r3 := @parameter2: org.htmlcleaner.CleanerTransformations;
        r4 := @parameter3: org.htmlcleaner.ITagInfoProvider;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21950, 32963, 5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r5 = newarray (char)[1024];
        $r5$sym = null;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym> = $r5$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 719);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(719);
        r0.<org.htmlcleaner.HtmlTokenizer: char[] _working> = $r5;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym> = null;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 720);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(720);
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = 0;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym> = null;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 721);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(721);
        r0.<org.htmlcleaner.HtmlTokenizer: int _len> = -1;
        $r6 = newarray (char)[512];
        $r6$sym = null;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym> = $r6$sym;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 722);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(722);
        r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved> = $r6;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym> = null;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 723);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(723);
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = 0;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int _docType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 724);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _docType$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(724);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.DoctypeToken _docType> = null;
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 725);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(725);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        $r7 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int _tokenList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 726);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _tokenList$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(726);
        r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList> = $r7;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym> = null;
        _sym_tmp_9 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 727);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(727);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _isScriptContext$sym> = null;
        _sym_tmp_10 = r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 728);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(728);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext> = 0;
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_11 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 729);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(729);
        r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr> = $r8;
        $r9 = new java.io.BufferedReader;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2664, null, null);
        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);
        _sym_tmp_12 = r0.<org.htmlcleaner.HtmlTokenizer: int _reader$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 730);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _reader$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(730);
        r0.<org.htmlcleaner.HtmlTokenizer: java.io.BufferedReader _reader> = $r9;
        _sym_tmp_13 = r0.<org.htmlcleaner.HtmlTokenizer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 731);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int props$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(731);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21852, null);
        $z0 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isOmitUnknownTags()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21852);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isOmitUnknownTags$sym> = $z0$sym;
        _sym_tmp_14 = r0.<org.htmlcleaner.HtmlTokenizer: int isOmitUnknownTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_14, 732);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int isOmitUnknownTags$a3tid> = _sym_tmp_14;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(732);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitUnknownTags> = $z0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21854, null);
        $z1 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isTreatUnknownTagsAsContent()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21854);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isTreatUnknownTagsAsContent$sym> = $z1$sym;
        _sym_tmp_15 = r0.<org.htmlcleaner.HtmlTokenizer: int isTreatUnknownTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_15, 733);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int isTreatUnknownTagsAsContent$a3tid> = _sym_tmp_15;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(733);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatUnknownTagsAsContent> = $z1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21856, null);
        $z2 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isOmitDeprecatedTags()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21856);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isOmitDeprecatedTags$sym> = $z2$sym;
        _sym_tmp_16 = r0.<org.htmlcleaner.HtmlTokenizer: int isOmitDeprecatedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_16, 734);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int isOmitDeprecatedTags$a3tid> = _sym_tmp_16;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(734);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitDeprecatedTags> = $z2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21858, null);
        $z3 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isTreatDeprecatedTagsAsContent()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21858);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isTreatDeprecatedTagsAsContent$sym> = $z3$sym;
        _sym_tmp_17 = r0.<org.htmlcleaner.HtmlTokenizer: int isTreatDeprecatedTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_17, 735);
        _sym_tmp_17 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int isTreatDeprecatedTagsAsContent$a3tid> = _sym_tmp_17;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(735);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatDeprecatedTagsAsContent> = $z3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21876, null);
        $z4 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21876);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isNamespacesAware$sym> = $z4$sym;
        _sym_tmp_18 = r0.<org.htmlcleaner.HtmlTokenizer: int isNamespacesAware$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_18, 736);
        _sym_tmp_18 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int isNamespacesAware$a3tid> = _sym_tmp_18;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(736);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isNamespacesAware> = $z4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21860, null);
        $z5 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isOmitComments()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21860);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isOmitComments$sym> = $z5$sym;
        _sym_tmp_19 = r0.<org.htmlcleaner.HtmlTokenizer: int isOmitComments$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_19, 737);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int isOmitComments$a3tid> = _sym_tmp_19;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(737);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitComments> = $z5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21870, null);
        $z6 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isAllowMultiWordAttributes()>();
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21870);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isAllowMultiWordAttributes$sym> = $z6$sym;
        _sym_tmp_20 = r0.<org.htmlcleaner.HtmlTokenizer: int isAllowMultiWordAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_20, 738);
        _sym_tmp_20 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int isAllowMultiWordAttributes$a3tid> = _sym_tmp_20;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(738);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllowMultiWordAttributes> = $z6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21872, null);
        $z7 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isAllowHtmlInsideAttributes()>();
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21872);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isAllowHtmlInsideAttributes$sym> = $z7$sym;
        _sym_tmp_21 = r0.<org.htmlcleaner.HtmlTokenizer: int isAllowHtmlInsideAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_21, 739);
        _sym_tmp_21 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int isAllowHtmlInsideAttributes$a3tid> = _sym_tmp_21;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(739);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllowHtmlInsideAttributes> = $z7;
        _sym_tmp_22 = r0.<org.htmlcleaner.HtmlTokenizer: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_22, 740);
        _sym_tmp_22 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int transformations$a3tid> = _sym_tmp_22;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(740);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations> = r3;
        _sym_tmp_23 = r0.<org.htmlcleaner.HtmlTokenizer: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_23, 741);
        _sym_tmp_23 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int tagInfoProvider$a3tid> = _sym_tmp_23;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(741);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.ITagInfoProvider tagInfoProvider> = r4;
        return;
    }

    private void addToken(org.htmlcleaner.BaseToken)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlTokenizer r0;
        org.htmlcleaner.BaseToken r1;
        java.util.List $r2, $r3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: org.htmlcleaner.BaseToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22075, 32964, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _tokenList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 726);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _tokenList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 726);
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21953, null, null);
        virtualinvoke r0.<org.htmlcleaner.HtmlTokenizer: void makeTree(java.util.List)>($r3);
        return;
    }

    abstract void makeTree(java.util.List);

    abstract org.htmlcleaner.TagNode createTagNode(java.lang.String);

    private void readIfNeeded(int) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_15, $r6$sym, $r5$sym, $i16$sym, $i15$sym, $i14$sym, $i13$sym, $r4$sym, $r2$sym, $i12$sym, $r1$sym, $i11$sym, $i10$sym, $i9$sym, $i8$sym, c7$sym, i6$sym, i5$sym, i4$sym, i3$sym, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        org.htmlcleaner.HtmlTokenizer r0;
        char c7;
        char[] $r1, $r2, $r4, $r5, $r6;
        java.io.BufferedReader $r3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22077, 32965, 2);
        i0$sym = a3targs$symargs[1];
        $i8$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i8 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i8$sym, null, $i8, -1);
        if $i8 != -1 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46050, 0);
        $i9$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i9 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i9$sym, i0$sym, $i9, i0);
        $i10 = $i9 + i0;
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i10$sym, null, $i10, 1024);
        if $i10 < 1024 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46051, 0);
        $i11$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 720);
        $i11 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, $i11$sym, 1024, $i11);
        i1 = 1024 - $i11;
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i12$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 720);
        $i12 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $r2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 719);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(132, $r1$sym, $i12$sym, $r2$sym, null, i1$sym);
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i12, $r2, 0, i1);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym> = null;
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 720);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(720);
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = 0;
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, i1$sym, 1024, i1);
        i2 = 1024 - i1;
        i3$sym = null;
        i3 = 0;
        i4$sym = i1$sym;
        i4 = i1;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46054, 1);
        goto label1;

     label1:
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int _reader$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 730);
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: java.io.BufferedReader _reader>;
        $r4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_9 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 719);
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22076, null, $r4$sym, i4$sym, i2$sym);
        i5 = virtualinvoke $r3.<java.io.BufferedReader: int read(char[],int,int)>($r4, i4, i2);
        i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22076);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i5$sym, null, i5, 0);
        if i5 < 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46052, 0);
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, i5$sym, i3, i5);
        i3 = i3 + i5;
        i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, i5$sym, i4, i5);
        i4 = i4 + i5;
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, i5$sym, i2, i5);
        i2 = i2 - i5;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46052, 1);
        goto label3;

     label3:
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i5$sym, null, i5, 0);
        if i5 < 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46053, 0);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 0);
        if i2 > 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46054, 0);
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46053, 1);
        goto label5;

     label5:
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 0);
        if i2 <= 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46055, 0);
        $i13$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, i1$sym, i3, i1);
        $i13 = i3 + i1;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym> = $i13$sym;
        _sym_tmp_10 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 721);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(721);
        r0.<org.htmlcleaner.HtmlTokenizer: int _len> = $i13;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46055, 1);
        goto label7;

     label7:
        i6$sym = null;
        i6 = 0;

     label8:
        $i14$sym = i6$sym;
        $i14 = i6;
        $i15$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_11 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 721);
        $i15 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i15$sym, null, $i15, 0);
        if $i15 < 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46056, 0);
        $i16$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_12 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 721);
        $i16 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        goto label11;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46056, 1);
        goto label10;

     label10:
        $i16$sym = null;
        $i16 = 1024;

     label11:
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i14$sym, $i16$sym, $i14, $i16);
        if $i14 >= $i16 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46057, 0);
        $r5$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_13 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 719);
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        c7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r5$sym, i6$sym, $r5, i6);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r5, i6);
        c7 = $r5[i6];
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c7$sym, null, c7, 1);
        if c7 < 1 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46058, 0);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c7$sym, null, c7, 32);
        if c7 > 32 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46059, 0);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c7$sym, null, c7, 10);
        if c7 == 10 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46060, 0);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c7$sym, null, c7, 13);
        if c7 == 13 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46061, 0);
        $r6$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_14 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 719);
        $r6 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int,char)>($r6$sym, i6$sym, null, $r6, i6, 32);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, i6);
        $r6[i6] = 32;
        goto label16;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46058, 1);
        goto label16;

        goto label16;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46059, 1);
        goto label16;

        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46060, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46061, 1);
        goto label16;

     label16:
        i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, null, i6, 1);
        i6 = i6 + 1;
        goto label8;

        goto label20;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46050, 1);
        goto label20;

        goto label20;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46051, 1);
        goto label20;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 46057, 1);
        goto label20;

     label20:
        return;
    }

    java.util.List getTokenList()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlTokenizer r0;
        java.util.List $r1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22017, 32966, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _tokenList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 726);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        return $r1;
    }

    private void go() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        acteve.symbolic.integer.Expression $i1$sym, $i0$sym;
        org.htmlcleaner.HtmlTokenizer r0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22078, 32967, 1);
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        $i1 = $i0 + 1;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym> = $i1$sym;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 720);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(720);
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = $i1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22077, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(0);
        return;
    }

    private void go(int) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3;
        acteve.symbolic.integer.Expression $i3$sym, $i2$sym, $i1$sym, i0$sym;
        org.htmlcleaner.HtmlTokenizer r0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22079, 32968, 2);
        i0$sym = a3targs$symargs[1];
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 720);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, i0$sym, $i1, i0);
        $i2 = $i1 + i0;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym> = $i2$sym;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 720);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(720);
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = $i2;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i3 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22077, null, $i3$sym);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>($i3);
        return;
    }

    private boolean startsWith(java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $c11$sym, $i10$sym, $i9$sym, $r2$sym, $c8$sym, $i7$sym, $i6$sym, $i5$sym, $i4$sym, c3$sym, c2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i4, $i5, $i6, $i7, $i9, $i10;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1;
        char c2, c3, $c8, $c11;
        char[] $r2;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(57, 32969, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22077, null, i0$sym);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(i0);
        $i4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i4 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 0);
        if $i4 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46062, 0);
        $i5$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i5 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, i0$sym, $i5, i0);
        $i6 = $i5 + i0;
        $i7$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 721);
        $i7 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, $i7$sym, $i6, $i7);
        if $i6 <= $i7 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46063, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(57, null);
        return 0;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46062, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46063, 1);
        goto label2;

     label2:
        i1$sym = null;
        i1 = 0;

     label3:
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46064, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i1$sym);
        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        $c8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(989, $c8$sym);
        c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c8);
        c2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(989);
        $r2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 719);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i9$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 720);
        $i9 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i9$sym, i1$sym, $i9, i1);
        $i10 = $i9 + i1;
        $c11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r2$sym, $i10$sym, $r2, $i10);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, $i10);
        $c11 = $r2[$i10];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(989, $c11$sym);
        c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);
        c3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(989);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c2$sym, c3$sym, c2, c3);
        if c2 == c3 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46065, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(57, null);
        return 0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46065, 1);
        goto label5;

     label5:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        goto label3;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46064, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(57, null);
        return 1;
    }

    private boolean startsWithSimple(java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $c9$sym, $i8$sym, $i7$sym, $r2$sym, $c6$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2, $i3, $i4, $i5, $i7, $i8;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1;
        char $c6, $c9;
        char[] $r2;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22080, 32970, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22077, null, i0$sym);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(i0);
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46066, 0);
        $i3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, i0$sym, $i3, i0);
        $i4 = $i3 + i0;
        $i5$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 721);
        $i5 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, $i5$sym, $i4, $i5);
        if $i4 <= $i5 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46067, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22080, null);
        return 0;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46066, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46067, 1);
        goto label2;

     label2:
        i1$sym = null;
        i1 = 0;

     label3:
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46068, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i1$sym);
        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        $c6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        $r2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 719);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i7$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 720);
        $i7 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, i1$sym, $i7, i1);
        $i8 = $i7 + i1;
        $c9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r2$sym, $i8$sym, $r2, $i8);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, $i8);
        $c9 = $r2[$i8];
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c6$sym, $c9$sym, $c6, $c9);
        if $c6 == $c9 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46069, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22080, null);
        return 0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46069, 1);
        goto label5;

     label5:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        goto label3;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46068, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22080, null);
        return 1;
    }

    private boolean isWhitespace(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, $c3$sym, $r1$sym, $i2$sym, $i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2;
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        char $c3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(16874, 32971, 2);
        i0$sym = a3targs$symargs[1];
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46070, 0);
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 721);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        if i0 < $i2 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46071, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(16874, null);
        return 0;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46070, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46071, 1);
        goto label2;

     label2:
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $c3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, i0$sym, $r1, i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, i0);
        $c3 = $r1[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(462, $c3$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(462);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(16874, $z0$sym);
        return $z0;
    }

    private boolean isWhitespace()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $z0$sym, $i0$sym;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(20558, 32972, 1);
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16874, null, $i0$sym);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespace(int)>($i0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(16874);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(20558, $z0$sym);
        return $z0;
    }

    private boolean isWhitespaceSafe()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $z0$sym, $c1$sym, $i0$sym, $r1$sym;
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        char $c1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22081, 32973, 1);
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i0$sym, $r1, $i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i0);
        $c1 = $r1[$i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(462, $c1$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(462);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22081, $z0$sym);
        return $z0;
    }

    private boolean isChar(int, char)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, $c6$sym, $c5$sym, $r1$sym, $c4$sym, $i3$sym, $i2$sym, c1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i2, $i3;
        org.htmlcleaner.HtmlTokenizer r0;
        char c1, $c4, $c5, $c6;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        c1 := @parameter1: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22082, 32974, 3);
        i0$sym = a3targs$symargs[1];
        c1$sym = a3targs$symargs[2];
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46072, 0);
        $i3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 721);
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i3$sym, i0, $i3);
        if i0 < $i3 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46073, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22082, null);
        return 0;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46072, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46073, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(989, c1$sym);
        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1);
        $c4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(989);
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $c5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, i0$sym, $r1, i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, i0);
        $c5 = $r1[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(989, $c5$sym);
        $c6 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c5);
        $c6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(989);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c4$sym, $c6$sym, $c4, $c6);
        if $c4 != $c6 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46074, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46074, 1);
        goto label4;

     label4:
        $z0$sym = null;
        $z0 = 0;

     label5:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22082, $z0$sym);
        return $z0;
    }

    private boolean isChar(char)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i1;
        acteve.symbolic.integer.Expression $z0$sym, $i1$sym, c0$sym;
        org.htmlcleaner.HtmlTokenizer r0;
        char c0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22083, 32975, 2);
        c0$sym = a3targs$symargs[1];
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 720);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22082, null, $i1$sym, c0$sym);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isChar(int,char)>($i1, c0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22082);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22083, $z0$sym);
        return $z0;
    }

    private boolean isCharSimple(char)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $z0$sym, $c5$sym, $i4$sym, $r1$sym, $i3$sym, $i2$sym, $i1$sym, c0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i1, $i2, $i3, $i4;
        org.htmlcleaner.HtmlTokenizer r0;
        char c0, $c5;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22084, 32976, 2);
        c0$sym = a3targs$symargs[1];
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46075, 0);
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 721);
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, $i3$sym, $i2, $i3);
        if $i2 >= $i3 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46076, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46075, 1);
        goto label1;

     label1:
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 720);
        $i4 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i4$sym, $r1, $i4);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i4);
        $c5 = $r1[$i4];
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, $c5$sym, c0, $c5);
        if c0 != $c5 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46077, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label5;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46076, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46077, 1);
        goto label4;

     label4:
        $z0$sym = null;
        $z0 = 0;

     label5:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22084, $z0$sym);
        return $z0;
    }

    private char getCurrentChar()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $c1$sym, $i0$sym, $r1$sym;
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        char $c1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22085, 32977, 1);
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i0$sym, $r1, $i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i0);
        $c1 = $r1[$i0];
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22085, $c1$sym);
        return $c1;
    }

    private boolean isCharEquals(char)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, $c2$sym, $i1$sym, $r1$sym, c0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i1;
        org.htmlcleaner.HtmlTokenizer r0;
        char c0, $c2;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22086, 32978, 2);
        c0$sym = a3targs$symargs[1];
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i1$sym, $r1, $i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i1);
        $c2 = $r1[$i1];
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c2$sym, c0$sym, $c2, c0);
        if $c2 != c0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46078, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46078, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22086, $z0$sym);
        return $z0;
    }

    private boolean isIdentifierStartChar(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z1$sym, $z0$sym, $r1$sym, $i3$sym, $i2$sym, c1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i2, $i3;
        org.htmlcleaner.HtmlTokenizer r0;
        char c1;
        char[] $r1;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22087, 32979, 2);
        i0$sym = a3targs$symargs[1];
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46079, 0);
        $i3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 721);
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i3$sym, i0, $i3);
        if i0 < $i3 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46080, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22087, null);
        return 0;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46079, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46080, 1);
        goto label2;

     label2:
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        c1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, i0$sym, $r1, i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, i0);
        c1 = $r1[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22088, c1$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isUnicodeIdentifierStart(char)>(c1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22088);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46081, 0);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c1$sym, null, c1, 95);
        if c1 != 95 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46082, 0);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46081, 1);
        goto label4;

     label4:
        $z1$sym = null;
        $z1 = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46082, 1);
        goto label6;

     label6:
        $z1$sym = null;
        $z1 = 0;

     label7:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22087, $z1$sym);
        return $z1;
    }

    private boolean isIdentifierStartChar()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $z0$sym, $i0$sym;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22089, 32980, 1);
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22087, null, $i0$sym);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierStartChar(int)>($i0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22087);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22089, $z0$sym);
        return $z0;
    }

    private boolean isIdentifierChar()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $z3$sym, $z2$sym, $z1$sym, $z0$sym, $i4$sym, $r1$sym, $i3$sym, $i2$sym, $i1$sym, c0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i1, $i2, $i3, $i4;
        org.htmlcleaner.HtmlTokenizer r0;
        char c0;
        char[] $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22090, 32981, 1);
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46083, 0);
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 721);
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, $i3$sym, $i2, $i3);
        if $i2 < $i3 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46084, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22090, null);
        return 0;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46083, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46084, 1);
        goto label2;

     label2:
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 720);
        $i4 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        c0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i4$sym, $r1, $i4);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i4);
        c0 = $r1[$i4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22088, c0$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isUnicodeIdentifierStart(char)>(c0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22088);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46085, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(485, c0$sym);
        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(485);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46086, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22091, c0$sym);
        $z2 = staticinvoke <org.htmlcleaner.Utils: boolean isIdentifierHelperChar(char)>(c0);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22091);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46087, 0);
        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46085, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46086, 1);
        goto label5;

     label5:
        $z3$sym = null;
        $z3 = 1;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46087, 1);
        goto label7;

     label7:
        $z3$sym = null;
        $z3 = 0;

     label8:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22090, $z3$sym);
        return $z3;
    }

    private boolean isValidXmlChar()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $z1$sym, $c1$sym, $i0$sym, $r1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0, $z1, $z2;
        char[] $r1;
        char $c1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22093, 32982, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46088, 0);
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i0$sym, $r1, $i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i0);
        $c1 = $r1[$i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22067, $c1$sym);
        $z1 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlChar(char)>($c1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22067);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46089, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46088, 1);
        goto label1;

     label1:
        $z2$sym = null;
        $z2 = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46089, 1);
        goto label3;

     label3:
        $z2$sym = null;
        $z2 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22093, $z2$sym);
        return $z2;
    }

    private boolean isValidXmlCharSafe()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $z0$sym, $c1$sym, $i0$sym, $r1$sym;
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        char $c1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22094, 32983, 1);
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i0$sym, $r1, $i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i0);
        $c1 = $r1[$i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22067, $c1$sym);
        $z0 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlChar(char)>($c1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22067);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22094, $z0$sym);
        return $z0;
    }

    private boolean isAllRead()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, $i2$sym, $i1$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22092, 32984, 1);
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 721);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46090, 0);
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _len$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 721);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, $i2$sym, $i1, $i2);
        if $i1 < $i2 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46091, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label3;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46090, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46091, 1);
        goto label2;

     label2:
        $z0$sym = null;
        $z0 = 0;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22092, $z0$sym);
        return $z0;
    }

    private void save(char)
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $i7$sym, $i6$sym, $r6$sym, $i5$sym, $r5$sym, $r4$sym, $i4$sym, $i3$sym, $r3$sym, $i2$sym, $r2$sym, $i1$sym, r1$sym, c0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.htmlcleaner.HtmlTokenizer r0;
        char c0;
        char[] r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22095, 32985, 2);
        c0$sym = a3targs$symargs[1];
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 723);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        $r2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 722);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>($r2$sym);
        $i2 = lengthof $r2;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, $i2$sym, $i1, $i2);
        if $i1 < $i2 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46092, 0);
        $r3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 722);
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>($r3$sym);
        $i3 = lengthof $r3;
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 512);
        $i4 = $i3 + 512;
        r1 = newarray (char)[$i4];
        r1$sym = null;
        $r4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 722);
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $r5$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 722);
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>($r5$sym);
        $i5 = lengthof $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(132, $r4$sym, null, r1$sym, null, $i5$sym);
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i5);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym> = r1$sym;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 722);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(722);
        r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved> = r1;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46092, 1);
        goto label1;

     label1:
        $r6$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym>;
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 722);
        $r6 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i6$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym>;
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 723);
        $i6 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 1);
        $i7 = $i6 + 1;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym> = $i7$sym;
        _sym_tmp_9 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 723);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(723);
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = $i7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int,char)>($r6$sym, $i6$sym, c0$sym, $r6, $i6, c0);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, $i6);
        $r6[$i6] = c0;
        return;
    }

    private void saveCurrent()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $c1$sym, $i0$sym, $r1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0;
        char[] $r1;
        char $c1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22096, 32986, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46093, 0);
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i0$sym, $r1, $i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i0);
        $c1 = $r1[$i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22095, null, $c1$sym);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void save(char)>($c1);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46093, 1);
        goto label1;

     label1:
        return;
    }

    private void saveCurrentSafe()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $c1$sym, $i0$sym, $r1$sym;
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        char $c1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22097, 32987, 1);
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, $i0$sym, $r1, $i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, $i0);
        $c1 = $r1[$i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22095, null, $c1$sym);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void save(char)>($c1);
        return;
    }

    private void saveCurrent(int) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $c2$sym, $r1$sym, $z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, i1;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0;
        char[] $r1;
        char $c2;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22098, 32988, 2);
        i0$sym = a3targs$symargs[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22077, null, i0$sym);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(i0);
        i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 720);
        i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46094, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 <= 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46095, 0);
        $r1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 719);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $c2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r1$sym, i1$sym, $r1, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, i1);
        $c2 = $r1[i1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22095, null, $c2$sym);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void save(char)>($c2);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, -1);
        i0 = i0 + -1;
        goto label0;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46094, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46095, 1);
        goto label3;

     label3:
        return;
    }

    private void skipWhitespaces() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22099, 32989, 1);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46096, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22081, null);
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespaceSafe()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22081);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46097, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label0;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46096, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46097, 1);
        goto label3;

     label3:
        return;
    }

    private boolean addSavedAsContent()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $i1$sym, $r2$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        org.htmlcleaner.HtmlTokenizer r0;
        org.htmlcleaner.ContentNode $r1;
        char[] $r2;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22100, 32990, 1);
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 723);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46098, 0);
        $r1 = new org.htmlcleaner.ContentNode;
        $r2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 722);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 723);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21919, null, $r2$sym, $i1$sym);
        specialinvoke $r1.<org.htmlcleaner.ContentNode: void <init>(char[],int)>($r2, $i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22075, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r1);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym> = null;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 723);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(723);
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = 0;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22100, null);
        return 1;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46098, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22100, null);
        return 0;
    }

    void start() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_19, $z19$sym, $z18$sym, $z17$sym, $z16$sym, $z15$sym, $i10$sym, $i9$sym, $z14$sym, $z13$sym, $z12$sym, $i8$sym, $i7$sym, $z11$sym, $z10$sym, $z9$sym, $i6$sym, $r6$sym, $i5$sym, $i4$sym, $z8$sym, $z7$sym, $i3$sym, $i2$sym, $z6$sym, $i1$sym, $i0$sym, $z5$sym, $z4$sym, $z3$sym, z2$sym, z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        org.htmlcleaner.BaseToken r1;
        java.lang.String r2, $r7;
        java.util.List $r3, $r4, $r5;
        java.lang.Object $r6;
        org.htmlcleaner.CleanerProperties $r8;
        java.io.BufferedReader $r9;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(535, 32991, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 725);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(725);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _tokenList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 726);
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        interfaceinvoke $r3.<java.util.List: void clear()>();
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym> = null;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 727);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(727);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _isScriptContext$sym> = null;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 728);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(728);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext> = 0;
        z0$sym = null;
        z0 = 0;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym> = null;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 720);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(720);
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = 1024;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22077, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(0);
        z1$sym = null;
        z1 = 1;
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46111, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46122, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label36;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46099, 0);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym> = null;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 723);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(723);
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = 0;
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 725);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(725);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym> = null;
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 727);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(727);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22077, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(10);
        $z4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _isScriptContext$sym>;
        _sym_tmp_9 = r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 728);
        $z4 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext>;
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46100, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z5 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWith(java.lang.String)>("</script");
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46101, 0);
        $i0$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_10 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 720);
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 8);
        $i1 = $i0 + 8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16874, null, $i1$sym);
        $z6 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespace(int)>($i1);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(16874);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46102, 0);
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_11 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 720);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 8);
        $i3 = $i2 + 8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22082, null, $i3$sym, null);
        $z7 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isChar(int,char)>($i3, 62);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22082);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46103, 0);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46102, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22101, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagEnd()>();
        goto label16;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46101, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46103, 1);
        goto label7;

     label7:
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46104, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z8 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<!--");
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46105, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22102, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void comment()>();
        goto label16;

        goto label10;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46104, 1);
        goto label10;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46105, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22103, null);
        z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean content()>();
        z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22103);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46106, 0);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46107, 0);
        _sym_tmp_12 = r0.<org.htmlcleaner.HtmlTokenizer: int _tokenList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 726);
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        _sym_tmp_13 = r0.<org.htmlcleaner.HtmlTokenizer: int _tokenList$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 726);
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 1);
        $i5 = $i4 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, $i5$sym);
        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i5);
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        r1 = (org.htmlcleaner.BaseToken) $r6;
        _sym_tmp_19 = null;
        if r1 == null goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46108, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        _sym_tmp_19 = null;
        if r2 == null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46109, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i6 = virtualinvoke $r7.<java.lang.String: int length()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 0);
        if $i6 <= 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46110, 0);
        z1$sym = null;
        z1 = 0;
        goto label16;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46106, 1);
        goto label16;

        goto label16;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46107, 1);
        goto label16;

        goto label16;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46108, 1);
        goto label16;

        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46109, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46110, 1);
        goto label16;

     label16:
        $z9$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _isScriptContext$sym>;
        _sym_tmp_14 = r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 728);
        $z9 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext>;
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46111, 0);
        z1$sym = null;
        z1 = 1;
        goto label2;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46100, 1);
        goto label18;

     label18:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z10 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWith(java.lang.String)>("<!doctype");
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46112, 0);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46113, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22104, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void doctype()>();
        z0$sym = null;
        z0 = 1;
        goto label2;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46113, 1);
        goto label20;

     label20:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22105, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void ignoreUntil(char)>(60);
        goto label2;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46112, 1);
        goto label22;

     label22:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z11 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("</");
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46114, 0);
        $i7$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_15 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 720);
        $i7 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, null, $i7, 2);
        $i8 = $i7 + 2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22087, null, $i8$sym);
        $z12 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierStartChar(int)>($i8);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22087);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46115, 0);
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22101, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagEnd()>();
        goto label2;

        goto label25;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46114, 1);
        goto label25;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46115, 1);
        goto label25;

     label25:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z13 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<!--");
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46116, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22102, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void comment()>();
        goto label2;

        goto label27;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46116, 1);
        goto label27;

     label27:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z14 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<");
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46117, 0);
        $i9$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_16 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 720);
        $i9 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i9$sym, null, $i9, 1);
        $i10 = $i9 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22087, null, $i10$sym);
        $z15 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierStartChar(int)>($i10);
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22087);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46118, 0);
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22106, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagStart()>();
        goto label2;

        goto label30;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46117, 1);
        goto label30;

        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46118, 1);
        goto label30;

     label30:
        _sym_tmp_17 = r0.<org.htmlcleaner.HtmlTokenizer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 731);
        $r8 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21874, null);
        $z16 = virtualinvoke $r8.<org.htmlcleaner.CleanerProperties: boolean isIgnoreQuestAndExclam()>();
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21874);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 == 0 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46119, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z17 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<!");
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 != 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46120, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z18 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<?");
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label34;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46121, 0);
        goto label32;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46120, 1);
        goto label32;

     label32:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22105, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void ignoreUntil(char)>(62);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z19 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        $z19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z19$sym, null, $z19, 0);
        if $z19 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46122, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label2;

        goto label35;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46119, 1);
        goto label35;

        goto label35;

     label34:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46121, 1);
        goto label35;

     label35:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22103, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean content()>();
        goto label2;

        goto label37;

     label36:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 46099, 1);
        goto label37;

     label37:
        _sym_tmp_18 = r0.<org.htmlcleaner.HtmlTokenizer: int _reader$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 730);
        $r9 = r0.<org.htmlcleaner.HtmlTokenizer: java.io.BufferedReader _reader>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r9.<java.io.BufferedReader: void close()>();
        return;
    }

    private boolean isReservedTag(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22107, 32992, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r3 = "html";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46123, 0);
        $r4 = "head";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46124, 0);
        $r5 = "body";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46125, 0);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46123, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46124, 1);
        goto label2;

     label2:
        $z3$sym = null;
        $z3 = 1;
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46125, 1);
        goto label4;

     label4:
        $z3$sym = null;
        $z3 = 0;

     label5:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22107, $z3$sym);
        return $z3;
    }

    private void tagStart() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, $z13$sym, $z12$sym, $z11$sym, $z10$sym, $z9$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, $r10, $r11;
        org.htmlcleaner.TagTransformation r2;
        org.htmlcleaner.TagInfo r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z13;
        org.htmlcleaner.CleanerTransformations $r4, $r5, $r6;
        org.htmlcleaner.ITagInfoProvider $r7;
        org.htmlcleaner.TagNode r8;
        org.htmlcleaner.TagToken $r9;
        org.htmlcleaner.EndTagToken $r12;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22106, 32993, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22096, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46126, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46126, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22108, null);
        r1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        r2 = null;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 740);
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        _sym_tmp_14 = null;
        if $r4 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46127, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 740);
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21886, null, null);
        $z1 = virtualinvoke $r5.<org.htmlcleaner.CleanerTransformations: boolean hasTransformationForTag(java.lang.String)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21886);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46128, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 740);
        $r6 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21887, null, null);
        r2 = virtualinvoke $r6.<org.htmlcleaner.CleanerTransformations: org.htmlcleaner.TagTransformation getTransformation(java.lang.String)>(r1);
        _sym_tmp_14 = null;
        if r2 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46129, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22109, null);
        r1 = virtualinvoke r2.<org.htmlcleaner.TagTransformation: java.lang.String getDestTag()>();
        goto label5;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46127, 1);
        goto label5;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46128, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46129, 1);
        goto label5;

     label5:
        _sym_tmp_14 = null;
        if r1 == null goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46130, 0);
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 741);
        $r7 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r3 = interfaceinvoke $r7.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r1);
        _sym_tmp_14 = null;
        if r3 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46131, 0);
        $z2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isOmitUnknownTags$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int isOmitUnknownTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 732);
        $z2 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitUnknownTags>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46132, 0);
        $z3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isTreatUnknownTagsAsContent$sym>;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int isTreatUnknownTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 733);
        $z3 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatUnknownTagsAsContent>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46133, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22107, null, null);
        $z4 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isReservedTag(java.lang.String)>(r1);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22107);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46134, 0);
        goto label9;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46131, 1);
        goto label9;

        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46132, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46133, 1);
        goto label9;

     label9:
        _sym_tmp_14 = null;
        if r3 == null goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46135, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22040, null);
        $z5 = virtualinvoke r3.<org.htmlcleaner.TagInfo: boolean isDeprecated()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22040);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46136, 0);
        $z6$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isOmitDeprecatedTags$sym>;
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlTokenizer: int isOmitDeprecatedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 734);
        $z6 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitDeprecatedTags>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46137, 0);
        $z7$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isTreatDeprecatedTagsAsContent$sym>;
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int isTreatDeprecatedTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 735);
        $z7 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatDeprecatedTagsAsContent>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46138, 0);
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46134, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22103, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean content()>();
        return;

        goto label17;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46130, 1);
        goto label17;

        goto label17;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46135, 1);
        goto label17;

        goto label17;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46136, 1);
        goto label17;

        goto label17;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46137, 1);
        goto label17;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46138, 1);
        goto label17;

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21955, null, null);
        r8 = virtualinvoke r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagNode createTagNode(java.lang.String)>(r1);
        _sym_tmp_9 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 725);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(725);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = r8;
        $z9$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym>;
        _sym_tmp_10 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 727);
        $z9 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46139, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22110, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagAttributes()>();
        _sym_tmp_14 = null;
        if r1 == null goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46140, 0);
        _sym_tmp_14 = null;
        if r2 == null goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46141, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22111, null, null);
        virtualinvoke r8.<org.htmlcleaner.TagNode: void transformAttributes(org.htmlcleaner.TagTransformation)>(r2);
        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46141, 1);
        goto label19;

     label19:
        _sym_tmp_11 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 725);
        $r9 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22075, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r9);
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46140, 1);
        goto label21;

     label21:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z10 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46142, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        $r10 = "script";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z11 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46143, 0);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _isScriptContext$sym> = null;
        _sym_tmp_12 = r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 728);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(728);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext> = 1;
        goto label27;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46142, 1);
        goto label23;

     label23:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z12 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("/>");
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46144, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22079, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(2);
        $r11 = "script";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z13 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46145, 0);
        $r12 = new org.htmlcleaner.EndTagToken;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r12.<org.htmlcleaner.EndTagToken: void <init>(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22075, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r12);
        goto label27;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46143, 1);
        goto label27;

        goto label27;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46144, 1);
        goto label27;

        goto label27;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46145, 1);
        goto label27;

     label27:
        _sym_tmp_13 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 725);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(725);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        goto label30;

        goto label29;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46139, 1);
        goto label29;

     label29:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22100, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean addSavedAsContent()>();

     label30:
        return;
    }

    private void tagEnd() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, $z11$sym, $z10$sym, $z9$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, $r10;
        org.htmlcleaner.TagTransformation r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11;
        org.htmlcleaner.CleanerTransformations $r3, $r4, $r5;
        org.htmlcleaner.ITagInfoProvider $r6;
        org.htmlcleaner.TagInfo r7;
        org.htmlcleaner.EndTagToken $r8;
        org.htmlcleaner.TagToken $r9;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22101, 32994, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22098, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrent(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22079, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46146, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46146, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22108, null);
        r1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 740);
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        _sym_tmp_14 = null;
        if $r3 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46147, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 740);
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21886, null, null);
        $z1 = virtualinvoke $r4.<org.htmlcleaner.CleanerTransformations: boolean hasTransformationForTag(java.lang.String)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21886);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46148, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int transformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 740);
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21887, null, null);
        r2 = virtualinvoke $r5.<org.htmlcleaner.CleanerTransformations: org.htmlcleaner.TagTransformation getTransformation(java.lang.String)>(r1);
        _sym_tmp_14 = null;
        if r2 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46149, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22109, null);
        r1 = virtualinvoke r2.<org.htmlcleaner.TagTransformation: java.lang.String getDestTag()>();
        goto label5;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46147, 1);
        goto label5;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46148, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46149, 1);
        goto label5;

     label5:
        _sym_tmp_14 = null;
        if r1 == null goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46150, 0);
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int tagInfoProvider$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 741);
        $r6 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r7 = interfaceinvoke $r6.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r1);
        _sym_tmp_14 = null;
        if r7 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46151, 0);
        $z2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isOmitUnknownTags$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int isOmitUnknownTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 732);
        $z2 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitUnknownTags>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46152, 0);
        $z3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isTreatUnknownTagsAsContent$sym>;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int isTreatUnknownTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 733);
        $z3 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatUnknownTagsAsContent>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46153, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22107, null, null);
        $z4 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isReservedTag(java.lang.String)>(r1);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22107);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46154, 0);
        goto label9;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46151, 1);
        goto label9;

        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46152, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46153, 1);
        goto label9;

     label9:
        _sym_tmp_14 = null;
        if r7 == null goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46155, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22040, null);
        $z5 = virtualinvoke r7.<org.htmlcleaner.TagInfo: boolean isDeprecated()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22040);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46156, 0);
        $z6$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isOmitDeprecatedTags$sym>;
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlTokenizer: int isOmitDeprecatedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 734);
        $z6 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitDeprecatedTags>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46157, 0);
        $z7$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isTreatDeprecatedTagsAsContent$sym>;
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int isTreatDeprecatedTagsAsContent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 735);
        $z7 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatDeprecatedTagsAsContent>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46158, 0);
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46154, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22103, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean content()>();
        return;

        goto label17;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46150, 1);
        goto label17;

        goto label17;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46155, 1);
        goto label17;

        goto label17;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46156, 1);
        goto label17;

        goto label17;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46157, 1);
        goto label17;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46158, 1);
        goto label17;

     label17:
        $r8 = new org.htmlcleaner.EndTagToken;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r8.<org.htmlcleaner.EndTagToken: void <init>(java.lang.String)>(r1);
        _sym_tmp_9 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 725);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(725);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = $r8;
        $z9$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym>;
        _sym_tmp_10 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 727);
        $z9 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46159, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22110, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagAttributes()>();
        _sym_tmp_14 = null;
        if r1 == null goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46160, 0);
        _sym_tmp_11 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 725);
        $r9 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22075, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r9);
        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46160, 1);
        goto label19;

     label19:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z10 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46161, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46161, 1);
        goto label21;

     label21:
        $r10 = "script";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z11 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46162, 0);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _isScriptContext$sym> = null;
        _sym_tmp_12 = r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 728);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _isScriptContext$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(728);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext> = 0;
        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46162, 1);
        goto label23;

     label23:
        _sym_tmp_13 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 725);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(725);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        goto label26;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46159, 1);
        goto label25;

     label25:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22100, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean addSavedAsContent()>();

     label26:
        return;
    }

    private java.lang.String identifier() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_16, $z4$sym, $i12$sym, $i11$sym, $i10$sym, $i9$sym, $z3$sym, $c8$sym, $i7$sym, $i6$sym, $i5$sym, $c4$sym, $i3$sym, $r8$sym, $z2$sym, $z1$sym, $i2$sym, $z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i12;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, r3, $r22;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r4, $r5, $r7, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21;
        char[] $r8;
        char $c4, $c8;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22108, 32995, 1);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym> = null;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 727);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(727);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22089, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierStartChar()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22089);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46163, 0);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym> = null;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 727);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(727);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 0;
        return null;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46163, 1);
        goto label1;

     label1:
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 729);
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 729);
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3021, null, null, $i2$sym);
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i2);

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46164, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22090, null);
        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierChar()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22090);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46165, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 729);
        $r7 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r8$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 719);
        $r8 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i3$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 720);
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r8$sym, $i3$sym, $r8, $i3);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r8, $i3);
        $c4 = $r8[$i3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, $c4$sym);
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label2;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46164, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46165, 1);
        goto label5;

     label5:
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 729);
        $r10 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i5 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 0);
        if $i5 <= 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46166, 0);
        _sym_tmp_9 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 729);
        $r11 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        _sym_tmp_10 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 729);
        $r12 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i6 = virtualinvoke $r12.<java.lang.StringBuilder: int length()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 1);
        $i7 = $i6 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i7$sym);
        $c8 = virtualinvoke $r11.<java.lang.StringBuilder: char charAt(int)>($i7);
        $c8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22091, $c8$sym);
        $z3 = staticinvoke <org.htmlcleaner.Utils: boolean isIdentifierHelperChar(char)>($c8);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22091);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46167, 0);
        _sym_tmp_11 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 729);
        $r13 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        _sym_tmp_12 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 729);
        $r14 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i9 = virtualinvoke $r14.<java.lang.StringBuilder: int length()>();
        $i9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i9$sym, null, $i9, 1);
        $i10 = $i9 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5988, null, $i10$sym);
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i10);
        goto label5;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46166, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46167, 1);
        goto label8;

     label8:
        _sym_tmp_13 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 729);
        $r16 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i11 = virtualinvoke $r16.<java.lang.StringBuilder: int length()>();
        $i11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i11$sym, null, $i11, 0);
        if $i11 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46168, 0);
        return null;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46168, 1);
        goto label10;

     label10:
        _sym_tmp_14 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 729);
        $r17 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 < 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46169, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, i0$sym);
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $i12$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i12 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i12$sym);
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(58);
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 < 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46170, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, i1$sym);
        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46170, 1);
        goto label12;

     label12:
        $z4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isNamespacesAware$sym>;
        _sym_tmp_15 = r0.<org.htmlcleaner.HtmlTokenizer: int isNamespacesAware$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 736);
        $z4 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isNamespacesAware>;
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46171, 0);
        $r18 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label15;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46171, 1);
        goto label14;

     label14:
        $r22 = r3;

     label15:
        r1 = $r22;
        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 46169, 1);
        goto label17;

     label17:
        return r1;
    }

    private void tagAttributes() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $z13$sym, $z12$sym, $z11$sym, $z10$sym, $z9$sym, $z8$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, $r3, $r5, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.htmlcleaner.CleanerProperties $r4, $r7;
        org.htmlcleaner.TagToken $r9;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22110, 32996, 1);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46181, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46172, 0);
        $z1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 727);
        $z1 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46173, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46174, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("/>");
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46175, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22108, null);
        r1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        $z4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 727);
        $z4 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46176, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z5 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(60);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46177, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z6 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46178, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z7 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("/>");
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46179, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22093, null);
        $z8 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isValidXmlChar()>();
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22093);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46180, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22096, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrent()>();
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46180, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label7;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46177, 1);
        goto label7;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46178, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46179, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z9 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(60);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46181, 0);
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym> = null;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 727);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(727);
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        goto label1;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46176, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z10 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(61);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46182, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22112, null);
        r2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String attributeValue()>();
        goto label16;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46182, 1);
        goto label11;

     label11:
        $r3 = "empty";
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 731);
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props>;
        _sym_tmp_5 = $r4.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 673);
        $r5 = $r4.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z11 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46183, 0);
        r2 = "";
        goto label16;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46183, 1);
        goto label13;

     label13:
        $r6 = "true";
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 731);
        $r7 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props>;
        _sym_tmp_7 = $r7.<org.htmlcleaner.CleanerProperties: int booleanAttributeValues$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 673);
        $r8 = $r7.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z12 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46184, 0);
        r2 = "true";
        goto label16;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46184, 1);
        goto label15;

     label15:
        r2 = r1;

     label16:
        $z13$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _asExpected$sym>;
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int _asExpected$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 727);
        $z13 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46185, 0);
        _sym_tmp_9 = r0.<org.htmlcleaner.HtmlTokenizer: int _currentTagToken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 725);
        $r9 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16108, null, null, null);
        virtualinvoke $r9.<org.htmlcleaner.TagToken: void setAttribute(java.lang.String,java.lang.String)>(r1, r2);
        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46185, 1);
        goto label18;

     label18:
        goto label1;

        goto label23;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46172, 1);
        goto label23;

        goto label23;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46173, 1);
        goto label23;

        goto label23;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46174, 1);
        goto label23;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46175, 1);
        goto label23;

     label23:
        return;
    }

    private java.lang.String attributeValue() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z20$sym, $z19$sym, $c2$sym, $i1$sym, $r5$sym, $z18$sym, $z17$sym, $z16$sym, $z15$sym, $z14$sym, $z13$sym, $z12$sym, $z11$sym, $z10$sym, $z9$sym, $z8$sym, $z7$sym, $z6$sym, $z5$sym, $i0$sym, $z4$sym, $z3$sym, $z2$sym, z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.lang.StringBuilder $r1, $r2, $r4, $r7;
        char[] $r5;
        char $c2;
        java.lang.String $r8;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22112, 32997, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(60);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46186, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46187, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z4 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("/>");
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46188, 0);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46186, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46187, 1);
        goto label2;

     label2:
        return "";

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46188, 1);
        goto label4;

     label4:
        z0$sym = null;
        z0 = 0;
        z1$sym = null;
        z1 = 0;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 729);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 729);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3021, null, null, $i0$sym);
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z5 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(39);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46189, 0);
        z1$sym = null;
        z1 = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label8;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46189, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z6 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(34);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46190, 0);
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46190, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z7 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 != 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46191, 0);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46192, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22086, null, null);
        $z8 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(39);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22086);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46193, 0);
        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46192, 1);
        goto label10;

     label10:
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46194, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22086, null, null);
        $z9 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(34);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22086);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 != 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46195, 0);
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46193, 1);
        goto label12;

     label12:
        $z10$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isAllowHtmlInsideAttributes$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int isAllowHtmlInsideAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 739);
        $z10 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllowHtmlInsideAttributes>;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 != 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46196, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22086, null, null);
        $z11 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(62);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22086);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 != 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46197, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22086, null, null);
        $z12 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(60);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22086);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46198, 0);
        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46196, 1);
        goto label14;

     label14:
        $z13$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isAllowMultiWordAttributes$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int isAllowMultiWordAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 738);
        $z13 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllowMultiWordAttributes>;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 != 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46199, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22081, null);
        $z14 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespaceSafe()>();
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22081);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46200, 0);
        goto label19;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46194, 1);
        goto label19;

        goto label19;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46195, 1);
        goto label19;

        goto label19;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46197, 1);
        goto label19;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46198, 1);
        goto label19;

     label19:
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 != 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46201, 0);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46202, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22081, null);
        $z15 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespaceSafe()>();
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22081);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 != 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46203, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22086, null, null);
        $z16 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(62);
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22086);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 != 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46204, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22086, null, null);
        $z17 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(60);
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22086);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 != 0 goto label30;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46205, 0);
        goto label22;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46199, 1);
        goto label22;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46200, 1);
        goto label22;

     label22:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22094, null);
        $z18 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isValidXmlCharSafe()>();
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22094);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46206, 0);
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 729);
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r5$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _working$sym>;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int _working$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 719);
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _pos$sym>;
        _sym_tmp_7 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 720);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,char[],int)>($r5$sym, $i1$sym, $r5, $i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r5, $i1);
        $c2 = $r5[$i1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, $c2$sym);
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46206, 1);
        goto label24;

     label24:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label8;

        goto label31;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46191, 1);
        goto label31;

        goto label31;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46201, 1);
        goto label31;

        goto label31;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46202, 1);
        goto label31;

        goto label31;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46203, 1);
        goto label31;

        goto label31;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46204, 1);
        goto label31;

        goto label31;

     label30:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46205, 1);
        goto label31;

     label31:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z19 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(39);
        $z19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z19$sym, null, $z19, 0);
        if $z19 == 0 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46207, 0);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46208, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label37;

        goto label34;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46207, 1);
        goto label34;

        goto label34;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46208, 1);
        goto label34;

     label34:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z20 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(34);
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z20$sym, null, $z20, 0);
        if $z20 == 0 goto label35;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46209, 0);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label36;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46210, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label37;

     label35:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46209, 1);
        goto label37;

        goto label37;

     label36:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46210, 1);
        goto label37;

     label37:
        _sym_tmp_8 = r0.<org.htmlcleaner.HtmlTokenizer: int commonStr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 729);
        $r7 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }

    private boolean content() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22103, 32998, 1);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46213, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46211, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22094, null);
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isValidXmlCharSafe()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22094);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46212, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46212, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22084, null, null);
        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(60);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22084);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46213, 0);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46211, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22100, null);
        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean addSavedAsContent()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22100);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22103, $z3$sym);
        return $z3;
    }

    private void ignoreUntil(char) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $z0$sym, c0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlTokenizer r0;
        char c0;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22105, 32999, 2);
        c0$sym = a3targs$symargs[1];
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46215, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46214, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22083, null, c0$sym);
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isChar(char)>(c0);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22083);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46215, 0);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46214, 1);
        goto label3;

     label3:
        return;
    }

    private void comment() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $i7$sym, $c6$sym, $i5$sym, $c4$sym, $i3$sym, $i2$sym, $r5$sym, $z4$sym, $i1$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3, $i5, $i7;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, $r4, $r9, $r12, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.htmlcleaner.CleanerProperties $r3;
        char[] $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17;
        char $c4, $c6;
        org.htmlcleaner.CommentNode $r18;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22102, 33000, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22079, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(4);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22092, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22092);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46216, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("-->");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46217, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22094, null);
        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isValidXmlCharSafe()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22094);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46218, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22097, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46218, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22078, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label0;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46216, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46217, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22080, null, null);
        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("-->");
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22080);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46219, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22079, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(3);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46219, 1);
        goto label7;

     label7:
        $i1$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 723);
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 <= 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46220, 0);
        $z4$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression isOmitComments$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.HtmlTokenizer: int isOmitComments$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 737);
        $z4 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitComments>;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46221, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.HtmlTokenizer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 731);
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21878, null);
        r1 = virtualinvoke $r3.<org.htmlcleaner.CleanerProperties: java.lang.String getHyphenReplacementInComment()>();
        $r4 = new java.lang.String;
        $r5$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _saved$sym>;
        _sym_tmp_4 = r0.<org.htmlcleaner.HtmlTokenizer: int _saved$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 722);
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i2$sym = r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym>;
        _sym_tmp_5 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 723);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2510, null, $r5$sym, null, $i2$sym);
        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i2);
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("--", $r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 0);
        if $i3 <= 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46222, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, null);
        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);
        $c4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c4$sym, null, $c4, 45);
        if $c4 != 45 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46223, 0);
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, null);
        $r12 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label10;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46222, 1);
        goto label10;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46223, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r2.<java.lang.String: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 <= 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46224, 0);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i5 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i5$sym);
        $c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i5);
        $c6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c6$sym, null, $c6, 45);
        if $c6 != 45 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46225, 0);
        $r14 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i7 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, $i7$sym);
        $r15 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label13;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46224, 1);
        goto label13;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46225, 1);
        goto label13;

     label13:
        $r18 = new org.htmlcleaner.CommentNode;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r18.<org.htmlcleaner.CommentNode: void <init>(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22075, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r18);
        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46221, 1);
        goto label15;

     label15:
        r0.<org.htmlcleaner.HtmlTokenizer: acteve.symbolic.integer.Expression _savedLen$sym> = null;
        _sym_tmp_6 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 723);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(723);
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = 0;
        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46220, 1);
        goto label17;

     label17:
        return;
    }

    private void doctype() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, r3, r4;
        org.htmlcleaner.DoctypeToken $r5;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22104, 33001, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22079, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22108, null);
        r1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22108, null);
        r2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22112, null);
        r3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String attributeValue()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22099, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22112, null);
        r4 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String attributeValue()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22105, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void ignoreUntil(char)>(60);
        $r5 = new org.htmlcleaner.DoctypeToken;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(419, null, null, null, null, null);
        specialinvoke $r5.<org.htmlcleaner.DoctypeToken: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _docType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 724);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.HtmlTokenizer: int _docType$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(724);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.DoctypeToken _docType> = $r5;
        return;
    }

    public org.htmlcleaner.DoctypeToken getDocType()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.HtmlTokenizer r0;
        org.htmlcleaner.DoctypeToken $r1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22022, 33002, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.HtmlTokenizer: int _docType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 724);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.DoctypeToken _docType>;
        return $r1;
    }
}
public interface  org.htmlcleaner.ITagInfoProvider extends java.lang.Object
{

    public abstract org.htmlcleaner.TagInfo getTagInfo(java.lang.String);
}
class org.htmlcleaner.Serializer$1 extends java.lang.Object
{
}
class org.htmlcleaner.Serializer$HeadlessTagNode extends org.htmlcleaner.TagNode
{
    final org.htmlcleaner.Serializer this$0;
    final int this$0$a3tid;

    private void <init>(org.htmlcleaner.Serializer, org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.Serializer$HeadlessTagNode r0;
        org.htmlcleaner.Serializer r1;
        org.htmlcleaner.TagNode r2;
        java.util.Map r3, r4, $r5, $r6;
        java.util.List $r7, $r8;
        org.htmlcleaner.DoctypeToken $r9;

        r0 := @this: org.htmlcleaner.Serializer$HeadlessTagNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22113, 33003, 3);
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer$HeadlessTagNode: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 742);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.Serializer$HeadlessTagNode: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(742);
        r0.<org.htmlcleaner.Serializer$HeadlessTagNode: org.htmlcleaner.Serializer this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke r0.<org.htmlcleaner.TagNode: void <init>(java.lang.String)>("");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r5 = virtualinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r6 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(14619, null, null);
        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r7 = virtualinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r8 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(832, null, null);
        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22022, null);
        $r9 = virtualinvoke r2.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken getDocType()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22023, null, null);
        virtualinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: void setDocType(org.htmlcleaner.DoctypeToken)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21938, null);
        r3 = virtualinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: java.util.Map getNamespaceDeclarations()>();
        _sym_tmp_2 = null;
        if r3 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46226, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21938, null);
        r4 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        _sym_tmp_2 = null;
        if r4 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46227, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(14619, null, null);
        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>(r4);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46226, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46227, 1);
        goto label2;

     label2:
        return;
    }

    void <init>(org.htmlcleaner.Serializer, org.htmlcleaner.TagNode, org.htmlcleaner.Serializer$1)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer$HeadlessTagNode r0;
        org.htmlcleaner.Serializer r1;
        org.htmlcleaner.TagNode r2;
        org.htmlcleaner.Serializer$1 r3;

        r0 := @this: org.htmlcleaner.Serializer$HeadlessTagNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: org.htmlcleaner.TagNode;
        r3 := @parameter2: org.htmlcleaner.Serializer$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22114, 33004, 4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22113, null, null, null);
        specialinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: void <init>(org.htmlcleaner.Serializer,org.htmlcleaner.TagNode)>(r1, r2);
        return;
    }
}
public abstract class org.htmlcleaner.Serializer extends java.lang.Object
{
    protected org.htmlcleaner.CleanerProperties props;
    protected int props$a3tid;

    protected void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 33005, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 717);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.Serializer: int props$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(717);
        r0.<org.htmlcleaner.Serializer: org.htmlcleaner.CleanerProperties props> = r1;
        return;
    }

    public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, java.lang.String, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;
        java.lang.String r3;
        boolean z0;
        java.io.OutputStreamWriter $r4;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21896, 33006, 5);
        z0$sym = a3targs$symargs[4];
        $r4 = new java.io.OutputStreamWriter;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6201, null, null, null);
        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22115, null, null, null, null, z0$sym);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String,boolean)>(r1, $r4, r3, z0);
        return;
    }

    public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;
        java.lang.String r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22116, 33007, 4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r1, r2, r3, 0);
        return;
    }

    public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;
        boolean z0;
        java.lang.String $r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22117, 33008, 4);
        z0$sym = a3targs$symargs[3];
        _sym_tmp_1 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 675);
        $r3 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r1, r2, $r3, z0);
        return;
    }

    public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22118, 33009, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22117, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,boolean)>(r1, r2, 0);
        return;
    }

    public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, r3;
        boolean z0;
        java.io.FileOutputStream $r4;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22119, 33010, 5);
        z0$sym = a3targs$symargs[4];
        $r4 = new java.io.FileOutputStream;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, null, null, z0$sym);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r1, $r4, r3, z0);
        return;
    }

    public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22120, 33011, 4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22119, null, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);
        return;
    }

    public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r3;
        boolean z0;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22121, 33012, 4);
        z0$sym = a3targs$symargs[3];
        _sym_tmp_1 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 675);
        $r3 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22119, null, null, null, null, z0$sym);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r1, r2, $r3, z0);
        return;
    }

    public void writeToFile(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22122, 33013, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22121, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String,boolean)>(r1, r2, 0);
        return;
    }

    public java.lang.String getAsString(org.htmlcleaner.TagNode, java.lang.String, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r6;
        boolean z0;
        java.io.StringWriter $r3, r4;
        java.lang.StringBuffer $r5;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22124, 33014, 4);
        z0$sym = a3targs$symargs[3];
        $r3 = new java.io.StringWriter;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.io.StringWriter: void <init>()>();
        r4 = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22115, null, null, null, null, z0$sym);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String,boolean)>(r1, r4, r2, z0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22123, null);
        $r5 = virtualinvoke r4.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r6;
    }

    public java.lang.String getAsString(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22125, 33015, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22124, null, null, null, null);
        $r3 = virtualinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String,boolean)>(r1, r2, 0);
        return $r3;
    }

    public java.lang.String getAsString(org.htmlcleaner.TagNode, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        boolean z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22126, 33016, 3);
        z0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <org.htmlcleaner.HtmlCleaner: int DEFAULT_CHARSET$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 675);
        $r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22124, null, null, null, z0$sym);
        $r3 = virtualinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String,boolean)>(r1, $r2, z0);
        return $r3;
    }

    public java.lang.String getAsString(org.htmlcleaner.TagNode) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22059, 33017, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22126, null, null, null);
        $r2 = virtualinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode,boolean)>(r1, 0);
        return $r2;
    }

    public void write(org.htmlcleaner.TagNode, java.io.Writer, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.lang.String r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22127, 33018, 4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22115, null, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String,boolean)>(r1, r2, r3, 0);
        return;
    }

    public void write(org.htmlcleaner.TagNode, java.io.Writer, java.lang.String, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.lang.String r3, r4, r17, $r21;
        boolean z0, $z1, $z2;
        org.htmlcleaner.Serializer$HeadlessTagNode $r5;
        java.io.BufferedWriter $r6, r7;
        org.htmlcleaner.CleanerProperties $r8, $r22;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20;
        org.htmlcleaner.DoctypeToken r23;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22115, 33019, 5);
        z0$sym = a3targs$symargs[4];
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46228, 0);
        $r5 = new org.htmlcleaner.Serializer$HeadlessTagNode;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22114, null, null, null, null);
        specialinvoke $r5.<org.htmlcleaner.Serializer$HeadlessTagNode: void <init>(org.htmlcleaner.Serializer,org.htmlcleaner.TagNode,org.htmlcleaner.Serializer$1)>(r0, r1, null);
        r1 = $r5;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46228, 1);
        goto label1;

     label1:
        $r6 = new java.io.BufferedWriter;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2051, null, null);
        specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r2);
        r7 = $r6;
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r8 = r0.<org.htmlcleaner.Serializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21862, null);
        $z1 = virtualinvoke $r8.<org.htmlcleaner.CleanerProperties: boolean isOmitXmlDeclaration()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21862);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46229, 0);
        r4 = "<?xml version=\"1.0\"";
        _sym_tmp_3 = null;
        if r3 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46230, 0);
        $r9 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encoding=\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46230, 1);
        goto label3;

     label3:
        $r14 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?>");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        $r18 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>($r21);
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46229, 1);
        goto label5;

     label5:
        _sym_tmp_2 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 717);
        $r22 = r0.<org.htmlcleaner.Serializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21864, null);
        $z2 = virtualinvoke $r22.<org.htmlcleaner.CleanerProperties: boolean isOmitDoctypeDeclaration()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21864);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46231, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22022, null);
        r23 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken getDocType()>();
        _sym_tmp_3 = null;
        if r23 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46232, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21836, null, null, null);
        virtualinvoke r23.<org.htmlcleaner.DoctypeToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r7);
        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46231, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46232, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21838, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void serialize(org.htmlcleaner.TagNode,java.io.Writer)>(r1, r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2039, null);
        virtualinvoke r7.<java.io.Writer: void flush()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke r7.<java.io.Writer: void close()>();
        return;
    }

    protected boolean isScriptOrStyle(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22065, 33020, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r2 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r3 = "script";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46233, 0);
        $r4 = "style";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46234, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46233, 1);
        goto label1;

     label1:
        $z2$sym = null;
        $z2 = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46234, 1);
        goto label3;

     label3:
        $z2$sym = null;
        $z2 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22065, $z2$sym);
        return $z2;
    }

    protected abstract void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException;
}
public class org.htmlcleaner.SimpleHtmlSerializer extends org.htmlcleaner.HtmlSerializer
{

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.SimpleHtmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.SimpleHtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 33021, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke r0.<org.htmlcleaner.HtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.SimpleHtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.lang.String r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r6;
        org.htmlcleaner.BaseToken $r9;

        r0 := @this: org.htmlcleaner.SimpleHtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21838, 33022, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21829, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21830, null, null);
        $z0 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21830);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46235, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46236, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z2$sym = null;
        $z2 = r4 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46237, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21831, null, null);
        $z3 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21831);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46238, 0);
        $r8 = r5;
        goto label3;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46238, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21898, null, null);
        $r8 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: java.lang.String escapeText(java.lang.String)>(r5);

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r8);
        goto label7;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46237, 1);
        goto label5;

     label5:
        $z4$sym = null;
        $z4 = r4 instanceof org.htmlcleaner.BaseToken;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46239, 0);
        $r9 = (org.htmlcleaner.BaseToken) r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21836, null, null, null);
        interfaceinvoke $r9.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46239, 1);
        goto label7;

     label7:
        goto label0;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46236, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21837, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46235, 1);
        goto label11;

     label11:
        return;
    }
}
public class org.htmlcleaner.SimpleXmlSerializer extends org.htmlcleaner.XmlSerializer
{

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.SimpleXmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.SimpleXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 33023, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke r0.<org.htmlcleaner.XmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.SimpleXmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.lang.String r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r6;
        org.htmlcleaner.BaseToken $r9;

        r0 := @this: org.htmlcleaner.SimpleXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21838, 33024, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21829, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21830, null, null);
        $z0 = virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21830);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46240, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46241, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z2$sym = null;
        $z2 = r4 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46242, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21831, null, null);
        $z3 = virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21831);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46243, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        $r8 = virtualinvoke r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("]]>", "]]&gt;");
        goto label3;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46243, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21832, null, null);
        $r8 = virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: java.lang.String escapeXml(java.lang.String)>(r5);

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r8);
        goto label7;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46242, 1);
        goto label5;

     label5:
        $z4$sym = null;
        $z4 = r4 instanceof org.htmlcleaner.BaseToken;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46244, 0);
        $r9 = (org.htmlcleaner.BaseToken) r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21836, null, null, null);
        interfaceinvoke $r9.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46244, 1);
        goto label7;

     label7:
        goto label0;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46241, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21837, null, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46240, 1);
        goto label11;

     label11:
        return;
    }
}
public class org.htmlcleaner.SpecialEntity extends java.lang.Object
{
    private static java.util.Map entities;
    private static int maxEntityLength;
    private java.lang.String key;
    private int intCode;
    private static int entities$a3tid;
    private static acteve.symbolic.integer.Expression maxEntityLength$sym;
    private static int maxEntityLength$a3tid;
    private int key$a3tid;
    private acteve.symbolic.integer.Expression intCode$sym;
    private int intCode$a3tid;

    public static void addEntity(java.lang.String, int) throws org.htmlcleaner.HtmlCleanerException
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $i2$sym, $z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2;
        java.lang.String r0, $r7;
        java.util.Map $r1, $r8;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;
        boolean $z0;
        org.htmlcleaner.HtmlCleanerException $r3;
        org.htmlcleaner.SpecialEntity $r9;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22128, 33025, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <org.htmlcleaner.SpecialEntity: int entities$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 743);
        $r1 = <org.htmlcleaner.SpecialEntity: java.util.Map entities>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(496, null, null);
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(496);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46245, 0);
        $r3 = new org.htmlcleaner.HtmlCleanerException;
        $r2 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entity \"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is already defined!");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String)>($r7);
        throw $r3;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46245, 1);
        goto label1;

     label1:
        _sym_tmp_2 = <org.htmlcleaner.SpecialEntity: int entities$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 743);
        $r8 = <org.htmlcleaner.SpecialEntity: java.util.Map entities>;
        $r9 = new org.htmlcleaner.SpecialEntity;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, i0$sym);
        specialinvoke $r9.<org.htmlcleaner.SpecialEntity: void <init>(java.lang.String,int)>(r0, i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i1 = virtualinvoke r0.<java.lang.String: int length()>();
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i2$sym = <org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression maxEntityLength$sym>;
        _sym_tmp_3 = <org.htmlcleaner.SpecialEntity: int maxEntityLength$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 744);
        $i2 = <org.htmlcleaner.SpecialEntity: int maxEntityLength>;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i2$sym, i1, $i2);
        if i1 <= $i2 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46246, 0);
        <org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression maxEntityLength$sym> = i1$sym;
        _sym_tmp_4 = <org.htmlcleaner.SpecialEntity: int maxEntityLength$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 744);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.SpecialEntity: int maxEntityLength$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(744);
        <org.htmlcleaner.SpecialEntity: int maxEntityLength> = i1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46246, 1);
        goto label3;

     label3:
        return;
    }

    public static org.htmlcleaner.SpecialEntity getEntity(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r2$sym;
        java.lang.String r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.htmlcleaner.SpecialEntity $r3;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22070, 33026, 1);
        _sym_tmp_1 = <org.htmlcleaner.SpecialEntity: int entities$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 743);
        $r1 = <org.htmlcleaner.SpecialEntity: java.util.Map entities>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        $r2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        $r3 = (org.htmlcleaner.SpecialEntity) $r2;
        return $r3;
    }

    static int getMaxEntityLength()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22069, 33027, 0);
        $i0$sym = <org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression maxEntityLength$sym>;
        _sym_tmp_1 = <org.htmlcleaner.SpecialEntity: int maxEntityLength$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 744);
        $i0 = <org.htmlcleaner.SpecialEntity: int maxEntityLength>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22069, $i0$sym);
        return $i0;
    }

    private void <init>(java.lang.String, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        acteve.symbolic.integer.Expression i0$sym;
        org.htmlcleaner.SpecialEntity r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(511, 33028, 3);
        i0$sym = a3targs$symargs[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.SpecialEntity: int key$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 745);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.SpecialEntity: int key$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(745);
        r0.<org.htmlcleaner.SpecialEntity: java.lang.String key> = r1;
        r0.<org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression intCode$sym> = i0$sym;
        _sym_tmp_2 = r0.<org.htmlcleaner.SpecialEntity: int intCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 746);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.SpecialEntity: int intCode$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(746);
        r0.<org.htmlcleaner.SpecialEntity: int intCode> = i0;
        return;
    }

    public java.lang.String getKey()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.SpecialEntity r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(5802, 33029, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.SpecialEntity: int key$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 745);
        $r1 = r0.<org.htmlcleaner.SpecialEntity: java.lang.String key>;
        return $r1;
    }

    public int getIntCode()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        org.htmlcleaner.SpecialEntity r0;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22129, 33030, 1);
        $i0$sym = r0.<org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression intCode$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.SpecialEntity: int intCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 746);
        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22129, $i0$sym);
        return $i0;
    }

    public char getCharacter()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $c1$sym, $i0$sym;
        org.htmlcleaner.SpecialEntity r0;
        char $c1;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22072, 33031, 1);
        $i0$sym = r0.<org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression intCode$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.SpecialEntity: int intCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 746);
        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;
        $c1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i0$sym, 1);
        $c1 = (char) $i0;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22072, $c1$sym);
        return $c1;
    }

    public java.lang.String getDecimalNCR()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22071, 33032, 1);
        $r1 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $i0$sym = r0.<org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression intCode$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.SpecialEntity: int intCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 746);
        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }

    public java.lang.String getHexNCR()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22130, 33033, 1);
        $r1 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#x");
        $i0$sym = r0.<org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression intCode$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.SpecialEntity: int intCode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 746);
        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(304, $i0$sym);
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    public java.lang.String getEscapedValue()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22073, 33034, 1);
        $r1 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");
        _sym_tmp_1 = r0.<org.htmlcleaner.SpecialEntity: int key$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 745);
        $r3 = r0.<org.htmlcleaner.SpecialEntity: java.lang.String key>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        java.util.HashMap $r0;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 33035, 0);
        $r0 = new java.util.HashMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        _sym_tmp_1 = <org.htmlcleaner.SpecialEntity: int entities$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 743);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.SpecialEntity: int entities$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(743);
        <org.htmlcleaner.SpecialEntity: java.util.Map entities> = $r0;
        <org.htmlcleaner.SpecialEntity: acteve.symbolic.integer.Expression maxEntityLength$sym> = null;
        _sym_tmp_2 = <org.htmlcleaner.SpecialEntity: int maxEntityLength$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 744);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.SpecialEntity: int maxEntityLength$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(744);
        <org.htmlcleaner.SpecialEntity: int maxEntityLength> = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("nbsp", 160);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iexcl", 161);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cent", 162);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("pound", 163);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("curren", 164);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("yen", 165);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("brvbar", 166);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sect", 167);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uml", 168);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("copy", 169);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ordf", 170);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("laquo", 171);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("not", 172);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("shy", 173);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("reg", 174);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("macr", 175);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("deg", 176);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("plusmn", 177);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sup2", 178);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sup3", 179);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("acute", 180);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("micro", 181);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("para", 182);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("middot", 183);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cedil", 184);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sup1", 185);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ordm", 186);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("raquo", 187);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("frac14", 188);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("frac12", 189);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("frac34", 190);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iquest", 191);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Agrave", 192);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Aacute", 193);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Acirc", 194);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Atilde", 195);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Auml", 196);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Aring", 197);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("AElig", 198);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ccedil", 199);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Egrave", 200);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Eacute", 201);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ecirc", 202);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Euml", 203);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Igrave", 204);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Iacute", 205);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Icirc", 206);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Iuml", 207);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ETH", 208);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ntilde", 209);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ograve", 210);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Oacute", 211);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ocirc", 212);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Otilde", 213);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ouml", 214);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("times", 215);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Oslash", 216);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ugrave", 217);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Uacute", 218);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ucirc", 219);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Uuml", 220);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Yacute", 221);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("THORN", 222);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("szlig", 223);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("agrave", 224);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("aacute", 225);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("acirc", 226);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("atilde", 227);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("auml", 228);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("aring", 229);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("aelig", 230);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ccedil", 231);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("egrave", 232);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("eacute", 233);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ecirc", 234);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("euml", 235);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("igrave", 236);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iacute", 237);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("icirc", 238);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iuml", 239);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("eth", 240);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ntilde", 241);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ograve", 242);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oacute", 243);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ocirc", 244);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("otilde", 245);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ouml", 246);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("divide", 247);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oslash", 248);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ugrave", 249);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uacute", 250);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ucirc", 251);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uuml", 252);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("yacute", 253);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("thorn", 254);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("yuml", 255);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("OElig", 338);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oelig", 339);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Scaron", 352);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("scaron", 353);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Yuml", 376);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("fnof", 402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("circ", 710);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("tilde", 732);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Alpha", 913);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Beta", 914);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Gamma", 915);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Delta", 916);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Epsilon", 917);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Zeta", 918);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Eta", 919);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Theta", 920);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Iota", 921);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Kappa", 922);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Lambda", 923);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Mu", 924);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Nu", 925);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Xi", 926);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Omicron", 927);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Pi", 928);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Rho", 929);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Sigma", 931);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Tau", 932);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Upsilon", 933);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Phi", 934);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Chi", 935);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Psi", 936);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Omega", 937);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("alpha", 945);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("beta", 946);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("gamma", 947);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("delta", 948);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("epsilon", 949);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("zeta", 950);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("eta", 951);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("theta", 952);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iota", 953);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("kappa", 954);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lambda", 955);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("mu", 956);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("nu", 957);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("xi", 958);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("omicron", 959);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("pi", 960);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rho", 961);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sigmaf", 962);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sigma", 963);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("tau", 964);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("upsilon", 965);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("phi", 966);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("chi", 967);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("psi", 968);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("omega", 969);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("thetasym", 977);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("upsih", 978);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("piv", 982);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ensp", 8194);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("emsp", 8195);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("thinsp", 8201);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("zwnj", 8204);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("zwj", 8205);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lrm", 8206);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rlm", 8207);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ndash", 8211);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("mdash", 8212);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lsquo", 8216);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rsquo", 8217);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sbquo", 8218);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ldquo", 8220);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rdquo", 8221);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("bdquo", 8222);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("dagger", 8224);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Dagger", 8225);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("bull", 8226);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("hellip", 8230);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("permil", 8240);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("prime", 8242);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Prime", 8243);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lsaquo", 8249);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rsaquo", 8250);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oline", 8254);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("frasl", 8260);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("euro", 8364);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("image", 8465);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("weierp", 8472);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("real", 8476);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("trade", 8482);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("alefsym", 8501);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("larr", 8592);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uarr", 8593);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rarr", 8594);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("darr", 8595);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("harr", 8596);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("crarr", 8629);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lArr", 8656);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uArr", 8657);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rArr", 8658);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("dArr", 8659);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("hArr", 8660);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("forall", 8704);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("part", 8706);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("exist", 8707);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("empty", 8709);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("nabla", 8711);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("isin", 8712);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("notin", 8713);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ni", 8715);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("prod", 8719);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sum", 8721);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("minus", 8722);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lowast", 8727);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("radic", 8730);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("prop", 8733);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("infin", 8734);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ang", 8736);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("and", 8743);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("or", 8744);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cap", 8745);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cup", 8746);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("int", 8747);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("there4", 8756);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sim", 8764);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cong", 8773);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("asymp", 8776);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ne", 8800);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("equiv", 8801);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("le", 8804);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ge", 8805);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sub", 8834);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sup", 8835);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("nsub", 8836);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sube", 8838);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("supe", 8839);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oplus", 8853);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("otimes", 8855);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("perp", 8869);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sdot", 8901);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lceil", 8968);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rceil", 8969);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lfloor", 8970);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rfloor", 8971);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lang", 9001);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rang", 9002);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("loz", 9674);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("spades", 9824);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("clubs", 9827);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("hearts", 9829);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22128, null, null);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("diams", 9830);
        return;
    }
}
public class org.htmlcleaner.TagInfo extends java.lang.Object
{
    protected static final int HEAD_AND_BODY;
    protected static final int HEAD;
    protected static final int BODY;
    protected static final int CONTENT_ALL;
    protected static final int CONTENT_NONE;
    protected static final int CONTENT_TEXT;
    private java.lang.String name;
    private int contentType;
    private java.util.Set mustCloseTags;
    private java.util.Set higherTags;
    private java.util.Set childTags;
    private java.util.Set permittedTags;
    private java.util.Set copyTags;
    private java.util.Set continueAfterTags;
    private int belongsTo;
    private java.lang.String requiredParent;
    private java.lang.String fatalTag;
    private boolean deprecated;
    private boolean unique;
    private boolean ignorePermitted;
    protected static final acteve.symbolic.integer.Expression HEAD_AND_BODY$sym;
    protected static final int HEAD_AND_BODY$a3tid;
    protected static final acteve.symbolic.integer.Expression HEAD$sym;
    protected static final int HEAD$a3tid;
    protected static final acteve.symbolic.integer.Expression BODY$sym;
    protected static final int BODY$a3tid;
    protected static final acteve.symbolic.integer.Expression CONTENT_ALL$sym;
    protected static final int CONTENT_ALL$a3tid;
    protected static final acteve.symbolic.integer.Expression CONTENT_NONE$sym;
    protected static final int CONTENT_NONE$a3tid;
    protected static final acteve.symbolic.integer.Expression CONTENT_TEXT$sym;
    protected static final int CONTENT_TEXT$a3tid;
    private int name$a3tid;
    private acteve.symbolic.integer.Expression contentType$sym;
    private int contentType$a3tid;
    private int mustCloseTags$a3tid;
    private int higherTags$a3tid;
    private int childTags$a3tid;
    private int permittedTags$a3tid;
    private int copyTags$a3tid;
    private int continueAfterTags$a3tid;
    private acteve.symbolic.integer.Expression belongsTo$sym;
    private int belongsTo$a3tid;
    private int requiredParent$a3tid;
    private int fatalTag$a3tid;
    private acteve.symbolic.integer.Expression deprecated$sym;
    private int deprecated$a3tid;
    private acteve.symbolic.integer.Expression unique$sym;
    private int unique$a3tid;
    private acteve.symbolic.integer.Expression ignorePermitted$sym;
    private int ignorePermitted$a3tid;

    public void <init>(java.lang.String, int, int, boolean, boolean, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        acteve.symbolic.integer.Expression z2$sym, z1$sym, z0$sym, i1$sym, i0$sym;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;
        boolean z0, z1, z2;
        java.util.HashSet $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        z2 := @parameter5: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21911, 33036, 7);
        i0$sym = a3targs$symargs[2];
        i1$sym = a3targs$symargs[3];
        z0$sym = a3targs$symargs[4];
        z1$sym = a3targs$symargs[5];
        z2$sym = a3targs$symargs[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.HashSet: void <init>()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int mustCloseTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 747);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int mustCloseTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(747);
        r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags> = $r2;
        $r3 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.HashSet: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 748);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(748);
        r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags> = $r3;
        $r4 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.util.HashSet: void <init>()>();
        _sym_tmp_3 = r0.<org.htmlcleaner.TagInfo: int childTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 749);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int childTags$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(749);
        r0.<org.htmlcleaner.TagInfo: java.util.Set childTags> = $r4;
        $r5 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.util.HashSet: void <init>()>();
        _sym_tmp_4 = r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 750);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(750);
        r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags> = $r5;
        $r6 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.util.HashSet: void <init>()>();
        _sym_tmp_5 = r0.<org.htmlcleaner.TagInfo: int copyTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 751);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int copyTags$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(751);
        r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags> = $r6;
        $r7 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.util.HashSet: void <init>()>();
        _sym_tmp_6 = r0.<org.htmlcleaner.TagInfo: int continueAfterTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 752);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int continueAfterTags$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(752);
        r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags> = $r7;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression belongsTo$sym> = null;
        _sym_tmp_7 = r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 753);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(753);
        r0.<org.htmlcleaner.TagInfo: int belongsTo> = 2;
        _sym_tmp_8 = r0.<org.htmlcleaner.TagInfo: int requiredParent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 754);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int requiredParent$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(754);
        r0.<org.htmlcleaner.TagInfo: java.lang.String requiredParent> = null;
        _sym_tmp_9 = r0.<org.htmlcleaner.TagInfo: int fatalTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 755);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int fatalTag$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(755);
        r0.<org.htmlcleaner.TagInfo: java.lang.String fatalTag> = null;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression deprecated$sym> = null;
        _sym_tmp_10 = r0.<org.htmlcleaner.TagInfo: int deprecated$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 756);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int deprecated$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(756);
        r0.<org.htmlcleaner.TagInfo: boolean deprecated> = 0;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression unique$sym> = null;
        _sym_tmp_11 = r0.<org.htmlcleaner.TagInfo: int unique$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 757);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int unique$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(757);
        r0.<org.htmlcleaner.TagInfo: boolean unique> = 0;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression ignorePermitted$sym> = null;
        _sym_tmp_12 = r0.<org.htmlcleaner.TagInfo: int ignorePermitted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 758);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int ignorePermitted$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(758);
        r0.<org.htmlcleaner.TagInfo: boolean ignorePermitted> = 0;
        _sym_tmp_13 = r0.<org.htmlcleaner.TagInfo: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 759);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int name$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(759);
        r0.<org.htmlcleaner.TagInfo: java.lang.String name> = r1;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym> = i0$sym;
        _sym_tmp_14 = r0.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_14, 760);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int contentType$a3tid> = _sym_tmp_14;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(760);
        r0.<org.htmlcleaner.TagInfo: int contentType> = i0;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression belongsTo$sym> = i1$sym;
        _sym_tmp_15 = r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_15, 753);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid> = _sym_tmp_15;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(753);
        r0.<org.htmlcleaner.TagInfo: int belongsTo> = i1;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression deprecated$sym> = z0$sym;
        _sym_tmp_16 = r0.<org.htmlcleaner.TagInfo: int deprecated$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_16, 756);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int deprecated$a3tid> = _sym_tmp_16;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(756);
        r0.<org.htmlcleaner.TagInfo: boolean deprecated> = z0;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression unique$sym> = z1$sym;
        _sym_tmp_17 = r0.<org.htmlcleaner.TagInfo: int unique$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_17, 757);
        _sym_tmp_17 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int unique$a3tid> = _sym_tmp_17;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(757);
        r0.<org.htmlcleaner.TagInfo: boolean unique> = z1;
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression ignorePermitted$sym> = z2$sym;
        _sym_tmp_18 = r0.<org.htmlcleaner.TagInfo: int ignorePermitted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_18, 758);
        _sym_tmp_18 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int ignorePermitted$a3tid> = _sym_tmp_18;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(758);
        r0.<org.htmlcleaner.TagInfo: boolean ignorePermitted> = z2;
        return;
    }

    public void defineFatalTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21902, 33037, 2);
        $r2 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46247, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int fatalTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 755);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int fatalTag$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(755);
        r0.<org.htmlcleaner.TagInfo: java.lang.String fatalTag> = r4;
        _sym_tmp_2 = r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 748);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46247, 1);
        goto label2;

     label2:
        return;
    }

    public void defineRequiredEnclosingTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21904, 33038, 2);
        $r2 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46248, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int requiredParent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 754);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int requiredParent$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(754);
        r0.<org.htmlcleaner.TagInfo: java.lang.String requiredParent> = r4;
        _sym_tmp_2 = r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 748);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46248, 1);
        goto label2;

     label2:
        return;
    }

    public void defineForbiddenTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21905, 33039, 2);
        $r2 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46249, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 750);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46249, 1);
        goto label2;

     label2:
        return;
    }

    public void defineAllowedChildrenTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21906, 33040, 2);
        $r2 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46250, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int childTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 749);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46250, 1);
        goto label2;

     label2:
        return;
    }

    public void defineHigherLevelTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21907, 33041, 2);
        $r2 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46251, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 748);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46251, 1);
        goto label2;

     label2:
        return;
    }

    public void defineCloseBeforeCopyInsideTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6, $r7;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21908, 33042, 2);
        $r2 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46252, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int copyTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 751);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagInfo: int mustCloseTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 747);
        $r7 = r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46252, 1);
        goto label2;

     label2:
        return;
    }

    public void defineCloseInsideCopyAfterTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21909, 33043, 2);
        $r2 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46253, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int continueAfterTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 752);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46253, 1);
        goto label2;

     label2:
        return;
    }

    public void defineCloseBeforeTags(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21910, 33044, 2);
        $r2 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46254, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int mustCloseTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 747);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46254, 1);
        goto label2;

     label2:
        return;
    }

    public java.lang.String getName()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(993, 33045, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 759);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.lang.String name>;
        return $r1;
    }

    public void setName(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1050, 33046, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 759);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int name$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(759);
        r0.<org.htmlcleaner.TagInfo: java.lang.String name> = r1;
        return;
    }

    public int getContentType()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        org.htmlcleaner.TagInfo r0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22131, 33047, 1);
        $i0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 760);
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22131, $i0$sym);
        return $i0;
    }

    public java.util.Set getMustCloseTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22132, 33048, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int mustCloseTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 747);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags>;
        return $r1;
    }

    public void setMustCloseTags(java.util.Set)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22133, 33049, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int mustCloseTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 747);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int mustCloseTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(747);
        r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags> = r1;
        return;
    }

    public java.util.Set getHigherTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22134, 33050, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 748);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        return $r1;
    }

    public void setHigherTags(java.util.Set)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22135, 33051, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 748);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(748);
        r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags> = r1;
        return;
    }

    public java.util.Set getChildTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22136, 33052, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int childTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 749);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        return $r1;
    }

    public void setChildTags(java.util.Set)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22137, 33053, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int childTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 749);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int childTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(749);
        r0.<org.htmlcleaner.TagInfo: java.util.Set childTags> = r1;
        return;
    }

    public java.util.Set getPermittedTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22045, 33054, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 750);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        return $r1;
    }

    public void setPermittedTags(java.util.Set)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22138, 33055, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 750);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(750);
        r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags> = r1;
        return;
    }

    public java.util.Set getCopyTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22139, 33056, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int copyTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 751);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags>;
        return $r1;
    }

    public void setCopyTags(java.util.Set)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22140, 33057, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int copyTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 751);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int copyTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(751);
        r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags> = r1;
        return;
    }

    public java.util.Set getContinueAfterTags()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22141, 33058, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int continueAfterTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 752);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags>;
        return $r1;
    }

    public void setContinueAfterTags(java.util.Set)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22142, 33059, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int continueAfterTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 752);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int continueAfterTags$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(752);
        r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags> = r1;
        return;
    }

    public java.lang.String getRequiredParent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22028, 33060, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int requiredParent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 754);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.lang.String requiredParent>;
        return $r1;
    }

    public void setRequiredParent(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22143, 33061, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int requiredParent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 754);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int requiredParent$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(754);
        r0.<org.htmlcleaner.TagInfo: java.lang.String requiredParent> = r1;
        return;
    }

    public int getBelongsTo()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        org.htmlcleaner.TagInfo r0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22144, 33062, 1);
        $i0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression belongsTo$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 753);
        $i0 = r0.<org.htmlcleaner.TagInfo: int belongsTo>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22144, $i0$sym);
        return $i0;
    }

    public void setBelongsTo(int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        acteve.symbolic.integer.Expression i0$sym;
        org.htmlcleaner.TagInfo r0;

        r0 := @this: org.htmlcleaner.TagInfo;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22145, 33063, 2);
        i0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression belongsTo$sym> = i0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 753);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(753);
        r0.<org.htmlcleaner.TagInfo: int belongsTo> = i0;
        return;
    }

    public java.lang.String getFatalTag()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21984, 33064, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int fatalTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 755);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.lang.String fatalTag>;
        return $r1;
    }

    public void setFatalTag(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22146, 33065, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int fatalTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 755);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int fatalTag$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(755);
        r0.<org.htmlcleaner.TagInfo: java.lang.String fatalTag> = r1;
        return;
    }

    public boolean isDeprecated()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22040, 33066, 1);
        $z0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression deprecated$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int deprecated$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 756);
        $z0 = r0.<org.htmlcleaner.TagInfo: boolean deprecated>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22040, $z0$sym);
        return $z0;
    }

    public void setDeprecated(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagInfo r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22147, 33067, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression deprecated$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int deprecated$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 756);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int deprecated$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(756);
        r0.<org.htmlcleaner.TagInfo: boolean deprecated> = z0;
        return;
    }

    public boolean isUnique()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22046, 33068, 1);
        $z0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression unique$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int unique$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 757);
        $z0 = r0.<org.htmlcleaner.TagInfo: boolean unique>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22046, $z0$sym);
        return $z0;
    }

    public void setUnique(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagInfo r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22148, 33069, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression unique$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int unique$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 757);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int unique$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(757);
        r0.<org.htmlcleaner.TagInfo: boolean unique> = z0;
        return;
    }

    public boolean isIgnorePermitted()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22035, 33070, 1);
        $z0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression ignorePermitted$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int ignorePermitted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 758);
        $z0 = r0.<org.htmlcleaner.TagInfo: boolean ignorePermitted>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22035, $z0$sym);
        return $z0;
    }

    public boolean isEmptyTag()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22064, 33071, 1);
        $i0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 760);
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, $i0$sym, 1, $i0);
        if 1 != $i0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46255, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46255, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22064, $z0$sym);
        return $z0;
    }

    public void setIgnorePermitted(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagInfo r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22149, 33072, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression ignorePermitted$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int ignorePermitted$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 758);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagInfo: int ignorePermitted$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(758);
        r0.<org.htmlcleaner.TagInfo: boolean ignorePermitted> = z0;
        return;
    }

    boolean allowsBody()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22041, 33073, 1);
        $i0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 760);
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, $i0$sym, 1, $i0);
        if 1 == $i0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46256, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46256, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22041, $z0$sym);
        return $z0;
    }

    boolean isHigher(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22029, 33074, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int higherTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 748);
        $r2 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22029, $z0$sym);
        return $z0;
    }

    boolean isCopy(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22049, 33075, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int copyTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 751);
        $r2 = r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22049, $z0$sym);
        return $z0;
    }

    boolean hasCopyTags()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22048, 33076, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int copyTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 751);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46257, 0);
        $z1$sym = null;
        $z1 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46257, 1);
        goto label1;

     label1:
        $z1$sym = null;
        $z1 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22048, $z1$sym);
        return $z1;
    }

    boolean isContinueAfter(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22043, 33077, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int continueAfterTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 752);
        $r2 = r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22043, $z0$sym);
        return $z0;
    }

    boolean hasPermittedTags()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22044, 33078, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 750);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46258, 0);
        $z1$sym = null;
        $z1 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46258, 1);
        goto label1;

     label1:
        $z1$sym = null;
        $z1 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22044, $z1$sym);
        return $z1;
    }

    boolean isHeadTag()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22056, 33079, 1);
        $i0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression belongsTo$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 753);
        $i0 = r0.<org.htmlcleaner.TagInfo: int belongsTo>;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 != 1 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46259, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46259, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22056, $z0$sym);
        return $z0;
    }

    boolean isHeadAndBodyTag()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, $i1$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22057, 33080, 1);
        $i0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression belongsTo$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 753);
        $i0 = r0.<org.htmlcleaner.TagInfo: int belongsTo>;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 == 1 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46260, 0);
        $i1$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression belongsTo$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.TagInfo: int belongsTo$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 753);
        $i1 = r0.<org.htmlcleaner.TagInfo: int belongsTo>;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46261, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46260, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46261, 1);
        goto label3;

     label3:
        $z0$sym = null;
        $z0 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22057, $z0$sym);
        return $z0;
    }

    boolean isMustCloseTag(org.htmlcleaner.TagInfo)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z1$sym, $i0$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        org.htmlcleaner.TagInfo r0, r1;
        java.util.Set $r2;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22047, 33081, 2);
        _sym_tmp_3 = null;
        if r1 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46262, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int mustCloseTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 747);
        $r2 = r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r3 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46263, 0);
        $i0$sym = r1.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym>;
        _sym_tmp_2 = r1.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 760);
        $i0 = r1.<org.htmlcleaner.TagInfo: int contentType>;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 2);
        if $i0 != 2 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46264, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46263, 1);
        goto label1;

     label1:
        $z1$sym = null;
        $z1 = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46264, 1);
        goto label3;

     label3:
        $z1$sym = null;
        $z1 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22047, $z1$sym);
        return $z1;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46262, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22047, null);
        return 0;
    }

    boolean allowsItem(org.htmlcleaner.BaseToken)
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $z10$sym, $z9$sym, $i2$sym, $z8$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $i1$sym, $z1$sym, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2;
        org.htmlcleaner.TagInfo r0;
        org.htmlcleaner.BaseToken r1;
        org.htmlcleaner.TagToken r2, $r7, $r11;
        java.lang.String r3, $r4, $r8, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Set $r5, $r6, $r9, $r10;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: org.htmlcleaner.BaseToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22033, 33082, 2);
        $i0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 760);
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 == 1 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46265, 0);
        $z0$sym = null;
        $z0 = r1 instanceof org.htmlcleaner.TagToken;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46266, 0);
        r2 = (org.htmlcleaner.TagToken) r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r3 = virtualinvoke r2.<org.htmlcleaner.TagToken: java.lang.String getName()>();
        $r4 = "script";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46267, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22033, null);
        return 1;

        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46265, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46266, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46267, 1);
        goto label3;

     label3:
        $i1$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym>;
        _sym_tmp_2 = r0.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 760);
        $i1 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, $i1$sym, 0, $i1);
        if 0 != $i1 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46268, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.TagInfo: int childTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 749);
        $r5 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z2 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46269, 0);
        $z3$sym = null;
        $z3 = r1 instanceof org.htmlcleaner.TagToken;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46270, 0);
        _sym_tmp_4 = r0.<org.htmlcleaner.TagInfo: int childTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 749);
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        $r7 = (org.htmlcleaner.TagToken) r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r8 = virtualinvoke $r7.<org.htmlcleaner.TagToken: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z4 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r8);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46270, 1);
        goto label5;

     label5:
        $z4$sym = null;
        $z4 = 0;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22033, $z4$sym);
        return $z4;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46269, 1);
        goto label8;

     label8:
        _sym_tmp_5 = r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 750);
        $r9 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z5 = interfaceinvoke $r9.<java.util.Set: boolean isEmpty()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46271, 0);
        $z6$sym = null;
        $z6 = r1 instanceof org.htmlcleaner.TagToken;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46272, 0);
        _sym_tmp_6 = r0.<org.htmlcleaner.TagInfo: int permittedTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 750);
        $r10 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        $r11 = (org.htmlcleaner.TagToken) r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r12 = virtualinvoke $r11.<org.htmlcleaner.TagToken: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z7 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r12);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46273, 0);
        $z8$sym = null;
        $z8 = 1;
        goto label13;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46273, 1);
        goto label10;

     label10:
        $z8$sym = null;
        $z8 = 0;
        goto label13;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46272, 1);
        goto label12;

     label12:
        $z8$sym = null;
        $z8 = 1;

     label13:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22033, $z8$sym);
        return $z8;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46271, 1);
        goto label15;

     label15:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22033, null);
        return 1;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46268, 1);
        goto label17;

     label17:
        $i2$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym>;
        _sym_tmp_7 = r0.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 760);
        $i2 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, $i2$sym, 2, $i2);
        if 2 != $i2 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46274, 0);
        $z9$sym = null;
        $z9 = r1 instanceof org.htmlcleaner.TagToken;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46275, 0);
        $z10$sym = null;
        $z10 = 1;
        goto label20;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46275, 1);
        goto label19;

     label19:
        $z10$sym = null;
        $z10 = 0;

     label20:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22033, $z10$sym);
        return $z10;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46274, 1);
        goto label22;

     label22:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22033, null);
        return 0;
    }

    boolean allowsAnything()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, $i1$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21988, 33083, 1);
        $i0$sym = r0.<org.htmlcleaner.TagInfo: acteve.symbolic.integer.Expression contentType$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagInfo: int contentType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 760);
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, $i0$sym, 0, $i0);
        if 0 != $i0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46276, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagInfo: int childTags$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 749);
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r1.<java.util.Set: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46277, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label3;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46276, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46277, 1);
        goto label2;

     label2:
        $z0$sym = null;
        $z0 = 0;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21988, $z0$sym);
        return $z0;
    }
}
public interface  org.htmlcleaner.TagNode$ITagNodeCondition extends java.lang.Object
{

    public abstract boolean satisfy(org.htmlcleaner.TagNode);
}
public class org.htmlcleaner.TagNode$TagAllCondition extends java.lang.Object implements org.htmlcleaner.TagNode$ITagNodeCondition
{
    final org.htmlcleaner.TagNode this$0;
    final int this$0$a3tid;

    public void <init>(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode$TagAllCondition r0;
        org.htmlcleaner.TagNode r1;

        r0 := @this: org.htmlcleaner.TagNode$TagAllCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22150, 33084, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode$TagAllCondition: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 761);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagAllCondition: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(761);
        r0.<org.htmlcleaner.TagNode$TagAllCondition: org.htmlcleaner.TagNode this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode$TagAllCondition r0;
        org.htmlcleaner.TagNode r1;

        r0 := @this: org.htmlcleaner.TagNode$TagAllCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22151, 33085, 2);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22151, null);
        return 1;
    }
}
public class org.htmlcleaner.TagNode$TagNodeAttExistsCondition extends java.lang.Object implements org.htmlcleaner.TagNode$ITagNodeCondition
{
    private java.lang.String attName;
    final org.htmlcleaner.TagNode this$0;
    private int attName$a3tid;
    final int this$0$a3tid;

    public void <init>(org.htmlcleaner.TagNode, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22152, 33086, 3);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 762);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(762);
        r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: org.htmlcleaner.TagNode this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: int attName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 763);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: int attName$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(763);
        r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: java.lang.String attName> = r2;
        return;
    }

    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition r0;
        org.htmlcleaner.TagNode r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22151, 33087, 2);
        _sym_tmp_2 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46278, 0);
        $z0$sym = null;
        $z0 = 0;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46278, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22153, null);
        $r2 = staticinvoke <org.htmlcleaner.TagNode: java.util.Map access$000(org.htmlcleaner.TagNode)>(r1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: int attName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 763);
        $r3 = r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: java.lang.String attName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(496, null, null);
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(496);

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22151, $z0$sym);
        return $z0;
    }
}
public class org.htmlcleaner.TagNode$TagNodeAttValueCondition extends java.lang.Object implements org.htmlcleaner.TagNode$ITagNodeCondition
{
    private java.lang.String attName;
    private java.lang.String attValue;
    private boolean isCaseSensitive;
    final org.htmlcleaner.TagNode this$0;
    private int attName$a3tid;
    private int attValue$a3tid;
    private acteve.symbolic.integer.Expression isCaseSensitive$sym;
    private int isCaseSensitive$a3tid;
    final int this$0$a3tid;

    public void <init>(org.htmlcleaner.TagNode, java.lang.String, java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode$TagNodeAttValueCondition r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, r3;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22154, 33088, 5);
        z0$sym = a3targs$symargs[4];
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 764);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(764);
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: org.htmlcleaner.TagNode this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 765);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attName$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(765);
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attName> = r2;
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attValue$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 766);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attValue$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(766);
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attValue> = r3;
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: acteve.symbolic.integer.Expression isCaseSensitive$sym> = z0$sym;
        _sym_tmp_4 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int isCaseSensitive$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 767);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int isCaseSensitive$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(767);
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: boolean isCaseSensitive> = z0;
        return;
    }

    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode$TagNodeAttValueCondition r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22151, 33089, 2);
        _sym_tmp_8 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46279, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 765);
        $r2 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attName>;
        _sym_tmp_8 = null;
        if $r2 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46280, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attValue$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 766);
        $r3 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attValue>;
        _sym_tmp_8 = null;
        if $r3 != null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46281, 0);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46279, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46280, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22151, null);
        return 0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46281, 1);
        goto label4;

     label4:
        $z0$sym = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: acteve.symbolic.integer.Expression isCaseSensitive$sym>;
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int isCaseSensitive$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 767);
        $z0 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: boolean isCaseSensitive>;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46282, 0);
        _sym_tmp_4 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attValue$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 766);
        $r4 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attValue>;
        _sym_tmp_5 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 765);
        $r5 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>($r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46282, 1);
        goto label6;

     label6:
        _sym_tmp_6 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attValue$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 766);
        $r7 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attValue>;
        _sym_tmp_7 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: int attName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 765);
        $r8 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attName>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        $r9 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);

     label7:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22151, $z1$sym);
        return $z1;
    }
}
public class org.htmlcleaner.TagNode$TagNodeNameCondition extends java.lang.Object implements org.htmlcleaner.TagNode$ITagNodeCondition
{
    private java.lang.String name;
    final org.htmlcleaner.TagNode this$0;
    private int name$a3tid;
    final int this$0$a3tid;

    public void <init>(org.htmlcleaner.TagNode, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode$TagNodeNameCondition r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeNameCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22152, 33090, 3);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 768);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(768);
        r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: org.htmlcleaner.TagNode this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 769);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: int name$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(769);
        r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: java.lang.String name> = r2;
        return;
    }

    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode$TagNodeNameCondition r0;
        org.htmlcleaner.TagNode r1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeNameCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22151, 33091, 2);
        _sym_tmp_3 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46283, 0);
        $z0$sym = null;
        $z0 = 0;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46283, 1);
        goto label1;

     label1:
        _sym_tmp_1 = r1.<org.htmlcleaner.TagToken: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 770);
        $r2 = r1.<org.htmlcleaner.TagNode: java.lang.String name>;
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 769);
        $r3 = r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: java.lang.String name>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22151, $z0$sym);
        return $z0;
    }
}
public class org.htmlcleaner.TagNode extends org.htmlcleaner.TagToken implements org.htmlcleaner.HtmlNode
{
    private org.htmlcleaner.TagNode parent;
    private java.util.Map attributes;
    private java.util.List children;
    private org.htmlcleaner.DoctypeToken docType;
    private java.util.Map nsDeclarations;
    private java.util.List itemsToMove;
    private transient boolean isFormed;
    private int parent$a3tid;
    private int attributes$a3tid;
    private int children$a3tid;
    private int docType$a3tid;
    private int nsDeclarations$a3tid;
    private int itemsToMove$a3tid;
    private transient acteve.symbolic.integer.Expression isFormed$sym;
    private transient int isFormed$a3tid;

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_8;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, $r3;
        java.util.LinkedHashMap $r4;
        java.util.ArrayList $r5;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 33092, 2);
        _sym_tmp_8 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46284, 0);
        $r3 = null;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46284, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke r0.<org.htmlcleaner.TagToken: void <init>(java.lang.String)>($r3);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 771);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int parent$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(771);
        r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent> = null;
        $r4 = new java.util.LinkedHashMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 772);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int attributes$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(772);
        r0.<org.htmlcleaner.TagNode: java.util.Map attributes> = $r4;
        $r5 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 773);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int children$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(773);
        r0.<org.htmlcleaner.TagNode: java.util.List children> = $r5;
        _sym_tmp_4 = r0.<org.htmlcleaner.TagNode: int docType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 774);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int docType$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(774);
        r0.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken docType> = null;
        _sym_tmp_5 = r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 775);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(775);
        r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations> = null;
        _sym_tmp_6 = r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 776);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(776);
        r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove> = null;
        r0.<org.htmlcleaner.TagNode: acteve.symbolic.integer.Expression isFormed$sym> = null;
        _sym_tmp_7 = r0.<org.htmlcleaner.TagNode: int isFormed$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 777);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int isFormed$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(777);
        r0.<org.htmlcleaner.TagNode: boolean isFormed> = 0;
        return;
    }

    public boolean setName(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9791, 33093, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22155, null);
        $z0 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlIdentifier(java.lang.String)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22155);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46285, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagToken: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 770);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagToken: int name$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(770);
        r0.<org.htmlcleaner.TagNode: java.lang.String name> = r1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(9791, null);
        return 1;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46285, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(9791, null);
        return 0;
    }

    public java.lang.String getAttributeByName(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, $r3, $r5;
        java.util.Map $r2;
        java.lang.Object $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21767, 33094, 2);
        _sym_tmp_2 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46286, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 772);
        $r2 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);
        $r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        $r5 = (java.lang.String) $r4;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46286, 1);
        goto label1;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    public java.util.Map getAttributes()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.util.Map $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21943, 33095, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 772);
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        return $r1;
    }

    public boolean hasAttribute(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22156, 33096, 2);
        _sym_tmp_2 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46287, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 772);
        $r2 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(496, null, null);
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(496);
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46287, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22156, $z0$sym);
        return $z0;
    }

    public void addAttribute(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22157, 33097, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16108, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void setAttribute(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2, $r3, $r4, r5, $r6, $r7, $r10;
        boolean $z0, $z1, $z2;
        java.util.Map $r8;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(16108, 33098, 3);
        _sym_tmp_2 = null;
        if r1 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46288, 0);
        $r3 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46289, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r6 = "xmlns";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46290, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22158, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void addNamespaceDeclaration(java.lang.String,java.lang.String)>("", r2);
        goto label9;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46290, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46291, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, null);
        $r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22158, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void addNamespaceDeclaration(java.lang.String,java.lang.String)>($r7, r2);
        goto label9;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46291, 1);
        goto label3;

     label3:
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 772);
        $r8 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        _sym_tmp_2 = null;
        if r2 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46292, 0);
        $r10 = "";
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46292, 1);
        goto label5;

     label5:
        $r10 = r2;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r10);
        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46288, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46289, 1);
        goto label9;

     label9:
        return;
    }

    public void addNamespaceDeclaration(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2;
        java.util.TreeMap $r3;
        java.util.Map $r4, $r5;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22158, 33099, 3);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 775);
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        _sym_tmp_4 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46293, 0);
        $r3 = new java.util.TreeMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.TreeMap: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 775);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(775);
        r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations> = $r3;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46293, 1);
        goto label1;

     label1:
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 775);
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return;
    }

    public java.util.Map getNamespaceDeclarations()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.util.Map $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21938, 33100, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 775);
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        return $r1;
    }

    public void removeAttribute(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, $r2, $r3, $r5;
        boolean $z0;
        java.util.Map $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22159, 33101, 2);
        _sym_tmp_2 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46294, 0);
        $r2 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46295, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 772);
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(74, null, null);
        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46294, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46295, 1);
        goto label2;

     label2:
        return;
    }

    public java.util.List getChildren()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.util.List $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21770, 33102, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        return $r1;
    }

    public boolean hasChildren()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        org.htmlcleaner.TagNode r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(6738, 33103, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46296, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46296, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(6738, $z0$sym);
        return $z0;
    }

    void setChildren(java.util.List)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.util.List r1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22062, 33104, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 773);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int children$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(773);
        r0.<org.htmlcleaner.TagNode: java.util.List children> = r1;
        return;
    }

    public java.util.List getChildTagList()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, $i1$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, $i1;
        org.htmlcleaner.TagNode r0;
        java.util.ArrayList $r1, r2;
        java.lang.Object r3;
        java.util.List $r4, $r5;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22160, 33105, 1);
        $r1 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        i0$sym = null;
        i0 = 0;

     label0:
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        if i0 >= $i1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46297, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 773);
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        r3 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);
        r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $z0$sym = null;
        $z0 = r3 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46298, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, r3$sym);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46298, 1);
        goto label2;

     label2:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46297, 1);
        goto label4;

     label4:
        return r2;
    }

    public org.htmlcleaner.TagNode[] getChildTags()
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $r3$sym, $i2$sym, $i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0, $r4;
        java.util.List r1;
        org.htmlcleaner.TagNode[] r2;
        int i0, $i1, $i2;
        java.lang.Object $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22161, 33106, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22160, null);
        r1 = virtualinvoke r0.<org.htmlcleaner.TagNode: java.util.List getChildTagList()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        r2 = newarray (org.htmlcleaner.TagNode)[$i1];
        i0$sym = null;
        i0 = 0;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        if i0 >= $i2 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46299, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);
        $r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r4 = (org.htmlcleaner.TagNode) $r3;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, i0);
        r2[i0] = $r4;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46299, 1);
        goto label2;

     label2:
        return r2;
    }

    public java.lang.StringBuffer getText()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z1$sym, $z0$sym, $i1$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, $i1;
        org.htmlcleaner.TagNode r0, $r9;
        java.lang.StringBuffer $r1, r2, r4;
        java.lang.Object r3;
        java.util.List $r5, $r6;
        boolean $z0, $z1;
        java.lang.String $r7;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21769, 33107, 1);
        $r1 = new java.lang.StringBuffer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        i0$sym = null;
        i0 = 0;

     label0:
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        if i0 >= $i1 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46300, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 773);
        $r6 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        r3 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);
        r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $z0$sym = null;
        $z0 = r3 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46301, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1038, null, null);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        goto label4;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46301, 1);
        goto label2;

     label2:
        $z1$sym = null;
        $z1 = r3 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46302, 0);
        $r9 = (org.htmlcleaner.TagNode) r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        r4 = virtualinvoke $r9.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22162, null, null);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r4);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46302, 1);
        goto label4;

     label4:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label0;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46300, 1);
        goto label6;

     label6:
        return r2;
    }

    public org.htmlcleaner.TagNode getParent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0, $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21768, 33108, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 771);
        $r1 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        return $r1;
    }

    public org.htmlcleaner.DoctypeToken getDocType()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.DoctypeToken $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22022, 33109, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int docType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 774);
        $r1 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken docType>;
        return $r1;
    }

    public void setDocType(org.htmlcleaner.DoctypeToken)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.DoctypeToken r1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.DoctypeToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22023, 33110, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int docType$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 774);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int docType$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(774);
        r0.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken docType> = r1;
        return;
    }

    public void addChild(java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $z0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0, r2;
        java.lang.Object r1;
        boolean $z0, $z2;
        java.util.List $r3, $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22016, 33111, 2);
        r1$sym = a3targs$symargs[1];
        _sym_tmp_3 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46303, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46303, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = r1 instanceof java.util.List;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46304, 0);
        $r3 = (java.util.List) r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22055, null, null);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void addChildren(java.util.List)>($r3);
        goto label5;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46304, 1);
        goto label3;

     label3:
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, r1$sym);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);
        $z2$sym = null;
        $z2 = r1 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46305, 0);
        r2 = (org.htmlcleaner.TagNode) r1;
        _sym_tmp_2 = r2.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 771);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r2.<org.htmlcleaner.TagNode: int parent$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(771);
        r2.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent> = r0;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46305, 1);
        goto label5;

     label5:
        return;
    }

    public void addChildren(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0;
        java.util.List r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22055, 33112, 2);
        _sym_tmp_1 = null;
        if r1 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46306, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46307, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22016, null, r3$sym);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r3);
        goto label0;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46306, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46307, 1);
        goto label3;

     label3:
        return;
    }

    private org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition, boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $z1$sym, $i1$sym, r2$sym, i0$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, $i1;
        org.htmlcleaner.TagNode r0, r3, r4;
        org.htmlcleaner.TagNode$ITagNodeCondition r1;
        boolean z0, $z1, $z2;
        java.lang.Object r2;
        java.util.List $r5, $r6;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNode$ITagNodeCondition;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22163, 33113, 3);
        z0$sym = a3targs$symargs[2];
        _sym_tmp_3 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46308, 0);
        return null;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46308, 1);
        goto label1;

     label1:
        i0$sym = null;
        i0 = 0;

     label2:
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        if i0 >= $i1 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46309, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 773);
        $r6 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        r2 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);
        r2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $z1$sym = null;
        $z1 = r2 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46310, 0);
        r3 = (org.htmlcleaner.TagNode) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22151, null, null);
        $z2 = interfaceinvoke r1.<org.htmlcleaner.TagNode$ITagNodeCondition: boolean satisfy(org.htmlcleaner.TagNode)>(r3);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22151);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46311, 0);
        return r3;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46311, 1);
        goto label4;

     label4:
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46312, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22163, null, null, z0$sym);
        r4 = specialinvoke r3.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>(r1, z0);
        _sym_tmp_3 = null;
        if r4 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46313, 0);
        return r4;

        goto label8;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46310, 1);
        goto label8;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46312, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46313, 1);
        goto label8;

     label8:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label2;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46309, 1);
        goto label10;

     label10:
        return null;
    }

    private java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition, boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i2$sym, $z2$sym, $z1$sym, $i1$sym, r4$sym, i0$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2;
        org.htmlcleaner.TagNode r0, r5;
        org.htmlcleaner.TagNode$ITagNodeCondition r1;
        boolean z0, $z1, $z2;
        java.util.LinkedList $r2, r3;
        java.lang.Object r4;
        java.util.List r6, $r7, $r8;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNode$ITagNodeCondition;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22164, 33114, 3);
        z0$sym = a3targs$symargs[2];
        $r2 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.LinkedList: void <init>()>();
        r3 = $r2;
        _sym_tmp_3 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46314, 0);
        return r3;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46314, 1);
        goto label1;

     label1:
        i0$sym = null;
        i0 = 0;

     label2:
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r7 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        if i0 >= $i1 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46315, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 773);
        $r8 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        r4 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $z1$sym = null;
        $z1 = r4 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46316, 0);
        r5 = (org.htmlcleaner.TagNode) r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22151, null, null);
        $z2 = interfaceinvoke r1.<org.htmlcleaner.TagNode$ITagNodeCondition: boolean satisfy(org.htmlcleaner.TagNode)>(r5);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22151);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46317, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46317, 1);
        goto label4;

     label4:
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46318, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22164, null, null, z0$sym);
        r6 = specialinvoke r5.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>(r1, z0);
        _sym_tmp_3 = null;
        if r6 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46319, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke r6.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 <= 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46320, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(832, null, null);
        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r6);
        goto label9;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46316, 1);
        goto label9;

        goto label9;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46318, 1);
        goto label9;

        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46319, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46320, 1);
        goto label9;

     label9:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label2;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46315, 1);
        goto label11;

     label11:
        return r3;
    }

    private org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition, boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $r4$sym, $i2$sym, $i1$sym, i0$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0, $r5;
        org.htmlcleaner.TagNode$ITagNodeCondition r1;
        boolean z0;
        java.util.List r2;
        org.htmlcleaner.TagNode[] r3;
        int i0, $i1, $i2;
        java.lang.Object $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNode$ITagNodeCondition;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22165, 33115, 3);
        z0$sym = a3targs$symargs[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22164, null, null, z0$sym);
        r2 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>(r1, z0);
        _sym_tmp_1 = null;
        if r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46321, 0);
        $i1$sym = null;
        $i1 = 0;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46321, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);

     label2:
        r3 = newarray (org.htmlcleaner.TagNode)[$i1];
        i0$sym = null;
        i0 = 0;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        if i0 >= $i2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46322, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);
        $r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r5 = (org.htmlcleaner.TagNode) $r4;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, i0);
        r3[i0] = $r5;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label3;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46322, 1);
        goto label5;

     label5:
        return r3;
    }

    public java.util.List getAllElementsList(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0;
        boolean z0;
        org.htmlcleaner.TagNode$TagAllCondition $r1;
        java.util.List $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22166, 33116, 2);
        z0$sym = a3targs$symargs[1];
        $r1 = new org.htmlcleaner.TagNode$TagAllCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22150, null, null);
        specialinvoke $r1.<org.htmlcleaner.TagNode$TagAllCondition: void <init>(org.htmlcleaner.TagNode)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22164, null, null, z0$sym);
        $r2 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r1, z0);
        return $r2;
    }

    public org.htmlcleaner.TagNode[] getAllElements(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0;
        boolean z0;
        org.htmlcleaner.TagNode$TagAllCondition $r1;
        org.htmlcleaner.TagNode[] $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22167, 33117, 2);
        z0$sym = a3targs$symargs[1];
        $r1 = new org.htmlcleaner.TagNode$TagAllCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22150, null, null);
        specialinvoke $r1.<org.htmlcleaner.TagNode$TagAllCondition: void <init>(org.htmlcleaner.TagNode)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22165, null, null, z0$sym);
        $r2 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r1, z0);
        return $r2;
    }

    public org.htmlcleaner.TagNode findElementByName(java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0, $r3;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeNameCondition $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21771, 33118, 3);
        z0$sym = a3targs$symargs[2];
        $r2 = new org.htmlcleaner.TagNode$TagNodeNameCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22152, null, null, null);
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeNameCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22163, null, null, z0$sym);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public java.util.List getElementListByName(java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeNameCondition $r2;
        java.util.List $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22168, 33119, 3);
        z0$sym = a3targs$symargs[2];
        $r2 = new org.htmlcleaner.TagNode$TagNodeNameCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22152, null, null, null);
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeNameCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22164, null, null, z0$sym);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public org.htmlcleaner.TagNode[] getElementsByName(java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeNameCondition $r2;
        org.htmlcleaner.TagNode[] $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21772, 33120, 3);
        z0$sym = a3targs$symargs[2];
        $r2 = new org.htmlcleaner.TagNode$TagNodeNameCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22152, null, null, null);
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeNameCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22165, null, null, z0$sym);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public org.htmlcleaner.TagNode findElementHavingAttribute(java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0, $r3;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22061, 33121, 3);
        z0$sym = a3targs$symargs[2];
        $r2 = new org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22152, null, null, null);
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22163, null, null, z0$sym);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public java.util.List getElementListHavingAttribute(java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition $r2;
        java.util.List $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22169, 33122, 3);
        z0$sym = a3targs$symargs[2];
        $r2 = new org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22152, null, null, null);
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22164, null, null, z0$sym);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public org.htmlcleaner.TagNode[] getElementsHavingAttribute(java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition $r2;
        org.htmlcleaner.TagNode[] $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22170, 33123, 3);
        z0$sym = a3targs$symargs[2];
        $r2 = new org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22152, null, null, null);
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22165, null, null, z0$sym);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public org.htmlcleaner.TagNode findElementByAttValue(java.lang.String, java.lang.String, boolean, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z1$sym, z0$sym;
        org.htmlcleaner.TagNode r0, $r4;
        java.lang.String r1, r2;
        boolean z0, z1;
        org.htmlcleaner.TagNode$TagNodeAttValueCondition $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22171, 33124, 5);
        z0$sym = a3targs$symargs[3];
        z1$sym = a3targs$symargs[4];
        $r3 = new org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22154, null, null, null, null, z1$sym);
        specialinvoke $r3.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, z1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22163, null, null, z0$sym);
        $r4 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r3, z0);
        return $r4;
    }

    public java.util.List getElementListByAttValue(java.lang.String, java.lang.String, boolean, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z1$sym, z0$sym;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2;
        boolean z0, z1;
        org.htmlcleaner.TagNode$TagNodeAttValueCondition $r3;
        java.util.List $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22172, 33125, 5);
        z0$sym = a3targs$symargs[3];
        z1$sym = a3targs$symargs[4];
        $r3 = new org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22154, null, null, null, null, z1$sym);
        specialinvoke $r3.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, z1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22164, null, null, z0$sym);
        $r4 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r3, z0);
        return $r4;
    }

    public org.htmlcleaner.TagNode[] getElementsByAttValue(java.lang.String, java.lang.String, boolean, boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression z1$sym, z0$sym;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2;
        boolean z0, z1;
        org.htmlcleaner.TagNode$TagNodeAttValueCondition $r3;
        org.htmlcleaner.TagNode[] $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22173, 33126, 5);
        z0$sym = a3targs$symargs[3];
        z1$sym = a3targs$symargs[4];
        $r3 = new org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22154, null, null, null, null, z1$sym);
        specialinvoke $r3.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, z1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22165, null, null, z0$sym);
        $r4 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r3, z0);
        return $r4;
    }

    public java.lang.Object[] evaluateXPath(java.lang.String) throws org.htmlcleaner.XPatherException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        org.htmlcleaner.XPather $r2;
        java.lang.Object[] $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21766, 33127, 2);
        $r2 = new org.htmlcleaner.XPather;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r2.<org.htmlcleaner.XPather: void <init>(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22174, null, null);
        $r3 = virtualinvoke $r2.<org.htmlcleaner.XPather: java.lang.Object[] evaluateAgainstNode(org.htmlcleaner.TagNode)>(r0);
        return $r3;
    }

    public boolean removeFromTree()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0, $r1, $r2;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22052, 33128, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 771);
        $r1 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        _sym_tmp_4 = null;
        if $r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46323, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 771);
        $r2 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22021, null, null);
        z0 = virtualinvoke $r2.<org.htmlcleaner.TagNode: boolean removeChild(java.lang.Object)>(r0);
        z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22021);
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 771);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int parent$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(771);
        r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent> = null;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22052, z0$sym);
        return z0;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46323, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22052, null);
        return 0;
    }

    public boolean removeChild(java.lang.Object)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym, r1$sym;
        org.htmlcleaner.TagNode r0;
        java.lang.Object r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22021, 33129, 2);
        r1$sym = a3targs$symargs[1];
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r2 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(97, null, r1$sym);
        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(97);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22021, $z0$sym);
        return $z0;
    }

    public void removeAllChildren()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.util.List $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22175, 33130, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        interfaceinvoke $r1.<java.util.List: void clear()>();
        return;
    }

    public void replaceChild(org.htmlcleaner.HtmlNode, org.htmlcleaner.HtmlNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1, r2;
        java.util.ListIterator r3;
        java.lang.Object r4;
        java.util.List $r5;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.HtmlNode;
        r2 := @parameter1: org.htmlcleaner.HtmlNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22176, 33131, 3);
        _sym_tmp_2 = null;
        if r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46324, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46324, 1);
        goto label1;

     label1:
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11442, null);
        r3 = interfaceinvoke $r5.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46325, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r4 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        _sym_tmp_2 = null;
        if r4 != r1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46326, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6670, null, null);
        interfaceinvoke r3.<java.util.ListIterator: void set(java.lang.Object)>(r2);
        goto label6;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46326, 1);
        goto label4;

     label4:
        goto label2;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46325, 1);
        goto label6;

     label6:
        return;
    }

    public int getChildIndex(org.htmlcleaner.HtmlNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.util.List $r4;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.HtmlNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22177, 33132, 2);
        i0$sym = null;
        i0 = 0;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46327, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        _sym_tmp_2 = null;
        if r3 != r1 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46328, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22177, i0$sym);
        return i0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46328, 1);
        goto label2;

     label2:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46327, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22177, null);
        return -1;
    }

    public void insertChild(int, org.htmlcleaner.HtmlNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        acteve.symbolic.integer.Expression i0$sym;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1;
        java.util.List $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        i0 := @parameter0: int;
        r1 := @parameter1: org.htmlcleaner.HtmlNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22178, 33133, 3);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 773);
        $r2 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(344, null, i0$sym, null);
        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);
        return;
    }

    public void insertChildBefore(org.htmlcleaner.HtmlNode, org.htmlcleaner.HtmlNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1, r2;
        int i0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.HtmlNode;
        r2 := @parameter1: org.htmlcleaner.HtmlNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22179, 33134, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22177, null, null);
        i0 = virtualinvoke r0.<org.htmlcleaner.TagNode: int getChildIndex(org.htmlcleaner.HtmlNode)>(r1);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22177);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46329, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22178, null, i0$sym, null);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void insertChild(int,org.htmlcleaner.HtmlNode)>(i0, r2);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46329, 1);
        goto label1;

     label1:
        return;
    }

    public void insertChildAfter(org.htmlcleaner.HtmlNode, org.htmlcleaner.HtmlNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1, r2;
        int i0, $i1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.HtmlNode;
        r2 := @parameter1: org.htmlcleaner.HtmlNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22180, 33135, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22177, null, null);
        i0 = virtualinvoke r0.<org.htmlcleaner.TagNode: int getChildIndex(org.htmlcleaner.HtmlNode)>(r1);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22177);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46330, 0);
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i1 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22178, null, $i1$sym, null);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void insertChild(int,org.htmlcleaner.HtmlNode)>($i1, r2);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46330, 1);
        goto label1;

     label1:
        return;
    }

    void addItemForMoving(org.htmlcleaner.BaseToken)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.BaseToken r1;
        java.util.ArrayList $r2;
        java.util.List $r3, $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.BaseToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22036, 33136, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 776);
        $r3 = r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46331, 0);
        $r2 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 776);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(776);
        r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove> = $r2;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46331, 1);
        goto label1;

     label1:
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 776);
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    java.util.List getItemsToMove()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.util.List $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22053, 33137, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 776);
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove>;
        return $r1;
    }

    void setItemsToMove(java.util.List)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.util.List r1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22054, 33138, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 776);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int itemsToMove$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(776);
        r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove> = r1;
        return;
    }

    boolean isFormed()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.TagNode r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22038, 33139, 1);
        $z0$sym = r0.<org.htmlcleaner.TagNode: acteve.symbolic.integer.Expression isFormed$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int isFormed$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 777);
        $z0 = r0.<org.htmlcleaner.TagNode: boolean isFormed>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22038, $z0$sym);
        return $z0;
    }

    void setFormed(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        org.htmlcleaner.TagNode r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagNode;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22181, 33140, 2);
        z0$sym = a3targs$symargs[1];
        r0.<org.htmlcleaner.TagNode: acteve.symbolic.integer.Expression isFormed$sym> = z0$sym;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int isFormed$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 777);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int isFormed$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(777);
        r0.<org.htmlcleaner.TagNode: boolean isFormed> = z0;
        return;
    }

    void setFormed()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22031, 33141, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22181, null, null);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void setFormed(boolean)>(1);
        return;
    }

    void transformAttributes(org.htmlcleaner.TagTransformation)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $r14$sym, $r13$sym, $r12$sym, $z2$sym, z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.TagTransformation r1;
        boolean z0, z1, $z2;
        java.util.LinkedHashMap r2, $r9;
        java.util.Map r3, $r10, $r16;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.String r6, r7, r8;
        java.util.Set $r11;
        java.lang.Object $r12, $r13, $r14;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagTransformation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22111, 33142, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22182, null);
        z0 = virtualinvoke r1.<org.htmlcleaner.TagTransformation: boolean isPreserveSourceAttributes()>();
        z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22182);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22183, null);
        z1 = virtualinvoke r1.<org.htmlcleaner.TagTransformation: boolean hasAttributeTransformations()>();
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22183);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46332, 0);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46333, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46332, 1);
        goto label1;

     label1:
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46334, 0);
        $r9 = new java.util.LinkedHashMap;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 772);
        $r10 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8344, null, null);
        specialinvoke $r9.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r10);
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46334, 1);
        goto label3;

     label3:
        $r9 = new java.util.LinkedHashMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>();

     label4:
        r2 = $r9;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46335, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22184, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagTransformation: java.util.Map getAttributeTransformations()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r11 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46336, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r5 = (java.util.Map$Entry) $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r6 = (java.lang.String) $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        r7 = (java.lang.String) $r14;
        _sym_tmp_4 = null;
        if r7 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46337, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(74, null, null);
        interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6);
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46337, 1);
        goto label7;

     label7:
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 772);
        $r16 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22185, null, null);
        r8 = staticinvoke <org.htmlcleaner.Utils: java.lang.String evaluateTemplate(java.lang.String,java.util.Map)>(r7, $r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8);

     label8:
        goto label5;

        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46335, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46336, 1);
        goto label11;

     label11:
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 772);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagNode: int attributes$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(772);
        r0.<org.htmlcleaner.TagNode: java.util.Map attributes> = r2;
        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46333, 1);
        goto label13;

     label13:
        return;
    }

    public void traverse(org.htmlcleaner.TagNodeVisitor)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.TagNodeVisitor r1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNodeVisitor;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22187, 33143, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22186, null, null);
        specialinvoke r0.<org.htmlcleaner.TagNode: boolean traverseInternally(org.htmlcleaner.TagNodeVisitor)>(r1);
        return;
    }

    private boolean traverseInternally(org.htmlcleaner.TagNodeVisitor)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z5$sym, $z4$sym, $z3$sym, $z2$sym, r3$sym, i1$sym, i0$sym, z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        org.htmlcleaner.TagNode r0, $r4, $r5, $r6, $r8;
        org.htmlcleaner.TagNodeVisitor r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] r2;
        java.lang.Object r3;
        java.util.List $r7;
        org.htmlcleaner.ContentNode $r9;
        org.htmlcleaner.CommentNode $r10;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNodeVisitor;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22186, 33144, 2);
        _sym_tmp_5 = null;
        if r1 == null goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46338, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 771);
        $r4 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        _sym_tmp_5 = null;
        if $r4 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46339, 0);
        $z2$sym = null;
        $z2 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46339, 1);
        goto label1;

     label1:
        $z2$sym = null;
        $z2 = 0;

     label2:
        z0$sym = $z2$sym;
        z0 = $z2;
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 771);
        $r5 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22188, null, null, null);
        z1 = interfaceinvoke r1.<org.htmlcleaner.TagNodeVisitor: boolean visit(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlNode)>($r5, r0);
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22188);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46340, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22186, null);
        return 0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46340, 1);
        goto label4;

     label4:
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46341, 0);
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 771);
        $r6 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        _sym_tmp_5 = null;
        if $r6 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46342, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22186, null);
        return 1;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46341, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46342, 1);
        goto label7;

     label7:
        _sym_tmp_4 = r0.<org.htmlcleaner.TagNode: int children$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 773);
        $r7 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4835, null);
        r2 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray()>();
        i0$sym = null;
        i0 = lengthof r2;
        i1$sym = null;
        i1 = 0;

     label8:
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46343, 0);
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r2, i1);
        r3 = r2[i1];
        $z3$sym = null;
        $z3 = r3 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46344, 0);
        $r8 = (org.htmlcleaner.TagNode) r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22186, null, null);
        z1 = specialinvoke $r8.<org.htmlcleaner.TagNode: boolean traverseInternally(org.htmlcleaner.TagNodeVisitor)>(r1);
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22186);
        goto label14;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46344, 1);
        goto label10;

     label10:
        $z4$sym = null;
        $z4 = r3 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46345, 0);
        $r9 = (org.htmlcleaner.ContentNode) r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22188, null, null, null);
        z1 = interfaceinvoke r1.<org.htmlcleaner.TagNodeVisitor: boolean visit(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlNode)>(r0, $r9);
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22188);
        goto label14;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46345, 1);
        goto label12;

     label12:
        $z5$sym = null;
        $z5 = r3 instanceof org.htmlcleaner.CommentNode;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46346, 0);
        $r10 = (org.htmlcleaner.CommentNode) r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22188, null, null, null);
        z1 = interfaceinvoke r1.<org.htmlcleaner.TagNodeVisitor: boolean visit(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlNode)>(r0, $r10);
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22188);
        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46346, 1);
        goto label14;

     label14:
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46347, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22186, null);
        return 0;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46347, 1);
        goto label16;

     label16:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        goto label8;

        goto label19;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46338, 1);
        goto label19;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46343, 1);
        goto label19;

     label19:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22186, null);
        return 1;
    }

    void collectNamespacePrefixesOnPath(java.util.Set)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $r6$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0, $r7, $r8;
        java.util.Set r1, $r5;
        java.util.Map r2;
        java.util.Iterator r3;
        java.lang.String r4;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.util.Set;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22189, 33145, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21938, null);
        r2 = virtualinvoke r0.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        _sym_tmp_3 = null;
        if r2 == null goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46348, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(499, null);
        $r5 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46349, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (java.lang.String) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46348, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46349, 1);
        goto label3;

     label3:
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 771);
        $r7 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        _sym_tmp_3 = null;
        if $r7 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46350, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 771);
        $r8 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22189, null, null);
        virtualinvoke $r8.<org.htmlcleaner.TagNode: void collectNamespacePrefixesOnPath(java.util.Set)>(r1);
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46350, 1);
        goto label5;

     label5:
        return;
    }

    java.lang.String getNamespaceURIOnPath(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $r11$sym, $z2$sym, $z1$sym, $r9$sym, $r8$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0, $r13, $r14;
        java.lang.String r1, r4, $r10, $r12, $r15;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r5, $r6;
        java.util.Set $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r9, $r11;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21939, 33146, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 775);
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        _sym_tmp_5 = null;
        if $r5 == null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46351, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagNode: int nsDeclarations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 775);
        $r6 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46352, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r3 = (java.util.Map$Entry) $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r4 = (java.lang.String) $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46353, 0);
        $r10 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46354, 0);
        _sym_tmp_5 = null;
        if r1 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46355, 0);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46353, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        $r12 = (java.lang.String) $r11;
        return $r12;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46354, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46355, 1);
        goto label5;

     label5:
        goto label0;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46351, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46352, 1);
        goto label8;

     label8:
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 771);
        $r13 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        _sym_tmp_5 = null;
        if $r13 == null goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46356, 0);
        _sym_tmp_4 = r0.<org.htmlcleaner.TagNode: int parent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 771);
        $r14 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21939, null, null);
        $r15 = virtualinvoke $r14.<org.htmlcleaner.TagNode: java.lang.String getNamespaceURIOnPath(java.lang.String)>(r1);
        return $r15;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46356, 1);
        goto label10;

     label10:
        return null;
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21836, 33147, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21838, null, null, null);
        virtualinvoke r1.<org.htmlcleaner.Serializer: void serialize(org.htmlcleaner.TagNode,java.io.Writer)>(r0, r2);
        return;
    }

    org.htmlcleaner.TagNode makeCopy()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagNode r0, $r1, r2;
        java.lang.String $r3;
        java.util.Map $r4, $r5;

        r0 := @this: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22024, 33148, 1);
        $r1 = new org.htmlcleaner.TagNode;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagToken: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 770);
        $r3 = r0.<org.htmlcleaner.TagNode: java.lang.String name>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r1.<org.htmlcleaner.TagNode: void <init>(java.lang.String)>($r3);
        r2 = $r1;
        _sym_tmp_2 = r2.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 772);
        $r4 = r2.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        _sym_tmp_3 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 772);
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(14619, null, null);
        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r5);
        return r2;
    }

    static java.util.Map access$000(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagNode r0;
        java.util.Map $r1;

        r0 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22153, 33149, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagNode: int attributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 772);
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        return $r1;
    }
}
public interface  org.htmlcleaner.TagNodeVisitor extends java.lang.Object
{

    public abstract boolean visit(org.htmlcleaner.TagNode, org.htmlcleaner.HtmlNode);
}
public abstract class org.htmlcleaner.TagToken extends java.lang.Object implements org.htmlcleaner.BaseToken
{
    protected java.lang.String name;
    protected int name$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagToken r0;

        r0 := @this: org.htmlcleaner.TagToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33150, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagToken r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagToken;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 33151, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagToken: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 770);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagToken: int name$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(770);
        r0.<org.htmlcleaner.TagToken: java.lang.String name> = r1;
        return;
    }

    public java.lang.String getName()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(993, 33152, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagToken: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 770);
        $r1 = r0.<org.htmlcleaner.TagToken: java.lang.String name>;
        return $r1;
    }

    public java.lang.String toString()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagToken;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(148, 33153, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagToken: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 770);
        $r1 = r0.<org.htmlcleaner.TagToken: java.lang.String name>;
        return $r1;
    }

    abstract void setAttribute(java.lang.String, java.lang.String);
}
public class org.htmlcleaner.TagTransformation extends java.lang.Object
{
    private java.lang.String sourceTag;
    private java.lang.String destTag;
    private boolean preserveSourceAttributes;
    private java.util.Map attributeTransformations;
    private int sourceTag$a3tid;
    private int destTag$a3tid;
    private acteve.symbolic.integer.Expression preserveSourceAttributes$sym;
    private int preserveSourceAttributes$a3tid;
    private int attributeTransformations$a3tid;

    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1, r2, $r3, $r5;
        boolean z0, $z1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22190, 33154, 4);
        z0$sym = a3targs$symargs[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        _sym_tmp_1 = r0.<org.htmlcleaner.TagTransformation: int sourceTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 778);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagTransformation: int sourceTag$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(778);
        r0.<org.htmlcleaner.TagTransformation: java.lang.String sourceTag> = $r3;
        _sym_tmp_5 = null;
        if r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46357, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.TagTransformation: int destTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 779);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagTransformation: int destTag$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(779);
        r0.<org.htmlcleaner.TagTransformation: java.lang.String destTag> = null;
        goto label5;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46357, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22155, null);
        $z1 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlIdentifier(java.lang.String)>(r2);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22155);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46358, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46358, 1);
        goto label3;

     label3:
        $r5 = r1;

     label4:
        _sym_tmp_3 = r0.<org.htmlcleaner.TagTransformation: int destTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 779);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagTransformation: int destTag$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(779);
        r0.<org.htmlcleaner.TagTransformation: java.lang.String destTag> = $r5;

     label5:
        r0.<org.htmlcleaner.TagTransformation: acteve.symbolic.integer.Expression preserveSourceAttributes$sym> = z0$sym;
        _sym_tmp_4 = r0.<org.htmlcleaner.TagTransformation: int preserveSourceAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 780);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagTransformation: int preserveSourceAttributes$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(780);
        r0.<org.htmlcleaner.TagTransformation: boolean preserveSourceAttributes> = z0;
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1, r2;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(408, 33155, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22190, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.TagTransformation: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r2, 1);
        return;
    }

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 33156, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke r0.<org.htmlcleaner.TagTransformation: void <init>(java.lang.String,java.lang.String)>(r1, null);
        return;
    }

    public void addAttributeTransformation(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1, r2, $r6;
        java.util.LinkedHashMap $r3;
        java.util.Map $r4, $r5;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22191, 33157, 3);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagTransformation: int attributeTransformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 781);
        $r4 = r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations>;
        _sym_tmp_4 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46359, 0);
        $r3 = new java.util.LinkedHashMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();
        _sym_tmp_2 = r0.<org.htmlcleaner.TagTransformation: int attributeTransformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 781);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.TagTransformation: int attributeTransformations$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(781);
        r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations> = $r3;
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46359, 1);
        goto label1;

     label1:
        _sym_tmp_3 = r0.<org.htmlcleaner.TagTransformation: int attributeTransformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 781);
        $r5 = r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r2);
        return;
    }

    public void addAttributeTransformation(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22192, 33158, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22191, null, null, null);
        virtualinvoke r0.<org.htmlcleaner.TagTransformation: void addAttributeTransformation(java.lang.String,java.lang.String)>(r1, null);
        return;
    }

    boolean hasAttributeTransformations()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagTransformation r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagTransformation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22183, 33159, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagTransformation: int attributeTransformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 781);
        $r1 = r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations>;
        _sym_tmp_2 = null;
        if $r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46360, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46360, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22183, $z0$sym);
        return $z0;
    }

    java.lang.String getSourceTag()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagTransformation r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21884, 33160, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagTransformation: int sourceTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 778);
        $r1 = r0.<org.htmlcleaner.TagTransformation: java.lang.String sourceTag>;
        return $r1;
    }

    java.lang.String getDestTag()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagTransformation r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22109, 33161, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagTransformation: int destTag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 779);
        $r1 = r0.<org.htmlcleaner.TagTransformation: java.lang.String destTag>;
        return $r1;
    }

    boolean isPreserveSourceAttributes()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.TagTransformation r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagTransformation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22182, 33162, 1);
        $z0$sym = r0.<org.htmlcleaner.TagTransformation: acteve.symbolic.integer.Expression preserveSourceAttributes$sym>;
        _sym_tmp_1 = r0.<org.htmlcleaner.TagTransformation: int preserveSourceAttributes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 780);
        $z0 = r0.<org.htmlcleaner.TagTransformation: boolean preserveSourceAttributes>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22182, $z0$sym);
        return $z0;
    }

    java.util.Map getAttributeTransformations()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.TagTransformation r0;
        java.util.Map $r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22184, 33163, 1);
        _sym_tmp_1 = r0.<org.htmlcleaner.TagTransformation: int attributeTransformations$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 781);
        $r1 = r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations>;
        return $r1;
    }
}
public class org.htmlcleaner.Utils extends java.lang.Object
{
    public static java.lang.String VAR_START;
    public static java.lang.String VAR_END;
    public static final java.util.Map RESERVED_XML_CHARS;
    public static int VAR_START$a3tid;
    public static int VAR_END$a3tid;
    public static final int RESERVED_XML_CHARS$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.Utils r0;

        r0 := @this: org.htmlcleaner.Utils;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33164, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String ltrim(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym, $c2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, $r1;
        int i0, i1;
        char $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22193, 33165, 1);
        _sym_tmp_1 = null;
        if r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46361, 0);
        return null;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46361, 1);
        goto label1;

     label1:
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i1 = virtualinvoke r0.<java.lang.String: int length()>();
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);

     label2:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        if i0 >= i1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46362, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i0$sym);
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        $c2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(462, $c2$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(462);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46363, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label2;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46362, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46363, 1);
        goto label5;

     label5:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        if i0 < i1 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46364, 0);
        $r1 = "";
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46364, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, i0$sym);
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

     label8:
        return $r1;
    }

    public static java.lang.String rtrim(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym, $c3$sym, $i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, $r1;
        int i0, i1, $i2;
        char $c3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22194, 33166, 1);
        _sym_tmp_1 = null;
        if r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46365, 0);
        return null;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46365, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        i1$sym = i0$sym;
        i1 = i0;

     label2:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 <= 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46366, 0);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i2 = i1 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i2$sym);
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);
        $c3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(462, $c3$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(462);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46367, 0);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, -1);
        i1 = i1 + -1;
        goto label2;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46366, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46367, 1);
        goto label5;

     label5:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 > 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46368, 0);
        $r1 = "";
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46368, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, i1$sym);
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label8:
        return $r1;
    }

    public static java.lang.String getCharsetFromContentTypeString(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, r1, r3;
        java.util.regex.Matcher r2;
        java.util.regex.Pattern $r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22008, 33167, 1);
        _sym_tmp_1 = null;
        if r0 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46369, 0);
        r1 = "charset=([a-z\\d\\-]*)";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10882, null, null);
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(r1, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(411, null, null);
        r2 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(981, null);
        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(981);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46370, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(413, null, null);
        r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22195, null);
        $z1 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>(r3);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22195);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46371, 0);
        return r3;

        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46369, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46370, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46371, 1);
        goto label3;

     label3:
        return null;
    }

    public static java.lang.String getCharsetFromContent(java.net.URL) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.net.URL r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0;
        java.lang.String r3, r4, r6, $r7;
        java.util.regex.Matcher r5;
        java.util.regex.Pattern $r8;
        boolean $z0, $z1;

        r0 := @parameter0: java.net.URL;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22009, 33168, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22010, null);
        r1 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();
        r2 = newarray (byte)[2048];
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(295, null, r2$sym);
        i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(295);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46372, 0);
        $r7 = new java.lang.String;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(133, null, r2$sym);
        specialinvoke $r7.<java.lang.String: void <init>(byte[])>(r2);
        r3 = $r7;
        r4 = "\\<meta\\s*http-equiv=[\\\"\\\']content-type[\\\"\\\']\\s*content\\s*=\\s*[\"\']text/html\\s*;\\s*charset=([a-z\\d\\-]*)[\\\"\\\'\\>]";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10882, null, null);
        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(r4, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(411, null, null);
        r5 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(981, null);
        $z0 = virtualinvoke r5.<java.util.regex.Matcher: boolean find()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(981);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46373, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(413, null, null);
        r6 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22195, null);
        $z1 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>(r6);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22195);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46374, 0);
        return r6;

        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46372, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46373, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46374, 1);
        goto label3;

     label3:
        return null;
    }

    public static boolean isHexadecimalDigit(char)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $z0$sym, c0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        char c0;
        boolean $z0, $z1;

        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22196, 33169, 1);
        c0$sym = a3targs$symargs[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(485, c0$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(485);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46375, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 65);
        if c0 == 65 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46376, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 97);
        if c0 == 97 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46377, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 66);
        if c0 == 66 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46378, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 98);
        if c0 == 98 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46379, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 67);
        if c0 == 67 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46380, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 99);
        if c0 == 99 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46381, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 68);
        if c0 == 68 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46382, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 100);
        if c0 == 100 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46383, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 69);
        if c0 == 69 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46384, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 101);
        if c0 == 101 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46385, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 70);
        if c0 == 70 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46386, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 102);
        if c0 != 102 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46387, 0);
        goto label12;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46375, 1);
        goto label12;

        goto label12;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46376, 1);
        goto label12;

        goto label12;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46377, 1);
        goto label12;

        goto label12;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46378, 1);
        goto label12;

        goto label12;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46379, 1);
        goto label12;

        goto label12;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46380, 1);
        goto label12;

        goto label12;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46381, 1);
        goto label12;

        goto label12;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46382, 1);
        goto label12;

        goto label12;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46383, 1);
        goto label12;

        goto label12;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46384, 1);
        goto label12;

        goto label12;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46385, 1);
        goto label12;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46386, 1);
        goto label12;

     label12:
        $z1$sym = null;
        $z1 = 1;
        goto label15;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46387, 1);
        goto label14;

     label14:
        $z1$sym = null;
        $z1 = 0;

     label15:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22196, $z1$sym);
        return $z1;
    }

    public static boolean isValidXmlChar(char)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym, c0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22067, 33170, 1);
        c0$sym = a3targs$symargs[0];
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 32);
        if c0 < 32 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46388, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 55295);
        if c0 <= 55295 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46389, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46388, 1);
        goto label1;

     label1:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 9);
        if c0 == 9 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46390, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 10);
        if c0 == 10 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46391, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 13);
        if c0 == 13 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46392, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 57344);
        if c0 < 57344 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46393, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 65533);
        if c0 <= 65533 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46394, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46393, 1);
        goto label3;

     label3:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 65536);
        if c0 < 65536 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46395, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 1114111);
        if c0 > 1114111 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46396, 0);
        goto label9;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46389, 1);
        goto label9;

        goto label9;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46390, 1);
        goto label9;

        goto label9;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46391, 1);
        goto label9;

        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46392, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46394, 1);
        goto label9;

     label9:
        $z0$sym = null;
        $z0 = 1;
        goto label13;

        goto label12;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46395, 1);
        goto label12;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46396, 1);
        goto label12;

     label12:
        $z0$sym = null;
        $z0 = 0;

     label13:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22067, $z0$sym);
        return $z0;
    }

    public static boolean isReservedXmlChar(char)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym, c0$sym;
        char c0;
        java.util.Map $r0;
        java.lang.Character $r1;
        boolean $z0;

        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22068, 33171, 1);
        c0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 718);
        $r0 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, c0$sym);
        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(496, null, null);
        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(496);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22068, $z0$sym);
        return $z0;
    }

    public static boolean isValidInt(java.lang.String, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $z0$sym, i0$sym;
        java.lang.String r0;
        int i0;
        java.lang.NumberFormatException r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22066, 33172, 2);
        i0$sym = a3targs$symargs[1];

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1594, null, i0$sym);
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r0, i0);
        $z0$sym = null;
        $z0 = 1;

     label1:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22066, $z0$sym);
        return $z0;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22066, null);
        return 0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public static java.lang.String escapeXml(java.lang.String, org.htmlcleaner.CleanerProperties, boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $r65$sym, $r62$sym, $z17$sym, $z16$sym, $r54$sym, $z15$sym, $i28$sym, $i27$sym, $c26$sym, $r45$sym, $z14$sym, $r42$sym, $r41$sym, $z13$sym, $r38$sym, $r36$sym, $z12$sym, z11$sym, $i25$sym, $i24$sym, $c23$sym, $r30$sym, $z10$sym, i22$sym, $i21$sym, $i20$sym, $i19$sym, $i18$sym, $z9$sym, $z8$sym, c17$sym, $i16$sym, $z7$sym, $z6$sym, $b15$sym, $b14$sym, $i13$sym, $z5$sym, $c12$sym, $c11$sym, $i10$sym, $c9$sym, $i8$sym, $i7$sym, $i6$sym, c5$sym, b4$sym, i3$sym, z4$sym, c2$sym, i1$sym, i0$sym, z3$sym, z2$sym, z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i3, $i6, $i7, $i8, $i10, $i13, $i16, $i18, $i19, $i20, $i21, i22, $i24, $i25, $i27, $i28;
        java.lang.String r0, r3, $r8, $r13, $r23, r26, r27, r32, r39, $r51, $r68;
        org.htmlcleaner.CleanerProperties r1;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.lang.StringBuilder r2, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r43, $r44, $r47, $r48, $r58, $r59, $r60, $r61;
        char c2, c5, $c9, $c11, $c12, c17, $c23, $c26;
        byte b4, $b14, $b15;
        org.htmlcleaner.SpecialEntity r28;
        java.io.Serializable $r30, $r42, $r62;
        java.util.Map $r33, $r52, $r63;
        java.util.Set $r34;
        java.util.Iterator r35;
        java.lang.Object $r36, $r38, $r41, $r45, $r54, $r65;
        java.util.Map$Entry r37;
        java.lang.Character $r46, $r53, $r64;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.htmlcleaner.CleanerProperties;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21944, 33173, 3);
        z0$sym = a3targs$symargs[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21840, null);
        z1 = virtualinvoke r1.<org.htmlcleaner.CleanerProperties: boolean isAdvancedXmlEscape()>();
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21840);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21850, null);
        z2 = virtualinvoke r1.<org.htmlcleaner.CleanerProperties: boolean isRecognizeUnicodeChars()>();
        z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21850);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21846, null);
        z3 = virtualinvoke r1.<org.htmlcleaner.CleanerProperties: boolean isTranslateSpecialEntities()>();
        z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21846);
        _sym_tmp_7 = null;
        if r0 == null goto label72;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46397, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, i0$sym);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(i0);
        r2 = $r4;
        i1$sym = null;
        i1 = 0;

     label0:
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label70;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46398, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i1$sym);
        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        c2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c2$sym, null, c2, 38);
        if c2 != 38 goto label59;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46399, 0);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46400, 0);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46401, 0);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46400, 1);
        goto label2;

     label2:
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i7 = i0 - 2;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i7$sym, i1, $i7);
        if i1 >= $i7 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46402, 0);
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i8 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i8$sym);
        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);
        $c9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c9$sym, null, $c9, 35);
        if $c9 != 35 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46403, 0);
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 2);
        $i10 = i1 + 2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i10$sym);
        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);
        $c11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(989, $c11$sym);
        $c12 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);
        $c12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(989);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c12$sym, null, $c12, 120);
        if $c12 != 120 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46404, 0);
        $z5$sym = null;
        $z5 = 1;
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46404, 1);
        goto label4;

     label4:
        $z5$sym = null;
        $z5 = 0;

     label5:
        z4$sym = $z5$sym;
        z4 = $z5;
        $i13$sym = i1$sym;
        $i13 = i1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z4$sym, null, z4, 0);
        if z4 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46405, 0);
        $b14$sym = null;
        $b14 = 3;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46405, 1);
        goto label7;

     label7:
        $b14$sym = null;
        $b14 = 2;

     label8:
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i13$sym, $b14$sym, $i13, $b14);
        i3 = $i13 + $b14;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z4$sym, null, z4, 0);
        if z4 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46406, 0);
        $b15$sym = null;
        $b15 = 16;
        goto label11;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46406, 1);
        goto label10;

     label10:
        $b15$sym = null;
        $b15 = 10;

     label11:
        b4$sym = $b15$sym;
        b4 = $b15;
        r3 = "";

     label12:
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, i0$sym, i3, i0);
        if i3 >= i0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46407, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i3$sym);
        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);
        c5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c5$sym, null, c5, 59);
        if c5 != 59 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46408, 0);
        goto label19;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46408, 1);
        goto label14;

     label14:
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, c5$sym);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22066, null, b4$sym);
        $z6 = staticinvoke <org.htmlcleaner.Utils: boolean isValidInt(java.lang.String,int)>($r8, b4);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22066);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46409, 0);
        $r9 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, c5$sym);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 1);
        i3 = i3 + 1;
        goto label17;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46409, 1);
        goto label16;

     label16:
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, -1);
        i3 = i3 + -1;
        goto label19;

     label17:
        goto label12;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46407, 1);
        goto label19;

     label19:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22066, null, b4$sym);
        $z7 = staticinvoke <org.htmlcleaner.Utils: boolean isValidInt(java.lang.String,int)>(r3, b4);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22066);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46410, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1594, null, b4$sym);
        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, b4);
        $i16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1594);
        c17$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i16$sym, 1);
        c17 = (char) $i16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22067, c17$sym);
        $z8 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlChar(char)>(c17);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22067);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 != 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46411, 0);
        i1$sym = i3$sym;
        i1 = i3;
        goto label27;

        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46411, 1);
        goto label21;

     label21:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22068, c17$sym);
        $z9 = staticinvoke <org.htmlcleaner.Utils: boolean isReservedXmlChar(char)>(c17);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22068);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 != 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46412, 0);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46413, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(400, c17$sym);
        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c17);
        goto label24;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46413, 1);
        goto label23;

     label23:
        $r14 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r13 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        i1$sym = i3$sym;
        i1 = i3;
        goto label27;

        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46412, 1);
        goto label26;

     label26:
        i1$sym = i3$sym;
        i1 = i3;
        $r19 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label27:
        goto label30;

        goto label29;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46410, 1);
        goto label29;

     label29:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");

     label30:
        goto label69;

        goto label34;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46401, 1);
        goto label34;

        goto label34;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46402, 1);
        goto label34;

        goto label34;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46403, 1);
        goto label34;

     label34:
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z3$sym, null, z3, 0);
        if z3 == 0 goto label38;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46414, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(22069);
        $i6 = staticinvoke <org.htmlcleaner.SpecialEntity: int getMaxEntityLength()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22069);
        $i18$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 2);
        $i18 = $i6 + 2;
        $i19$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        $i19 = i0 - i1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1439, $i18$sym, $i19$sym);
        $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i19);
        $i20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1439);
        $i21$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i20$sym, i1, $i20);
        $i21 = i1 + $i20;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, i1$sym, $i21$sym);
        r26 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i22 = virtualinvoke r26.<java.lang.String: int indexOf(int)>(59);
        i22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i22$sym, null, i22, 0);
        if i22 <= 0 goto label39;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46415, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, i22$sym);
        r27 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, i22);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22070, null);
        r28 = staticinvoke <org.htmlcleaner.SpecialEntity: org.htmlcleaner.SpecialEntity getEntity(java.lang.String)>(r27);
        _sym_tmp_7 = null;
        if r28 == null goto label40;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46416, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21848, null);
        $z10 = virtualinvoke r1.<org.htmlcleaner.CleanerProperties: boolean isTransSpecialEntitiesToNCR()>();
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21848);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label35;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46417, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22071, null);
        $r30 = virtualinvoke r28.<org.htmlcleaner.SpecialEntity: java.lang.String getDecimalNCR()>();
        $r30$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22071);
        goto label37;

        goto label36;

     label35:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46417, 1);
        goto label36;

     label36:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22072, null);
        $c23 = virtualinvoke r28.<org.htmlcleaner.SpecialEntity: char getCharacter()>();
        $c23$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22072);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, $c23$sym);
        $r30 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c23);
        $r30$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(398);

     label37:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, $r30$sym);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i24 = virtualinvoke r27.<java.lang.String: int length()>();
        $i24$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i25$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i24$sym, null, $i24, 1);
        $i25 = $i24 + 1;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i25$sym, i1, $i25);
        i1 = i1 + $i25;
        goto label69;

        goto label41;

     label38:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46414, 1);
        goto label41;

        goto label41;

     label39:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46415, 1);
        goto label41;

        goto label41;

     label40:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46416, 1);
        goto label41;

     label41:
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label57;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46418, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, i1$sym);
        r32 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i1);
        z11$sym = null;
        z11 = 0;
        _sym_tmp_1 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 718);
        $r33 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r34 = interfaceinvoke $r33.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r35 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label42:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z12 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label50;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46419, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();
        $r36$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r37 = (java.util.Map$Entry) $r36;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r38 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r38$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        r39 = (java.lang.String) $r38;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z13 = virtualinvoke r32.<java.lang.String: boolean startsWith(java.lang.String)>(r39);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label48;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46420, 0);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label43;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46421, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r41 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r41$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        $r42$sym = $r41$sym;
        $r42 = (java.io.Serializable) $r41;
        goto label47;

        goto label44;

     label43:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46421, 1);
        goto label44;

     label44:
        $z14$sym = r1.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym>;
        _sym_tmp_2 = r1.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 653);
        $z14 = r1.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label45;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46422, 0);
        $r43 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r45 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r45$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        $r46 = (java.lang.Character) $r45;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(500, null);
        $c26 = virtualinvoke $r46.<java.lang.Character: char charValue()>();
        $c26$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(500);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $c26$sym);
        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($c26);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r42 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        $r42$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(148);
        goto label47;

        goto label46;

     label45:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46422, 1);
        goto label46;

     label46:
        $r42$sym = null;
        $r42 = r39;

     label47:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, $r42$sym);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i27 = virtualinvoke r39.<java.lang.String: int length()>();
        $i27$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i28$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i27$sym, null, $i27, 1);
        $i28 = $i27 - 1;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i28$sym, i1, $i28);
        i1 = i1 + $i28;
        z11$sym = null;
        z11 = 1;
        goto label51;

        goto label49;

     label48:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46420, 1);
        goto label49;

     label49:
        goto label42;

        goto label51;

     label50:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46419, 1);
        goto label51;

     label51:
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z11$sym, null, z11, 0);
        if z11 != 0 goto label68;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46423, 0);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label52;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46424, 0);
        $r51 = "&";
        goto label56;

        goto label53;

     label52:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46424, 1);
        goto label53;

     label53:
        $z15$sym = r1.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym>;
        _sym_tmp_3 = r1.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 653);
        $z15 = r1.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label54;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46425, 0);
        $r51 = "&#38;";
        goto label56;

        goto label55;

     label54:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46425, 1);
        goto label55;

     label55:
        _sym_tmp_4 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 718);
        $r52 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, null);
        $r53 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(38);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r54 = interfaceinvoke $r52.<java.util.Map: java.lang.Object get(java.lang.Object)>($r53);
        $r54$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        $r51 = (java.lang.String) $r54;

     label56:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
        goto label69;

        goto label58;

     label57:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46418, 1);
        goto label58;

     label58:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");
        goto label69;

        goto label60;

     label59:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46399, 1);
        goto label60;

     label60:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22068, c2$sym);
        $z16 = staticinvoke <org.htmlcleaner.Utils: boolean isReservedXmlChar(char)>(c2);
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22068);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 == 0 goto label66;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46426, 0);
        $z17$sym = r1.<org.htmlcleaner.CleanerProperties: acteve.symbolic.integer.Expression transResCharsToNCR$sym>;
        _sym_tmp_5 = r1.<org.htmlcleaner.CleanerProperties: int transResCharsToNCR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 653);
        $z17 = r1.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 == 0 goto label61;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46427, 0);
        $r58 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, c2$sym);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
        $r62$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(148);
        goto label65;

        goto label62;

     label61:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46427, 1);
        goto label62;

     label62:
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label63;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46428, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, c2$sym);
        $r62 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c2);
        $r62$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(398);
        goto label65;

        goto label64;

     label63:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46428, 1);
        goto label64;

     label64:
        _sym_tmp_6 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 718);
        $r63 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, c2$sym);
        $r64 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r65 = interfaceinvoke $r63.<java.util.Map: java.lang.Object get(java.lang.Object)>($r64);
        $r65$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        $r62$sym = $r65$sym;
        $r62 = (java.io.Serializable) $r65;

     label65:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, $r62$sym);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);
        goto label69;

        goto label67;

     label66:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46426, 1);
        goto label67;

     label67:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, c2$sym);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);
        goto label69;

     label68:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46423, 1);
        goto label69;

     label69:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        goto label0;

        goto label71;

     label70:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46398, 1);
        goto label71;

     label71:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r68 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r68;

        goto label73;

     label72:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46397, 1);
        goto label73;

     label73:
        return null;
    }

    public static boolean isWhitespaceString(java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $z0$sym, r0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.Object r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21833, 33174, 1);
        r0$sym = a3targs$symargs[0];
        _sym_tmp_1 = null;
        if r0 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46429, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
        _sym_tmp_1 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46430, 0);
        $r2 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46431, 0);
        $z1$sym = null;
        $z1 = 1;
        goto label3;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46430, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46431, 1);
        goto label2;

     label2:
        $z1$sym = null;
        $z1 = 0;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21833, $z1$sym);
        return $z1;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46429, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21833, null);
        return 0;
    }

    public static boolean isIdentifierHelperChar(char)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym, c0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22091, 33175, 1);
        c0$sym = a3targs$symargs[0];
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, c0$sym, 58, c0);
        if 58 == c0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46432, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, c0$sym, 46, c0);
        if 46 == c0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46433, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, c0$sym, 45, c0);
        if 45 == c0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46434, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, c0$sym, 95, c0);
        if 95 != c0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46435, 0);
        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46432, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46433, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46434, 1);
        goto label3;

     label3:
        $z0$sym = null;
        $z0 = 1;
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46435, 1);
        goto label5;

     label5:
        $z0$sym = null;
        $z0 = 0;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22091, $z0$sym);
        return $z0;
    }

    public static boolean isValidXmlIdentifier(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z3$sym, $z2$sym, $z1$sym, $z0$sym, c2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0;
        int i0, i1;
        char c2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22155, 33176, 1);
        _sym_tmp_1 = null;
        if r0 == null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46436, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46437, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22155, null);
        return 0;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46437, 1);
        goto label1;

     label1:
        i1$sym = null;
        i1 = 0;

     label2:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46438, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i1$sym);
        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        c2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46439, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22088, c2$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isUnicodeIdentifierStart(char)>(c2);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22088);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46440, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c2$sym, null, c2, 95);
        if c2 != 95 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46441, 0);
        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46439, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46440, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22088, c2$sym);
        $z1 = staticinvoke <java.lang.Character: boolean isUnicodeIdentifierStart(char)>(c2);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22088);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46442, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(485, c2$sym);
        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c2);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(485);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46443, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22091, c2$sym);
        $z3 = staticinvoke <org.htmlcleaner.Utils: boolean isIdentifierHelperChar(char)>(c2);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22091);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46444, 0);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46441, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22155, null);
        return 0;

        goto label11;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46442, 1);
        goto label11;

        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46443, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46444, 1);
        goto label11;

     label11:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        goto label2;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46438, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22155, null);
        return 1;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46436, 1);
        goto label15;

     label15:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22155, null);
        return 0;
    }

    public static boolean isEmptyString(java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $z0$sym, r0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.Object r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22074, 33177, 1);
        r0$sym = a3targs$symargs[0];
        _sym_tmp_1 = null;
        if r0 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46445, 0);
        $r1 = "";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46446, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46445, 1);
        goto label1;

     label1:
        $z1$sym = null;
        $z1 = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46446, 1);
        goto label3;

     label3:
        $z1$sym = null;
        $z1 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22074, $z1$sym);
        return $z1;
    }

    public static java.lang.String evaluateTemplate(java.lang.String, java.util.Map)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i10$sym, $i9$sym, $i8$sym, $i7$sym, $i6$sym, $r12$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, r4$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r0, r3, $r6, $r7, $r9, $r10, $r11, $r14, $r16, $r17, $r18, $r20;
        java.util.Map r1;
        java.lang.StringBuilder r2, $r5;
        java.lang.Object r4, $r12;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Map;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22185, 33178, 2);
        _sym_tmp_6 = null;
        if r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46447, 0);
        return r0;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46447, 1);
        goto label1;

     label1:
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r2 = $r5;
        _sym_tmp_1 = <org.htmlcleaner.Utils: int VAR_START$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 782);
        $r6 = <org.htmlcleaner.Utils: java.lang.String VAR_START>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(209, null, null);
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>($r6);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(209);
        i1$sym = null;
        i1 = -1;

     label2:
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 < 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46448, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        if i0 >= $i2 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46449, 0);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i3 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, $i3$sym, i0$sym);
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        _sym_tmp_2 = <org.htmlcleaner.Utils: int VAR_END$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 783);
        $r9 = <org.htmlcleaner.Utils: java.lang.String VAR_END>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3020, null, null, i0$sym);
        i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>($r9, i0);
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3020);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 <= i0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46450, 0);
        _sym_tmp_3 = <org.htmlcleaner.Utils: int VAR_START$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 782);
        $r10 = <org.htmlcleaner.Utils: java.lang.String VAR_START>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i4$sym, i0, $i4);
        $i5 = i0 + $i4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, $i5$sym, i1$sym);
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i5, i1);
        _sym_tmp_6 = null;
        if r1 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46451, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        $r11 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46451, 1);
        goto label4;

     label4:
        $r12$sym = null;
        $r12 = "";

     label5:
        r4$sym = $r12$sym;
        r4 = $r12;
        _sym_tmp_6 = null;
        if r4 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46452, 0);
        $r14 = "";
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46452, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46450, 1);
        goto label10;

     label10:
        _sym_tmp_4 = <org.htmlcleaner.Utils: int VAR_START$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 782);
        $r16 = <org.htmlcleaner.Utils: java.lang.String VAR_START>;
        _sym_tmp_5 = <org.htmlcleaner.Utils: int VAR_END$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 783);
        $r17 = <org.htmlcleaner.Utils: java.lang.String VAR_END>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i6 = virtualinvoke $r17.<java.lang.String: int length()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i6$sym, i1, $i6);
        $i7 = i1 + $i6;
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i8 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(892, $i7$sym, $i8$sym);
        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);
        $i9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(892);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3020, null, null, $i9$sym);
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>($r16, $i9);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3020);
        goto label2;

        goto label13;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46448, 1);
        goto label13;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46449, 1);
        goto label13;

     label13:
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i10 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i10$sym);
        $r18 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r20;
    }

    public static java.lang.String[] tokenize(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $i2$sym, $z0$sym, $i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, r1, $r6;
        java.util.StringTokenizer r2, $r5;
        java.lang.String[] r3, $r4;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22197, 33179, 2);
        _sym_tmp_1 = null;
        if r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46453, 0);
        $r4 = newarray (java.lang.String)[0];
        return $r4;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46453, 1);
        goto label1;

     label1:
        $r5 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(408, null, null, null);
        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, r1);
        r2 = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7819, null);
        $i1 = virtualinvoke r2.<java.util.StringTokenizer: int countTokens()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7819);
        r3 = newarray (java.lang.String)[$i1];
        i0$sym = null;
        i0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46454, 0);
        $i2$sym = i0$sym;
        $i2 = i0;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, $i2);
        r3[$i2] = $r6;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46454, 1);
        goto label4;

     label4:
        return r3;
    }

    public static void updateTagTransformations(org.htmlcleaner.CleanerTransformations, java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $i2$sym, $i1$sym, z0$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.CleanerTransformations r0;
        java.lang.String r1, r2, r3, $r5, $r6, $r7, $r8, $r9, $r10, r14, $r16;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String[] r4, r13;
        org.htmlcleaner.TagTransformation $r11, r12, r15;

        r0 := @parameter0: org.htmlcleaner.CleanerTransformations;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21892, 33180, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 > 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46455, 0);
        r3 = null;
        z0$sym = null;
        z0 = 1;
        _sym_tmp_1 = null;
        if r2 == null goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46456, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22197, null, null);
        r4 = staticinvoke <org.htmlcleaner.Utils: java.lang.String[] tokenize(java.lang.String,java.lang.String)>(r2, ",;");
        $i1$sym = null;
        $i1 = lengthof r4;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46457, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, 0);
        r3 = r4[0];
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46457, 1);
        goto label1;

     label1:
        $i2$sym = null;
        $i2 = lengthof r4;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        if $i2 <= 1 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46458, 0);
        $r5 = "true";
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, 1);
        $r6 = r4[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46459, 0);
        $r7 = "yes";
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, 1);
        $r8 = r4[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(227, null, null);
        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(227);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46460, 0);
        $r9 = "1";
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, 1);
        $r10 = r4[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46461, 0);
        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46459, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46460, 1);
        goto label4;

     label4:
        $z4$sym = null;
        $z4 = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46461, 1);
        goto label6;

     label6:
        $z4$sym = null;
        $z4 = 0;

     label7:
        z0$sym = $z4$sym;
        z0 = $z4;
        goto label10;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46456, 1);
        goto label10;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46458, 1);
        goto label10;

     label10:
        $r11 = new org.htmlcleaner.TagTransformation;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22190, null, null, null, z0$sym);
        specialinvoke $r11.<org.htmlcleaner.TagTransformation: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r3, z0);
        r12 = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21885, null, null);
        virtualinvoke r0.<org.htmlcleaner.CleanerTransformations: void addTransformation(org.htmlcleaner.TagTransformation)>(r12);
        goto label14;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46455, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22197, null, null);
        r13 = staticinvoke <org.htmlcleaner.Utils: java.lang.String[] tokenize(java.lang.String,java.lang.String)>(r1, ".");
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r13, 0);
        r14 = r13[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21887, null, null);
        r15 = virtualinvoke r0.<org.htmlcleaner.CleanerTransformations: org.htmlcleaner.TagTransformation getTransformation(java.lang.String)>(r14);
        _sym_tmp_1 = null;
        if r15 == null goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46462, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r13, 1);
        $r16 = r13[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22191, null, null, null);
        virtualinvoke r15.<org.htmlcleaner.TagTransformation: void addAttributeTransformation(java.lang.String,java.lang.String)>($r16, r2);
        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46462, 1);
        goto label14;

     label14:
        return;
    }

    public static boolean isFullUrl(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, $r1, r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22198, 33181, 1);
        _sym_tmp_1 = null;
        if r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46463, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22198, null);
        return 0;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46463, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3509, null);
        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("http://");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46464, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("https://");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46465, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("file://");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46466, 0);
        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46464, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46465, 1);
        goto label4;

     label4:
        $z3$sym = null;
        $z3 = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46466, 1);
        goto label6;

     label6:
        $z3$sym = null;
        $z3 = 0;

     label7:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22198, $z3$sym);
        return $z3;
    }

    public static java.lang.String fullUrl(java.lang.String, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $i6$sym, i5$sym, $i4$sym, $z3$sym, z2$sym, $i3$sym, $i2$sym, $z1$sym, $z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, r1, $r5, $r7, $r10, $r14, $r16, r23, $r26, $r28;
        int i0, i1, $i2, $i3, $i4, i5, $i6;
        boolean $z0, $z1, z2, $z3;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r8, $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r27, $r29, $r30, $r31;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22199, 33182, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22198, null);
        $z0 = staticinvoke <org.htmlcleaner.Utils: boolean isFullUrl(java.lang.String)>(r1);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22198);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46467, 0);
        return r1;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46467, 1);
        goto label1;

     label1:
        _sym_tmp_1 = null;
        if r1 == null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46468, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("?");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46469, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i1 = virtualinvoke r0.<java.lang.String: int length()>();
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 >= 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46470, 0);
        $r2 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46470, 1);
        goto label3;

     label3:
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i2 = i1 - 1;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        if i0 != $i2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46471, 0);
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i3 = i1 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, $i3$sym);
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46471, 1);
        goto label5;

     label5:
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, null);
        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46468, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46469, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22198, null);
        $z3 = staticinvoke <org.htmlcleaner.Utils: boolean isFullUrl(java.lang.String)>(r0);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22198);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46472, 0);
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r0 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46472, 1);
        goto label10;

     label10:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46473, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3020, null, null, null);
        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("/", 8);
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3020);
        goto label13;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46473, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16514, null, null);
        $i4 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(16514);

     label13:
        i5$sym = $i4$sym;
        i5 = $i4;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i5$sym, null, i5, 8);
        if i5 > 8 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46474, 0);
        $r20 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label16;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46474, 1);
        goto label15;

     label15:
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i5$sym, null, i5, 1);
        $i6 = i5 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, $i6$sym);
        r23 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label16:
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46475, 0);
        $r24 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, null);
        $r26 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label19;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46475, 1);
        goto label18;

     label18:
        $r29 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        return $r28;
    }

    public static java.lang.String getXmlNSPrefix(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21937, 33183, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46476, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, i0$sym);
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        return $r1;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46476, 1);
        goto label1;

     label1:
        return null;
    }

    public static java.lang.String getXmlName(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $i3$sym, $i2$sym, $i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        java.lang.String r0, $r1;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21940, 33184, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46477, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 - 1;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        if i0 >= $i2 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46478, 0);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i3 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i3$sym);
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);
        return $r1;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46477, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46478, 1);
        goto label2;

     label2:
        return r0;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        java.util.HashMap $r0;
        java.util.Map $r1, $r4, $r7, $r10, $r13;
        java.lang.Character $r2, $r5, $r8, $r11, $r14;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 33185, 0);
        _sym_tmp_1 = <org.htmlcleaner.Utils: int VAR_START$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 782);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.Utils: int VAR_START$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(782);
        <org.htmlcleaner.Utils: java.lang.String VAR_START> = "${";
        _sym_tmp_2 = <org.htmlcleaner.Utils: int VAR_END$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 783);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.Utils: int VAR_END$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(783);
        <org.htmlcleaner.Utils: java.lang.String VAR_END> = "}";
        $r0 = new java.util.HashMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        _sym_tmp_3 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 718);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(718);
        <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS> = $r0;
        _sym_tmp_4 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 718);
        $r1 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, null);
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(38);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "&amp;");
        _sym_tmp_5 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 718);
        $r4 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, null);
        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(60);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "&lt;");
        _sym_tmp_6 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 718);
        $r7 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, null);
        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(62);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "&gt;");
        _sym_tmp_7 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 718);
        $r10 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, null);
        $r11 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(34);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, "&quot;");
        _sym_tmp_8 = <org.htmlcleaner.Utils: int RESERVED_XML_CHARS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 718);
        $r13 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(398, null);
        $r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(39);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, "&apos;");
        return;
    }
}
public abstract class org.htmlcleaner.XmlSerializer extends org.htmlcleaner.Serializer
{

    protected void <init>(org.htmlcleaner.CleanerProperties)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 33186, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21828, null, null);
        specialinvoke r0.<org.htmlcleaner.Serializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    public void writeXmlToStream(org.htmlcleaner.TagNode, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;
        java.lang.String r3;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22200, 33187, 4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22116, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String)>(r1, r2, r3);
        return;
    }

    public void writeXmlToStream(org.htmlcleaner.TagNode, java.io.OutputStream) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22201, 33188, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22118, null, null, null);
        specialinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream)>(r1, r2);
        return;
    }

    public void writeXmlToFile(org.htmlcleaner.TagNode, java.lang.String, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, r3;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22202, 33189, 4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22120, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String,java.lang.String)>(r1, r2, r3);
        return;
    }

    public void writeXmlToFile(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22203, 33190, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22122, null, null, null);
        specialinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String)>(r1, r2);
        return;
    }

    public java.lang.String getXmlAsString(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r3;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22204, 33191, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22125, null, null, null);
        $r3 = specialinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String)>(r1, r2);
        return $r3;
    }

    public java.lang.String getXmlAsString(org.htmlcleaner.TagNode) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22205, 33192, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22059, null, null);
        $r2 = specialinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode)>(r1);
        return $r2;
    }

    public void writeXml(org.htmlcleaner.TagNode, java.io.Writer, java.lang.String) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.lang.String r3;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22206, 33193, 4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22127, null, null, null, null);
        specialinvoke r0.<org.htmlcleaner.Serializer: void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String)>(r1, r2, r3);
        return;
    }

    protected java.lang.String escapeXml(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.XmlSerializer r0;
        java.lang.String r1, $r3;
        org.htmlcleaner.CleanerProperties $r2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21832, 33194, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r2 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21944, null, null, null);
        $r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String escapeXml(java.lang.String,org.htmlcleaner.CleanerProperties,boolean)>(r1, $r2, 0);
        return $r3;
    }

    protected boolean dontEscape(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.htmlcleaner.CleanerProperties $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21831, 33195, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r2 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21844, null);
        $z0 = virtualinvoke $r2.<org.htmlcleaner.CleanerProperties: boolean isUseCdataForScriptAndStyle()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21844);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46479, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22065, null, null);
        $z1 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: boolean isScriptOrStyle(org.htmlcleaner.TagNode)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22065);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46480, 0);
        $z2$sym = null;
        $z2 = 1;
        goto label3;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46479, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46480, 1);
        goto label2;

     label2:
        $z2$sym = null;
        $z2 = 0;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21831, $z2$sym);
        return $z2;
    }

    protected boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $z1$sym, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.htmlcleaner.TagInfo r2;
        org.htmlcleaner.CleanerProperties $r3, $r7;
        org.htmlcleaner.ITagInfoProvider $r4;
        java.lang.String $r5;
        java.util.List $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21830, 33196, 2);
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r3 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21839, null);
        $r4 = virtualinvoke $r3.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider getTagInfoProvider()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21915, null, null);
        r2 = interfaceinvoke $r4.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46481, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 717);
        $r7 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21868, null);
        $z0 = virtualinvoke $r7.<org.htmlcleaner.CleanerProperties: boolean isUseEmptyElementTags()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21868);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46482, 0);
        _sym_tmp_3 = null;
        if r2 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46483, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22064, null);
        $z1 = virtualinvoke r2.<org.htmlcleaner.TagInfo: boolean isEmptyTag()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22064);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46484, 0);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46482, 1);
        goto label1;

     label1:
        $z2$sym = null;
        $z2 = 1;
        goto label6;

        goto label5;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46481, 1);
        goto label5;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46483, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46484, 1);
        goto label5;

     label5:
        $z2$sym = null;
        $z2 = 0;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21830, $z2$sym);
        return $z2;
    }

    protected void serializeOpenTag(org.htmlcleaner.TagNode, java.io.Writer, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z11$sym, $z10$sym, $r57$sym, $z9$sym, $r50$sym, $i0$sym, $r40$sym, $r38$sym, $z8$sym, $r29$sym, $z6$sym, $r22$sym, $r21$sym, $z5$sym, $z3$sym, $z2$sym, z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        boolean z0, z1, $z2, $z3, $z5, $z6, $z8, $z9, $z10, $z11;
        java.lang.String r3, r6, r9, r10, r11, $r18, $r30, $r31, $r34, r41, $r51, $r52, $r55, r58, $r65;
        java.util.HashSet r4, $r13, $r23;
        java.util.TreeSet r5, $r14, $r24;
        java.util.Iterator r7, r37, r56;
        java.util.Map$Entry r8, r39;
        org.htmlcleaner.CleanerProperties $r12;
        java.lang.StringBuilder $r15, $r16, $r17, $r25, $r26, $r27, $r28, $r32, $r33, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r53, $r54, $r59, $r60, $r61, $r62, $r63, $r64;
        java.util.Map $r19, r35;
        java.util.Set $r20, $r36;
        java.lang.Object $r21, $r22, $r29, $r38, $r40, $r50, $r57;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21829, 33197, 4);
        z0$sym = a3targs$symargs[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22074, null);
        $z2 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>(r3);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22074);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46485, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46485, 1);
        goto label1;

     label1:
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r12 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21876, null);
        z1 = virtualinvoke $r12.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21876);
        r4 = null;
        r5 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21937, null);
        r6 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        _sym_tmp_2 = null;
        if r6 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46486, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46487, 0);
        $r13 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.util.HashSet: void <init>()>();
        r4 = $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22189, null, null);
        virtualinvoke r1.<org.htmlcleaner.TagNode: void collectNamespacePrefixesOnPath(java.util.Set)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z3 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r6);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46488, 0);
        $r14 = new java.util.TreeSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<java.util.TreeSet: void <init>()>();
        r5 = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r6);
        goto label6;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46487, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21940, null);
        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);
        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46486, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46488, 1);
        goto label6;

     label6:
        $r15 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r19 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r7 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z5 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46489, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r21 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        $r21$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r8 = (java.util.Map$Entry) $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r22 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r9 = (java.lang.String) $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21937, null);
        r10 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r9);
        _sym_tmp_2 = null;
        if r10 == null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46490, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46491, 0);
        _sym_tmp_2 = null;
        if r4 != null goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46492, 0);
        $r23 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r23.<java.util.HashSet: void <init>()>();
        r4 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22189, null, null);
        virtualinvoke r1.<org.htmlcleaner.TagNode: void collectNamespacePrefixesOnPath(java.util.Set)>(r4);
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46492, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z6 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r10);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46493, 0);
        _sym_tmp_2 = null;
        if r5 != null goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46494, 0);
        $r24 = new java.util.TreeSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r24.<java.util.TreeSet: void <init>()>();
        r5 = $r24;
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46494, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r10);
        goto label16;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46491, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21940, null);
        r9 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r9);
        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46490, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46493, 1);
        goto label16;

     label16:
        $r25 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r29 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r29$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        $r30 = (java.lang.String) $r29;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21832, null, null);
        $r31 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: java.lang.String escapeXml(java.lang.String)>($r30);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r34);
        goto label7;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46489, 1);
        goto label18;

     label18:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46495, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21938, null);
        r35 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        _sym_tmp_2 = null;
        if r35 == null goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46496, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(301, null);
        $r36 = interfaceinvoke r35.<java.util.Map: java.util.Set entrySet()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r37 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z8 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46497, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();
        $r38$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r39 = (java.util.Map$Entry) $r38;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(303, null);
        $r40 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r40$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(303);
        r41 = (java.lang.String) $r40;
        r11 = "xmlns";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r41.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46498, 0);
        $r42 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r11 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46498, 1);
        goto label21;

     label21:
        $r46 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(302, null);
        $r50 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r50$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(302);
        $r51 = (java.lang.String) $r50;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21832, null, null);
        $r52 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: java.lang.String escapeXml(java.lang.String)>($r51);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r55);
        goto label19;

        goto label25;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46495, 1);
        goto label25;

        goto label25;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46496, 1);
        goto label25;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46497, 1);
        goto label25;

     label25:
        _sym_tmp_2 = null;
        if r5 == null goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46499, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r56 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label26:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z9 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46500, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r57 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();
        $r57$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r58 = (java.lang.String) $r57;
        $r59 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" xmlns:");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r65);
        goto label26;

        goto label29;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46499, 1);
        goto label29;

        goto label29;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46500, 1);
        goto label29;

     label29:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21830, null, null);
        $z10 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21830);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label30;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46501, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(" />");
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label34;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46502, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label35;

        goto label31;

     label30:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46501, 1);
        goto label31;

     label31:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21831, null, null);
        $z11 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21831);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46503, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("><![CDATA[");
        goto label35;

        goto label33;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46503, 1);
        goto label33;

     label33:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(">");
        goto label35;

     label34:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46502, 1);
        goto label35;

     label35:
        return;
    }

    protected void serializeEndTag(org.htmlcleaner.TagNode, java.io.Writer, boolean) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z3$sym, $z2$sym, $z1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r3, $r4, $r10;
        org.htmlcleaner.CleanerProperties $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21837, 33198, 4);
        z0$sym = a3targs$symargs[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22074, null);
        $z1 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>(r3);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22074);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46504, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46504, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21831, null, null);
        $z2 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21831);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46505, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("]]>");
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46505, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21937, null);
        $r4 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        _sym_tmp_2 = null;
        if $r4 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46506, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.Serializer: int props$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 717);
        $r5 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21876, null);
        $z3 = virtualinvoke $r5.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21876);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46507, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21940, null);
        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);
        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46506, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46507, 1);
        goto label6;

     label6:
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r10);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46508, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2052, null, null);
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46508, 1);
        goto label8;

     label8:
        return;
    }
}
public class org.htmlcleaner.XPather extends java.lang.Object
{
    private java.lang.String[] tokenArray;
    private int tokenArray$a3tid;

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i2$sym, $z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, i1, $i2;
        org.htmlcleaner.XPather r0;
        java.lang.String r1, $r6;
        java.util.StringTokenizer r2, $r3;
        java.lang.String[] $r4, $r5;
        boolean $z0;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 33199, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.StringTokenizer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22190, null, null, null, null);
        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r1, "/()[]\"\'=<>", 1);
        r2 = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7819, null);
        i0 = virtualinvoke r2.<java.util.StringTokenizer: int countTokens()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7819);
        $r4 = newarray (java.lang.String)[i0];
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 784);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<org.htmlcleaner.XPather: int tokenArray$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(784);
        r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray> = $r4;
        i1$sym = null;
        i1 = 0;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7821, null);
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7821);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46509, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 784);
        $r5 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $i2$sym = i1$sym;
        $i2 = i1;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5990, null);
        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r5, $i2);
        $r5[$i2] = $r6;
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46509, 1);
        goto label2;

     label2:
        return;
    }

    public java.lang.Object[] evaluateAgainstNode(org.htmlcleaner.TagNode) throws org.htmlcleaner.XPatherException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $r8$sym, $i4$sym, $z0$sym, $i3$sym, $i2$sym, $i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1, $i2, $i3, $i4;
        org.htmlcleaner.XPather r0;
        org.htmlcleaner.TagNode r1;
        java.util.Collection r2, $r6;
        java.lang.Object[] r3;
        java.util.Iterator r4;
        org.htmlcleaner.XPatherException $r5;
        java.lang.String[] $r7;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22174, 33200, 2);
        _sym_tmp_2 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46510, 0);
        $r5 = new org.htmlcleaner.XPatherException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r5.<org.htmlcleaner.XPatherException: void <init>(java.lang.String)>("Cannot evaluate XPath expression against null value!");
        throw $r5;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46510, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        $r6 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r1);
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 784);
        $r7 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $i1$sym = null;
        $i1 = lengthof $r7;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, null, $i2$sym, null, null, null, null, null);
        r2 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>($r6, 0, $i2, 0, 1, 0, 0, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i3 = interfaceinvoke r2.<java.util.Collection: int size()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        r3 = newarray (java.lang.Object)[$i3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();
        i0$sym = null;
        i0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46511, 0);
        $i4$sym = i0$sym;
        $i4 = i0;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, $i4);
        r3[$i4] = $r8;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46511, 1);
        goto label4;

     label4:
        return r3;
    }

    private void throwStandardException() throws org.htmlcleaner.XPatherException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPather r0;
        org.htmlcleaner.XPatherException $r1;

        r0 := @this: org.htmlcleaner.XPather;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22209, 33201, 1);
        $r1 = new org.htmlcleaner.XPatherException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<org.htmlcleaner.XPatherException: void <init>()>();
        throw $r1;
    }

    private java.util.Collection evaluateAgainst(java.util.Collection, int, int, boolean, int, int, boolean, java.util.Collection) throws org.htmlcleaner.XPatherException
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $i31$sym, $z19$sym, $i30$sym, $z18$sym, $i29$sym, i28$sym, $i27$sym, $z17$sym, $i26$sym, $i25$sym, i24$sym, $i23$sym, z16$sym, $i22$sym, $z15$sym, $i21$sym, z14$sym, $i20$sym, $i19$sym, $z13$sym, $z12$sym, $z11$sym, $i18$sym, $z10$sym, $z9$sym, $z8$sym, $i17$sym, $i16$sym, $i15$sym, i14$sym, $z7$sym, $z6$sym, $i13$sym, $i12$sym, $i11$sym, $z5$sym, i10$sym, $z4$sym, $i9$sym, $i8$sym, $i7$sym, $z3$sym, $i6$sym, $z2$sym, $i5$sym, i4$sym, z1$sym, i3$sym, i2$sym, z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i26, $i27, i28, $i29, $i30, $i31;
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, r2, r3, r4, $r10, $r11, r12, $r13, r15, $r16, r17, r26, $r30, $r31, r32, $r33, r39, $r40, r46, $r47, $r48;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15, z16, $z17, $z18, $z19;
        java.lang.String[] $r5, $r7, $r19, $r22, $r27, $r34, $r37, $r41, $r44;
        java.lang.String $r6, $r8, $r9, $r14, $r20, $r23, $r25, $r28, $r35, $r38, $r42, $r45;
        java.lang.StringBuilder $r18, $r21, $r24;
        java.lang.Boolean $r29;
        java.lang.Integer $r36;
        java.lang.Double $r43;
        org.htmlcleaner.XPatherException $r49;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        i2 := @parameter4: int;
        i3 := @parameter5: int;
        z1 := @parameter6: boolean;
        r2 := @parameter7: java.util.Collection;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22208, 33202, 9);
        i0$sym = a3targs$symargs[2];
        i1$sym = a3targs$symargs[3];
        z0$sym = a3targs$symargs[4];
        i2$sym = a3targs$symargs[5];
        i3$sym = a3targs$symargs[6];
        z1$sym = a3targs$symargs[7];
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 < 0 goto label43;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46512, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 784);
        $r5 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $i5$sym = null;
        $i5 = lengthof $r5;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i5$sym, i1, $i5);
        if i1 >= $i5 goto label44;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46513, 0);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        if i0 > i1 goto label45;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46514, 0);
        $r6 = "";
        _sym_tmp_2 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 784);
        $r7 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r7, i0);
        $r8 = $r7[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46515, 0);
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i6 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i6$sym, i1$sym, z0$sym, i2$sym, i3$sym, z1$sym, null);
        $r10 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i6, i1, z0, i2, i3, z1, r2);
        return $r10;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46515, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z3 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("(", i0);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46516, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22211, null, i0$sym, i1$sym);
        i4 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>(i0, i1);
        i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22211);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 0);
        if i4 <= 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46517, 0);
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i7 = i0 + 1;
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 1);
        $i8 = i4 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i7$sym, $i8$sym, null, i2$sym, i3$sym, z1$sym, null);
        r3 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i7, $i8, 0, i2, i3, z1, r2);
        $i9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 1);
        $i9 = i4 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i9$sym, i1$sym, null, i2$sym, i3$sym, z1$sym, null);
        $r11 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r3, $i9, i1, 0, i2, i3, z1, r2);
        return $r11;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46517, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22209, null);
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();
        goto label47;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46516, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z4 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("[", i0);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46518, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22211, null, i0$sym, i1$sym);
        i10 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>(i0, i1);
        i10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22211);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i10$sym, null, i10, 0);
        if i10 <= 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46519, 0);
        $z5$sym = null;
        $z5 = r1 instanceof java.util.Collection;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46520, 0);
        $i11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i11 = i0 + 1;
        $i12$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i10$sym, null, i10, 1);
        $i12 = i10 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22212, null, null, $i11$sym, $i12$sym);
        r12 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection filterByCondition(java.util.Collection,int,int)>(r1, $i11, $i12);
        $i13$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i10$sym, null, i10, 1);
        $i13 = i10 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i13$sym, i1$sym, null, i2$sym, i3$sym, z1$sym, null);
        $r13 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r12, $i13, i1, 0, i2, i3, z1, r2);
        return $r13;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46519, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46520, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22209, null);
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();
        goto label47;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46518, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z6 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("\"", i0);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46521, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z7 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("\'", i0);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46522, 0);
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46521, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22211, null, i0$sym, i1$sym);
        i14 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>(i0, i1);
        i14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22211);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i14$sym, i0$sym, i14, i0);
        if i14 <= i0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46523, 0);
        $i15$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i15 = i0 + 1;
        $i16$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i14$sym, null, i14, 1);
        $i16 = i14 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22213, null, $i15$sym, $i16$sym);
        $r14 = specialinvoke r0.<org.htmlcleaner.XPather: java.lang.String flatten(int,int)>($i15, $i16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        r15 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>($r14);
        $i17$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i14$sym, null, i14, 1);
        $i17 = i14 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i17$sym, i1$sym, null, i2$sym, i3$sym, z1$sym, null);
        $r16 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r15, $i17, i1, 0, i2, i3, z1, r2);
        return $r16;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46523, 1);
        goto label14;

     label14:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22209, null);
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();
        goto label47;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46522, 1);
        goto label16;

     label16:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z8 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("=", i0);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 != 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46524, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z9 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("<", i0);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46525, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z10 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>(">", i0);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46526, 0);
        goto label19;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46524, 1);
        goto label19;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46525, 1);
        goto label19;

     label19:
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46527, 0);
        $i18$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i18 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, $i18$sym);
        $z11 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("=", $i18);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46528, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z12 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("<", i0);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 != 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46529, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z13 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>(">", i0);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46530, 0);
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46529, 1);
        goto label21;

     label21:
        $i19$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i19 = i0 + 2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i19$sym, i1$sym, null, i2$sym, i3$sym, z1$sym, null);
        r17 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r2, $i19, i1, 0, i2, i3, z1, r2);
        $r18 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_3 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 784);
        $r19 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r19, i0);
        $r20 = $r19[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        _sym_tmp_4 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 784);
        $r22 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $i20$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i20 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r22, $i20);
        $r23 = $r22[$i20];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22214, null, null, null, null);
        z14 = specialinvoke r0.<org.htmlcleaner.XPather: boolean evaluateLogic(java.util.Collection,java.util.Collection,java.lang.String)>(r1, r17, $r25);
        z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22214);
        goto label25;

        goto label24;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46528, 1);
        goto label24;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46530, 1);
        goto label24;

     label24:
        $i21$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i21 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i21$sym, i1$sym, null, i2$sym, i3$sym, z1$sym, null);
        r26 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r2, $i21, i1, 0, i2, i3, z1, r2);
        _sym_tmp_5 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 784);
        $r27 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r27, i0);
        $r28 = $r27[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22214, null, null, null, null);
        z14 = specialinvoke r0.<org.htmlcleaner.XPather: boolean evaluateLogic(java.util.Collection,java.util.Collection,java.lang.String)>(r1, r26, $r28);
        z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22214);

     label25:
        $r29 = new java.lang.Boolean;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2359, null, z14$sym);
        specialinvoke $r29.<java.lang.Boolean: void <init>(boolean)>(z14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        $r30 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>($r29);
        return $r30;

        goto label28;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46526, 1);
        goto label28;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46527, 1);
        goto label28;

     label28:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, i0$sym);
        $z15 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("/", i0);
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label35;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46531, 0);
        $i22$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i22 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, $i22$sym);
        z16 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("/", $i22);
        z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z16$sym, null, z16, 0);
        if z16 == 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46532, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46532, 1);
        goto label30;

     label30:
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        if i0 >= i1 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46533, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22211, null, i0$sym, i1$sym);
        $i23 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>(i0, i1);
        $i23$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22211);
        i24$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i23$sym, null, $i23, 1);
        i24 = $i23 - 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i24$sym, i0$sym, i24, i0);
        if i24 > i0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46534, 0);
        i24$sym = i1$sym;
        i24 = i1;
        goto label32;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46534, 1);
        goto label32;

     label32:
        $i25$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i25 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i25$sym, i24$sym, z16$sym, null, i3$sym, z1$sym, null);
        r4 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i25, i24, z16, 1, i3, z1, r2);
        $i26$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i24$sym, null, i24, 1);
        $i26 = i24 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i26$sym, i1$sym, null, null, i3$sym, z1$sym, null);
        $r31 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r4, $i26, i1, 0, 1, i3, z1, r2);
        return $r31;

        goto label34;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46533, 1);
        goto label34;

     label34:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22209, null);
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();
        goto label47;

        goto label36;

     label35:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46531, 1);
        goto label36;

     label36:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22215, null, i0$sym, i1$sym);
        $z17 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isFunctionCall(int,int)>(i0, i1);
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22215);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 == 0 goto label37;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46535, 0);
        $i27$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i27 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22211, null, $i27$sym, i1$sym);
        i28 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>($i27, i1);
        i28$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22211);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22216, null, null, i0$sym, i1$sym, i2$sym, i3$sym, z1$sym);
        r32 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateFunction(java.util.Collection,int,int,int,int,boolean)>(r1, i0, i1, i2, i3, z1);
        $i29$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i28$sym, null, i28, 1);
        $i29 = i28 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i29$sym, i1$sym, null, null, i3$sym, z1$sym, null);
        $r33 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r32, $i29, i1, 0, 1, i3, z1, r2);
        return $r33;

        goto label38;

     label37:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46535, 1);
        goto label38;

     label38:
        _sym_tmp_6 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 784);
        $r34 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r34, i0);
        $r35 = $r34[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22217, null, null);
        $z18 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isValidInteger(java.lang.String)>($r35);
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22217);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label39;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46536, 0);
        $r36 = new java.lang.Integer;
        _sym_tmp_7 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 784);
        $r37 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r37, i0);
        $r38 = $r37[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r36.<java.lang.Integer: void <init>(java.lang.String)>($r38);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        r39 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>($r36);
        $i30$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i30 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i30$sym, i1$sym, null, i2$sym, i3$sym, z1$sym, null);
        $r40 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r39, $i30, i1, 0, i2, i3, z1, r2);
        return $r40;

        goto label40;

     label39:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46536, 1);
        goto label40;

     label40:
        _sym_tmp_8 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 784);
        $r41 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r41, i0);
        $r42 = $r41[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22218, null, null);
        $z19 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isValidDouble(java.lang.String)>($r42);
        $z19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22218);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z19$sym, null, $z19, 0);
        if $z19 == 0 goto label41;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46537, 0);
        $r43 = new java.lang.Double;
        _sym_tmp_9 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 784);
        $r44 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r44, i0);
        $r45 = $r44[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r43.<java.lang.Double: void <init>(java.lang.String)>($r45);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        r46 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>($r43);
        $i31$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i31 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i31$sym, i1$sym, null, i2$sym, i3$sym, z1$sym, null);
        $r47 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r46, $i31, i1, 0, i2, i3, z1, r2);
        return $r47;

        goto label42;

     label41:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46537, 1);
        goto label42;

     label42:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22219, null, null, i0$sym, i1$sym, z0$sym, z1$sym);
        $r48 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection getElementsByName(java.util.Collection,int,int,boolean,boolean)>(r1, i0, i1, z0, z1);
        return $r48;

        goto label46;

     label43:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46512, 1);
        goto label46;

        goto label46;

     label44:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46513, 1);
        goto label46;

        goto label46;

     label45:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46514, 1);
        goto label46;

     label46:
        return r1;

     label47:
        $r49 = new org.htmlcleaner.XPatherException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r49.<org.htmlcleaner.XPatherException: void <init>()>();
        throw $r49;
    }

    private java.lang.String flatten(int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, i2;
        org.htmlcleaner.XPather r0;
        java.lang.StringBuffer r1, $r2;
        java.lang.String[] $r3;
        java.lang.String $r4, $r6;

        r0 := @this: org.htmlcleaner.XPather;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22213, 33203, 3);
        i0$sym = a3targs$symargs[1];
        i1$sym = a3targs$symargs[2];
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        if i0 > i1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46538, 0);
        $r2 = new java.lang.StringBuffer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        r1 = $r2;
        i2$sym = i0$sym;
        i2 = i0;

     label0:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, i1$sym, i2, i1);
        if i2 > i1 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46539, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 784);
        $r3 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, i2);
        $r4 = $r3[i2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1038, null, null);
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46539, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r6;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46538, 1);
        goto label4;

     label4:
        return "";
    }

    private boolean isValidInteger(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.XPather r0;
        java.lang.String r1;
        java.lang.NumberFormatException r2, $r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22217, 33204, 2);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2063, null);
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);
        $z0$sym = null;
        $z0 = 1;

     label1:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22217, $z0$sym);
        return $z0;

     label2:
        $r3 := @caughtexception;
        r2 = $r3;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22217, null);
        return 0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    private boolean isValidDouble(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $z0$sym;
        org.htmlcleaner.XPather r0;
        java.lang.String r1;
        java.lang.NumberFormatException r2, $r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22218, 33205, 2);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2682, null);
        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r1);
        $z0$sym = null;
        $z0 = 1;

     label1:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22218, $z0$sym);
        return $z0;

     label2:
        $r3 := @caughtexception;
        r2 = $r3;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22218, null);
        return 0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    private boolean isIdentifier(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $i4$sym, $z0$sym, $c3$sym, $i2$sym, c1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPather r0;
        java.lang.String r1, r2;
        int i0, $i2, $i4;
        char c1, $c3;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22220, 33206, 2);
        _sym_tmp_1 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46540, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22220, null);
        return 0;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46540, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r2.<java.lang.String: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 <= 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46541, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, null);
        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);
        $c3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(484, $c3$sym);
        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c3);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(484);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46542, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22220, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46542, 1);
        goto label3;

     label3:
        i0$sym = null;
        i0 = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i4 = virtualinvoke r2.<java.lang.String: int length()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i4$sym, i0, $i4);
        if i0 >= $i4 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46543, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, i0$sym);
        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);
        c1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c1$sym, null, c1, 95);
        if c1 == 95 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46544, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c1$sym, null, c1, 45);
        if c1 == 45 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46545, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22221, c1$sym);
        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22221);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46546, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22220, null);
        return 0;

        goto label8;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46544, 1);
        goto label8;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46545, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46546, 1);
        goto label8;

     label8:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label4;

        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46541, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46543, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22220, null);
        return 0;
    }

    private boolean isFunctionCall(int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z2$sym, $i5$sym, $i4$sym, $i3$sym, $z1$sym, $i2$sym, $z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, $i2, $i3, $i4, $i5;
        org.htmlcleaner.XPather r0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.XPather;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22215, 33207, 3);
        i0$sym = a3targs$symargs[1];
        i1$sym = a3targs$symargs[2];
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 784);
        $r1 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, i0);
        $r2 = $r1[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22220, null, null);
        $z0 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isIdentifier(java.lang.String)>($r2);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22220);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46547, 0);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i2 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22210, null, null, $i2$sym);
        $z1 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("(", $i2);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22210);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46548, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22215, null);
        return 0;

        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46547, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46548, 1);
        goto label2;

     label2:
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i3 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22211, null, $i3$sym, i1$sym);
        $i4 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>($i3, i1);
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22211);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i5 = i0 + 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, $i5$sym, $i4, $i5);
        if $i4 <= $i5 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46549, 0);
        $z2$sym = null;
        $z2 = 1;
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46549, 1);
        goto label4;

     label4:
        $z2$sym = null;
        $z2 = 0;

     label5:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22215, $z2$sym);
        return $z2;
    }

    private java.util.Collection evaluateFunction(java.util.Collection, int, int, int, int, boolean) throws org.htmlcleaner.XPatherException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z17$sym, $z15$sym, $z14$sym, $i12$sym, $i11$sym, $z13$sym, $i10$sym, $i9$sym, $i8$sym, $z11$sym, $z9$sym, $z7$sym, $z6$sym, $i7$sym, $z4$sym, $i6$sym, $z2$sym, $z1$sym, r9$sym, r5$sym, i5$sym, i4$sym, z0$sym, i3$sym, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, r7, r27;
        boolean z0, $z1, $z2, $z4, $z6, $z7, $z9, $z11, $z13, $z14, $z15, $z17;
        java.lang.String r2, $r11, $r13, $r16, $r20, $r23, $r24, $r26, $r30, $r36;
        java.util.ArrayList r3, $r12;
        java.util.Iterator r4, r8;
        java.lang.Object r5, r9;
        java.lang.String[] $r10;
        java.lang.Integer $r15, $r18, $r25;
        org.htmlcleaner.TagNode $r21, $r28;
        java.lang.StringBuffer $r22, $r29;
        org.htmlcleaner.XPatherException $r31;
        java.lang.StringBuilder $r32, $r33, $r34, $r35;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        i3 := @parameter4: int;
        z0 := @parameter5: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22216, 33208, 7);
        i0$sym = a3targs$symargs[2];
        i1$sym = a3targs$symargs[3];
        i2$sym = a3targs$symargs[4];
        i3$sym = a3targs$symargs[5];
        z0$sym = a3targs$symargs[6];
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 784);
        $r10 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r10, i0);
        $r11 = $r10[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r2 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();
        $r12 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();
        r3 = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        i4 = interfaceinvoke r1.<java.util.Collection: int size()>();
        i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        i5$sym = null;
        i5 = 0;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46550, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i5$sym, null, i5, 1);
        i5 = i5 + 1;
        $r13 = "last";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46551, 0);
        $r15 = new java.lang.Integer;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46552, 0);
        $i6$sym = i3$sym;
        $i6 = i3;
        goto label3;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46552, 1);
        goto label2;

     label2:
        $i6$sym = i4$sym;
        $i6 = i4;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, $i6$sym);
        specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);
        goto label27;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46551, 1);
        goto label5;

     label5:
        $r16 = "position";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46553, 0);
        $r18 = new java.lang.Integer;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46554, 0);
        $i7$sym = i2$sym;
        $i7 = i2;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46554, 1);
        goto label7;

     label7:
        $i7$sym = i5$sym;
        $i7 = i5;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, $i7$sym);
        specialinvoke $r18.<java.lang.Integer: void <init>(int)>($i7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);
        goto label27;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46553, 1);
        goto label10;

     label10:
        $r20 = "text";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z6 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46555, 0);
        $z7$sym = null;
        $z7 = r5 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46556, 0);
        $r21 = (org.htmlcleaner.TagNode) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        $r22 = virtualinvoke $r21.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);
        goto label27;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46556, 1);
        goto label12;

     label12:
        $z9$sym = null;
        $z9 = r5 instanceof java.lang.String;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46557, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r23 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);
        goto label27;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46555, 1);
        goto label14;

     label14:
        $r24 = "count";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z11 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46558, 0);
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i8 = i0 + 2;
        $i9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i9 = i1 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i8$sym, $i9$sym, null, i2$sym, null, z0$sym, null);
        r7 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i8, $i9, 0, i2, 0, z0, null);
        $r25 = new java.lang.Integer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i10 = interfaceinvoke r7.<java.util.Collection: int size()>();
        $i10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, $i10$sym);
        specialinvoke $r25.<java.lang.Integer: void <init>(int)>($i10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);
        goto label27;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46558, 1);
        goto label16;

     label16:
        $r26 = "data";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z13 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46559, 0);
        $i11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i11 = i0 + 2;
        $i12$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i12 = i1 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i11$sym, $i12$sym, null, i2$sym, null, z0$sym, null);
        r27 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i11, $i12, 0, i2, 0, z0, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r8 = interfaceinvoke r27.<java.util.Collection: java.util.Iterator iterator()>();

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z14 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46560, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z15$sym = null;
        $z15 = r9 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46561, 0);
        $r28 = (org.htmlcleaner.TagNode) r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        $r29 = virtualinvoke $r28.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);
        goto label21;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46561, 1);
        goto label19;

     label19:
        $z17$sym = null;
        $z17 = r9 instanceof java.lang.String;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46562, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r30 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);
        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46562, 1);
        goto label21;

     label21:
        goto label17;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46560, 1);
        goto label23;

     label23:
        goto label27;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46559, 1);
        goto label25;

     label25:
        $r31 = new org.htmlcleaner.XPatherException;
        $r32 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown function ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r31.<org.htmlcleaner.XPatherException: void <init>(java.lang.String)>($r36);
        throw $r31;

        goto label27;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46557, 1);
        goto label27;

     label27:
        goto label0;

        goto label29;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46550, 1);
        goto label29;

     label29:
        return r3;
    }

    private java.util.Collection filterByCondition(java.util.Collection, int, int) throws org.htmlcleaner.XPatherException
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $i5$sym, $z4$sym, $z2$sym, $z1$sym, $i4$sym, $z0$sym, r7$sym, r5$sym, i3$sym, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, $r9, $r10, $r11;
        int i0, i1, i2, i3, $i4, $i5;
        java.util.ArrayList $r2, r3, r6, $r8;
        java.util.Iterator r4;
        java.lang.Object r5, r7;
        boolean $z0, $z1, $z2, $z4;
        java.lang.Boolean $r12;
        java.lang.Integer $r13;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22212, 33209, 4);
        i0$sym = a3targs$symargs[2];
        i1$sym = a3targs$symargs[3];
        $r2 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        i2$sym = null;
        i2 = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        i3 = interfaceinvoke r1.<java.util.Collection: int size()>();
        i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46563, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        $r8 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, r5$sym);
        $r9 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, r5$sym);
        $r10 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, i0$sym, i1$sym, null, i2$sym, i3$sym, null, null);
        $r11 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>($r9, i0, i1, 0, i2, i3, 1, $r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8348, null, null);
        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);
        r6 = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i4 = virtualinvoke r6.<java.util.ArrayList: int size()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 1);
        if $i4 < 1 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46564, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        r7 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(0);
        r7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $z1$sym = null;
        $z1 = r7 instanceof java.lang.Boolean;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46565, 0);
        $r12 = (java.lang.Boolean) r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2659, null);
        $z2 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2659);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46566, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, r5$sym);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        goto label8;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46565, 1);
        goto label2;

     label2:
        $z4$sym = null;
        $z4 = r7 instanceof java.lang.Integer;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46567, 0);
        $r13 = (java.lang.Integer) r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i5 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, i2$sym, $i5, i2);
        if $i5 != i2 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46568, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, r5$sym);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        goto label8;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46567, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, r5$sym);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        goto label8;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46564, 1);
        goto label8;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46566, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46568, 1);
        goto label8;

     label8:
        goto label0;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46563, 1);
        goto label10;

     label10:
        return r3;
    }

    private boolean isToken(java.lang.String, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z1$sym, $z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, i1;
        org.htmlcleaner.XPather r0;
        java.lang.String r1, $r4, $r5, $r6;
        java.lang.String[] $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22210, 33210, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 784);
        $r2 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        i1$sym = null;
        i1 = lengthof $r2;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 < 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46569, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        if i0 >= i1 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46570, 0);
        _sym_tmp_2 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 784);
        $r3 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, i0);
        $r4 = $r3[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46571, 0);
        $z1$sym = null;
        $z1 = 1;
        goto label4;

        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46569, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46570, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46571, 1);
        goto label3;

     label3:
        $z1$sym = null;
        $z1 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22210, $z1$sym);
        return $z1;
    }

    private int findClosingIndex(int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_11, $z20$sym, $z19$sym, $z18$sym, $z17$sym, $z16$sym, $z15$sym, $z14$sym, $z13$sym, $z12$sym, $b10$sym, $z11$sym, $b9$sym, $z10$sym, $b8$sym, $z9$sym, z8$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, i7$sym, $z3$sym, $z2$sym, $z1$sym, i6$sym, i5$sym, i4$sym, i3$sym, z0$sym, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, i3, i4, i5, i6, i7;
        org.htmlcleaner.XPather r0;
        java.lang.String r1, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r37;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.lang.String[] $r2, $r5, $r9, $r18, $r21, $r24, $r27, $r30, $r33, $r36;
        byte $b8, $b9, $b10;

        r0 := @this: org.htmlcleaner.XPather;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22211, 33211, 3);
        i0$sym = a3targs$symargs[1];
        i1$sym = a3targs$symargs[2];
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        if i0 >= i1 goto label65;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46572, 0);
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 784);
        $r2 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, i0);
        r1 = $r2[i0];
        $r3 = "\"";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46573, 0);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i2 = i0 + 1;

     label0:
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, i1$sym, i2, i1);
        if i2 > i1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46574, 0);
        $r4 = "\"";
        _sym_tmp_2 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 784);
        $r5 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r5, i2);
        $r6 = $r5[i2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46575, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22211, i2$sym);
        return i2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46575, 1);
        goto label2;

     label2:
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        goto label0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46574, 1);
        goto label4;

     label4:
        goto label68;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46573, 1);
        goto label6;

     label6:
        $r7 = "\'";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46576, 0);
        i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i7 = i0 + 1;

     label7:
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i7$sym, i1$sym, i7, i1);
        if i7 > i1 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46577, 0);
        $r8 = "\'";
        _sym_tmp_3 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 784);
        $r9 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r9, i7);
        $r10 = $r9[i7];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46578, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22211, i7$sym);
        return i7;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46578, 1);
        goto label9;

     label9:
        i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i7$sym, null, i7, 1);
        i7 = i7 + 1;
        goto label7;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46577, 1);
        goto label11;

     label11:
        goto label68;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46576, 1);
        goto label13;

     label13:
        $r11 = "(";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46579, 0);
        $r12 = "[";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46580, 0);
        $r13 = "/";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label66;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46581, 0);
        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46579, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46580, 1);
        goto label16;

     label16:
        z8$sym = null;
        z8 = 1;
        z0$sym = null;
        z0 = 1;
        $r14 = "(";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z9 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46582, 0);
        $b8$sym = null;
        $b8 = 1;
        goto label19;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46582, 1);
        goto label18;

     label18:
        $b8$sym = null;
        $b8 = 0;

     label19:
        i3$sym = $b8$sym;
        i3 = $b8;
        $r15 = "[";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46583, 0);
        $b9$sym = null;
        $b9 = 1;
        goto label22;

        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46583, 1);
        goto label21;

     label21:
        $b9$sym = null;
        $b9 = 0;

     label22:
        i4$sym = $b9$sym;
        i4 = $b9;
        $r16 = "/";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46584, 0);
        $b10$sym = null;
        $b10 = 1;
        goto label25;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46584, 1);
        goto label24;

     label24:
        $b10$sym = null;
        $b10 = 0;

     label25:
        i5$sym = $b10$sym;
        i5 = $b10;
        i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i6 = i0 + 1;

     label26:
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, i1$sym, i6, i1);
        if i6 > i1 goto label67;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46585, 0);
        $r17 = "\"";
        _sym_tmp_4 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 784);
        $r18 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r18, i6);
        $r19 = $r18[i6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z12 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r19);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label30;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46586, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z8$sym, null, z8, 0);
        if z8 != 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46587, 0);
        $z13$sym = null;
        $z13 = 1;
        goto label29;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46587, 1);
        goto label28;

     label28:
        $z13$sym = null;
        $z13 = 0;

     label29:
        z8$sym = $z13$sym;
        z8 = $z13;
        goto label58;

        goto label31;

     label30:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46586, 1);
        goto label31;

     label31:
        $r20 = "\'";
        _sym_tmp_5 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 784);
        $r21 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r21, i6);
        $r22 = $r21[i6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z14 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r22);
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label35;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46588, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46589, 0);
        $z15$sym = null;
        $z15 = 1;
        goto label34;

        goto label33;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46589, 1);
        goto label33;

     label33:
        $z15$sym = null;
        $z15 = 0;

     label34:
        z0$sym = $z15$sym;
        z0 = $z15;
        goto label58;

        goto label36;

     label35:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46588, 1);
        goto label36;

     label36:
        $r23 = "(";
        _sym_tmp_6 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 784);
        $r24 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r24, i6);
        $r25 = $r24[i6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z16 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r25);
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 == 0 goto label37;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46590, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z8$sym, null, z8, 0);
        if z8 == 0 goto label38;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46591, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label39;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46592, 0);
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 1);
        i3 = i3 + 1;
        goto label58;

        goto label40;

     label37:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46590, 1);
        goto label40;

        goto label40;

     label38:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46591, 1);
        goto label40;

        goto label40;

     label39:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46592, 1);
        goto label40;

     label40:
        $r26 = ")";
        _sym_tmp_7 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 784);
        $r27 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r27, i6);
        $r28 = $r27[i6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z17 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r28);
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 == 0 goto label41;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46593, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z8$sym, null, z8, 0);
        if z8 == 0 goto label42;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46594, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label43;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46595, 0);
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, -1);
        i3 = i3 + -1;
        goto label58;

        goto label44;

     label41:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46593, 1);
        goto label44;

        goto label44;

     label42:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46594, 1);
        goto label44;

        goto label44;

     label43:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46595, 1);
        goto label44;

     label44:
        $r29 = "[";
        _sym_tmp_8 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 784);
        $r30 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r30, i6);
        $r31 = $r30[i6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z18 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r31);
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label45;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46596, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z8$sym, null, z8, 0);
        if z8 == 0 goto label46;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46597, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label47;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46598, 0);
        i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 1);
        i4 = i4 + 1;
        goto label58;

        goto label48;

     label45:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46596, 1);
        goto label48;

        goto label48;

     label46:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46597, 1);
        goto label48;

        goto label48;

     label47:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46598, 1);
        goto label48;

     label48:
        $r32 = "]";
        _sym_tmp_9 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 784);
        $r33 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r33, i6);
        $r34 = $r33[i6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z19 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r34);
        $z19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z19$sym, null, $z19, 0);
        if $z19 == 0 goto label49;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46599, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z8$sym, null, z8, 0);
        if z8 == 0 goto label50;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46600, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label51;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46601, 0);
        i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, -1);
        i4 = i4 + -1;
        goto label58;

        goto label52;

     label49:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46599, 1);
        goto label52;

        goto label52;

     label50:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46600, 1);
        goto label52;

        goto label52;

     label51:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46601, 1);
        goto label52;

     label52:
        $r35 = "/";
        _sym_tmp_10 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 784);
        $r36 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r36, i6);
        $r37 = $r36[i6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z20 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r37);
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z20$sym, null, $z20, 0);
        if $z20 == 0 goto label53;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46602, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z8$sym, null, z8, 0);
        if z8 == 0 goto label54;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46603, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label55;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46604, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 0);
        if i3 != 0 goto label56;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46605, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 0);
        if i4 != 0 goto label57;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46606, 0);
        i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i5$sym, null, i5, -1);
        i5 = i5 + -1;
        goto label58;

     label53:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46602, 1);
        goto label58;

        goto label58;

     label54:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46603, 1);
        goto label58;

        goto label58;

     label55:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46604, 1);
        goto label58;

        goto label58;

     label56:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46605, 1);
        goto label58;

        goto label58;

     label57:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46606, 1);
        goto label58;

     label58:
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z8$sym, null, z8, 0);
        if z8 == 0 goto label59;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46607, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label60;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46608, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 0);
        if i3 != 0 goto label61;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46609, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 0);
        if i4 != 0 goto label62;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46610, 0);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i5$sym, null, i5, 0);
        if i5 != 0 goto label63;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46611, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22211, i6$sym);
        return i6;

        goto label64;

     label59:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46607, 1);
        goto label64;

        goto label64;

     label60:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46608, 1);
        goto label64;

        goto label64;

     label61:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46609, 1);
        goto label64;

        goto label64;

     label62:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46610, 1);
        goto label64;

        goto label64;

     label63:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46611, 1);
        goto label64;

     label64:
        i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, null, i6, 1);
        i6 = i6 + 1;
        goto label26;

        goto label68;

     label65:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46572, 1);
        goto label68;

        goto label68;

     label66:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46581, 1);
        goto label68;

        goto label68;

     label67:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 46585, 1);
        goto label68;

     label68:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22211, null);
        return -1;
    }

    private boolean isAtt(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $z0$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPather r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22222, 33212, 2);
        _sym_tmp_1 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46612, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 <= 1 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46613, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("@");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46614, 0);
        $z1$sym = null;
        $z1 = 1;
        goto label4;

        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46612, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46613, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46614, 1);
        goto label3;

     label3:
        $z1$sym = null;
        $z1 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22222, $z1$sym);
        return $z1;
    }

    private java.util.Collection singleton(java.lang.Object)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        org.htmlcleaner.XPather r0;
        java.lang.Object r1;
        java.util.ArrayList $r2, r3;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22207, 33213, 2);
        r1$sym = a3targs$symargs[1];
        $r2 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, r1$sym);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);
        return r3;
    }

    private java.util.Collection getElementsByName(java.util.Collection, int, int, boolean, boolean) throws org.htmlcleaner.XPatherException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z18$sym, $r43$sym, $z17$sym, $i6$sym, $i5$sym, z15$sym, $z14$sym, r34$sym, $z13$sym, i4$sym, $i3$sym, $i2$sym, $z10$sym, $z9$sym, r23$sym, $z8$sym, $z6$sym, $z5$sym, $z4$sym, z3$sym, z2$sym, r6$sym, z1$sym, z0$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, $i2, $i3, i4, $i5, $i6;
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, r4, r9, r11, r15, $r27, $r28, $r29, $r30, $r39, $r44;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z8, $z9, $z10, $z13, $z14, z15, $z17, $z18;
        java.lang.String r2, r8, $r17, r18, $r25, $r36, $r37, $r38;
        java.util.ArrayList r3, r45, r48;
        java.util.Iterator r5, r13, r22, r33;
        java.lang.Object r6, r23, r34, $r43;
        org.htmlcleaner.TagNode r7, r10, r14, r24, r35;
        java.util.List r12, $r21, $r40;
        java.lang.String[] $r16;
        java.util.Map $r26;
        java.util.LinkedHashSet r32, r42, r46, r47, r49;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22219, 33214, 6);
        i0$sym = a3targs$symargs[2];
        i1$sym = a3targs$symargs[3];
        z0$sym = a3targs$symargs[4];
        z1$sym = a3targs$symargs[5];
        _sym_tmp_1 = r0.<org.htmlcleaner.XPather: int tokenArray$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 784);
        $r16 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r16, i0);
        $r17 = $r16[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r2 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22222, null, null);
        $z4 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isAtt(java.lang.String)>(r2);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22222);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46615, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, null);
        r18 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);
        r45 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r45.<java.util.ArrayList: void <init>()>();
        r3 = r45;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46616, 0);
        r46 = new java.util.LinkedHashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r46.<java.util.LinkedHashSet: void <init>()>();
        r4 = r46;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z5 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46617, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z6$sym = null;
        $z6 = r6 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46618, 0);
        r7 = (org.htmlcleaner.TagNode) r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22166, null, null);
        $r21 = virtualinvoke r7.<org.htmlcleaner.TagNode: java.util.List getAllElementsList(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(832, null, null);
        interfaceinvoke r4.<java.util.Collection: boolean addAll(java.util.Collection)>($r21);
        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46618, 1);
        goto label2;

     label2:
        goto label0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46617, 1);
        goto label4;

     label4:
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46616, 1);
        goto label6;

     label6:
        r4 = r1;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r22 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z8 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46619, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();
        r23$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z9$sym = null;
        $z9 = r23 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46620, 0);
        r24 = (org.htmlcleaner.TagNode) r23;
        $r25 = "*";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z10 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r18);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46621, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21943, null);
        $r26 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(781, null);
        $r27 = interfaceinvoke $r26.<java.util.Map: java.util.Collection values()>();
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i2 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i2$sym, i1$sym, null, null, null, z1$sym, null);
        $r28 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>($r27, $i2, i1, 0, 1, 1, z1, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(832, null, null);
        interfaceinvoke r3.<java.util.Collection: boolean addAll(java.util.Collection)>($r28);
        goto label12;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46621, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        r8 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>(r18);
        _sym_tmp_2 = null;
        if r8 == null goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46622, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        $r29 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r8);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i3 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i3$sym, i1$sym, null, null, null, z1$sym, null);
        $r30 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>($r29, $i3, i1, 0, 1, 1, z1, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(832, null, null);
        interfaceinvoke r3.<java.util.Collection: boolean addAll(java.util.Collection)>($r30);
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46622, 1);
        goto label12;

     label12:
        goto label15;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46620, 1);
        goto label14;

     label14:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22209, null);
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();

     label15:
        goto label8;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46619, 1);
        goto label17;

     label17:
        return r3;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46615, 1);
        goto label19;

     label19:
        r47 = new java.util.LinkedHashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r47.<java.util.LinkedHashSet: void <init>()>();
        r32 = r47;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r33 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        i4$sym = null;
        i4 = 0;

     label20:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z13 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label51;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46623, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();
        r34$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z14$sym = null;
        $z14 = r34 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label48;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46624, 0);
        r35 = (org.htmlcleaner.TagNode) r34;
        i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 1);
        i4 = i4 + 1;
        $r36 = ".";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        z15 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        $r37 = "..";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        z2 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        $r38 = "*";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        z3 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z15$sym, null, z15, 0);
        if z15 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46625, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        r9 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r35);
        goto label31;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46625, 1);
        goto label22;

     label22:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46626, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        r10 = virtualinvoke r35.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        _sym_tmp_2 = null;
        if r10 == null goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46627, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        $r39 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r10);
        goto label25;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46627, 1);
        goto label24;

     label24:
        r48 = new java.util.ArrayList;
        $r39 = r48;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r48.<java.util.ArrayList: void <init>()>();

     label25:
        r9 = $r39;
        goto label31;

        goto label27;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46626, 1);
        goto label27;

     label27:
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z3$sym, null, z3, 0);
        if z3 == 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46628, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22160, null);
        $r40 = virtualinvoke r35.<org.htmlcleaner.TagNode: java.util.List getChildTagList()>();
        goto label30;

        goto label29;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46628, 1);
        goto label29;

     label29:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22168, null, null, null);
        $r40 = virtualinvoke r35.<org.htmlcleaner.TagNode: java.util.List getElementListByName(java.lang.String,boolean)>(r2, 0);

     label30:
        r9 = $r40;

     label31:
        r49 = new java.util.LinkedHashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8348, null, null);
        specialinvoke r49.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r9);
        r42 = r49;
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i5 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i6 = virtualinvoke r42.<java.util.LinkedHashSet: int size()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22208, null, null, $i5$sym, i1$sym, null, i4$sym, $i6$sym, z1$sym, null);
        r11 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r42, $i5, i1, 0, i4, $i6, z1, null);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label45;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46629, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22160, null);
        r12 = virtualinvoke r35.<org.htmlcleaner.TagNode: java.util.List getChildTagList()>();
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z15$sym, null, z15, 0);
        if z15 != 0 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46630, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 != 0 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46631, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z3$sym, null, z3, 0);
        if z3 == 0 goto label35;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46632, 0);
        goto label34;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46630, 1);
        goto label34;

        goto label34;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46631, 1);
        goto label34;

     label34:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(832, null, null);
        interfaceinvoke r32.<java.util.Collection: boolean addAll(java.util.Collection)>(r11);
        goto label36;

     label35:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46632, 1);
        goto label36;

     label36:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r13 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label37:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z17 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 == 0 goto label43;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46633, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r43 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
        $r43$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r14 = (org.htmlcleaner.TagNode) $r43;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22207, null, null);
        $r44 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22219, null, null, i0$sym, i1$sym, z0$sym, z1$sym);
        r15 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection getElementsByName(java.util.Collection,int,int,boolean,boolean)>($r44, i0, i1, z0, z1);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z15$sym, null, z15, 0);
        if z15 != 0 goto label38;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46634, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 != 0 goto label39;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46635, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z3$sym, null, z3, 0);
        if z3 != 0 goto label40;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46636, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z18 = interfaceinvoke r11.<java.util.Collection: boolean contains(java.lang.Object)>(r14);
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label41;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46637, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r32.<java.util.Collection: boolean add(java.lang.Object)>(r14);
        goto label42;

     label38:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46634, 1);
        goto label42;

        goto label42;

     label39:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46635, 1);
        goto label42;

        goto label42;

     label40:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46636, 1);
        goto label42;

        goto label42;

     label41:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46637, 1);
        goto label42;

     label42:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(832, null, null);
        interfaceinvoke r32.<java.util.Collection: boolean addAll(java.util.Collection)>(r15);
        goto label37;

        goto label44;

     label43:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46633, 1);
        goto label44;

     label44:
        goto label47;

        goto label46;

     label45:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46629, 1);
        goto label46;

     label46:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(832, null, null);
        interfaceinvoke r32.<java.util.Collection: boolean addAll(java.util.Collection)>(r11);

     label47:
        goto label50;

        goto label49;

     label48:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46624, 1);
        goto label49;

     label49:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22209, null);
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();

     label50:
        goto label20;

        goto label52;

     label51:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46623, 1);
        goto label52;

     label52:
        return r32;
    }

    private boolean evaluateLogic(java.util.Collection, java.util.Collection, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z21$sym, $z20$sym, $z19$sym, $z18$sym, $z17$sym, $z16$sym, $z15$sym, $z14$sym, $z13$sym, $z12$sym, i7$sym, $z11$sym, $b6$sym, $z10$sym, $z9$sym, $b5$sym, $z8$sym, $z7$sym, $b4$sym, $z6$sym, $z5$sym, $b3$sym, $z4$sym, $z3$sym, $b2$sym, $z2$sym, $z1$sym, $z0$sym, $i1$sym, $i0$sym, d1$sym, d0$sym, r5$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, r2;
        java.lang.String r3, r6, $r11, $r12, $r13, $r14, $r15, r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.Object r4, r5;
        double d0, d1;
        int $i0, $i1, i7;
        java.util.Iterator $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        java.lang.Number $r9, $r10;
        byte $b2, $b3, $b4, $b5, $b6;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        r2 := @parameter1: java.util.Collection;
        r3 := @parameter2: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22214, 33215, 4);
        _sym_tmp_1 = null;
        if r1 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46638, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46639, 0);
        _sym_tmp_1 = null;
        if r2 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46640, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke r2.<java.util.Collection: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46641, 0);
        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46638, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46639, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46640, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, null);
        return 0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46641, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        $r8 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        $z0$sym = null;
        $z0 = r4 instanceof java.lang.Number;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46642, 0);
        $z1$sym = null;
        $z1 = r5 instanceof java.lang.Number;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46643, 0);
        $r9 = (java.lang.Number) r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2698, null);
        d0 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>();
        d0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2698);
        $r10 = (java.lang.Number) r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2698, null);
        d1 = virtualinvoke $r10.<java.lang.Number: double doubleValue()>();
        d1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2698);
        $r11 = "=";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46644, 0);
        $b2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,double,double)>(d0$sym, d1$sym, d0, d1);
        $b2 = d0 cmpl d1;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b2$sym, null, $b2, 0);
        if $b2 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46645, 0);
        $z3$sym = null;
        $z3 = 1;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46645, 1);
        goto label7;

     label7:
        $z3$sym = null;
        $z3 = 0;

     label8:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z3$sym);
        return $z3;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46644, 1);
        goto label10;

     label10:
        $r12 = "<";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46646, 0);
        $b3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,double,double)>(d0$sym, d1$sym, d0, d1);
        $b3 = d0 cmpg d1;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b3$sym, null, $b3, 0);
        if $b3 >= 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46647, 0);
        $z5$sym = null;
        $z5 = 1;
        goto label13;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46647, 1);
        goto label12;

     label12:
        $z5$sym = null;
        $z5 = 0;

     label13:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z5$sym);
        return $z5;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46646, 1);
        goto label15;

     label15:
        $r13 = ">";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46648, 0);
        $b4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,double,double)>(d0$sym, d1$sym, d0, d1);
        $b4 = d0 cmpl d1;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b4$sym, null, $b4, 0);
        if $b4 <= 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46649, 0);
        $z7$sym = null;
        $z7 = 1;
        goto label18;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46649, 1);
        goto label17;

     label17:
        $z7$sym = null;
        $z7 = 0;

     label18:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z7$sym);
        return $z7;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46648, 1);
        goto label20;

     label20:
        $r14 = "<=";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z8 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46650, 0);
        $b5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,double,double)>(d0$sym, d1$sym, d0, d1);
        $b5 = d0 cmpg d1;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b5$sym, null, $b5, 0);
        if $b5 > 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46651, 0);
        $z9$sym = null;
        $z9 = 1;
        goto label23;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46651, 1);
        goto label22;

     label22:
        $z9$sym = null;
        $z9 = 0;

     label23:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z9$sym);
        return $z9;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46650, 1);
        goto label25;

     label25:
        $r15 = ">=";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46652, 0);
        $b6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,double,double)>(d0$sym, d1$sym, d0, d1);
        $b6 = d0 cmpl d1;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b6$sym, null, $b6, 0);
        if $b6 < 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46653, 0);
        $z11$sym = null;
        $z11 = 1;
        goto label28;

        goto label27;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46653, 1);
        goto label27;

     label27:
        $z11$sym = null;
        $z11 = 0;

     label28:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z11$sym);
        return $z11;

        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46652, 1);
        goto label30;

     label30:
        goto label58;

        goto label33;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46642, 1);
        goto label33;

        goto label33;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46643, 1);
        goto label33;

     label33:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22223, null, r4$sym);
        r16 = specialinvoke r0.<org.htmlcleaner.XPather: java.lang.String toText(java.lang.Object)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22223, null, r5$sym);
        r6 = specialinvoke r0.<org.htmlcleaner.XPather: java.lang.String toText(java.lang.Object)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5355, null, null);
        i7 = virtualinvoke r16.<java.lang.String: int compareTo(java.lang.String)>(r6);
        i7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(5355);
        $r17 = "=";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z12 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label37;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46654, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i7$sym, null, i7, 0);
        if i7 != 0 goto label34;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46655, 0);
        $z13$sym = null;
        $z13 = 1;
        goto label36;

        goto label35;

     label34:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46655, 1);
        goto label35;

     label35:
        $z13$sym = null;
        $z13 = 0;

     label36:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z13$sym);
        return $z13;

        goto label38;

     label37:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46654, 1);
        goto label38;

     label38:
        $r18 = "<";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z14 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 == 0 goto label42;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46656, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i7$sym, null, i7, 0);
        if i7 >= 0 goto label39;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46657, 0);
        $z15$sym = null;
        $z15 = 1;
        goto label41;

        goto label40;

     label39:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46657, 1);
        goto label40;

     label40:
        $z15$sym = null;
        $z15 = 0;

     label41:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z15$sym);
        return $z15;

        goto label43;

     label42:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46656, 1);
        goto label43;

     label43:
        $r19 = ">";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z16 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 == 0 goto label47;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46658, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i7$sym, null, i7, 0);
        if i7 <= 0 goto label44;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46659, 0);
        $z17$sym = null;
        $z17 = 1;
        goto label46;

        goto label45;

     label44:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46659, 1);
        goto label45;

     label45:
        $z17$sym = null;
        $z17 = 0;

     label46:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z17$sym);
        return $z17;

        goto label48;

     label47:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46658, 1);
        goto label48;

     label48:
        $r20 = "<=";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z18 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label52;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46660, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i7$sym, null, i7, 0);
        if i7 > 0 goto label49;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46661, 0);
        $z19$sym = null;
        $z19 = 1;
        goto label51;

        goto label50;

     label49:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46661, 1);
        goto label50;

     label50:
        $z19$sym = null;
        $z19 = 0;

     label51:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z19$sym);
        return $z19;

        goto label53;

     label52:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46660, 1);
        goto label53;

     label53:
        $r21 = ">=";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z20 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z20$sym, null, $z20, 0);
        if $z20 == 0 goto label57;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46662, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i7$sym, null, i7, 0);
        if i7 < 0 goto label54;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46663, 0);
        $z21$sym = null;
        $z21 = 1;
        goto label56;

        goto label55;

     label54:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46663, 1);
        goto label55;

     label55:
        $z21$sym = null;
        $z21 = 0;

     label56:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, $z21$sym);
        return $z21;

        goto label58;

     label57:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46662, 1);
        goto label58;

     label58:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22214, null);
        return 0;
    }

    private java.lang.String toText(java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPather r0;
        java.lang.Object r1;
        boolean $z0;
        org.htmlcleaner.TagNode $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22223, 33216, 2);
        r1$sym = a3targs$symargs[1];
        _sym_tmp_1 = null;
        if r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46664, 0);
        return "";

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46664, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = r1 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46665, 0);
        $r2 = (org.htmlcleaner.TagNode) r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        $r3 = virtualinvoke $r2.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46665, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        return $r5;
    }
}
public class org.htmlcleaner.XPatherException extends java.lang.Exception
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPatherException r0;

        r0 := @this: org.htmlcleaner.XPatherException;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33217, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke r0.<org.htmlcleaner.XPatherException: void <init>(java.lang.String)>("Error in evaluating XPath expression!");
        return;
    }

    public void <init>(java.lang.Throwable)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPatherException r0;
        java.lang.Throwable r1;

        r0 := @this: org.htmlcleaner.XPatherException;
        r1 := @parameter0: java.lang.Throwable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(296, 33218, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(296, null, null);
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);
        return;
    }

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPatherException r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.XPatherException;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 33219, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.XPatherException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: org.htmlcleaner.XPatherException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(393, 33220, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(393, null, null, null);
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);
        return;
    }
}
public class net.nightwhistler.htmlspanner.spans.FontFamilySpan extends android.text.style.TypefaceSpan
{
    private final net.nightwhistler.htmlspanner.FontFamily family;
    private boolean bold;
    private boolean italic;
    private final int family$a3tid;
    private acteve.symbolic.integer.Expression bold$sym;
    private int bold$a3tid;
    private acteve.symbolic.integer.Expression italic$sym;
    private int italic$a3tid;

    public void <init>(net.nightwhistler.htmlspanner.FontFamily)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        net.nightwhistler.htmlspanner.FontFamily r1;
        java.lang.String $r2;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        r1 := @parameter0: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22224, 33221, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r2 = virtualinvoke r1.<net.nightwhistler.htmlspanner.FontFamily: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke r0.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>($r2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int family$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 785);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int family$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(785);
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: net.nightwhistler.htmlspanner.FontFamily family> = r1;
        return;
    }

    public void setBold(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        boolean z0;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22225, 33222, 2);
        z0$sym = a3targs$symargs[1];
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: acteve.symbolic.integer.Expression bold$sym> = z0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int bold$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 786);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int bold$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(786);
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean bold> = z0;
        return;
    }

    public void setItalic(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        boolean z0;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22226, 33223, 2);
        z0$sym = a3targs$symargs[1];
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: acteve.symbolic.integer.Expression italic$sym> = z0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int italic$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 787);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int italic$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(787);
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean italic> = z0;
        return;
    }

    public void updateDrawState(android.text.TextPaint)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        android.text.TextPaint r1;
        net.nightwhistler.htmlspanner.FontFamily $r2;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        r1 := @parameter0: android.text.TextPaint;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17263, 33224, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int family$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 785);
        $r2 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: net.nightwhistler.htmlspanner.FontFamily family>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22227, null, null, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void applyCustomTypeFace(android.graphics.Paint,net.nightwhistler.htmlspanner.FontFamily)>(r1, $r2);
        return;
    }

    public void updateMeasureState(android.text.TextPaint)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        android.text.TextPaint r1;
        net.nightwhistler.htmlspanner.FontFamily $r2;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        r1 := @parameter0: android.text.TextPaint;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17269, 33225, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int family$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 785);
        $r2 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: net.nightwhistler.htmlspanner.FontFamily family>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22227, null, null, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void applyCustomTypeFace(android.graphics.Paint,net.nightwhistler.htmlspanner.FontFamily)>(r1, $r2);
        return;
    }

    private void applyCustomTypeFace(android.graphics.Paint, net.nightwhistler.htmlspanner.FontFamily)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        android.graphics.Paint r1;
        net.nightwhistler.htmlspanner.FontFamily r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.Typeface $r3, $r5, $r7, $r8;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        r1 := @parameter0: android.graphics.Paint;
        r2 := @parameter1: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22227, 33226, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2090, null, null);
        virtualinvoke r1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $z0$sym = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: acteve.symbolic.integer.Expression bold$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int bold$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 786);
        $z0 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean bold>;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46666, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22228, null);
        $z1 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: boolean isFakeBold()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22228);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46667, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12664, null, null);
        virtualinvoke r1.<android.graphics.Paint: void setFakeBoldText(boolean)>(1);
        goto label3;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46667, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22229, null);
        $r3 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface getBoldTypeface()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12693, null, null);
        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r3);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46666, 1);
        goto label3;

     label3:
        $z2$sym = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: acteve.symbolic.integer.Expression italic$sym>;
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int italic$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 787);
        $z2 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean italic>;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46668, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22230, null);
        $z3 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: boolean isFakeItalic()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22230);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46669, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12665, null, null);
        virtualinvoke r1.<android.graphics.Paint: void setTextSkewX(float)>(-0.25F);
        goto label7;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46669, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22231, null);
        $r5 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface getItalicTypeface()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12693, null, null);
        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r5);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46668, 1);
        goto label7;

     label7:
        $z4$sym = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: acteve.symbolic.integer.Expression bold$sym>;
        _sym_tmp_3 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int bold$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 786);
        $z4 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean bold>;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46670, 0);
        $z5$sym = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: acteve.symbolic.integer.Expression italic$sym>;
        _sym_tmp_4 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: int italic$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 787);
        $z5 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean italic>;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46671, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22232, null);
        $r7 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface getBoldItalicTypeface()>();
        _sym_tmp_5 = null;
        if $r7 == null goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46672, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22232, null);
        $r8 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface getBoldItalicTypeface()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12693, null, null);
        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r8);
        goto label11;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46670, 1);
        goto label11;

        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46671, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46672, 1);
        goto label11;

     label11:
        return;
    }
}
public class net.nightwhistler.htmlspanner.spans.CenterSpan extends java.lang.Object implements android.text.style.AlignmentSpan
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.spans.CenterSpan r0;

        r0 := @this: net.nightwhistler.htmlspanner.spans.CenterSpan;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33227, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public android.text.Layout$Alignment getAlignment()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.spans.CenterSpan r0;
        android.text.Layout$Alignment $r1;

        r0 := @this: net.nightwhistler.htmlspanner.spans.CenterSpan;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17134, 33228, 1);
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;
        return $r1;
    }
}
public class net.nightwhistler.htmlspanner.HtmlSpanner extends java.lang.Object
{
    private java.util.Map handlers;
    private boolean stripExtraWhiteSpace;
    private static java.util.regex.Pattern SPECIAL_CHAR;
    private static java.util.Map REPLACEMENTS;
    private org.htmlcleaner.HtmlCleaner htmlCleaner;
    private net.nightwhistler.htmlspanner.FontFamily fontFamily;
    private int handlers$a3tid;
    private acteve.symbolic.integer.Expression stripExtraWhiteSpace$sym;
    private int stripExtraWhiteSpace$a3tid;
    private static int SPECIAL_CHAR$a3tid;
    private static int REPLACEMENTS$a3tid;
    private int htmlCleaner$a3tid;
    private int fontFamily$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        org.htmlcleaner.HtmlCleaner $r1;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33229, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(22233);
        $r1 = staticinvoke <net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner createHtmlCleaner()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21956, null, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void <init>(org.htmlcleaner.HtmlCleaner)>($r1);
        return;
    }

    public void <init>(org.htmlcleaner.HtmlCleaner)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        org.htmlcleaner.HtmlCleaner r1;
        android.graphics.Typeface $r2;
        java.util.HashMap $r3;
        net.nightwhistler.htmlspanner.FontFamily $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21956, 33230, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: acteve.symbolic.integer.Expression stripExtraWhiteSpace$sym> = null;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int stripExtraWhiteSpace$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 788);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int stripExtraWhiteSpace$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(788);
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: boolean stripExtraWhiteSpace> = 0;
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int htmlCleaner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 789);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int htmlCleaner$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(789);
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner htmlCleaner> = r1;
        $r3 = new java.util.HashMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        _sym_tmp_3 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int handlers$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 790);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int handlers$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(790);
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map handlers> = $r3;
        $r4 = new net.nightwhistler.htmlspanner.FontFamily;
        $r2 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22234, null, null, null);
        specialinvoke $r4.<net.nightwhistler.htmlspanner.FontFamily: void <init>(java.lang.String,android.graphics.Typeface)>("default", $r2);
        _sym_tmp_4 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int fontFamily$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 791);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int fontFamily$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(791);
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily fontFamily> = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22235, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerBuiltInHandlers()>();
        return;
    }

    public net.nightwhistler.htmlspanner.FontFamily getFontFamily()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        net.nightwhistler.htmlspanner.FontFamily $r1;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22236, 33231, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int fontFamily$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 791);
        $r1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily fontFamily>;
        return $r1;
    }

    public void setFontFamily(net.nightwhistler.htmlspanner.FontFamily)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        net.nightwhistler.htmlspanner.FontFamily r1;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22237, 33232, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int fontFamily$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 791);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int fontFamily$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(791);
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily fontFamily> = r1;
        return;
    }

    public void setStripExtraWhiteSpace(boolean)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression z0$sym;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        boolean z0;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22238, 33233, 2);
        z0$sym = a3targs$symargs[1];
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: acteve.symbolic.integer.Expression stripExtraWhiteSpace$sym> = z0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int stripExtraWhiteSpace$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 788);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int stripExtraWhiteSpace$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(788);
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: boolean stripExtraWhiteSpace> = z0;
        return;
    }

    public boolean isStripExtraWhiteSpace()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $z0$sym;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        boolean $z0;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22239, 33234, 1);
        $z0$sym = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: acteve.symbolic.integer.Expression stripExtraWhiteSpace$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int stripExtraWhiteSpace$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 788);
        $z0 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: boolean stripExtraWhiteSpace>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22239, $z0$sym);
        return $z0;
    }

    public void registerHandler(java.lang.String, net.nightwhistler.htmlspanner.TagNodeHandler)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.lang.String r1;
        net.nightwhistler.htmlspanner.TagNodeHandler r2;
        java.util.Map $r3;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: net.nightwhistler.htmlspanner.TagNodeHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22241, 33235, 3);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int handlers$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 790);
        $r3 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map handlers>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22240, null, null);
        virtualinvoke r2.<net.nightwhistler.htmlspanner.TagNodeHandler: void setSpanner(net.nightwhistler.htmlspanner.HtmlSpanner)>(r0);
        return;
    }

    public android.text.Spanned fromHtml(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.TagNode $r3;
        android.text.Spanned $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17375, 33236, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int htmlCleaner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 789);
        $r2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner htmlCleaner>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null);
        $r3 = virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22242, null, null);
        $r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)>($r3);
        return $r4;
    }

    public android.text.Spanned fromHtml(java.io.Reader) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.io.Reader r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.TagNode $r3;
        android.text.Spanned $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.io.Reader;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22243, 33237, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int htmlCleaner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 789);
        $r2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner htmlCleaner>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22005, null, null);
        $r3 = virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22242, null, null);
        $r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)>($r3);
        return $r4;
    }

    public android.text.Spanned fromHtml(java.io.InputStream) throws java.io.IOException
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.io.InputStream r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.TagNode $r3;
        android.text.Spanned $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.io.InputStream;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22244, 33238, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int htmlCleaner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 789);
        $r2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner htmlCleaner>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21793, null, null);
        $r3 = virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22242, null, null);
        $r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)>($r3);
        return $r4;
    }

    public net.nightwhistler.htmlspanner.TagNodeHandler getHandlerFor(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.nightwhistler.htmlspanner.TagNodeHandler $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22245, 33239, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int handlers$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 790);
        $r2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map handlers>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        $r4 = (net.nightwhistler.htmlspanner.TagNodeHandler) $r3;
        return $r4;
    }

    public android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder $r2, r3;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22242, 33240, 2);
        $r2 = new android.text.SpannableStringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<android.text.SpannableStringBuilder: void <init>()>();
        r3 = $r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22246, null, null, null, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void handleContent(android.text.SpannableStringBuilder,java.lang.Object,org.htmlcleaner.TagNode)>(r3, r1, null);
        return r3;
    }

    private static org.htmlcleaner.HtmlCleaner createHtmlCleaner()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        org.htmlcleaner.HtmlCleaner $r0, r1;
        org.htmlcleaner.CleanerProperties r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22233, 33241, 0);
        $r0 = new org.htmlcleaner.HtmlCleaner;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r0.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r1 = $r0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21891, null);
        r2 = virtualinvoke r1.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties getProperties()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21841, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setAdvancedXmlEscape(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21863, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setOmitXmlDeclaration(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21865, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setOmitDoctypeDeclaration(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21847, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setTranslateSpecialEntities(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21843, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setTransResCharsToNCR(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21851, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setRecognizeUnicodeChars(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21875, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setIgnoreQuestAndExclam(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21869, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setUseEmptyElementTags(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21881, null, null);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setPruneTags(java.lang.String)>("script,style,title");
        return r1;
    }

    private static java.lang.String getEditedText(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.lang.String r0, $r5, $r8;
        java.lang.StringBuffer $r1, r2;
        java.util.regex.Matcher r3;
        java.util.regex.Pattern $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22250, 33242, 1);
        $r1 = new java.lang.StringBuffer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        _sym_tmp_1 = <net.nightwhistler.htmlspanner.HtmlSpanner: int SPECIAL_CHAR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 792);
        $r4 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.regex.Pattern SPECIAL_CHAR>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(411, null, null);
        r3 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(981, null);
        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(981);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46673, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22247, null);
        $r5 = staticinvoke <net.nightwhistler.htmlspanner.HtmlSpanner: java.lang.String getReplacement(java.util.regex.Matcher)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22248, null, null, null);
        virtualinvoke r3.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r2, $r5);
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46673, 1);
        goto label2;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22249, null, null);
        virtualinvoke r3.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r8;
    }

    private static java.lang.String getReplacement(java.util.regex.Matcher)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $c4$sym, $i3$sym, $i2$sym, $i1$sym, $i0$sym, $z0$sym, $r6$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0, $i1, $i2, $i3;
        java.util.regex.Matcher r0;
        java.lang.String r1, r2, $r4, $r7, $r11;
        java.lang.Integer r3;
        java.util.Map $r5;
        java.lang.Object $r6;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r10;
        char $c4;
        java.lang.NumberFormatException $r12, r13;

        r0 := @parameter0: java.util.regex.Matcher;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22247, 33243, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(413, null, null);
        $r4 = virtualinvoke r0.<java.util.regex.Matcher: java.lang.String group(int)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r1 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();
        _sym_tmp_1 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 793);
        $r5 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        r2 = (java.lang.String) $r6;
        _sym_tmp_2 = null;
        if r2 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46674, 0);
        return r2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46674, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("&#");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46675, 0);

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        $i1 = $i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(210, null, null, $i1$sym);
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(2, $i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2063, null);
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2063);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, $i2$sym);
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        $c4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i3$sym, 1);
        $c4 = (char) $i3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, $c4$sym);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r11;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        return "";

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46675, 1);
        goto label6;

     label6:
        return "";

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private void handleContent(android.text.SpannableStringBuilder, java.lang.Object, org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $i3$sym, $i2$sym, $i1$sym, $z0$sym, c0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        android.text.SpannableStringBuilder r1;
        java.lang.Object r2;
        org.htmlcleaner.TagNode r3, $r11;
        org.htmlcleaner.ContentNode r4;
        char c0;
        boolean $z0, $z1;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r8, r9;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: android.text.SpannableStringBuilder;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22246, 33244, 4);
        r2$sym = a3targs$symargs[2];
        $z0$sym = null;
        $z0 = r2 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46676, 0);
        r4 = (org.htmlcleaner.ContentNode) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46677, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i3$sym);
        c0 = virtualinvoke r1.<android.text.SpannableStringBuilder: char charAt(int)>($i3);
        c0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 32);
        if c0 == 32 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46678, 0);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(c0$sym, null, c0, 10);
        if c0 == 10 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46679, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(17180, null, null);
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(32);
        goto label3;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46677, 1);
        goto label3;

        goto label3;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46678, 1);
        goto label3;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46679, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21897, null);
        $r6 = virtualinvoke r4.<org.htmlcleaner.ContentNode: java.lang.StringBuilder getContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22250, null);
        $r8 = staticinvoke <net.nightwhistler.htmlspanner.HtmlSpanner: java.lang.String getEditedText(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r9);
        goto label7;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46676, 1);
        goto label5;

     label5:
        $z1$sym = null;
        $z1 = r2 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46680, 0);
        $r11 = (org.htmlcleaner.TagNode) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22251, null, null, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void applySpan(android.text.SpannableStringBuilder,org.htmlcleaner.TagNode)>(r1, $r11);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46680, 1);
        goto label7;

     label7:
        return;
    }

    private void applySpan(android.text.SpannableStringBuilder, org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, i1$sym, $z1$sym, $z0$sym, $r8$sym, r5$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        android.text.SpannableStringBuilder r1;
        org.htmlcleaner.TagNode r2;
        net.nightwhistler.htmlspanner.TagNodeHandler r3;
        java.util.Iterator r4;
        java.lang.Object r5, $r8;
        java.util.Map $r6;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.util.List $r9;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: android.text.SpannableStringBuilder;
        r2 := @parameter1: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22251, 33245, 3);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: int handlers$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 790);
        $r6 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map handlers>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r7 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(73, null, null);
        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(73);
        r3 = (net.nightwhistler.htmlspanner.TagNodeHandler) $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_2 = null;
        if r3 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46681, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22252, null, null, null);
        virtualinvoke r3.<net.nightwhistler.htmlspanner.TagNodeHandler: void beforeChildren(org.htmlcleaner.TagNode,android.text.SpannableStringBuilder)>(r2, r1);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46681, 1);
        goto label1;

     label1:
        _sym_tmp_2 = null;
        if r3 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46682, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22253, null);
        $z0 = virtualinvoke r3.<net.nightwhistler.htmlspanner.TagNodeHandler: boolean rendersContent()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22253);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46683, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46682, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r9 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46684, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22246, null, null, r5$sym, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void handleContent(android.text.SpannableStringBuilder,java.lang.Object,org.htmlcleaner.TagNode)>(r1, r5, r2);
        goto label4;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46683, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46684, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i1 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_2 = null;
        if r3 == null goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46685, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22254, null, null, null, i0$sym, i1$sym);
        virtualinvoke r3.<net.nightwhistler.htmlspanner.TagNodeHandler: void handleTagNode(org.htmlcleaner.TagNode,android.text.SpannableStringBuilder,int,int)>(r2, r1, i0, i1);
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46685, 1);
        goto label9;

     label9:
        return;
    }

    private void registerBuiltInHandlers()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        net.nightwhistler.htmlspanner.handlers.ItalicHandler $r1, r2;
        net.nightwhistler.htmlspanner.handlers.BoldHandler r3, $r14;
        net.nightwhistler.htmlspanner.handlers.MarginHandler r4, $r15;
        net.nightwhistler.htmlspanner.handlers.NewLineHandler r5, r6, $r16, $r17;
        net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler r7, $r24;
        net.nightwhistler.htmlspanner.handlers.PreHandler r8, $r25;
        net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler r9, r10, $r26, $r27;
        net.nightwhistler.htmlspanner.handlers.SubScriptHandler r11, $r28;
        net.nightwhistler.htmlspanner.handlers.SuperScriptHandler r12, $r29;
        net.nightwhistler.htmlspanner.handlers.CenterHandler r13, $r30;
        net.nightwhistler.htmlspanner.handlers.HeaderHandler $r18, $r19, $r20, $r21, $r22, $r23;
        net.nightwhistler.htmlspanner.handlers.ListItemHandler $r31;
        net.nightwhistler.htmlspanner.handlers.LinkHandler $r32;
        net.nightwhistler.htmlspanner.handlers.ImageHandler $r33;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22235, 33246, 1);
        $r1 = new net.nightwhistler.htmlspanner.handlers.ItalicHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<net.nightwhistler.htmlspanner.handlers.ItalicHandler: void <init>()>();
        r2 = $r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("i", r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("strong", r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("cite", r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("dfn", r2);
        $r14 = new net.nightwhistler.htmlspanner.handlers.BoldHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<net.nightwhistler.htmlspanner.handlers.BoldHandler: void <init>()>();
        r3 = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("b", r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("em", r3);
        $r15 = new net.nightwhistler.htmlspanner.handlers.MarginHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r15.<net.nightwhistler.htmlspanner.handlers.MarginHandler: void <init>()>();
        r4 = $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("blockquote", r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("ul", r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("ol", r4);
        $r16 = new net.nightwhistler.htmlspanner.handlers.NewLineHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, null);
        specialinvoke $r16.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: void <init>(int)>(1);
        r5 = $r16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("br", r5);
        $r17 = new net.nightwhistler.htmlspanner.handlers.NewLineHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, null);
        specialinvoke $r17.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: void <init>(int)>(2);
        r6 = $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("p", r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("div", r6);
        $r18 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, null);
        specialinvoke $r18.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.5F);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h1", $r18);
        $r19 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, null);
        specialinvoke $r19.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.4F);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h2", $r19);
        $r20 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, null);
        specialinvoke $r20.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.3F);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h3", $r20);
        $r21 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, null);
        specialinvoke $r21.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.2F);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h4", $r21);
        $r22 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, null);
        specialinvoke $r22.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.1F);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h5", $r22);
        $r23 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, null);
        specialinvoke $r23.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.0F);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h6", $r23);
        $r24 = new net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r24.<net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler: void <init>()>();
        r7 = $r24;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("tt", r7);
        $r25 = new net.nightwhistler.htmlspanner.handlers.PreHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r25.<net.nightwhistler.htmlspanner.handlers.PreHandler: void <init>()>();
        r8 = $r25;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("pre", r8);
        $r26 = new net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, null);
        specialinvoke $r26.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: void <init>(float)>(1.25F);
        r9 = $r26;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("big", r9);
        $r27 = new net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, null);
        specialinvoke $r27.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: void <init>(float)>(0.8F);
        r10 = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("small", r10);
        $r28 = new net.nightwhistler.htmlspanner.handlers.SubScriptHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r28.<net.nightwhistler.htmlspanner.handlers.SubScriptHandler: void <init>()>();
        r11 = $r28;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("sub", r11);
        $r29 = new net.nightwhistler.htmlspanner.handlers.SuperScriptHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r29.<net.nightwhistler.htmlspanner.handlers.SuperScriptHandler: void <init>()>();
        r12 = $r29;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("sup", r12);
        $r30 = new net.nightwhistler.htmlspanner.handlers.CenterHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r30.<net.nightwhistler.htmlspanner.handlers.CenterHandler: void <init>()>();
        r13 = $r30;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("center", r13);
        $r31 = new net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r31.<net.nightwhistler.htmlspanner.handlers.ListItemHandler: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("li", $r31);
        $r32 = new net.nightwhistler.htmlspanner.handlers.LinkHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r32.<net.nightwhistler.htmlspanner.handlers.LinkHandler: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("a", $r32);
        $r33 = new net.nightwhistler.htmlspanner.handlers.ImageHandler;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r33.<net.nightwhistler.htmlspanner.handlers.ImageHandler: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22241, null, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("img", $r33);
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        java.util.regex.Pattern $r0;
        java.util.HashMap $r1;
        java.util.Map $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 33247, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(418, null);
        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\t| +|&[a-z]*;|&#[0-9]*;|\n)");
        _sym_tmp_1 = <net.nightwhistler.htmlspanner.HtmlSpanner: int SPECIAL_CHAR$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 792);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <net.nightwhistler.htmlspanner.HtmlSpanner: int SPECIAL_CHAR$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(792);
        <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.regex.Pattern SPECIAL_CHAR> = $r0;
        $r1 = new java.util.HashMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        _sym_tmp_2 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 793);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(793);
        <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS> = $r1;
        _sym_tmp_3 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 793);
        $r2 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", " ");
        _sym_tmp_4 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 793);
        $r4 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\n", " ");
        _sym_tmp_5 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 793);
        $r6 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&nbsp;", " ");
        _sym_tmp_6 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 793);
        $r8 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&amp;", "&");
        _sym_tmp_7 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 793);
        $r10 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&quot;", "\"");
        _sym_tmp_8 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 793);
        $r12 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&cent;", "\u00a2");
        _sym_tmp_9 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 793);
        $r14 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lt;", "<");
        _sym_tmp_10 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 793);
        $r16 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&gt;", ">");
        _sym_tmp_11 = <net.nightwhistler.htmlspanner.HtmlSpanner: int REPLACEMENTS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 793);
        $r18 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(72, null, null, null);
        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sect;", "\u00a7");
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33248, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.TypefaceSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33249, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new android.text.style.TypefaceSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>("monospace");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.SubScriptHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.SubScriptHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.SubScriptHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33250, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.SubScriptHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.SubscriptSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.SubScriptHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33251, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new android.text.style.SubscriptSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<android.text.style.SubscriptSpan: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.ItalicHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ItalicHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ItalicHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33252, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.ItalicHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.StyleSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ItalicHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33253, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new android.text.style.StyleSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, null);
        specialinvoke $r3.<android.text.style.StyleSpan: void <init>(int)>(2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.NewLineHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    int numberOfNewLines;
    acteve.symbolic.integer.Expression numberOfNewLines$sym;
    int numberOfNewLines$a3tid;

    public void <init>(int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        acteve.symbolic.integer.Expression i0$sym;
        net.nightwhistler.htmlspanner.handlers.NewLineHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.NewLineHandler;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(28, 33254, 2);
        i0$sym = a3targs$symargs[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: acteve.symbolic.integer.Expression numberOfNewLines$sym> = i0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: int numberOfNewLines$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 794);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: int numberOfNewLines$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(794);
        r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: int numberOfNewLines> = i0;
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i3$sym, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, i2, $i3;
        net.nightwhistler.htmlspanner.handlers.NewLineHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.NewLineHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33255, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        i2$sym = null;
        i2 = 0;

     label0:
        $i3$sym = r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: acteve.symbolic.integer.Expression numberOfNewLines$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: int numberOfNewLines$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 794);
        $i3 = r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: int numberOfNewLines>;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, $i3$sym, i2, $i3);
        if i2 >= $i3 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46686, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22255, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46686, 1);
        goto label2;

     label2:
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.ListItemHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33256, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    private int getMyIndex(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z2$sym, $z1$sym, $z0$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;
        org.htmlcleaner.TagNode r1, r4, $r5, $r6;
        int i0;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.util.List $r7;
        boolean $z0, $z1, $z2;
        java.lang.String $r8, $r9;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22256, 33257, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        _sym_tmp_1 = null;
        if $r5 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46687, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22256, null);
        return -1;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46687, 1);
        goto label1;

     label1:
        i0$sym = null;
        i0 = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r7 = virtualinvoke $r6.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46688, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        _sym_tmp_1 = null;
        if r3 != r1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46689, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22256, i0$sym);
        return i0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46689, 1);
        goto label4;

     label4:
        $z1$sym = null;
        $z1 = r3 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46690, 0);
        r4 = (org.htmlcleaner.TagNode) r3;
        $r8 = "li";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r9 = virtualinvoke r4.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46691, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46690, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46691, 1);
        goto label7;

     label7:
        goto label2;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46688, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22256, null);
        return -1;
    }

    private java.lang.String getParentName(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;
        org.htmlcleaner.TagNode r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22257, 33258, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r2 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        _sym_tmp_1 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46692, 0);
        return null;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46692, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        $r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r4 = virtualinvoke $r3.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        return $r4;
    }

    public void beforeChildren(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z1$sym, $i0$sym, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        java.lang.String $r3, $r4, $r9, $r11, $r12;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        int $i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22252, 33259, 3);
        $r3 = "ol";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22257, null, null);
        $r4 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.ListItemHandler: java.lang.String getParentName(org.htmlcleaner.TagNode)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46693, 0);
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22256, null, null);
        $i0 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.ListItemHandler: int getMyIndex(org.htmlcleaner.TagNode)>(r1);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22256);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r9);
        goto label3;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46693, 1);
        goto label1;

     label1:
        $r11 = "ul";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22257, null, null);
        $r12 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.ListItemHandler: java.lang.String getParentName(org.htmlcleaner.TagNode)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46694, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\u2022  ");
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46694, 1);
        goto label3;

     label3:
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $c5$sym, $i4$sym, $i3$sym, $i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, $i2, $i3, $i4;
        char $c5;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33260, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46695, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i3 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 1);
        $i4 = $i3 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i4$sym);
        $c5 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>($i4);
        $c5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c5$sym, null, $c5, 10);
        if $c5 == 10 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46696, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46695, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46696, 1);
        goto label2;

     label2:
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.MarginHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    private static int MARGIN_INDENT;
    private static acteve.symbolic.integer.Expression MARGIN_INDENT$sym;
    private static int MARGIN_INDENT$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.MarginHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MarginHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33261, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void beforeChildren(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $c3$sym, $i2$sym, $i1$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.MarginHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MarginHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22252, 33262, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46697, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i2$sym);
        $c3 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>($i2);
        $c3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c3$sym, null, $c3, 10);
        if $c3 == 10 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46698, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22255, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.MarginHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46697, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46698, 1);
        goto label2;

     label2:
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, $i2;
        acteve.symbolic.integer.Expression $i2$sym, i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.MarginHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        android.text.style.LeadingMarginSpan$Standard $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MarginHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33263, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new android.text.style.LeadingMarginSpan$Standard;
        $i2$sym = <net.nightwhistler.htmlspanner.handlers.MarginHandler: acteve.symbolic.integer.Expression MARGIN_INDENT$sym>;
        _sym_tmp_1 = <net.nightwhistler.htmlspanner.handlers.MarginHandler: int MARGIN_INDENT$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 795);
        $i2 = <net.nightwhistler.htmlspanner.handlers.MarginHandler: int MARGIN_INDENT>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, $i2$sym);
        specialinvoke $r3.<android.text.style.LeadingMarginSpan$Standard: void <init>(int)>($i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22255, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.MarginHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22255, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.MarginHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 33264, 0);
        <net.nightwhistler.htmlspanner.handlers.MarginHandler: acteve.symbolic.integer.Expression MARGIN_INDENT$sym> = null;
        _sym_tmp_1 = <net.nightwhistler.htmlspanner.handlers.MarginHandler: int MARGIN_INDENT$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 795);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <net.nightwhistler.htmlspanner.handlers.MarginHandler: int MARGIN_INDENT$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(795);
        <net.nightwhistler.htmlspanner.handlers.MarginHandler: int MARGIN_INDENT> = 30;
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    private float size;
    private acteve.symbolic.integer.Expression size$sym;
    private int size$a3tid;

    public void <init>(float)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression f0$sym;
        net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler r0;
        float f0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler;
        f0 := @parameter0: float;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2577, 33265, 2);
        f0$sym = a3targs$symargs[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: acteve.symbolic.integer.Expression size$sym> = f0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: int size$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 796);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: int size$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(796);
        r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: float size> = f0;
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1;
        acteve.symbolic.integer.Expression $f0$sym, i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        android.text.style.RelativeSizeSpan $r3;
        float $f0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33266, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new android.text.style.RelativeSizeSpan;
        $f0$sym = r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: acteve.symbolic.integer.Expression size$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: int size$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 796);
        $f0 = r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: float size>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, $f0$sym);
        specialinvoke $r3.<android.text.style.RelativeSizeSpan: void <init>(float)>($f0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
class net.nightwhistler.htmlspanner.handlers.TableHandler$1 extends java.lang.Object implements android.text.style.AlignmentSpan
{
    final net.nightwhistler.htmlspanner.handlers.TableHandler this$0;
    final int this$0$a3tid;

    void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$1 r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$1;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22258, 33267, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 797);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$1: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(797);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$1: net.nightwhistler.htmlspanner.handlers.TableHandler this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public android.text.Layout$Alignment getAlignment()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler$1 r0;
        android.text.Layout$Alignment $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17134, 33268, 1);
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;
        return $r1;
    }
}
public class net.nightwhistler.htmlspanner.handlers.PreHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.PreHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.PreHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33269, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    private void getPlainText(java.lang.StringBuffer, java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z2$sym, $z1$sym, $z0$sym, r5$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.PreHandler r0;
        java.lang.StringBuffer r1;
        java.lang.Object r2, r5;
        org.htmlcleaner.ContentNode r3;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6;
        org.htmlcleaner.TagNode r8;
        java.util.List $r9;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.PreHandler;
        r1 := @parameter0: java.lang.StringBuffer;
        r2 := @parameter1: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22260, 33270, 3);
        r2$sym = a3targs$symargs[2];
        $z0$sym = null;
        $z0 = r2 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46699, 0);
        r3 = (org.htmlcleaner.ContentNode) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21897, null);
        $r6 = virtualinvoke r3.<org.htmlcleaner.ContentNode: java.lang.StringBuilder getContent()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22259, null, null);
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r6);
        goto label5;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46699, 1);
        goto label1;

     label1:
        $z1$sym = null;
        $z1 = r2 instanceof org.htmlcleaner.TagNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46700, 0);
        r8 = (org.htmlcleaner.TagNode) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r9 = virtualinvoke r8.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46701, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22260, null, null, r5$sym);
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.PreHandler: void getPlainText(java.lang.StringBuffer,java.lang.Object)>(r1, r5);
        goto label2;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46700, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46701, 1);
        goto label5;

     label5:
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $i2$sym, i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.PreHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, $i2;
        java.lang.StringBuffer $r3, r4;
        java.lang.String $r5;
        android.text.style.TypefaceSpan $r7;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.PreHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33271, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new java.lang.StringBuffer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        r4 = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22260, null, null, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.PreHandler: void getPlainText(java.lang.StringBuffer,java.lang.Object)>(r4, r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r5);
        $r7 = new android.text.style.TypefaceSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r7.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>("monospace");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, $i2$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r7, i0, $i2, 33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22255, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.PreHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22255, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.PreHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        return;
    }

    public boolean rendersContent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.PreHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.PreHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22253, 33272, 1);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22253, null);
        return 1;
    }
}
public class net.nightwhistler.htmlspanner.handlers.BoldHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.BoldHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.BoldHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33273, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.BoldHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan $r3, r4;
        net.nightwhistler.htmlspanner.HtmlSpanner $r5;
        net.nightwhistler.htmlspanner.FontFamily $r6;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.BoldHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33274, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22261, null);
        $r5 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.BoldHandler: net.nightwhistler.htmlspanner.HtmlSpanner getSpanner()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22236, null);
        $r6 = virtualinvoke $r5.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily getFontFamily()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22224, null, null);
        specialinvoke $r3.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void <init>(net.nightwhistler.htmlspanner.FontFamily)>($r6);
        r4 = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22225, null, null);
        virtualinvoke r4.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void setBold(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r4, i0, i1, 33);
        return;
    }
}
class net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable extends android.graphics.drawable.Drawable
{
    private java.util.List tableRow;
    final net.nightwhistler.htmlspanner.handlers.TableHandler this$0;
    private int tableRow$a3tid;
    final int this$0$a3tid;

    public void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler, java.util.List)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler r1;
        java.util.List r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r2 := @parameter1: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22262, 33275, 3);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 798);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(798);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int tableRow$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 799);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int tableRow$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(799);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow> = r2;
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $f3$sym, $i9$sym, $i8$sym, $r13$sym, $f2$sym, $f1$sym, $i7$sym, $f0$sym, i6$sym, $i5$sym, $i4$sym, i3$sym, z0$sym, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, i3, $i4, $i5, i6, $i7, $i8, $i9;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Paint $r2, r3;
        boolean z0;
        android.text.StaticLayout r4, $r11;
        net.nightwhistler.htmlspanner.handlers.TableHandler $r5, $r8, $r9, $r15;
        android.graphics.Paint$Style $r6;
        java.util.List $r7, $r10, $r12;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r13;
        java.lang.CharSequence $r14;
        android.text.TextPaint $r16;
        android.text.Layout$Alignment $r17;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        r1 := @parameter0: android.graphics.Canvas;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1462, 33276, 2);
        $r2 = new android.graphics.Paint;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<android.graphics.Paint: void <init>()>();
        r3 = $r2;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 798);
        $r5 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22263, null);
        $i4 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$100(net.nightwhistler.htmlspanner.handlers.TableHandler)>($r5);
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22263);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, $i4$sym);
        virtualinvoke r3.<android.graphics.Paint: void setColor(int)>($i4);
        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2093, null, null);
        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int tableRow$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 799);
        $r7 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        i0 = interfaceinvoke $r7.<java.util.List: int size()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46702, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46702, 1);
        goto label1;

     label1:
        _sym_tmp_3 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 798);
        $r8 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22264, null);
        $i5 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$200(net.nightwhistler.htmlspanner.handlers.TableHandler)>($r8);
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22264);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, i0$sym, $i5, i0);
        i1 = $i5 / i0;
        _sym_tmp_4 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 798);
        $r9 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        _sym_tmp_5 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int tableRow$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 799);
        $r10 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22265, null, null);
        i2 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$300(net.nightwhistler.htmlspanner.handlers.TableHandler,java.util.List)>($r9, $r10);
        i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22265);
        z0$sym = null;
        z0 = 0;
        i3$sym = null;
        i3 = 0;

     label2:
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, i0$sym, i3, i0);
        if i3 >= i0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46703, 0);
        i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, i1$sym, i3, i1);
        i6 = i3 * i1;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>(i6$sym, 6);
        $f0 = (float) i6;
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, i1$sym, i6, i1);
        $i7 = i6 + i1;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i7$sym, 6);
        $f1 = (float) $i7;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>(i2$sym, 6);
        $f2 = (float) i2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2441, null, $f0$sym, null, $f1$sym, $f2$sym, null);
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, 0.0F, $f1, $f2, r3);
        $r11 = new android.text.StaticLayout;
        _sym_tmp_6 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int tableRow$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 799);
        $r12 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i3$sym);
        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i3);
        $r13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r14 = (java.lang.CharSequence) $r13;
        _sym_tmp_7 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 798);
        $r15 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22266, null);
        $r16 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: android.text.TextPaint access$400(net.nightwhistler.htmlspanner.handlers.TableHandler)>($r15);
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 10);
        $i8 = i1 - 10;
        $r17 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12759, null, null, null, $i8$sym, null, null, null, null);
        specialinvoke $r11.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r14, $r16, $i8, $r17, 1.0F, 0.0F, 1);
        r4 = $r11;
        $i9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, null, i6, 5);
        $i9 = i6 + 5;
        $f3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i9$sym, 6);
        $f3 = (float) $i9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1930, null, $f3$sym, null);
        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f3, 0.0F);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1462, null, null);
        virtualinvoke r4.<android.text.StaticLayout: void draw(android.graphics.Canvas)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1930, null, null, null);
        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(-5.0F, 0.0F);
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 1);
        i3 = i3 + 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46703, 1);
        goto label4;

     label4:
        return;
    }

    public int getIntrinsicHeight()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler $r1;
        java.util.List $r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1352, 33277, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 798);
        $r1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int tableRow$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 799);
        $r2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22265, null, null);
        $i0 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$300(net.nightwhistler.htmlspanner.handlers.TableHandler,java.util.List)>($r1, $r2);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22265);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1352, $i0$sym);
        return $i0;
    }

    public int getIntrinsicWidth()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1351, 33278, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 798);
        $r1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22264, null);
        $i0 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$200(net.nightwhistler.htmlspanner.handlers.TableHandler)>($r1);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22264);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1351, $i0$sym);
        return $i0;
    }

    public int getOpacity()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(6576, 33279, 1);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(6576, null);
        return -1;
    }

    public void setAlpha(int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        int i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1364, 33280, 2);
        i0$sym = a3targs$symargs[1];
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        android.graphics.ColorFilter r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        r1 := @parameter0: android.graphics.ColorFilter;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9342, 33281, 2);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.SuperScriptHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.SuperScriptHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.SuperScriptHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33282, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.SuperScriptHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.SuperscriptSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.SuperScriptHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33283, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new android.text.style.SuperscriptSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<android.text.style.SuperscriptSpan: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.LinkHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.LinkHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.LinkHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33284, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.LinkHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        java.lang.String r3;
        android.text.style.URLSpan $r4;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.LinkHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33285, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r4 = new android.text.style.URLSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r4.<android.text.style.URLSpan: void <init>(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r4, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.ImageHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ImageHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ImageHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33286, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $i5$sym, $i4$sym, $i3$sym, $i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ImageHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r3;
        android.graphics.Bitmap r4;
        android.graphics.drawable.BitmapDrawable r5, $r7;
        android.text.style.ImageSpan $r8;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ImageHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33287, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("src");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\ufffc");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22267, null, null);
        r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.ImageHandler: android.graphics.Bitmap loadBitmap(java.lang.String)>(r3);
        _sym_tmp_1 = null;
        if r4 == null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46704, 0);
        $r7 = new android.graphics.drawable.BitmapDrawable;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6635, null, null);
        specialinvoke $r7.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r4);
        r5 = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1376, null);
        $i2 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1376);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2097, null);
        $i4 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2097);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 1);
        $i5 = $i4 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1353, null, null, null, $i3$sym, $i5$sym);
        virtualinvoke r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i3, $i5);
        $r8 = new android.text.style.ImageSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2255, null, null);
        specialinvoke $r8.<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r8, i0, i1, 33);
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46704, 1);
        goto label1;

     label1:
        return;
    }

    protected android.graphics.Bitmap loadBitmap(java.lang.String)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.ImageHandler r0;
        java.lang.String r1;
        java.net.URL $r2;
        java.io.IOException r3, $r6;
        java.io.InputStream $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ImageHandler;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22267, 33288, 2);

     label0:
        $r2 = new java.net.URL;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22010, null);
        $r4 = virtualinvoke $r2.<java.net.URL: java.io.InputStream openStream()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2480, null);
        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r4);

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        return null;

        catch java.io.IOException from label0 to label1 with label2;
    }
}
public class net.nightwhistler.htmlspanner.handlers.TableHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    private int tableWidth;
    private android.graphics.Typeface typeFace;
    private float textSize;
    private int textColor;
    private static final int PADDING;
    private acteve.symbolic.integer.Expression tableWidth$sym;
    private int tableWidth$a3tid;
    private int typeFace$a3tid;
    private acteve.symbolic.integer.Expression textSize$sym;
    private int textSize$a3tid;
    private acteve.symbolic.integer.Expression textColor$sym;
    private int textColor$a3tid;
    private static final acteve.symbolic.integer.Expression PADDING$sym;
    private static final int PADDING$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33289, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression tableWidth$sym> = null;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 800);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(800);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth> = 400;
        $r1 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT>;
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int typeFace$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 801);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int typeFace$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(801);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.graphics.Typeface typeFace> = $r1;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression textSize$sym> = null;
        _sym_tmp_3 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 802);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textSize$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(802);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: float textSize> = 16.0F;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression textColor$sym> = null;
        _sym_tmp_4 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 803);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(803);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor> = -16777216;
        return;
    }

    public void setTableWidth(int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        acteve.symbolic.integer.Expression i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22268, 33290, 2);
        i0$sym = a3targs$symargs[1];
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression tableWidth$sym> = i0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 800);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(800);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth> = i0;
        return;
    }

    public void setTextColor(int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        acteve.symbolic.integer.Expression i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11419, 33291, 2);
        i0$sym = a3targs$symargs[1];
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression textColor$sym> = i0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 803);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(803);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor> = i0;
        return;
    }

    public void setTextSize(float)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression f0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        float f0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        f0 := @parameter0: float;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2430, 33292, 2);
        f0$sym = a3targs$symargs[1];
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression textSize$sym> = f0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 802);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textSize$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(802);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: float textSize> = f0;
        return;
    }

    public void setTypeFace(android.graphics.Typeface)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: android.graphics.Typeface;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22269, 33293, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int typeFace$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 801);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int typeFace$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(801);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.graphics.Typeface typeFace> = r1;
        return;
    }

    public boolean rendersContent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22253, 33294, 1);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22253, null);
        return 1;
    }

    private void readNode(java.lang.Object, net.nightwhistler.htmlspanner.handlers.TableHandler$Table)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r5$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        java.lang.Object r1, r5;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r2;
        org.htmlcleaner.TagNode r3;
        android.text.Spanned r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r6, $r8;
        net.nightwhistler.htmlspanner.HtmlSpanner $r7;
        java.util.List $r9;
        java.util.Iterator r10;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22272, 33295, 3);
        r1$sym = a3targs$symargs[1];
        $z0$sym = null;
        $z0 = r1 instanceof org.htmlcleaner.ContentNode;
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46705, 0);
        return;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46705, 1);
        goto label1;

     label1:
        r3 = (org.htmlcleaner.TagNode) r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r6 = virtualinvoke r3.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("td");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46706, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22261, null);
        $r7 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: net.nightwhistler.htmlspanner.HtmlSpanner getSpanner()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22242, null, null);
        r4 = virtualinvoke $r7.<net.nightwhistler.htmlspanner.HtmlSpanner: android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22270, null, null);
        virtualinvoke r2.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: void addCell(android.text.Spanned)>(r4);
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46706, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r8 = virtualinvoke r3.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("tr");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46707, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22271, null);
        virtualinvoke r2.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: void addRow()>();
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46707, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $r9 = virtualinvoke r3.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46708, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();
        r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22272, null, r5$sym, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: void readNode(java.lang.Object,net.nightwhistler.htmlspanner.handlers.TableHandler$Table)>(r5, r2);
        goto label6;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46708, 1);
        goto label8;

     label8:
        return;
    }

    private net.nightwhistler.htmlspanner.handlers.TableHandler$Table getTable(org.htmlcleaner.TagNode)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        org.htmlcleaner.TagNode r1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table $r2, r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22274, 33296, 2);
        $r2 = new net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22273, null, null, null);
        specialinvoke $r2.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler,net.nightwhistler.htmlspanner.handlers.TableHandler$1)>(r0, null);
        r3 = $r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22272, null, null, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: void readNode(java.lang.Object,net.nightwhistler.htmlspanner.handlers.TableHandler$Table)>(r1, r3);
        return r3;
    }

    private android.text.TextPaint getTextPaint()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $f0$sym, $i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        android.text.TextPaint $r1, r2;
        float $f0;
        android.graphics.Typeface $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22275, 33297, 1);
        $r1 = new android.text.TextPaint;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<android.text.TextPaint: void <init>()>();
        r2 = $r1;
        $i0$sym = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression textColor$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 803);
        $i0 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, $i0$sym);
        virtualinvoke r2.<android.text.TextPaint: void setColor(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2090, null, null);
        virtualinvoke r2.<android.text.TextPaint: void setAntiAlias(boolean)>(1);
        $f0$sym = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression textSize$sym>;
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 802);
        $f0 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: float textSize>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2430, null, $f0$sym);
        virtualinvoke r2.<android.text.TextPaint: void setTextSize(float)>($f0);
        _sym_tmp_3 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int typeFace$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 801);
        $r3 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.graphics.Typeface typeFace>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12693, null, null);
        virtualinvoke r2.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r3);
        return r2;
    }

    private int calculateRowHeight(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i6$sym, $i5$sym, $r6$sym, $z0$sym, $i4$sym, $i3$sym, $i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, $i2, $i3, $i4, $i5, $i6;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        java.util.List r1;
        android.text.TextPaint r2;
        java.util.Iterator r3;
        android.text.Spanned r4;
        android.text.StaticLayout r5, $r7;
        boolean $z0;
        java.lang.Object $r6;
        android.text.Layout$Alignment $r8;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22276, 33298, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 != 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46709, 0);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22276, null);
        return 0;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46709, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22275, null);
        r2 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.text.TextPaint getTextPaint()>();
        $i3$sym = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression tableWidth$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 800);
        $i3 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i4 = interfaceinvoke r1.<java.util.List: int size()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, $i4$sym, $i3, $i4);
        i0 = $i3 / $i4;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46710, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (android.text.Spanned) $r6;
        $r7 = new android.text.StaticLayout;
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 10);
        $i5 = i0 - 10;
        $r8 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12759, null, null, null, $i5$sym, null, null, null, null);
        specialinvoke $r7.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r4, r2, $i5, $r8, 1.0F, 0.0F, 1);
        r5 = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2097, null);
        $i6 = virtualinvoke r5.<android.text.StaticLayout: int getHeight()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2097);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, i1$sym, $i6, i1);
        if $i6 <= i1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46711, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2097, null);
        i1 = virtualinvoke r5.<android.text.StaticLayout: int getHeight()>();
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2097);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46711, 1);
        goto label4;

     label4:
        goto label2;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46710, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22276, i1$sym);
        return i1;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $i7$sym, $i6$sym, $i5$sym, $i4$sym, $r8$sym, $i3$sym, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r3;
        java.util.List r4, $r6, $r7;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r5, $r10;
        java.lang.Object $r8;
        android.text.style.ImageSpan $r11;
        net.nightwhistler.htmlspanner.handlers.TableHandler$1 $r12;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33299, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22274, null, null);
        r3 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: net.nightwhistler.htmlspanner.handlers.TableHandler$Table getTable(org.htmlcleaner.TagNode)>(r1);
        i2$sym = null;
        i2 = 0;

     label0:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22277, null);
        $r6 = virtualinvoke r3.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List getRows()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i3 = interfaceinvoke $r6.<java.util.List: int size()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, $i3$sym, i2, $i3);
        if i2 >= $i3 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46712, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22277, null);
        $r7 = virtualinvoke r3.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List getRows()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i2$sym);
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        r4 = (java.util.List) $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\ufffc");
        $r10 = new net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22262, null, null, null);
        specialinvoke $r10.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler,java.util.List)>(r0, r4);
        r5 = $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1351, null);
        $i4 = virtualinvoke r5.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int getIntrinsicWidth()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1351);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1352, null);
        $i5 = virtualinvoke r5.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int getIntrinsicHeight()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1352);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1353, null, null, null, $i4$sym, $i5$sym);
        virtualinvoke r5.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);
        $r11 = new android.text.style.ImageSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2255, null, null);
        specialinvoke $r11.<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>(r5);
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i6 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, $i6$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r11, i0, $i6, 33);
        $r12 = new net.nightwhistler.htmlspanner.handlers.TableHandler$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22258, null, null);
        specialinvoke $r12.<net.nightwhistler.htmlspanner.handlers.TableHandler$1: void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler)>(r0);
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i7 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, $i7$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r12, i0, $i7, 33);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        goto label0;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46712, 1);
        goto label2;

     label2:
        return;
    }

    static int access$100(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;

        r0 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22263, 33300, 1);
        $i0$sym = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression textColor$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 803);
        $i0 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22263, $i0$sym);
        return $i0;
    }

    static int access$200(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;

        r0 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22264, 33301, 1);
        $i0$sym = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: acteve.symbolic.integer.Expression tableWidth$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 800);
        $i0 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth>;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22264, $i0$sym);
        return $i0;
    }

    static int access$300(net.nightwhistler.htmlspanner.handlers.TableHandler, java.util.List)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression $i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        java.util.List r1;
        int $i0;

        r0 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter1: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22265, 33302, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22276, null, null);
        $i0 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int calculateRowHeight(java.util.List)>(r1);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22276);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22265, $i0$sym);
        return $i0;
    }

    static android.text.TextPaint access$400(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        android.text.TextPaint $r1;

        r0 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22266, 33303, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22275, null);
        $r1 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.text.TextPaint getTextPaint()>();
        return $r1;
    }
}
class net.nightwhistler.htmlspanner.handlers.TableHandler$Table extends java.lang.Object
{
    private java.util.List content;
    final net.nightwhistler.htmlspanner.handlers.TableHandler this$0;
    private int content$a3tid;
    final int this$0$a3tid;

    private void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler r1;
        java.util.ArrayList $r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22258, 33304, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 804);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(804);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: net.nightwhistler.htmlspanner.handlers.TableHandler this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 805);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int content$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(805);
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content> = $r2;
        return;
    }

    public void addRow()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22271, 33305, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 805);
        $r2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        $r1 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }

    public java.util.List getBottomRow()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        acteve.symbolic.integer.Expression $r3$sym, $i1$sym, $i0$sym;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        java.util.List $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22278, 33306, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 805);
        $r1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 805);
        $r2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        $i1 = $i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, $i1$sym);
        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);
        $r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r4 = (java.util.List) $r3;
        return $r4;
    }

    public java.util.List getRows()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        java.util.List $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22277, 33307, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 805);
        $r1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        return $r1;
    }

    public void addCell(android.text.Spanned)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        android.text.Spanned r1;
        java.util.List $r2, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        r1 := @parameter0: android.text.Spanned;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22270, 33308, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: int content$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 805);
        $r2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46713, 0);
        $r3 = new java.lang.IllegalStateException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No rows added yet");
        throw $r3;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46713, 1);
        goto label1;

     label1:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22278, null);
        $r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List getBottomRow()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler, net.nightwhistler.htmlspanner.handlers.TableHandler$1)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler r1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$1 r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r2 := @parameter1: net.nightwhistler.htmlspanner.handlers.TableHandler$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22273, 33309, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22258, null, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler)>(r1);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.HeaderHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    private float size;
    private acteve.symbolic.integer.Expression size$sym;
    private int size$a3tid;

    public void <init>(float)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression f0$sym;
        net.nightwhistler.htmlspanner.handlers.HeaderHandler r0;
        float f0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        f0 := @parameter0: float;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2577, 33310, 2);
        f0$sym = a3targs$symargs[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: acteve.symbolic.integer.Expression size$sym> = f0$sym;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: int size$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 806);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: int size$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(806);
        r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: float size> = f0;
        return;
    }

    public void beforeChildren(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder)
    {
        acteve.symbolic.integer.Expression _sym_tmp_1, $c3$sym, $i2$sym, $i1$sym, $i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.HeaderHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22252, 33311, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46714, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i2$sym);
        $c3 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>($i2);
        $c3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c3$sym, null, $c3, 10);
        if $c3 == 10 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46715, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");
        goto label2;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46714, 1);
        goto label2;

        goto label2;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_1, 46715, 1);
        goto label2;

     label2:
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1;
        acteve.symbolic.integer.Expression $f0$sym, i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.HeaderHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        android.text.style.RelativeSizeSpan $r3;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r4, $r5;
        float $f0;
        net.nightwhistler.htmlspanner.HtmlSpanner $r6;
        net.nightwhistler.htmlspanner.FontFamily $r7;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33312, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new android.text.style.RelativeSizeSpan;
        $f0$sym = r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: acteve.symbolic.integer.Expression size$sym>;
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: int size$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 806);
        $f0 = r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: float size>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2577, null, $f0$sym);
        specialinvoke $r3.<android.text.style.RelativeSizeSpan: void <init>(float)>($f0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        $r5 = new net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22261, null);
        $r6 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: net.nightwhistler.htmlspanner.HtmlSpanner getSpanner()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22236, null);
        $r7 = virtualinvoke $r6.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily getFontFamily()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22224, null, null);
        specialinvoke $r5.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void <init>(net.nightwhistler.htmlspanner.FontFamily)>($r7);
        r4 = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22225, null, null);
        virtualinvoke r4.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void setBold(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r4, i0, i1, 33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22255, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(22255, null, null);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.CenterHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.CenterHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.CenterHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33313, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression i1$sym, i0$sym;
        net.nightwhistler.htmlspanner.handlers.CenterHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        net.nightwhistler.htmlspanner.spans.CenterSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.CenterHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22254, 33314, 5);
        i0$sym = a3targs$symargs[3];
        i1$sym = a3targs$symargs[4];
        $r3 = new net.nightwhistler.htmlspanner.spans.CenterSpan;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<net.nightwhistler.htmlspanner.spans.CenterSpan: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(441, null, null, i0$sym, i1$sym, null);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
class net.nightwhistler.htmlspanner.handlers.CenterHandler$1 extends java.lang.Object implements android.text.style.AlignmentSpan
{
    final net.nightwhistler.htmlspanner.handlers.CenterHandler this$0;
    final int this$0$a3tid;

    void <init>(net.nightwhistler.htmlspanner.handlers.CenterHandler)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.handlers.CenterHandler$1 r0;
        net.nightwhistler.htmlspanner.handlers.CenterHandler r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.CenterHandler$1;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.CenterHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22279, 33315, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.handlers.CenterHandler$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 807);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.handlers.CenterHandler$1: int this$0$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(807);
        r0.<net.nightwhistler.htmlspanner.handlers.CenterHandler$1: net.nightwhistler.htmlspanner.handlers.CenterHandler this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public android.text.Layout$Alignment getAlignment()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.handlers.CenterHandler$1 r0;
        android.text.Layout$Alignment $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.CenterHandler$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17134, 33316, 1);
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;
        return $r1;
    }
}
public class net.nightwhistler.htmlspanner.FontFamily extends java.lang.Object
{
    private android.graphics.Typeface defaultTypeface;
    private android.graphics.Typeface boldTypeface;
    private android.graphics.Typeface italicTypeface;
    private android.graphics.Typeface boldItalicTypeface;
    private java.lang.String name;
    private int defaultTypeface$a3tid;
    private int boldTypeface$a3tid;
    private int italicTypeface$a3tid;
    private int boldItalicTypeface$a3tid;
    private int name$a3tid;

    public void <init>(java.lang.String, android.graphics.Typeface)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        java.lang.String r1;
        android.graphics.Typeface r2;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: android.graphics.Typeface;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22234, 33317, 3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 808);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.FontFamily: int name$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(808);
        r0.<net.nightwhistler.htmlspanner.FontFamily: java.lang.String name> = r1;
        _sym_tmp_2 = r0.<net.nightwhistler.htmlspanner.FontFamily: int defaultTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 809);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.FontFamily: int defaultTypeface$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(809);
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface defaultTypeface> = r2;
        return;
    }

    public java.lang.String getName()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        java.lang.String $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(993, 33318, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 808);
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: java.lang.String name>;
        return $r1;
    }

    public void setBoldItalicTypeface(android.graphics.Typeface)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: android.graphics.Typeface;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22280, 33319, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int boldItalicTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 810);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.FontFamily: int boldItalicTypeface$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(810);
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldItalicTypeface> = r1;
        return;
    }

    public void setBoldTypeface(android.graphics.Typeface)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: android.graphics.Typeface;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22281, 33320, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int boldTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 811);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.FontFamily: int boldTypeface$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(811);
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldTypeface> = r1;
        return;
    }

    public void setDefaultTypeface(android.graphics.Typeface)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: android.graphics.Typeface;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22282, 33321, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int defaultTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 809);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.FontFamily: int defaultTypeface$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(809);
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface defaultTypeface> = r1;
        return;
    }

    public void setItalicTypeface(android.graphics.Typeface)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: android.graphics.Typeface;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22283, 33322, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int italicTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 812);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.FontFamily: int italicTypeface$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(812);
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface italicTypeface> = r1;
        return;
    }

    public android.graphics.Typeface getBoldItalicTypeface()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22232, 33323, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int boldItalicTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 810);
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldItalicTypeface>;
        return $r1;
    }

    public android.graphics.Typeface getBoldTypeface()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22229, 33324, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int boldTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 811);
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldTypeface>;
        return $r1;
    }

    public android.graphics.Typeface getDefaultTypeface()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22284, 33325, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int defaultTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 809);
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface defaultTypeface>;
        return $r1;
    }

    public android.graphics.Typeface getItalicTypeface()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22231, 33326, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int italicTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 812);
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface italicTypeface>;
        return $r1;
    }

    public boolean isFakeBold()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;
        boolean $z0;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22228, 33327, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int boldTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 811);
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldTypeface>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46716, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46716, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22228, $z0$sym);
        return $z0;
    }

    public boolean isFakeItalic()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;
        boolean $z0;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22230, 33328, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.FontFamily: int italicTypeface$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 812);
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface italicTypeface>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46717, 0);
        $z0$sym = null;
        $z0 = 1;
        goto label2;

        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46717, 1);
        goto label1;

     label1:
        $z0$sym = null;
        $z0 = 0;

     label2:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22230, $z0$sym);
        return $z0;
    }
}
public abstract class net.nightwhistler.htmlspanner.TagNodeHandler extends java.lang.Object
{
    private net.nightwhistler.htmlspanner.HtmlSpanner spanner;
    private int spanner$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.TagNodeHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 33329, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void setSpanner(net.nightwhistler.htmlspanner.HtmlSpanner)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.TagNodeHandler r0;
        net.nightwhistler.htmlspanner.HtmlSpanner r1;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        r1 := @parameter0: net.nightwhistler.htmlspanner.HtmlSpanner;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22240, 33330, 2);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.TagNodeHandler: int spanner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 813);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<net.nightwhistler.htmlspanner.TagNodeHandler: int spanner$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(813);
        r0.<net.nightwhistler.htmlspanner.TagNodeHandler: net.nightwhistler.htmlspanner.HtmlSpanner spanner> = r1;
        return;
    }

    protected net.nightwhistler.htmlspanner.HtmlSpanner getSpanner()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        net.nightwhistler.htmlspanner.TagNodeHandler r0;
        net.nightwhistler.htmlspanner.HtmlSpanner $r1;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22261, 33331, 1);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.TagNodeHandler: int spanner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 813);
        $r1 = r0.<net.nightwhistler.htmlspanner.TagNodeHandler: net.nightwhistler.htmlspanner.HtmlSpanner spanner>;
        return $r1;
    }

    public void beforeChildren(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder)
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.TagNodeHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22252, 33332, 3);
        return;
    }

    public boolean rendersContent()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        net.nightwhistler.htmlspanner.TagNodeHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22253, 33333, 1);
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(22253, null);
        return 0;
    }

    public abstract void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int);

    protected void appendNewLine(android.text.SpannableStringBuilder)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $c4$sym, $i3$sym, $c2$sym, $i1$sym, $z0$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1, $i3;
        net.nightwhistler.htmlspanner.TagNodeHandler r0;
        android.text.SpannableStringBuilder r1;
        net.nightwhistler.htmlspanner.HtmlSpanner $r2;
        boolean $z0;
        char $c2, $c4;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        r1 := @parameter0: android.text.SpannableStringBuilder;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(22255, 33334, 2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        i0 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        _sym_tmp_1 = r0.<net.nightwhistler.htmlspanner.TagNodeHandler: int spanner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 813);
        $r2 = r0.<net.nightwhistler.htmlspanner.TagNodeHandler: net.nightwhistler.htmlspanner.HtmlSpanner spanner>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(22239, null);
        $z0 = virtualinvoke $r2.<net.nightwhistler.htmlspanner.HtmlSpanner: boolean isStripExtraWhiteSpace()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(22239);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46718, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        if i0 <= 2 goto label1;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46719, 0);
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i1 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i1$sym);
        $c2 = virtualinvoke r1.<android.text.SpannableStringBuilder: char charAt(int)>($i1);
        $c2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c2$sym, null, $c2, 10);
        if $c2 != 10 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46720, 0);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i3 = i0 - 2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, $i3$sym);
        $c4 = virtualinvoke r1.<android.text.SpannableStringBuilder: char charAt(int)>($i3);
        $c4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c4$sym, null, $c4, 10);
        if $c4 != 10 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46721, 0);
        return;

        goto label4;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46718, 1);
        goto label4;

        goto label4;

     label1:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46719, 1);
        goto label4;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46720, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46721, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(438, null, null);
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");
        return;
    }
}
