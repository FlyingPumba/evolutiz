public class com.example.amazed.AmazedActivity extends android.app.Activity
{
    private com.example.amazed.AmazedView mView;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int mView$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.example.amazed.AmazedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.AmazedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32419, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.example.amazed.AmazedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45366, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45366, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Activity: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedActivity r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        com.example.amazed.AmazedView $r4, $r6, $r7;
        android.content.Context $r5;

        r0 := @this: com.example.amazed.AmazedActivity;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32420, 2);
        _sym_tmp_1 = <com.example.amazed.AmazedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r2 = <com.example.amazed.AmazedActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45367, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.AmazedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45367, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1622, null, null);
        virtualinvoke r0.<com.example.amazed.AmazedActivity: boolean requestWindowFeature(int)>(1);
        $r4 = new com.example.amazed.AmazedView;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        $r5 = virtualinvoke r0.<com.example.amazed.AmazedActivity: android.content.Context getApplicationContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21742, null, null, null);
        specialinvoke $r4.<com.example.amazed.AmazedView: void <init>(android.content.Context,android.app.Activity)>($r5, r0);
        _sym_tmp_2 = r0.<com.example.amazed.AmazedActivity: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 449);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedActivity: int mView$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(449);
        r0.<com.example.amazed.AmazedActivity: com.example.amazed.AmazedView mView> = $r4;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedActivity: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 449);
        $r6 = r0.<com.example.amazed.AmazedActivity: com.example.amazed.AmazedView mView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1334, null, null);
        virtualinvoke $r6.<com.example.amazed.AmazedView: void setFocusable(boolean)>(1);
        _sym_tmp_4 = r0.<com.example.amazed.AmazedActivity: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 449);
        $r7 = r0.<com.example.amazed.AmazedActivity: com.example.amazed.AmazedView mView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1717, null, null);
        virtualinvoke r0.<com.example.amazed.AmazedActivity: void setContentView(android.view.View)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    protected void onResume()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.amazed.AmazedView $r3;

        r0 := @this: com.example.amazed.AmazedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1787, 32421, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.example.amazed.AmazedActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45368, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45368, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1787, null);
        specialinvoke r0.<android.app.Activity: void onResume()>();
        _sym_tmp_2 = r0.<com.example.amazed.AmazedActivity: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 449);
        $r3 = r0.<com.example.amazed.AmazedActivity: com.example.amazed.AmazedView mView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21743, null);
        virtualinvoke $r3.<com.example.amazed.AmazedView: void registerListener()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedActivity r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        com.example.amazed.AmazedView $r4;

        r0 := @this: com.example.amazed.AmazedActivity;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(8674, 32422, 2);
        _sym_tmp_1 = <com.example.amazed.AmazedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r2 = <com.example.amazed.AmazedActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45369, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.AmazedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45369, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8674, null, null);
        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);
        _sym_tmp_2 = r0.<com.example.amazed.AmazedActivity: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 449);
        $r4 = r0.<com.example.amazed.AmazedActivity: com.example.amazed.AmazedView mView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        virtualinvoke $r4.<com.example.amazed.AmazedView: void unregisterListener()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32423, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.AmazedActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32424, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <com.example.amazed.AmazedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 448);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.AmazedActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(448);
        <com.example.amazed.AmazedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/AmazedActivity", -8350539803451790247L);
        return $r0;
    }
}
class com.example.amazed.AmazedView$1 extends java.lang.Object implements android.hardware.SensorListener
{
    final com.example.amazed.AmazedView this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.example.amazed.AmazedView)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView$1 r0;
        com.example.amazed.AmazedView r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.amazed.AmazedView$1;
        r1 := @parameter0: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21746, 32425, 2);
        _sym_tmp_1 = <com.example.amazed.AmazedView$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 450);
        $r2 = <com.example.amazed.AmazedView$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45370, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.AmazedView$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45370, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 451);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(451);
        r0.<com.example.amazed.AmazedView$1: com.example.amazed.AmazedView this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onSensorChanged(int, float[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $f4$sym, $f2$sym, $f0$sym, r3$sym, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.example.amazed.AmazedView$1 r0;
        float[] r1;
        boolean[][] $r2;
        boolean[] r3;
        com.example.amazed.AmazedView $r4, $r5, $r6;
        float $f0, $f2, $f4;

        r0 := @this: com.example.amazed.AmazedView$1;
        i0 := @parameter0: int;
        r1 := @parameter1: float[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(6145, 32426, 3);
        i0$sym = a3targs$symargs[1];
        r1$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.example.amazed.AmazedView$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 450);
        $r2 = <com.example.amazed.AmazedView$1: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45371, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.AmazedView$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45371, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $r4 = r0.<com.example.amazed.AmazedView$1: com.example.amazed.AmazedView this$0>;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float[],int)>(r1$sym, null, r1, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r1, 0);
        $f0 = r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21747, null, $f0$sym);
        staticinvoke <com.example.amazed.AmazedView: float access$002(com.example.amazed.AmazedView,float)>($r4, $f0);
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 451);
        $r5 = r0.<com.example.amazed.AmazedView$1: com.example.amazed.AmazedView this$0>;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float[],int)>(r1$sym, null, r1, 1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r1, 1);
        $f2 = r1[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21748, null, $f2$sym);
        staticinvoke <com.example.amazed.AmazedView: float access$102(com.example.amazed.AmazedView,float)>($r5, $f2);
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 451);
        $r6 = r0.<com.example.amazed.AmazedView$1: com.example.amazed.AmazedView this$0>;
        $f4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float[],int)>(r1$sym, null, r1, 2);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r1, 2);
        $f4 = r1[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21749, null, $f4$sym);
        staticinvoke <com.example.amazed.AmazedView: float access$202(com.example.amazed.AmazedView,float)>($r6, $f4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onAccuracyChanged(int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1;
        com.example.amazed.AmazedView$1 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.AmazedView$1;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(6143, 32427, 3);
        i0$sym = a3targs$symargs[1];
        i1$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.example.amazed.AmazedView$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 450);
        $r1 = <com.example.amazed.AmazedView$1: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45372, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45372, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32428, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.AmazedView$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32429, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.example.amazed.AmazedView$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 450);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.AmazedView$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(450);
        <com.example.amazed.AmazedView$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/AmazedView$1", -8279820555485766566L);
        return $r0;
    }
}
public class com.example.amazed.AmazedView extends android.view.View
{
    private com.example.amazed.Marble mMarble;
    private com.example.amazed.Maze mMaze;
    private android.app.Activity mActivity;
    private android.graphics.Canvas mCanvas;
    private android.graphics.Paint mPaint;
    private android.graphics.Typeface mFont;
    private int mTextPadding;
    private int mHudTextY;
    private static final int NULL_STATE;
    private static final int GAME_INIT;
    private static final int GAME_RUNNING;
    private static final int GAME_OVER;
    private static final int GAME_COMPLETE;
    private static final int GAME_LANDSCAPE;
    private static int mCurState;
    private static final int TXT_LIVES;
    private static final int TXT_LEVEL;
    private static final int TXT_TIME;
    private static final int TXT_TAP_SCREEN;
    private static final int TXT_GAME_COMPLETE;
    private static final int TXT_GAME_OVER;
    private static final int TXT_TOTAL_TIME;
    private static final int TXT_GAME_OVER_MSG_A;
    private static final int TXT_GAME_OVER_MSG_B;
    private static final int TXT_RESTART;
    private static final int TXT_LANDSCAPE_MODE;
    private static java.lang.String[] mStrings;
    private boolean mWarning;
    private int mCanvasWidth;
    private int mCanvasHeight;
    private int mCanvasHalfWidth;
    private int mCanvasHalfHeight;
    private boolean mPortrait;
    private int mlevel;
    private long mTotalTime;
    private long mStartTime;
    private long mEndTime;
    private android.hardware.SensorManager mSensorManager;
    private float mAccelX;
    private float mAccelY;
    private float mAccelZ;
    private float mSensorBuffer;
    private final android.hardware.SensorListener mSensorAccelerometer;
    private static final boolean[][] $VRc;
    private int mMarble$a3tid;
    private int mMaze$a3tid;
    private int mActivity$a3tid;
    private int mCanvas$a3tid;
    private int mPaint$a3tid;
    private int mFont$a3tid;
    private acteve.symbolic.integer.Expression mTextPadding$sym;
    private int mTextPadding$a3tid;
    private acteve.symbolic.integer.Expression mHudTextY$sym;
    private int mHudTextY$a3tid;
    private static final acteve.symbolic.integer.Expression NULL_STATE$sym;
    private static final int NULL_STATE$a3tid;
    private static final acteve.symbolic.integer.Expression GAME_INIT$sym;
    private static final int GAME_INIT$a3tid;
    private static final acteve.symbolic.integer.Expression GAME_RUNNING$sym;
    private static final int GAME_RUNNING$a3tid;
    private static final acteve.symbolic.integer.Expression GAME_OVER$sym;
    private static final int GAME_OVER$a3tid;
    private static final acteve.symbolic.integer.Expression GAME_COMPLETE$sym;
    private static final int GAME_COMPLETE$a3tid;
    private static final acteve.symbolic.integer.Expression GAME_LANDSCAPE$sym;
    private static final int GAME_LANDSCAPE$a3tid;
    private static acteve.symbolic.integer.Expression mCurState$sym;
    private static int mCurState$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_LIVES$sym;
    private static final int TXT_LIVES$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_LEVEL$sym;
    private static final int TXT_LEVEL$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_TIME$sym;
    private static final int TXT_TIME$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_TAP_SCREEN$sym;
    private static final int TXT_TAP_SCREEN$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_GAME_COMPLETE$sym;
    private static final int TXT_GAME_COMPLETE$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_GAME_OVER$sym;
    private static final int TXT_GAME_OVER$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_TOTAL_TIME$sym;
    private static final int TXT_TOTAL_TIME$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_GAME_OVER_MSG_A$sym;
    private static final int TXT_GAME_OVER_MSG_A$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_GAME_OVER_MSG_B$sym;
    private static final int TXT_GAME_OVER_MSG_B$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_RESTART$sym;
    private static final int TXT_RESTART$a3tid;
    private static final acteve.symbolic.integer.Expression TXT_LANDSCAPE_MODE$sym;
    private static final int TXT_LANDSCAPE_MODE$a3tid;
    private static int mStrings$a3tid;
    private acteve.symbolic.integer.Expression mWarning$sym;
    private int mWarning$a3tid;
    private acteve.symbolic.integer.Expression mCanvasWidth$sym;
    private int mCanvasWidth$a3tid;
    private acteve.symbolic.integer.Expression mCanvasHeight$sym;
    private int mCanvasHeight$a3tid;
    private acteve.symbolic.integer.Expression mCanvasHalfWidth$sym;
    private int mCanvasHalfWidth$a3tid;
    private acteve.symbolic.integer.Expression mCanvasHalfHeight$sym;
    private int mCanvasHalfHeight$a3tid;
    private acteve.symbolic.integer.Expression mPortrait$sym;
    private int mPortrait$a3tid;
    private acteve.symbolic.integer.Expression mlevel$sym;
    private int mlevel$a3tid;
    private acteve.symbolic.integer.Expression mTotalTime$sym;
    private int mTotalTime$a3tid;
    private acteve.symbolic.integer.Expression mStartTime$sym;
    private int mStartTime$a3tid;
    private acteve.symbolic.integer.Expression mEndTime$sym;
    private int mEndTime$a3tid;
    private int mSensorManager$a3tid;
    private acteve.symbolic.integer.Expression mAccelX$sym;
    private int mAccelX$a3tid;
    private acteve.symbolic.integer.Expression mAccelY$sym;
    private int mAccelY$a3tid;
    private acteve.symbolic.integer.Expression mAccelZ$sym;
    private int mAccelZ$a3tid;
    private acteve.symbolic.integer.Expression mSensorBuffer$sym;
    private int mSensorBuffer$a3tid;
    private final int mSensorAccelerometer$a3tid;
    private static final int $VRc$a3tid;

    public void <init>(android.content.Context, android.app.Activity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_32, $r14$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_31, _sym_tmp_30, _sym_tmp_29, _sym_tmp_28, _sym_tmp_27, _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView r0;
        android.content.Context r1;
        android.app.Activity r2, $r19;
        boolean[][] $r3;
        boolean[] r4;
        android.graphics.Typeface $r5, $r6, $r11;
        com.example.amazed.AmazedView$1 $r7;
        android.graphics.Paint $r8, $r9, $r10, $r13;
        java.lang.Object $r14;
        android.hardware.SensorManager $r15, $r16;
        android.hardware.SensorListener $r17;
        com.example.amazed.Maze $r18;
        com.example.amazed.Marble $r20;
        android.content.res.Resources $r21;
        java.lang.String[] $r22;

        r0 := @this: com.example.amazed.AmazedView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.app.Activity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21742, 32430, 3);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r3 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_32 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_32, 45373, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_32, 45373, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);
        $r5 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12662, null, null);
        $r6 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r5, 1);
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mFont$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 453);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mFont$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(453);
        r0.<com.example.amazed.AmazedView: android.graphics.Typeface mFont> = $r6;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTextPadding$sym> = null;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mTextPadding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 454);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mTextPadding$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(454);
        r0.<com.example.amazed.AmazedView: int mTextPadding> = 10;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mHudTextY$sym> = null;
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mHudTextY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 455);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mHudTextY$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(455);
        r0.<com.example.amazed.AmazedView: int mHudTextY> = 440;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mWarning$sym> = null;
        _sym_tmp_5 = r0.<com.example.amazed.AmazedView: int mWarning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 456);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mWarning$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(456);
        r0.<com.example.amazed.AmazedView: boolean mWarning> = 0;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasWidth$sym> = null;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 457);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(457);
        r0.<com.example.amazed.AmazedView: int mCanvasWidth> = 0;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHeight$sym> = null;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 458);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(458);
        r0.<com.example.amazed.AmazedView: int mCanvasHeight> = 0;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym> = null;
        _sym_tmp_8 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 459);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(459);
        r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth> = 0;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym> = null;
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 460);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(460);
        r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight> = 0;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mlevel$sym> = null;
        _sym_tmp_10 = r0.<com.example.amazed.AmazedView: int mlevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 461);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mlevel$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(461);
        r0.<com.example.amazed.AmazedView: int mlevel> = 1;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym> = null;
        _sym_tmp_11 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 462);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(462);
        r0.<com.example.amazed.AmazedView: long mTotalTime> = 0L;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mStartTime$sym> = null;
        _sym_tmp_12 = r0.<com.example.amazed.AmazedView: int mStartTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 463);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mStartTime$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(463);
        r0.<com.example.amazed.AmazedView: long mStartTime> = 0L;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mEndTime$sym> = null;
        _sym_tmp_13 = r0.<com.example.amazed.AmazedView: int mEndTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 464);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mEndTime$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(464);
        r0.<com.example.amazed.AmazedView: long mEndTime> = 0L;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelX$sym> = null;
        _sym_tmp_14 = r0.<com.example.amazed.AmazedView: int mAccelX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_14, 465);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mAccelX$a3tid> = _sym_tmp_14;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(465);
        r0.<com.example.amazed.AmazedView: float mAccelX> = 0.0F;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelY$sym> = null;
        _sym_tmp_15 = r0.<com.example.amazed.AmazedView: int mAccelY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_15, 466);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mAccelY$a3tid> = _sym_tmp_15;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        r0.<com.example.amazed.AmazedView: float mAccelY> = 0.0F;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelZ$sym> = null;
        _sym_tmp_16 = r0.<com.example.amazed.AmazedView: int mAccelZ$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_16, 467);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mAccelZ$a3tid> = _sym_tmp_16;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(467);
        r0.<com.example.amazed.AmazedView: float mAccelZ> = 0.0F;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mSensorBuffer$sym> = null;
        _sym_tmp_17 = r0.<com.example.amazed.AmazedView: int mSensorBuffer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_17, 468);
        _sym_tmp_17 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mSensorBuffer$a3tid> = _sym_tmp_17;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(468);
        r0.<com.example.amazed.AmazedView: float mSensorBuffer> = 0.0F;
        $r7 = new com.example.amazed.AmazedView$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21746, null, null);
        specialinvoke $r7.<com.example.amazed.AmazedView$1: void <init>(com.example.amazed.AmazedView)>(r0);
        _sym_tmp_18 = r0.<com.example.amazed.AmazedView: int mSensorAccelerometer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_18, 469);
        _sym_tmp_18 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mSensorAccelerometer$a3tid> = _sym_tmp_18;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(469);
        r0.<com.example.amazed.AmazedView: android.hardware.SensorListener mSensorAccelerometer> = $r7;
        _sym_tmp_19 = r0.<com.example.amazed.AmazedView: int mActivity$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_19, 470);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mActivity$a3tid> = _sym_tmp_19;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(470);
        r0.<com.example.amazed.AmazedView: android.app.Activity mActivity> = r2;
        $r8 = new android.graphics.Paint;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<android.graphics.Paint: void <init>()>();
        _sym_tmp_20 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_20, 471);
        _sym_tmp_20 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mPaint$a3tid> = _sym_tmp_20;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(471);
        r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint> = $r8;
        _sym_tmp_21 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 471);
        $r9 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2430, null, null);
        virtualinvoke $r9.<android.graphics.Paint: void setTextSize(float)>(14.0F);
        _sym_tmp_22 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 471);
        $r10 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        _sym_tmp_23 = r0.<com.example.amazed.AmazedView: int mFont$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 453);
        $r11 = r0.<com.example.amazed.AmazedView: android.graphics.Typeface mFont>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12693, null, null);
        virtualinvoke $r10.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r11);
        _sym_tmp_24 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 471);
        $r13 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2090, null, null);
        virtualinvoke $r13.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r14 = virtualinvoke r2.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("sensor");
        $r14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        $r15 = (android.hardware.SensorManager) $r14;
        _sym_tmp_25 = r0.<com.example.amazed.AmazedView: int mSensorManager$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_25, 472);
        _sym_tmp_25 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mSensorManager$a3tid> = _sym_tmp_25;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(472);
        r0.<com.example.amazed.AmazedView: android.hardware.SensorManager mSensorManager> = $r15;
        _sym_tmp_26 = r0.<com.example.amazed.AmazedView: int mSensorManager$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 472);
        $r16 = r0.<com.example.amazed.AmazedView: android.hardware.SensorManager mSensorManager>;
        _sym_tmp_27 = r0.<com.example.amazed.AmazedView: int mSensorAccelerometer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_27, 469);
        $r17 = r0.<com.example.amazed.AmazedView: android.hardware.SensorListener mSensorAccelerometer>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5920, null, null, null, null);
        virtualinvoke $r16.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>($r17, 2, 1);
        $r18 = new com.example.amazed.Maze;
        _sym_tmp_28 = r0.<com.example.amazed.AmazedView: int mActivity$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_28, 470);
        $r19 = r0.<com.example.amazed.AmazedView: android.app.Activity mActivity>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1633, null, null);
        specialinvoke $r18.<com.example.amazed.Maze: void <init>(android.app.Activity)>($r19);
        _sym_tmp_29 = r0.<com.example.amazed.AmazedView: int mMaze$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_29, 473);
        _sym_tmp_29 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mMaze$a3tid> = _sym_tmp_29;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(473);
        r0.<com.example.amazed.AmazedView: com.example.amazed.Maze mMaze> = $r18;
        $r20 = new com.example.amazed.Marble;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6184, null, null);
        specialinvoke $r20.<com.example.amazed.Marble: void <init>(android.view.View)>(r0);
        _sym_tmp_30 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_30, 474);
        _sym_tmp_30 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mMarble$a3tid> = _sym_tmp_30;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(474);
        r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble> = $r20;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1196, null);
        $r21 = virtualinvoke r0.<com.example.amazed.AmazedView: android.content.res.Resources getResources()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4947, null, null);
        $r22 = virtualinvoke $r21.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2130968576);
        _sym_tmp_31 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_31, 475);
        _sym_tmp_31 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.AmazedView: int mStrings$a3tid> = _sym_tmp_31;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(475);
        <com.example.amazed.AmazedView: java.lang.String[] mStrings> = $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21750, null, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void switchGameState(int)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $i7$sym, $i6$sym, $i5$sym, $i4$sym, r2$sym, i3$sym, i2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.AmazedView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2118, 32431, 5);
        i0$sym = a3targs$symargs[1];
        i1$sym = a3targs$symargs[2];
        i2$sym = a3targs$symargs[3];
        i3$sym = a3targs$symargs[4];
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45374, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45374, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2118, null, i0$sym, i1$sym, i2$sym, i3$sym);
        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasWidth$sym> = i0$sym;
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 457);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(457);
        r0.<com.example.amazed.AmazedView: int mCanvasWidth> = i0;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHeight$sym> = i1$sym;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 458);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(458);
        r0.<com.example.amazed.AmazedView: int mCanvasHeight> = i1;
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i4 = i0 / 2;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym> = $i4$sym;
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 459);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(459);
        r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth> = $i4;
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 2);
        $i5 = i1 / 2;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym> = $i5$sym;
        _sym_tmp_5 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 460);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(460);
        r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight> = $i5;
        $i6$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHeight$sym>;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 458);
        $i6 = r0.<com.example.amazed.AmazedView: int mCanvasHeight>;
        $i7$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasWidth$sym>;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 457);
        $i7 = r0.<com.example.amazed.AmazedView: int mCanvasWidth>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, $i7$sym, $i6, $i7);
        if $i6 <= $i7 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45375, 0);
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mPortrait$sym> = null;
        _sym_tmp_8 = r0.<com.example.amazed.AmazedView: int mPortrait$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 476);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mPortrait$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(476);
        r0.<com.example.amazed.AmazedView: boolean mPortrait> = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45375, 1);
        goto label3;

     label3:
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mPortrait$sym> = null;
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mPortrait$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 476);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mPortrait$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(476);
        r0.<com.example.amazed.AmazedView: boolean mPortrait> = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21750, null, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void switchGameState(int)>(4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    public void gameTick()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21753, 32432, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45376, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45376, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        $i0$sym = <com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCurState$sym>;
        _sym_tmp_2 = <com.example.amazed.AmazedView: int mCurState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 477);
        $i0 = <com.example.amazed.AmazedView: int mCurState>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45377, 0);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 == 1 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45378, 0);
        goto label7;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45377, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21751, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void initNewGame()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21750, null, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void switchGameState(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45378, 1);
        goto label5;

     label5:
        $z0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mWarning$sym>;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mWarning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 456);
        $z0 = r0.<com.example.amazed.AmazedView: boolean mWarning>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45379, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21752, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void updateMarble()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45379, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2113, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void invalidate()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return;
    }

    public void initNewGame()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.amazed.Marble $r3;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21751, 32433, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45380, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45380, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 474);
        $r3 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21754, null, null);
        virtualinvoke $r3.<com.example.amazed.Marble: void setLives(int)>(5);
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym> = null;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 462);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(462);
        r0.<com.example.amazed.AmazedView: long mTotalTime> = 0L;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mlevel$sym> = null;
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mlevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 461);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mlevel$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(461);
        r0.<com.example.amazed.AmazedView: int mlevel> = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21755, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void initLevel()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void initLevel()
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.amazed.Maze $r5;
        android.app.Activity $r6;
        com.example.amazed.Marble $r7;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32434, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45381, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45381, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $i0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mlevel$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mlevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 461);
        $i0 = r0.<com.example.amazed.AmazedView: int mlevel>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 10);
        if $i0 >= 10 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45382, 0);
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mWarning$sym> = null;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mWarning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 456);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mWarning$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(456);
        r0.<com.example.amazed.AmazedView: boolean mWarning> = 1;
        $i1$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mlevel$sym>;
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mlevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 461);
        $i1 = r0.<com.example.amazed.AmazedView: int mlevel>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 + 1;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mlevel$sym> = $i2$sym;
        _sym_tmp_5 = r0.<com.example.amazed.AmazedView: int mlevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 461);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mlevel$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(461);
        r0.<com.example.amazed.AmazedView: int mlevel> = $i2;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mMaze$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 473);
        $r5 = r0.<com.example.amazed.AmazedView: com.example.amazed.Maze mMaze>;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mActivity$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 470);
        $r6 = r0.<com.example.amazed.AmazedView: android.app.Activity mActivity>;
        $i3$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mlevel$sym>;
        _sym_tmp_8 = r0.<com.example.amazed.AmazedView: int mlevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 461);
        $i3 = r0.<com.example.amazed.AmazedView: int mlevel>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21756, null, null, $i3$sym);
        virtualinvoke $r5.<com.example.amazed.Maze: void load(android.app.Activity,int)>($r6, $i3);
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 474);
        $r7 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2374, null);
        virtualinvoke $r7.<com.example.amazed.Marble: void init()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45382, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21750, null, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void switchGameState(int)>(3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    public void updateMarble()
    {
        acteve.symbolic.integer.Expression _sym_tmp_34, $l22$sym, $l21$sym, $l20$sym, $l19$sym, $l18$sym, $l17$sym, $i16$sym, $i15$sym, $i14$sym, $l13$sym, $l12$sym, $l11$sym, $l10$sym, $l9$sym, $l8$sym, $i7$sym, $i6$sym, $i5$sym, $i4$sym, $f11$sym, $b3$sym, $f10$sym, $f9$sym, $f8$sym, $b2$sym, $f7$sym, $f6$sym, $f5$sym, $b1$sym, $f4$sym, $f3$sym, $f2$sym, $b0$sym, $f1$sym, $f0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_33, _sym_tmp_32, _sym_tmp_31, _sym_tmp_30, _sym_tmp_29, _sym_tmp_28, _sym_tmp_27, _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i4, $i5, $i6, $i7, $i14, $i15, $i16;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b0, $b1, $b2, $b3;
        com.example.amazed.Marble $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r14, $r15;
        com.example.amazed.Maze $r5, $r13;
        long $l8, $l9, $l10, $l11, $l12, $l13, $l17, $l18, $l19, $l20, $l21, $l22;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21752, 32435, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_34 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45383, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45383, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        $f0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelX$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mAccelX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 465);
        $f0 = r0.<com.example.amazed.AmazedView: float mAccelX>;
        $f1$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mSensorBuffer$sym>;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mSensorBuffer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 468);
        $f1 = r0.<com.example.amazed.AmazedView: float mSensorBuffer>;
        $b0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f0$sym, $f1$sym, $f0, $f1);
        $b0 = $f0 cmpl $f1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b0$sym, null, $b0, 0);
        if $b0 > 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45384, 0);
        $f2$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelX$sym>;
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mAccelX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 465);
        $f2 = r0.<com.example.amazed.AmazedView: float mAccelX>;
        $f3$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mSensorBuffer$sym>;
        _sym_tmp_5 = r0.<com.example.amazed.AmazedView: int mSensorBuffer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 468);
        $f3 = r0.<com.example.amazed.AmazedView: float mSensorBuffer>;
        $f4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _neg(acteve.symbolic.integer.Expression)>($f3$sym);
        $f4 = neg $f3;
        $b1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f2$sym, $f4$sym, $f2, $f4);
        $b1 = $f2 cmpg $f4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b1$sym, null, $b1, 0);
        if $b1 >= 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45385, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45384, 1);
        goto label3;

     label3:
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 474);
        $r3 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        $f5$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelX$sym>;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mAccelX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 465);
        $f5 = r0.<com.example.amazed.AmazedView: float mAccelX>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21757, null, $f5$sym);
        virtualinvoke $r3.<com.example.amazed.Marble: void updateX(float)>($f5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45385, 1);
        goto label5;

     label5:
        $f6$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelY$sym>;
        _sym_tmp_8 = r0.<com.example.amazed.AmazedView: int mAccelY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 466);
        $f6 = r0.<com.example.amazed.AmazedView: float mAccelY>;
        $f7$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mSensorBuffer$sym>;
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mSensorBuffer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 468);
        $f7 = r0.<com.example.amazed.AmazedView: float mSensorBuffer>;
        $b2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f6$sym, $f7$sym, $f6, $f7);
        $b2 = $f6 cmpl $f7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b2$sym, null, $b2, 0);
        if $b2 > 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45386, 0);
        $f8$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelY$sym>;
        _sym_tmp_10 = r0.<com.example.amazed.AmazedView: int mAccelY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 466);
        $f8 = r0.<com.example.amazed.AmazedView: float mAccelY>;
        $f9$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mSensorBuffer$sym>;
        _sym_tmp_11 = r0.<com.example.amazed.AmazedView: int mSensorBuffer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 468);
        $f9 = r0.<com.example.amazed.AmazedView: float mSensorBuffer>;
        $f10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _neg(acteve.symbolic.integer.Expression)>($f9$sym);
        $f10 = neg $f9;
        $b3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f8$sym, $f10$sym, $f8, $f10);
        $b3 = $f8 cmpg $f10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b3$sym, null, $b3, 0);
        if $b3 >= 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45387, 0);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45386, 1);
        goto label7;

     label7:
        _sym_tmp_12 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 474);
        $r4 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        $f11$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelY$sym>;
        _sym_tmp_13 = r0.<com.example.amazed.AmazedView: int mAccelY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 466);
        $f11 = r0.<com.example.amazed.AmazedView: float mAccelY>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21758, null, $f11$sym);
        virtualinvoke $r4.<com.example.amazed.Marble: void updateY(float)>($f11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45387, 1);
        goto label9;

     label9:
        _sym_tmp_14 = r0.<com.example.amazed.AmazedView: int mMaze$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 473);
        $r5 = r0.<com.example.amazed.AmazedView: com.example.amazed.Maze mMaze>;
        _sym_tmp_15 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 474);
        $r6 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(19226, null);
        $i4 = virtualinvoke $r6.<com.example.amazed.Marble: int getX()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(19226);
        _sym_tmp_16 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 474);
        $r7 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(19227, null);
        $i5 = virtualinvoke $r7.<com.example.amazed.Marble: int getY()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(19227);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21759, null, $i4$sym, $i5$sym);
        $i6 = virtualinvoke $r5.<com.example.amazed.Maze: int getCellType(int,int)>($i4, $i5);
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21759);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 1);
        if $i6 != 1 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45388, 0);
        _sym_tmp_17 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 474);
        $r9 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21760, null);
        $i7 = virtualinvoke $r9.<com.example.amazed.Marble: int getLives()>();
        $i7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21760);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, null, $i7, 0);
        if $i7 <= 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45389, 0);
        _sym_tmp_18 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 474);
        $r10 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21761, null);
        virtualinvoke $r10.<com.example.amazed.Marble: void death()>();
        _sym_tmp_19 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 474);
        $r11 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2374, null);
        virtualinvoke $r11.<com.example.amazed.Marble: void init()>();
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mWarning$sym> = null;
        _sym_tmp_20 = r0.<com.example.amazed.AmazedView: int mWarning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_20, 456);
        _sym_tmp_20 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mWarning$a3tid> = _sym_tmp_20;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(456);
        r0.<com.example.amazed.AmazedView: boolean mWarning> = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label15;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45389, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(212);
        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(212);
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mEndTime$sym> = $l8$sym;
        _sym_tmp_21 = r0.<com.example.amazed.AmazedView: int mEndTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_21, 464);
        _sym_tmp_21 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mEndTime$a3tid> = _sym_tmp_21;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(464);
        r0.<com.example.amazed.AmazedView: long mEndTime> = $l8;
        $l9$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym>;
        _sym_tmp_22 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 462);
        $l9 = r0.<com.example.amazed.AmazedView: long mTotalTime>;
        $l10$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mEndTime$sym>;
        _sym_tmp_23 = r0.<com.example.amazed.AmazedView: int mEndTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 464);
        $l10 = r0.<com.example.amazed.AmazedView: long mEndTime>;
        $l11$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mStartTime$sym>;
        _sym_tmp_24 = r0.<com.example.amazed.AmazedView: int mStartTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 463);
        $l11 = r0.<com.example.amazed.AmazedView: long mStartTime>;
        $l12$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l10$sym, $l11$sym, $l10, $l11);
        $l12 = $l10 - $l11;
        $l13$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l9$sym, $l12$sym, $l9, $l12);
        $l13 = $l9 + $l12;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym> = $l13$sym;
        _sym_tmp_25 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_25, 462);
        _sym_tmp_25 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid> = _sym_tmp_25;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(462);
        r0.<com.example.amazed.AmazedView: long mTotalTime> = $l13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21750, null, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void switchGameState(int)>(2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label15;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45388, 1);
        goto label13;

     label13:
        _sym_tmp_26 = r0.<com.example.amazed.AmazedView: int mMaze$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 473);
        $r13 = r0.<com.example.amazed.AmazedView: com.example.amazed.Maze mMaze>;
        _sym_tmp_27 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_27, 474);
        $r14 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(19226, null);
        $i14 = virtualinvoke $r14.<com.example.amazed.Marble: int getX()>();
        $i14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(19226);
        _sym_tmp_28 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_28, 474);
        $r15 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(19227, null);
        $i15 = virtualinvoke $r15.<com.example.amazed.Marble: int getY()>();
        $i15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(19227);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21759, null, $i14$sym, $i15$sym);
        $i16 = virtualinvoke $r13.<com.example.amazed.Maze: int getCellType(int,int)>($i14, $i15);
        $i16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21759);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i16$sym, null, $i16, 2);
        if $i16 != 2 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45390, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(212);
        $l17 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(212);
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mEndTime$sym> = $l17$sym;
        _sym_tmp_29 = r0.<com.example.amazed.AmazedView: int mEndTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_29, 464);
        _sym_tmp_29 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mEndTime$a3tid> = _sym_tmp_29;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(464);
        r0.<com.example.amazed.AmazedView: long mEndTime> = $l17;
        $l18$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym>;
        _sym_tmp_30 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_30, 462);
        $l18 = r0.<com.example.amazed.AmazedView: long mTotalTime>;
        $l19$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mEndTime$sym>;
        _sym_tmp_31 = r0.<com.example.amazed.AmazedView: int mEndTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_31, 464);
        $l19 = r0.<com.example.amazed.AmazedView: long mEndTime>;
        $l20$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mStartTime$sym>;
        _sym_tmp_32 = r0.<com.example.amazed.AmazedView: int mStartTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_32, 463);
        $l20 = r0.<com.example.amazed.AmazedView: long mStartTime>;
        $l21$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l19$sym, $l20$sym, $l19, $l20);
        $l21 = $l19 - $l20;
        $l22$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l18$sym, $l21$sym, $l18, $l21);
        $l22 = $l18 + $l21;
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym> = $l22$sym;
        _sym_tmp_33 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_33, 462);
        _sym_tmp_33 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid> = _sym_tmp_33;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(462);
        r0.<com.example.amazed.AmazedView: long mTotalTime> = $l22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21755, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void initLevel()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45390, 1);
        goto label15;

     label15:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $l4$sym, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        com.example.amazed.AmazedView r0;
        android.view.MotionEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        long $l4;

        r0 := @this: com.example.amazed.AmazedView;
        r1 := @parameter0: android.view.MotionEvent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2129, 32436, 2);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r2 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45391, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45391, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 6);
        r3 = $r2[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1469, null);
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1469);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45392, 0);
        $i1$sym = <com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCurState$sym>;
        _sym_tmp_2 = <com.example.amazed.AmazedView: int mCurState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 477);
        $i1 = <com.example.amazed.AmazedView: int mCurState>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 2);
        if $i1 == 2 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45393, 0);
        $i2$sym = <com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCurState$sym>;
        _sym_tmp_3 = <com.example.amazed.AmazedView: int mCurState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 477);
        $i2 = <com.example.amazed.AmazedView: int mCurState>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 3);
        if $i2 != 3 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45394, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45393, 1);
        goto label3;

     label3:
        <com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCurState$sym> = null;
        _sym_tmp_4 = <com.example.amazed.AmazedView: int mCurState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 477);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.AmazedView: int mCurState$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(477);
        <com.example.amazed.AmazedView: int mCurState> = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label8;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45394, 1);
        goto label5;

     label5:
        $i3$sym = <com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCurState$sym>;
        _sym_tmp_5 = <com.example.amazed.AmazedView: int mCurState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 477);
        $i3 = <com.example.amazed.AmazedView: int mCurState>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 1);
        if $i3 != 1 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45395, 0);
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mWarning$sym> = null;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mWarning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 456);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mWarning$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(456);
        r0.<com.example.amazed.AmazedView: boolean mWarning> = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(212);
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(212);
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mStartTime$sym> = $l4$sym;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mStartTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 463);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mStartTime$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(463);
        r0.<com.example.amazed.AmazedView: long mStartTime> = $l4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45392, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45395, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(2129, null);
        return 1;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        com.example.amazed.AmazedView r0;
        android.view.KeyEvent r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.amazed.AmazedView;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.KeyEvent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1712, 32437, 3);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r2 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45396, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45396, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 7);
        r3 = $r2[7];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 4);
        if i0 != 4 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45397, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21762, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void cleanUp()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45397, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(1712, null);
        return 1;
    }

    public void onDraw(android.graphics.Canvas)
    {
        acteve.symbolic.integer.Expression _sym_tmp_15, $i2$sym, $f1$sym, $i1$sym, $f0$sym, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2;
        com.example.amazed.AmazedView r0;
        android.graphics.Canvas r1, $r5, $r8, $r11;
        boolean[][] $r2;
        boolean[] r3;
        android.graphics.Paint $r4, $r6, $r9, $r12;
        float $f0, $f1;
        com.example.amazed.Maze $r7;
        com.example.amazed.Marble $r10;

        r0 := @this: com.example.amazed.AmazedView;
        r1 := @parameter0: android.graphics.Canvas;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1463, 32438, 2);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r2 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_15 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45398, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45398, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 8);
        r3 = $r2[8];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 478);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mCanvas$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(478);
        r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas> = r1;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 471);
        $r4 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(-1);
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 478);
        $r5 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $i0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasWidth$sym>;
        _sym_tmp_5 = r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 457);
        $i0 = r0.<com.example.amazed.AmazedView: int mCanvasWidth>;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i0$sym, 6);
        $f0 = (float) $i0;
        $i1$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHeight$sym>;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 458);
        $i1 = r0.<com.example.amazed.AmazedView: int mCanvasHeight>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i1$sym, 6);
        $f1 = (float) $i1;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 471);
        $r6 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2441, null, null, null, $f0$sym, $f1$sym, null);
        virtualinvoke $r5.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f0, $f1, $r6);
        $i2$sym = <com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCurState$sym>;
        _sym_tmp_8 = <com.example.amazed.AmazedView: int mCurState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 477);
        $i2 = <com.example.amazed.AmazedView: int mCurState>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        if $i2 == 1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45399, 0);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 2);
        if $i2 == 2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45400, 0);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 3);
        if $i2 == 3 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45401, 0);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 4);
        if $i2 == 4 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45402, 0);
        goto label10;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45399, 1);
        goto label3;

     label3:
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mMaze$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 473);
        $r7 = r0.<com.example.amazed.AmazedView: com.example.amazed.Maze mMaze>;
        _sym_tmp_10 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 478);
        $r8 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        _sym_tmp_11 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 471);
        $r9 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18352, null, null, null);
        virtualinvoke $r7.<com.example.amazed.Maze: void draw(android.graphics.Canvas,android.graphics.Paint)>($r8, $r9);
        _sym_tmp_12 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 474);
        $r10 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        _sym_tmp_13 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 478);
        $r11 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        _sym_tmp_14 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 471);
        $r12 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18352, null, null, null);
        virtualinvoke $r10.<com.example.amazed.Marble: void draw(android.graphics.Canvas,android.graphics.Paint)>($r11, $r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21763, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void drawHUD()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label10;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45400, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21764, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void drawGameOver()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label10;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45401, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21765, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void drawGameComplete()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45402, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21766, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void drawLandscapeMode()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21753, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void gameTick()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        return;
    }

    public void drawHUD()
    {
        acteve.symbolic.integer.Expression _sym_tmp_39, $f10$sym, $i18$sym, $f9$sym, $i17$sym, $f8$sym, $i16$sym, $i15$sym, $f7$sym, $i14$sym, $f6$sym, $i13$sym, $i12$sym, $z0$sym, $f5$sym, $i11$sym, $f4$sym, $i10$sym, $i9$sym, $i8$sym, $i7$sym, $f3$sym, $i6$sym, $f2$sym, $i5$sym, $i4$sym, $f1$sym, $i3$sym, $f0$sym, $i2$sym, $l1$sym, $l0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_38, _sym_tmp_37, _sym_tmp_36, _sym_tmp_35, _sym_tmp_34, _sym_tmp_33, _sym_tmp_32, _sym_tmp_31, _sym_tmp_30, _sym_tmp_29, _sym_tmp_28, _sym_tmp_27, _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        android.graphics.Paint $r3, $r4, $r14, $r15, $r25, $r26, $r37, $r38, $r40, $r41, $r42, $r47;
        android.graphics.Paint$Align $r5, $r16, $r27, $r43;
        android.graphics.Canvas $r6, $r17, $r28, $r39, $r44;
        java.lang.StringBuilder $r7, $r10, $r11, $r12, $r18, $r21, $r22, $r23, $r29, $r32, $r33, $r35;
        java.lang.String[] $r8, $r19, $r30, $r45;
        java.lang.String $r9, $r13, $r20, $r24, $r31, $r36, $r46;
        long $l0, $l1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        com.example.amazed.Marble $r34;
        boolean $z0;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21763, 32439, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_39 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_39, 45403, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_39, 45403, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 471);
        $r3 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-16777216);
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 471);
        $r4 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        $r5 = <android.graphics.Paint$Align: android.graphics.Paint$Align LEFT>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13906, null, null);
        virtualinvoke $r4.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r5);
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 478);
        $r6 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $r7 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_5 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 475);
        $r8 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r8, 2);
        $r9 = $r8[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $l0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym>;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 462);
        $l0 = r0.<com.example.amazed.AmazedView: long mTotalTime>;
        $l1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l0$sym, null, $l0, 1000L);
        $l1 = $l0 / 1000L;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(286, null, $l1$sym);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $i2$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTextPadding$sym>;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mTextPadding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 454);
        $i2 = r0.<com.example.amazed.AmazedView: int mTextPadding>;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i2$sym, 6);
        $f0 = (float) $i2;
        $i3$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mHudTextY$sym>;
        _sym_tmp_8 = r0.<com.example.amazed.AmazedView: int mHudTextY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 455);
        $i3 = r0.<com.example.amazed.AmazedView: int mHudTextY>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i3$sym, 6);
        $f1 = (float) $i3;
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 471);
        $r14 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f0$sym, $f1$sym, null);
        virtualinvoke $r6.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r13, $f0, $f1, $r14);
        _sym_tmp_10 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 471);
        $r15 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        $r16 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13906, null, null);
        virtualinvoke $r15.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r16);
        _sym_tmp_11 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 478);
        $r17 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $r18 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_12 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 475);
        $r19 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r19, 1);
        $r20 = $r19[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $i4$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mlevel$sym>;
        _sym_tmp_13 = r0.<com.example.amazed.AmazedView: int mlevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 461);
        $i4 = r0.<com.example.amazed.AmazedView: int mlevel>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i4$sym);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        $i5$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_14 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 459);
        $i5 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i5$sym, 6);
        $f2 = (float) $i5;
        $i6$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mHudTextY$sym>;
        _sym_tmp_15 = r0.<com.example.amazed.AmazedView: int mHudTextY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 455);
        $i6 = r0.<com.example.amazed.AmazedView: int mHudTextY>;
        $f3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i6$sym, 6);
        $f3 = (float) $i6;
        _sym_tmp_16 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 471);
        $r25 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f2$sym, $f3$sym, null);
        virtualinvoke $r17.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r24, $f2, $f3, $r25);
        _sym_tmp_17 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 471);
        $r26 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        $r27 = <android.graphics.Paint$Align: android.graphics.Paint$Align RIGHT>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13906, null, null);
        virtualinvoke $r26.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r27);
        _sym_tmp_18 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 478);
        $r28 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $r29 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_19 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 475);
        $r30 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r30, 0);
        $r31 = $r30[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        _sym_tmp_20 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 474);
        $r34 = r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21760, null);
        $i7 = virtualinvoke $r34.<com.example.amazed.Marble: int getLives()>();
        $i7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21760);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i7$sym);
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        $i8$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasWidth$sym>;
        _sym_tmp_21 = r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 457);
        $i8 = r0.<com.example.amazed.AmazedView: int mCanvasWidth>;
        $i9$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTextPadding$sym>;
        _sym_tmp_22 = r0.<com.example.amazed.AmazedView: int mTextPadding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 454);
        $i9 = r0.<com.example.amazed.AmazedView: int mTextPadding>;
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i8$sym, $i9$sym, $i8, $i9);
        $i10 = $i8 - $i9;
        $f4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i10$sym, 6);
        $f4 = (float) $i10;
        $i11$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mHudTextY$sym>;
        _sym_tmp_23 = r0.<com.example.amazed.AmazedView: int mHudTextY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 455);
        $i11 = r0.<com.example.amazed.AmazedView: int mHudTextY>;
        $f5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i11$sym, 6);
        $f5 = (float) $i11;
        _sym_tmp_24 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 471);
        $r37 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f4$sym, $f5$sym, null);
        virtualinvoke $r28.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r36, $f4, $f5, $r37);
        $z0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mWarning$sym>;
        _sym_tmp_25 = r0.<com.example.amazed.AmazedView: int mWarning$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_25, 456);
        $z0 = r0.<com.example.amazed.AmazedView: boolean mWarning>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_39 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_39, 45404, 0);
        _sym_tmp_26 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 471);
        $r38 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke $r38.<android.graphics.Paint: void setColor(int)>(-16776961);
        _sym_tmp_27 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_27, 478);
        $r39 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $i12$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_28 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_28, 460);
        $i12 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $i13$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i12$sym, null, $i12, 15);
        $i13 = $i12 - 15;
        $f6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i13$sym, 6);
        $f6 = (float) $i13;
        $i14$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasWidth$sym>;
        _sym_tmp_29 = r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_29, 457);
        $i14 = r0.<com.example.amazed.AmazedView: int mCanvasWidth>;
        $f7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i14$sym, 6);
        $f7 = (float) $i14;
        $i15$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_30 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_30, 460);
        $i15 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $i16$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i15$sym, null, $i15, 5);
        $i16 = $i15 + 5;
        $f8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i16$sym, 6);
        $f8 = (float) $i16;
        _sym_tmp_31 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_31, 471);
        $r40 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2441, null, null, $f6$sym, $f7$sym, $f8$sym, null);
        virtualinvoke $r39.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f6, $f7, $f8, $r40);
        _sym_tmp_32 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_32, 471);
        $r41 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke $r41.<android.graphics.Paint: void setColor(int)>(-1);
        _sym_tmp_33 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_33, 471);
        $r42 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        $r43 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13906, null, null);
        virtualinvoke $r42.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r43);
        _sym_tmp_34 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_34, 478);
        $r44 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        _sym_tmp_35 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_35, 475);
        $r45 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r45, 3);
        $r46 = $r45[3];
        $i17$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_36 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_36, 459);
        $i17 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i17$sym, 6);
        $f9 = (float) $i17;
        $i18$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_37 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_37, 460);
        $i18 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $f10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i18$sym, 6);
        $f10 = (float) $i18;
        _sym_tmp_38 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_38, 471);
        $r47 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f9$sym, $f10$sym, null);
        virtualinvoke $r44.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r46, $f9, $f10, $r47);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_39, 45404, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public void drawGameOver()
    {
        acteve.symbolic.integer.Expression _sym_tmp_30, $f15$sym, $f14$sym, $f13$sym, $f12$sym, $i11$sym, $f11$sym, $i10$sym, $f10$sym, $f9$sym, $f8$sym, $f7$sym, $i9$sym, $f6$sym, $i8$sym, $i7$sym, $i6$sym, $f5$sym, $f4$sym, $f3$sym, $i5$sym, $f2$sym, $i4$sym, $l3$sym, $l2$sym, $f1$sym, $i1$sym, $f0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_29, _sym_tmp_28, _sym_tmp_27, _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        android.graphics.Paint $r3, $r4, $r9, $r19, $r20, $r33, $r34, $r38, $r39;
        android.graphics.Paint$Align $r5;
        android.graphics.Canvas $r6, $r10, $r21, $r35;
        java.lang.String[] $r7, $r12, $r23, $r29, $r36;
        java.lang.String $r8, $r13, $r18, $r24, $r30, $r32, $r37;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        java.lang.StringBuilder $r11, $r14, $r15, $r16, $r17, $r22, $r25, $r26, $r27, $r28, $r31;
        long $l2, $l3;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21764, 32440, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_30 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_30, 45405, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_30, 45405, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 471);
        $r3 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-16777216);
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 471);
        $r4 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        $r5 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13906, null, null);
        virtualinvoke $r4.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r5);
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 478);
        $r6 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        _sym_tmp_5 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 475);
        $r7 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r7, 5);
        $r8 = $r7[5];
        $i0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 459);
        $i0 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i0$sym, 6);
        $f0 = (float) $i0;
        $i1$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 460);
        $i1 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i1$sym, 6);
        $f1 = (float) $i1;
        _sym_tmp_8 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 471);
        $r9 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f0$sym, $f1$sym, null);
        virtualinvoke $r6.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r8, $f0, $f1, $r9);
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 478);
        $r10 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_10 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 475);
        $r12 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r12, 6);
        $r13 = $r12[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $l2$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym>;
        _sym_tmp_11 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 462);
        $l2 = r0.<com.example.amazed.AmazedView: long mTotalTime>;
        $l3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l2$sym, null, $l2, 1000L);
        $l3 = $l2 / 1000L;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(286, null, $l3$sym);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $i4$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_12 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 459);
        $i4 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i4$sym, 6);
        $f2 = (float) $i4;
        $i5$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_13 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 460);
        $i5 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $f3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i5$sym, 6);
        $f3 = (float) $i5;
        _sym_tmp_14 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 471);
        $r19 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(17098, null);
        $f4 = virtualinvoke $r19.<android.graphics.Paint: float getFontSpacing()>();
        $f4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(17098);
        $f5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f3$sym, $f4$sym, $f3, $f4);
        $f5 = $f3 + $f4;
        _sym_tmp_15 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 471);
        $r20 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f2$sym, $f5$sym, null);
        virtualinvoke $r10.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r18, $f2, $f5, $r20);
        _sym_tmp_16 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 478);
        $r21 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $r22 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_17 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 475);
        $r23 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r23, 7);
        $r24 = $r23[7];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $i6$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mlevel$sym>;
        _sym_tmp_18 = r0.<com.example.amazed.AmazedView: int mlevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 461);
        $i6 = r0.<com.example.amazed.AmazedView: int mlevel>;
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 1);
        $i7 = $i6 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i7$sym);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        _sym_tmp_19 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 475);
        $r29 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r29, 8);
        $r30 = $r29[8];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $i8$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_20 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 459);
        $i8 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i8$sym, 6);
        $f6 = (float) $i8;
        $i9$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_21 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 460);
        $i9 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $f7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i9$sym, 6);
        $f7 = (float) $i9;
        _sym_tmp_22 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 471);
        $r33 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(17098, null);
        $f8 = virtualinvoke $r33.<android.graphics.Paint: float getFontSpacing()>();
        $f8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(17098);
        $f9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f8$sym, null, $f8, 2.0F);
        $f9 = $f8 * 2.0F;
        $f10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f7$sym, $f9$sym, $f7, $f9);
        $f10 = $f7 + $f9;
        _sym_tmp_23 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 471);
        $r34 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f6$sym, $f10$sym, null);
        virtualinvoke $r21.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r32, $f6, $f10, $r34);
        _sym_tmp_24 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 478);
        $r35 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        _sym_tmp_25 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_25, 475);
        $r36 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r36, 9);
        $r37 = $r36[9];
        $i10$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_26 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 459);
        $i10 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i10$sym, 6);
        $f11 = (float) $i10;
        $i11$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHeight$sym>;
        _sym_tmp_27 = r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_27, 458);
        $i11 = r0.<com.example.amazed.AmazedView: int mCanvasHeight>;
        $f12$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i11$sym, 6);
        $f12 = (float) $i11;
        _sym_tmp_28 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_28, 471);
        $r38 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(17098, null);
        $f13 = virtualinvoke $r38.<android.graphics.Paint: float getFontSpacing()>();
        $f13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(17098);
        $f14$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f13$sym, null, $f13, 3.0F);
        $f14 = $f13 * 3.0F;
        $f15$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f12$sym, $f14$sym, $f12, $f14);
        $f15 = $f12 - $f14;
        _sym_tmp_29 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_29, 471);
        $r39 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f11$sym, $f15$sym, null);
        virtualinvoke $r35.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r37, $f11, $f15, $r39);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void drawGameComplete()
    {
        acteve.symbolic.integer.Expression _sym_tmp_22, $f10$sym, $f9$sym, $f8$sym, $f7$sym, $i7$sym, $f6$sym, $i6$sym, $f5$sym, $f4$sym, $f3$sym, $i5$sym, $f2$sym, $i4$sym, $l3$sym, $l2$sym, $f1$sym, $i1$sym, $f0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i4, $i5, $i6, $i7;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        android.graphics.Paint $r3, $r4, $r9, $r19, $r20, $r24, $r25;
        android.graphics.Paint$Align $r5;
        android.graphics.Canvas $r6, $r10, $r21;
        java.lang.String[] $r7, $r12, $r22;
        java.lang.String $r8, $r13, $r18, $r23;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        java.lang.StringBuilder $r11, $r14, $r15, $r16, $r17;
        long $l2, $l3;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21765, 32441, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_22 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45406, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45406, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 11);
        r2 = $r1[11];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 471);
        $r3 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-16777216);
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 471);
        $r4 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        $r5 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13906, null, null);
        virtualinvoke $r4.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r5);
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 478);
        $r6 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        _sym_tmp_5 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 475);
        $r7 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r7, 3);
        $r8 = $r7[3];
        $i0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 459);
        $i0 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i0$sym, 6);
        $f0 = (float) $i0;
        $i1$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 460);
        $i1 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i1$sym, 6);
        $f1 = (float) $i1;
        _sym_tmp_8 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 471);
        $r9 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f0$sym, $f1$sym, null);
        virtualinvoke $r6.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r8, $f0, $f1, $r9);
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 478);
        $r10 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_10 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 475);
        $r12 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r12, 6);
        $r13 = $r12[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $l2$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mTotalTime$sym>;
        _sym_tmp_11 = r0.<com.example.amazed.AmazedView: int mTotalTime$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 462);
        $l2 = r0.<com.example.amazed.AmazedView: long mTotalTime>;
        $l3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l2$sym, null, $l2, 1000L);
        $l3 = $l2 / 1000L;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(286, null, $l3$sym);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $i4$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_12 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 459);
        $i4 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i4$sym, 6);
        $f2 = (float) $i4;
        $i5$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_13 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 460);
        $i5 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $f3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i5$sym, 6);
        $f3 = (float) $i5;
        _sym_tmp_14 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 471);
        $r19 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(17098, null);
        $f4 = virtualinvoke $r19.<android.graphics.Paint: float getFontSpacing()>();
        $f4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(17098);
        $f5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f3$sym, $f4$sym, $f3, $f4);
        $f5 = $f3 + $f4;
        _sym_tmp_15 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 471);
        $r20 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f2$sym, $f5$sym, null);
        virtualinvoke $r10.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r18, $f2, $f5, $r20);
        _sym_tmp_16 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 478);
        $r21 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        _sym_tmp_17 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 475);
        $r22 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r22, 9);
        $r23 = $r22[9];
        $i6$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_18 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 459);
        $i6 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i6$sym, 6);
        $f6 = (float) $i6;
        $i7$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHeight$sym>;
        _sym_tmp_19 = r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 458);
        $i7 = r0.<com.example.amazed.AmazedView: int mCanvasHeight>;
        $f7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i7$sym, 6);
        $f7 = (float) $i7;
        _sym_tmp_20 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 471);
        $r24 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(17098, null);
        $f8 = virtualinvoke $r24.<android.graphics.Paint: float getFontSpacing()>();
        $f8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(17098);
        $f9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f8$sym, null, $f8, 3.0F);
        $f9 = $f8 * 3.0F;
        $f10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f7$sym, $f9$sym, $f7, $f9);
        $f10 = $f7 - $f9;
        _sym_tmp_21 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 471);
        $r25 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f6$sym, $f10$sym, null);
        virtualinvoke $r21.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r23, $f6, $f10, $r25);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void drawLandscapeMode()
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, $f3$sym, $i3$sym, $f2$sym, $i2$sym, $f1$sym, $i1$sym, $f0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        android.graphics.Paint $r3, $r4, $r7, $r8, $r12;
        android.graphics.Paint$Align $r5;
        android.graphics.Canvas $r6, $r9;
        float $f0, $f1, $f2, $f3;
        java.lang.String[] $r10;
        java.lang.String $r11;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21766, 32442, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_14 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45407, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45407, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 12);
        r2 = $r1[12];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 471);
        $r3 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-1);
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 471);
        $r4 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        $r5 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13906, null, null);
        virtualinvoke $r4.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r5);
        _sym_tmp_4 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 478);
        $r6 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        $i0$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasWidth$sym>;
        _sym_tmp_5 = r0.<com.example.amazed.AmazedView: int mCanvasWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 457);
        $i0 = r0.<com.example.amazed.AmazedView: int mCanvasWidth>;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i0$sym, 6);
        $f0 = (float) $i0;
        $i1$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHeight$sym>;
        _sym_tmp_6 = r0.<com.example.amazed.AmazedView: int mCanvasHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 458);
        $i1 = r0.<com.example.amazed.AmazedView: int mCanvasHeight>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i1$sym, 6);
        $f1 = (float) $i1;
        _sym_tmp_7 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 471);
        $r7 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2441, null, null, null, $f0$sym, $f1$sym, null);
        virtualinvoke $r6.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f0, $f1, $r7);
        _sym_tmp_8 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 471);
        $r8 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(-16777216);
        _sym_tmp_9 = r0.<com.example.amazed.AmazedView: int mCanvas$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 478);
        $r9 = r0.<com.example.amazed.AmazedView: android.graphics.Canvas mCanvas>;
        _sym_tmp_10 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 475);
        $r10 = <com.example.amazed.AmazedView: java.lang.String[] mStrings>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r10, 10);
        $r11 = $r10[10];
        $i2$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfWidth$sym>;
        _sym_tmp_11 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 459);
        $i2 = r0.<com.example.amazed.AmazedView: int mCanvasHalfWidth>;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i2$sym, 6);
        $f2 = (float) $i2;
        $i3$sym = r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCanvasHalfHeight$sym>;
        _sym_tmp_12 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 460);
        $i3 = r0.<com.example.amazed.AmazedView: int mCanvasHalfHeight>;
        $f3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i3$sym, 6);
        $f3 = (float) $i3;
        _sym_tmp_13 = r0.<com.example.amazed.AmazedView: int mPaint$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 471);
        $r12 = r0.<com.example.amazed.AmazedView: android.graphics.Paint mPaint>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2445, null, null, $f2$sym, $f3$sym, null);
        virtualinvoke $r9.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r11, $f2, $f3, $r12);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void switchGameState(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.AmazedView;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21750, 32443, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45408, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45408, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 13);
        r2 = $r1[13];
        <com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCurState$sym> = i0$sym;
        _sym_tmp_2 = <com.example.amazed.AmazedView: int mCurState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 477);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.AmazedView: int mCurState$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(477);
        <com.example.amazed.AmazedView: int mCurState> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void registerListener()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        android.hardware.SensorManager $r3;
        android.hardware.SensorListener $r4;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21743, 32444, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45409, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45409, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 14);
        r2 = $r1[14];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mSensorManager$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 472);
        $r3 = r0.<com.example.amazed.AmazedView: android.hardware.SensorManager mSensorManager>;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mSensorAccelerometer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 469);
        $r4 = r0.<com.example.amazed.AmazedView: android.hardware.SensorListener mSensorAccelerometer>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5920, null, null, null, null);
        virtualinvoke $r3.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>($r4, 2, 1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void unregisterListener()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        android.hardware.SensorManager $r3;
        android.hardware.SensorListener $r4;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21744, 32445, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45410, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45410, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 15);
        r2 = $r1[15];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mSensorManager$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 472);
        $r3 = r0.<com.example.amazed.AmazedView: android.hardware.SensorManager mSensorManager>;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mSensorAccelerometer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 469);
        $r4 = r0.<com.example.amazed.AmazedView: android.hardware.SensorListener mSensorAccelerometer>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5931, null, null);
        virtualinvoke $r3.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)>($r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void cleanUp()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView r0;
        boolean[][] $r1;
        boolean[] r2;
        android.app.Activity $r3;

        r0 := @this: com.example.amazed.AmazedView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21762, 32446, 1);
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45411, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45411, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 16);
        r2 = $r1[16];
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mMarble$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 474);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mMarble$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(474);
        r0.<com.example.amazed.AmazedView: com.example.amazed.Marble mMarble> = null;
        _sym_tmp_3 = r0.<com.example.amazed.AmazedView: int mMaze$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 473);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mMaze$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(473);
        r0.<com.example.amazed.AmazedView: com.example.amazed.Maze mMaze> = null;
        _sym_tmp_4 = <com.example.amazed.AmazedView: int mStrings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 475);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.AmazedView: int mStrings$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(475);
        <com.example.amazed.AmazedView: java.lang.String[] mStrings> = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        virtualinvoke r0.<com.example.amazed.AmazedView: void unregisterListener()>();
        _sym_tmp_5 = r0.<com.example.amazed.AmazedView: int mActivity$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 470);
        $r3 = r0.<com.example.amazed.AmazedView: android.app.Activity mActivity>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        virtualinvoke $r3.<android.app.Activity: void finish()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    static float access$002(com.example.amazed.AmazedView, float)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, f0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView r0;
        float f0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.example.amazed.AmazedView;
        f0 := @parameter1: float;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21747, 32447, 2);
        f0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45412, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45412, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 17);
        r2 = $r1[17];
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelX$sym> = f0$sym;
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mAccelX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 465);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mAccelX$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(465);
        r0.<com.example.amazed.AmazedView: float mAccelX> = f0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21747, f0$sym);
        return f0;
    }

    static float access$102(com.example.amazed.AmazedView, float)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, f0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView r0;
        float f0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.example.amazed.AmazedView;
        f0 := @parameter1: float;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21748, 32448, 2);
        f0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45413, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45413, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 18);
        r2 = $r1[18];
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelY$sym> = f0$sym;
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mAccelY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 466);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mAccelY$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        r0.<com.example.amazed.AmazedView: float mAccelY> = f0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21748, f0$sym);
        return f0;
    }

    static float access$202(com.example.amazed.AmazedView, float)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, f0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.AmazedView r0;
        float f0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.example.amazed.AmazedView;
        f0 := @parameter1: float;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21749, 32449, 2);
        f0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 452);
        $r1 = <com.example.amazed.AmazedView: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45414, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45414, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 19);
        r2 = $r1[19];
        r0.<com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mAccelZ$sym> = f0$sym;
        _sym_tmp_2 = r0.<com.example.amazed.AmazedView: int mAccelZ$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 467);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.AmazedView: int mAccelZ$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(467);
        r0.<com.example.amazed.AmazedView: float mAccelZ> = f0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21749, f0$sym);
        return f0;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32450, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.AmazedView: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 20);
        r1 = $r0[20];
        <com.example.amazed.AmazedView: acteve.symbolic.integer.Expression mCurState$sym> = null;
        _sym_tmp_1 = <com.example.amazed.AmazedView: int mCurState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 477);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.AmazedView: int mCurState$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(477);
        <com.example.amazed.AmazedView: int mCurState> = -1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r21$sym, $r20$sym, $r19$sym, $r18$sym, $r17$sym, $r16$sym, $r15$sym, $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32451, 0);
        $r0 = newmultiarray (boolean)[21][];
        _sym_tmp_1 = <com.example.amazed.AmazedView: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 452);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.AmazedView: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(452);
        <com.example.amazed.AmazedView: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[13];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[7];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[6];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r15$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 14);
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r16$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 15);
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r17$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 16);
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r18$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 17);
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r19$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 18);
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r20$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 19);
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r21$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 20);
        $r0[20] = $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/AmazedView", 4204673338046689688L);
        return $r0;
    }
}
public final class com.example.amazed.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;
    public static final acteve.symbolic.integer.Expression DEBUG$sym;
    public static final int DEBUG$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.example.amazed.BuildConfig r0;

        r0 := @this: com.example.amazed.BuildConfig;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32452, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class com.example.amazed.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements com.example.amazed.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private static final int DEFAULT_COVERAGE_FILE_PATH$a3tid;
    private final int mResults$a3tid;
    private int mIntent$a3tid;
    private static final acteve.symbolic.integer.Expression LOGD$sym;
    private static final int LOGD$a3tid;
    private acteve.symbolic.integer.Expression mCoverage$sym;
    private int mCoverage$a3tid;
    private int mCoverageFilePath$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32453, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45415, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45415, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        _sym_tmp_2 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 480);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(480);
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym> = null;
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 481);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(481);
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32454, 2);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45416, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45416, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 482);
        $r4 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_7 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45417, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21767, null, null, null);
        $z0 = specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21767);
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym> = $z0$sym;
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 481);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(481);
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        _sym_tmp_4 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 483);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(483);
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45417, 1);
        goto label3;

     label3:
        $r11 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8437, null);
        $r12 = virtualinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "com/example/amazed/EmmaInstrument/InstrumentedActivity");
        _sym_tmp_5 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 484);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(484);
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        _sym_tmp_6 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 484);
        $r13 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1591, null, null);
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.amazed.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(8425, 32455, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45418, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45418, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 482);
        $r4 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8425, null);
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(10470);
        staticinvoke <android.os.Looper: void prepare()>();
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 484);
        $r5 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8450, null, null);
        $r6 = virtualinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (com.example.amazed.EmmaInstrument.InstrumentedActivity) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21768, null, null);
        virtualinvoke r3.<com.example.amazed.EmmaInstrument.InstrumentedActivity: void setFinishListener(com.example.amazed.EmmaInstrument.FinishListener)>(r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21767, 32456, 3);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r3 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45419, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45419, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 3);
        r4 = $r3[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_2 = null;
        if r5 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45420, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(20857, null);
        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(20857);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45421, 0);
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label5;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45420, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45421, 1);
        goto label4;

     label4:
        $z1$sym = null;
        $z1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21767, $z1$sym);
        return $z1;
    }

    private void generateCoverageReport()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21772, 32457, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45422, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45422, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 482);
        $r6 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        $r8 = specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2060, null);
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 0);
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 1);
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 2);
        $r9[2] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2770, null, null, null);
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 0);
        $r13[0] = r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 1);
        $r13[1] = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 2);
        $r13[2] = $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2771, null, null, null);
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label10;

     label4:
        $r17 := @caughtexception;
        r18 = $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21770, null, null, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label10;

     label5:
        $r19 := @caughtexception;
        r20 = $r19;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21771, null, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label10;

     label6:
        $r21 := @caughtexception;
        r22 = $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21771, null, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label10;

     label7:
        $r23 := @caughtexception;
        r24 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21771, null, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label10;

     label8:
        $r25 := @caughtexception;
        r26 = $r25;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21771, null, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label10;

     label9:
        $r27 := @caughtexception;
        r28 = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21771, null, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
        catch java.lang.SecurityException from label2 to label3 with label5;
        catch java.lang.NoSuchMethodException from label2 to label3 with label6;
        catch java.lang.IllegalArgumentException from label2 to label3 with label7;
        catch java.lang.IllegalAccessException from label2 to label3 with label8;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label9;
    }

    private java.lang.String getCoverageFilePath()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21769, 32458, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45423, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45423, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 483);
        $r3 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = null;
        if $r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45424, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45424, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 483);
        $r4 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21773, 32459, 2);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45425, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45425, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 6);
        r3 = $r2[6];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45426, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45427, 0);
        _sym_tmp_2 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 483);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(483);
        r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21773, null);
        return 1;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45426, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45427, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21773, null);
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21771, 32460, 2);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45428, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45428, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 7);
        r3 = $r2[7];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21770, null, null, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21770, 32461, 3);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r3 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45429, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45429, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 8);
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 482);
        $r9 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(110, null, null, null);
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 480);
        $r10 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(7751, null, null, null);
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21774, 32462, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45430, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45430, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 482);
        $r3 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0$sym = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym>;
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 481);
        $z0 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45431, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21772, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45431, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 480);
        $r4 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8430, null, null, null);
        virtualinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21775, 32463, 2);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 479);
        $r2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45432, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45432, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 10);
        r3 = $r2[10];
        _sym_tmp_2 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 482);
        $r4 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0$sym = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym>;
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 481);
        $z0 = r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45433, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null);
        $z1 = specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21773);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45434, 0);
        _sym_tmp_4 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 482);
        $r9 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45434, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21772, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null);
        specialinvoke r0.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45433, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32464, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 11);
        r1 = $r0[11];
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 482);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(482);
        <com.example.amazed.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32465, 0);
        $r0 = newmultiarray (boolean)[12][];
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 479);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(479);
        <com.example.amazed.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  com.example.amazed.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final com.example.amazed.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.example.amazed.EmmaInstrument.InstrumentedActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        com.example.amazed.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: com.example.amazed.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21776, 32466, 2);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 485);
        $r2 = <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45435, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45435, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 486);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(486);
        r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.example.amazed.EmmaInstrument.InstrumentedActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z1$sym, $z0$sym, $r16$sym, $r15$sym, $r14$sym, $i0$sym, $r12$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        com.example.amazed.EmmaInstrument.InstrumentedActivity $r10, $r18;
        com.example.amazed.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32467, 3);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 485);
        $r3 = <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45436, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45436, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        _sym_tmp_2 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 486);
        $r10 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.example.amazed.EmmaInstrument.InstrumentedActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21777, null);
        $r11 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity: com.example.amazed.EmmaInstrument.FinishListener access$000(com.example.amazed.EmmaInstrument.InstrumentedActivity)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = null;
        if $r11 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45437, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_4 = null;
        if r5 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45438, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(731, null, null);
        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(731);
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0$sym = null;
        $i0 = lengthof r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45439, 0);
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r6, 0);
        $r14 = r6[0];
        $r15$sym = $r14$sym;
        $r15 = (byte[]) $r14;
        $r16$sym = $r15$sym;
        $r16 = (byte[]) $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5113, $r16$sym);
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4804, null);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5110, null);
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45440, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45441, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45440, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 486);
        $r18 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.example.amazed.EmmaInstrument.InstrumentedActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21777, null);
        $r19 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity: com.example.amazed.EmmaInstrument.FinishListener access$000(com.example.amazed.EmmaInstrument.InstrumentedActivity)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21775, null, null);
        interfaceinvoke $r19.<com.example.amazed.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        goto label8;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45437, 1);
        goto label8;

        goto label8;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45438, 1);
        goto label8;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45439, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45441, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32468, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32469, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 485);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(485);
        <com.example.amazed.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class com.example.amazed.EmmaInstrument.InstrumentedActivity extends com.example.amazed.AmazedActivity
{
    public static java.lang.String TAG;
    private com.example.amazed.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private int mListener$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.example.amazed.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32470, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 487);
        $r1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45442, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45442, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<com.example.amazed.AmazedActivity: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void setFinishListener(com.example.amazed.EmmaInstrument.FinishListener)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.example.amazed.EmmaInstrument.InstrumentedActivity r0;
        com.example.amazed.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.amazed.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: com.example.amazed.EmmaInstrument.FinishListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21768, 32471, 2);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 487);
        $r2 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45443, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45443, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        com.example.amazed.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: com.example.amazed.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1658, 32472, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 487);
        $r1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45444, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45444, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_2 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 488);
        $r4 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        specialinvoke r0.<com.example.amazed.AmazedActivity: void finish()>();
        _sym_tmp_3 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 489);
        $r8 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity: com.example.amazed.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = null;
        if $r8 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45445, 0);
        _sym_tmp_4 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 489);
        $r9 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity: com.example.amazed.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21774, null);
        interfaceinvoke $r9.<com.example.amazed.EmmaInstrument.FinishListener: void onActivityFinished()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45445, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    static com.example.amazed.EmmaInstrument.FinishListener access$000(com.example.amazed.EmmaInstrument.InstrumentedActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.amazed.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: com.example.amazed.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21777, 32473, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 487);
        $r1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45446, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45446, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 489);
        $r3 = r0.<com.example.amazed.EmmaInstrument.InstrumentedActivity: com.example.amazed.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32474, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 488);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.EmmaInstrument.InstrumentedActivity: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(488);
        <com.example.amazed.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32475, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 487);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(487);
        <com.example.amazed.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32476, 1);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 490);
        $r1 = <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45447, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45447, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        com.example.amazed.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32477, 3);
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 490);
        $r3 = <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45448, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45448, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new com.example.amazed.EmmaInstrument.EmmaInstrumentation;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<com.example.amazed.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_2 = null;
        if r6 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45449, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21775, null, null);
        interfaceinvoke r6.<com.example.amazed.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45449, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32478, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 491);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(491);
        <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32479, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 490);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(490);
        <com.example.amazed.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
public class com.example.amazed.Marble extends java.lang.Object
{
    private android.view.View mView;
    private int mX;
    private int mY;
    private int mRadius;
    private int mColor;
    private int mLives;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int mView$a3tid;
    private acteve.symbolic.integer.Expression mX$sym;
    private int mX$a3tid;
    private acteve.symbolic.integer.Expression mY$sym;
    private int mY$a3tid;
    private acteve.symbolic.integer.Expression mRadius$sym;
    private int mRadius$a3tid;
    private acteve.symbolic.integer.Expression mColor$sym;
    private int mColor$a3tid;
    private acteve.symbolic.integer.Expression mLives$sym;
    private int mLives$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.Marble r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.amazed.Marble;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(6184, 32480, 2);
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r2 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45450, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45450, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym> = null;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 493);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mX$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        r0.<com.example.amazed.Marble: int mX> = 0;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym> = null;
        _sym_tmp_3 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 494);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mY$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(494);
        r0.<com.example.amazed.Marble: int mY> = 0;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym> = null;
        _sym_tmp_4 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 495);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mRadius$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(495);
        r0.<com.example.amazed.Marble: int mRadius> = 8;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mColor$sym> = null;
        _sym_tmp_5 = r0.<com.example.amazed.Marble: int mColor$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 496);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mColor$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(496);
        r0.<com.example.amazed.Marble: int mColor> = -1;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mLives$sym> = null;
        _sym_tmp_6 = r0.<com.example.amazed.Marble: int mLives$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 497);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mLives$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(497);
        r0.<com.example.amazed.Marble: int mLives> = 5;
        _sym_tmp_7 = r0.<com.example.amazed.Marble: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 498);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mView$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(498);
        r0.<com.example.amazed.Marble: android.view.View mView> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2374, null);
        virtualinvoke r0.<com.example.amazed.Marble: void init()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void init()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        com.example.amazed.Marble r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.Marble;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2374, 32481, 1);
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r1 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45451, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45451, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        $i0$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 495);
        $i0 = r0.<com.example.amazed.Marble: int mRadius>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 6);
        $i1 = $i0 * 6;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym> = $i1$sym;
        _sym_tmp_3 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 493);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mX$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        r0.<com.example.amazed.Marble: int mX> = $i1;
        $i2$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_4 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 495);
        $i2 = r0.<com.example.amazed.Marble: int mRadius>;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 6);
        $i3 = $i2 * 6;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym> = $i3$sym;
        _sym_tmp_5 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 494);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mY$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(494);
        r0.<com.example.amazed.Marble: int mY> = $i3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void draw(android.graphics.Canvas, android.graphics.Paint)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $f2$sym, $i3$sym, $f1$sym, $i2$sym, $f0$sym, $i1$sym, $i0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        com.example.amazed.Marble r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        boolean[][] $r3;
        boolean[] r4;
        float $f0, $f1, $f2;

        r0 := @this: com.example.amazed.Marble;
        r1 := @parameter0: android.graphics.Canvas;
        r2 := @parameter1: android.graphics.Paint;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18352, 32482, 3);
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r3 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45452, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45452, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        $i0$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mColor$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mColor$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 496);
        $i0 = r0.<com.example.amazed.Marble: int mColor>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, $i0$sym);
        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>($i0);
        $i1$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_3 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 493);
        $i1 = r0.<com.example.amazed.Marble: int mX>;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i1$sym, 6);
        $f0 = (float) $i1;
        $i2$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_4 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 494);
        $i2 = r0.<com.example.amazed.Marble: int mY>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i2$sym, 6);
        $f1 = (float) $i2;
        $i3$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_5 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 495);
        $i3 = r0.<com.example.amazed.Marble: int mRadius>;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i3$sym, 6);
        $f2 = (float) $i3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(17371, null, $f0$sym, $f1$sym, $f2$sym, null);
        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void updateX(float)
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, $i12$sym, $i11$sym, $i10$sym, $i9$sym, $i8$sym, $i7$sym, $i6$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $f2$sym, $f1$sym, $i0$sym, r2$sym, f0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.example.amazed.Marble r0;
        float f0, $f1, $f2;
        boolean[][] $r1;
        boolean[] r2;
        android.view.View $r4, $r5;

        r0 := @this: com.example.amazed.Marble;
        f0 := @parameter0: float;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21757, 32483, 2);
        f0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r1 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_14 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45453, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45453, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        $i0$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 493);
        $i0 = r0.<com.example.amazed.Marble: int mX>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i0$sym, 6);
        $f1 = (float) $i0;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f1$sym, f0$sym, $f1, f0);
        $f2 = $f1 + f0;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($f2$sym, 4);
        $i1 = (int) $f2;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym> = $i1$sym;
        _sym_tmp_3 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 493);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mX$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        r0.<com.example.amazed.Marble: int mX> = $i1;
        $i2$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_4 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 493);
        $i2 = r0.<com.example.amazed.Marble: int mX>;
        $i3$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_5 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 495);
        $i3 = r0.<com.example.amazed.Marble: int mRadius>;
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, $i3$sym, $i2, $i3);
        $i4 = $i2 + $i3;
        _sym_tmp_6 = r0.<com.example.amazed.Marble: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 498);
        $r4 = r0.<com.example.amazed.Marble: android.view.View mView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1376, null);
        $i5 = virtualinvoke $r4.<android.view.View: int getWidth()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1376);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, $i5$sym, $i4, $i5);
        if $i4 < $i5 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45454, 0);
        _sym_tmp_7 = r0.<com.example.amazed.Marble: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 498);
        $r5 = r0.<com.example.amazed.Marble: android.view.View mView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1376, null);
        $i6 = virtualinvoke $r5.<android.view.View: int getWidth()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1376);
        $i7$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_8 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 495);
        $i7 = r0.<com.example.amazed.Marble: int mRadius>;
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, $i7$sym, $i6, $i7);
        $i8 = $i6 - $i7;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym> = $i8$sym;
        _sym_tmp_9 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 493);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mX$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        r0.<com.example.amazed.Marble: int mX> = $i8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label5;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45454, 1);
        goto label3;

     label3:
        $i9$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_10 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 493);
        $i9 = r0.<com.example.amazed.Marble: int mX>;
        $i10$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_11 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 495);
        $i10 = r0.<com.example.amazed.Marble: int mRadius>;
        $i11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i9$sym, $i10$sym, $i9, $i10);
        $i11 = $i9 - $i10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i11$sym, null, $i11, 0);
        if $i11 >= 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45455, 0);
        $i12$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_12 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 495);
        $i12 = r0.<com.example.amazed.Marble: int mRadius>;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym> = $i12$sym;
        _sym_tmp_13 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 493);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mX$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        r0.<com.example.amazed.Marble: int mX> = $i12;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45455, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return;
    }

    public void updateY(float)
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, $i12$sym, $i11$sym, $i10$sym, $i9$sym, $i8$sym, $i7$sym, $i6$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $f2$sym, $f1$sym, $i0$sym, r2$sym, f0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.example.amazed.Marble r0;
        float f0, $f1, $f2;
        boolean[][] $r1;
        boolean[] r2;
        android.view.View $r4, $r5;

        r0 := @this: com.example.amazed.Marble;
        f0 := @parameter0: float;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21758, 32484, 2);
        f0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r1 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_14 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45456, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45456, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $i0$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 494);
        $i0 = r0.<com.example.amazed.Marble: int mY>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i0$sym, 6);
        $f1 = (float) $i0;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,float,float)>($f1$sym, f0$sym, $f1, f0);
        $f2 = $f1 - f0;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($f2$sym, 4);
        $i1 = (int) $f2;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym> = $i1$sym;
        _sym_tmp_3 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 494);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mY$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(494);
        r0.<com.example.amazed.Marble: int mY> = $i1;
        $i2$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_4 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 494);
        $i2 = r0.<com.example.amazed.Marble: int mY>;
        $i3$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_5 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 495);
        $i3 = r0.<com.example.amazed.Marble: int mRadius>;
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, $i3$sym, $i2, $i3);
        $i4 = $i2 + $i3;
        _sym_tmp_6 = r0.<com.example.amazed.Marble: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 498);
        $r4 = r0.<com.example.amazed.Marble: android.view.View mView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2097, null);
        $i5 = virtualinvoke $r4.<android.view.View: int getHeight()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2097);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, $i5$sym, $i4, $i5);
        if $i4 < $i5 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45457, 0);
        _sym_tmp_7 = r0.<com.example.amazed.Marble: int mView$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 498);
        $r5 = r0.<com.example.amazed.Marble: android.view.View mView>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2097, null);
        $i6 = virtualinvoke $r5.<android.view.View: int getHeight()>();
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2097);
        $i7$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_8 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 495);
        $i7 = r0.<com.example.amazed.Marble: int mRadius>;
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, $i7$sym, $i6, $i7);
        $i8 = $i6 - $i7;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym> = $i8$sym;
        _sym_tmp_9 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 494);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mY$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(494);
        r0.<com.example.amazed.Marble: int mY> = $i8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label5;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45457, 1);
        goto label3;

     label3:
        $i9$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_10 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 494);
        $i9 = r0.<com.example.amazed.Marble: int mY>;
        $i10$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_11 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 495);
        $i10 = r0.<com.example.amazed.Marble: int mRadius>;
        $i11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i9$sym, $i10$sym, $i9, $i10);
        $i11 = $i9 - $i10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i11$sym, null, $i11, 0);
        if $i11 >= 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45458, 0);
        $i12$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mRadius$sym>;
        _sym_tmp_12 = r0.<com.example.amazed.Marble: int mRadius$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 495);
        $i12 = r0.<com.example.amazed.Marble: int mRadius>;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym> = $i12$sym;
        _sym_tmp_13 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 494);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mY$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(494);
        r0.<com.example.amazed.Marble: int mY> = $i12;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45458, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return;
    }

    public void death()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        com.example.amazed.Marble r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.Marble;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21761, 32485, 1);
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r1 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45459, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45459, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        $i0$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mLives$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mLives$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 497);
        $i0 = r0.<com.example.amazed.Marble: int mLives>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        $i1 = $i0 - 1;
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mLives$sym> = $i1$sym;
        _sym_tmp_3 = r0.<com.example.amazed.Marble: int mLives$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 497);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mLives$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(497);
        r0.<com.example.amazed.Marble: int mLives> = $i1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void setLives(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        com.example.amazed.Marble r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.Marble;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21754, 32486, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r1 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45460, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45460, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mLives$sym> = i0$sym;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mLives$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 497);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Marble: int mLives$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(497);
        r0.<com.example.amazed.Marble: int mLives> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public int getLives()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.example.amazed.Marble r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.Marble;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21760, 32487, 1);
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r1 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45461, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45461, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];
        $i0$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mLives$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mLives$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 497);
        $i0 = r0.<com.example.amazed.Marble: int mLives>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21760, $i0$sym);
        return $i0;
    }

    public int getX()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.example.amazed.Marble r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.Marble;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(19226, 32488, 1);
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r1 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45462, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45462, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        $i0$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 493);
        $i0 = r0.<com.example.amazed.Marble: int mX>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(19226, $i0$sym);
        return $i0;
    }

    public int getY()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.example.amazed.Marble r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.amazed.Marble;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(19227, 32489, 1);
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 492);
        $r1 = <com.example.amazed.Marble: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45463, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45463, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        $i0$sym = r0.<com.example.amazed.Marble: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_2 = r0.<com.example.amazed.Marble: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 494);
        $i0 = r0.<com.example.amazed.Marble: int mY>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(19227, $i0$sym);
        return $i0;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32490, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.Marble: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 10);
        r1 = $r0[10];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32491, 0);
        $r0 = newmultiarray (boolean)[11][];
        _sym_tmp_1 = <com.example.amazed.Marble: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 492);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.Marble: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(492);
        <com.example.amazed.Marble: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/Marble", 3268061382402408253L);
        return $r0;
    }
}
public class com.example.amazed.Maze extends java.lang.Object
{
    private static final int TILE_SIZE;
    private static final int MAZE_COLS;
    private static final int MAZE_ROWS;
    public static final int PATH_TILE;
    public static final int VOID_TILE;
    public static final int EXIT_TILE;
    private static final int VOID_COLOR;
    private static int[] mMazeData;
    public static final int MAX_LEVELS;
    private android.graphics.Rect mRect;
    private int mRow;
    private int mCol;
    private int mX;
    private int mY;
    private android.graphics.Bitmap mImgPath;
    private android.graphics.Bitmap mImgExit;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final acteve.symbolic.integer.Expression TILE_SIZE$sym;
    private static final int TILE_SIZE$a3tid;
    private static final acteve.symbolic.integer.Expression MAZE_COLS$sym;
    private static final int MAZE_COLS$a3tid;
    private static final acteve.symbolic.integer.Expression MAZE_ROWS$sym;
    private static final int MAZE_ROWS$a3tid;
    public static final acteve.symbolic.integer.Expression PATH_TILE$sym;
    public static final int PATH_TILE$a3tid;
    public static final acteve.symbolic.integer.Expression VOID_TILE$sym;
    public static final int VOID_TILE$a3tid;
    public static final acteve.symbolic.integer.Expression EXIT_TILE$sym;
    public static final int EXIT_TILE$a3tid;
    private static final acteve.symbolic.integer.Expression VOID_COLOR$sym;
    private static final int VOID_COLOR$a3tid;
    private static acteve.symbolic.integer.Expression mMazeData$sym;
    private static int mMazeData$a3tid;
    public static final acteve.symbolic.integer.Expression MAX_LEVELS$sym;
    public static final int MAX_LEVELS$a3tid;
    private int mRect$a3tid;
    private acteve.symbolic.integer.Expression mRow$sym;
    private int mRow$a3tid;
    private acteve.symbolic.integer.Expression mCol$sym;
    private int mCol$a3tid;
    private acteve.symbolic.integer.Expression mX$sym;
    private int mX$a3tid;
    private acteve.symbolic.integer.Expression mY$sym;
    private int mY$a3tid;
    private int mImgPath$a3tid;
    private int mImgExit$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(android.app.Activity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.example.amazed.Maze r0;
        android.app.Activity r1;
        boolean[][] $r2;
        boolean[] r3;
        android.graphics.Rect $r4;
        android.content.Context $r5, $r8;
        android.content.res.Resources $r6, $r9;
        android.graphics.Bitmap $r7, $r10;

        r0 := @this: com.example.amazed.Maze;
        r1 := @parameter0: android.app.Activity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1633, 32492, 2);
        _sym_tmp_1 = <com.example.amazed.Maze: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r2 = <com.example.amazed.Maze: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45464, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.Maze: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45464, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = new android.graphics.Rect;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<android.graphics.Rect: void <init>()>();
        _sym_tmp_2 = r0.<com.example.amazed.Maze: int mRect$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 500);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Maze: int mRect$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(500);
        r0.<com.example.amazed.Maze: android.graphics.Rect mRect> = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        $r5 = virtualinvoke r1.<android.app.Activity: android.content.Context getApplicationContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1196, null);
        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2100, null, null);
        $r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r6, 2130837506);
        _sym_tmp_3 = r0.<com.example.amazed.Maze: int mImgPath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 501);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Maze: int mImgPath$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(501);
        r0.<com.example.amazed.Maze: android.graphics.Bitmap mImgPath> = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        $r8 = virtualinvoke r1.<android.app.Activity: android.content.Context getApplicationContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1196, null);
        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2100, null, null);
        $r10 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r9, 2130837504);
        _sym_tmp_4 = r0.<com.example.amazed.Maze: int mImgExit$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 502);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Maze: int mImgExit$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(502);
        r0.<com.example.amazed.Maze: android.graphics.Bitmap mImgExit> = $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    void load(android.app.Activity, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $i4$sym, $i3$sym, $r14$sym, $i2$sym, $r13$sym, $r11$sym, i1$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2, $i3, $i4;
        com.example.amazed.Maze r0;
        android.app.Activity r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r20;
        java.io.InputStream r5;
        java.lang.Throwable r6, $r21;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r17, $r18, $r19;
        int[] $r11, $r13, $r14;
        android.content.res.AssetManager $r12;
        java.lang.Exception $r15, r16;

        r0 := @this: com.example.amazed.Maze;
        r1 := @parameter0: android.app.Activity;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21756, 32493, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.example.amazed.Maze: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r2 = <com.example.amazed.Maze: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45465, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.example.amazed.Maze: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45465, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r7 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("level");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, i0$sym);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".txt");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        r5 = null;

     label2:
        $r11 = newarray (int)[520];
        $r11$sym = null;
        <com.example.amazed.Maze: acteve.symbolic.integer.Expression mMazeData$sym> = $r11$sym;
        _sym_tmp_2 = <com.example.amazed.Maze: int mMazeData$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 503);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.Maze: int mMazeData$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(503);
        <com.example.amazed.Maze: int[] mMazeData> = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5641, null);
        $r12 = virtualinvoke r1.<android.app.Activity: android.content.res.AssetManager getAssets()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10412, null, null);
        r5 = virtualinvoke $r12.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r4);
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        $r13$sym = <com.example.amazed.Maze: acteve.symbolic.integer.Expression mMazeData$sym>;
        _sym_tmp_3 = <com.example.amazed.Maze: int mMazeData$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 503);
        $r13 = <com.example.amazed.Maze: int[] mMazeData>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>($r13$sym);
        $i2 = lengthof $r13;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i2$sym, i1, $i2);
        if i1 >= $i2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45466, 0);
        $r14$sym = <com.example.amazed.Maze: acteve.symbolic.integer.Expression mMazeData$sym>;
        _sym_tmp_4 = <com.example.amazed.Maze: int mMazeData$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 503);
        $r14 = <com.example.amazed.Maze: int[] mMazeData>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(235, null);
        $i3 = virtualinvoke r5.<java.io.InputStream: int read()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(235);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21778, $i3$sym);
        $i4 = staticinvoke <java.lang.Character: int getNumericValue(int)>($i3);
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21778);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>($r14$sym, i1$sym, $i4$sym, $r14, i1, $i4);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r14, i1);
        $r14[i1] = $i4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(235, null);
        virtualinvoke r5.<java.io.InputStream: int read()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(235, null);
        virtualinvoke r5.<java.io.InputStream: int read()>();
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label3;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45466, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18190, null);
        staticinvoke <com.example.amazed.Maze: void closeStream(java.io.Closeable)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label12;

     label6:
        $r15 := @caughtexception;

     label7:
        r16 = $r15;
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("load exception: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1536, null, null);
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Maze", $r20);

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18190, null);
        staticinvoke <com.example.amazed.Maze: void closeStream(java.io.Closeable)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label12;

     label9:
        $r21 := @caughtexception;

     label10:
        r6 = $r21;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18190, null);
        staticinvoke <com.example.amazed.Maze: void closeStream(java.io.Closeable)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        throw r6;

     label12:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        return;

        catch java.lang.Exception from label2 to label5 with label6;
        catch java.lang.Throwable from label2 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    public void draw(android.graphics.Canvas, android.graphics.Paint)
    {
        acteve.symbolic.integer.Expression _sym_tmp_27, $i20$sym, $i19$sym, $i18$sym, $i17$sym, $i16$sym, $i15$sym, $i14$sym, $r10$sym, $f3$sym, $i13$sym, $f2$sym, $i12$sym, $i11$sym, $r8$sym, $f1$sym, $i10$sym, $f0$sym, $i9$sym, $i8$sym, $r6$sym, $i7$sym, $i6$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $r5$sym, i0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        com.example.amazed.Maze r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        boolean[][] $r3;
        boolean[] r4;
        int[] $r5, $r6, $r8, $r10;
        android.graphics.Bitmap $r7, $r9;
        float $f0, $f1, $f2, $f3;
        android.graphics.Rect $r11, $r12, $r13, $r14, $r15;

        r0 := @this: com.example.amazed.Maze;
        r1 := @parameter0: android.graphics.Canvas;
        r2 := @parameter1: android.graphics.Paint;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18352, 32494, 3);
        _sym_tmp_1 = <com.example.amazed.Maze: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r3 = <com.example.amazed.Maze: boolean[][] $VRc>;
        _sym_tmp_27 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45467, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.example.amazed.Maze: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45467, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;

     label2:
        $r5$sym = <com.example.amazed.Maze: acteve.symbolic.integer.Expression mMazeData$sym>;
        _sym_tmp_2 = <com.example.amazed.Maze: int mMazeData$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 503);
        $r5 = <com.example.amazed.Maze: int[] mMazeData>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>($r5$sym);
        $i1 = lengthof $r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_27 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        if i0 >= $i1 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45468, 0);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 20);
        $i2 = i0 / 20;
        r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mRow$sym> = $i2$sym;
        _sym_tmp_3 = r0.<com.example.amazed.Maze: int mRow$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 504);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Maze: int mRow$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(504);
        r0.<com.example.amazed.Maze: int mRow> = $i2;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 20);
        $i3 = i0 % 20;
        r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mCol$sym> = $i3$sym;
        _sym_tmp_4 = r0.<com.example.amazed.Maze: int mCol$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 505);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Maze: int mCol$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(505);
        r0.<com.example.amazed.Maze: int mCol> = $i3;
        $i4$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mCol$sym>;
        _sym_tmp_5 = r0.<com.example.amazed.Maze: int mCol$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 505);
        $i4 = r0.<com.example.amazed.Maze: int mCol>;
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 16);
        $i5 = $i4 * 16;
        r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mX$sym> = $i5$sym;
        _sym_tmp_6 = r0.<com.example.amazed.Maze: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 506);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Maze: int mX$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(506);
        r0.<com.example.amazed.Maze: int mX> = $i5;
        $i6$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mRow$sym>;
        _sym_tmp_7 = r0.<com.example.amazed.Maze: int mRow$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 504);
        $i6 = r0.<com.example.amazed.Maze: int mRow>;
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 16);
        $i7 = $i6 * 16;
        r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mY$sym> = $i7$sym;
        _sym_tmp_8 = r0.<com.example.amazed.Maze: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 507);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.example.amazed.Maze: int mY$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(507);
        r0.<com.example.amazed.Maze: int mY> = $i7;
        $r6$sym = <com.example.amazed.Maze: acteve.symbolic.integer.Expression mMazeData$sym>;
        _sym_tmp_9 = <com.example.amazed.Maze: int mMazeData$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 503);
        $r6 = <com.example.amazed.Maze: int[] mMazeData>;
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>($r6$sym, i0$sym, $r6, i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r6, i0);
        $i8 = $r6[i0];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        _sym_tmp_27 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i8$sym, null, $i8, 0);
        if $i8 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45469, 0);
        _sym_tmp_10 = r0.<com.example.amazed.Maze: int mImgPath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 501);
        $r7 = r0.<com.example.amazed.Maze: android.graphics.Bitmap mImgPath>;
        $i9$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_11 = r0.<com.example.amazed.Maze: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 506);
        $i9 = r0.<com.example.amazed.Maze: int mX>;
        $f0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i9$sym, 6);
        $f0 = (float) $i9;
        $i10$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_12 = r0.<com.example.amazed.Maze: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 507);
        $i10 = r0.<com.example.amazed.Maze: int mY>;
        $f1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i10$sym, 6);
        $f1 = (float) $i10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2154, null, null, $f0$sym, $f1$sym, null);
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r7, $f0, $f1, r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        goto label8;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45469, 1);
        goto label4;

     label4:
        $r8$sym = <com.example.amazed.Maze: acteve.symbolic.integer.Expression mMazeData$sym>;
        _sym_tmp_13 = <com.example.amazed.Maze: int mMazeData$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 503);
        $r8 = <com.example.amazed.Maze: int[] mMazeData>;
        $i11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>($r8$sym, i0$sym, $r8, i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r8, i0);
        $i11 = $r8[i0];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        _sym_tmp_27 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i11$sym, null, $i11, 2);
        if $i11 != 2 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45470, 0);
        _sym_tmp_14 = r0.<com.example.amazed.Maze: int mImgExit$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 502);
        $r9 = r0.<com.example.amazed.Maze: android.graphics.Bitmap mImgExit>;
        $i12$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_15 = r0.<com.example.amazed.Maze: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 506);
        $i12 = r0.<com.example.amazed.Maze: int mX>;
        $f2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i12$sym, 6);
        $f2 = (float) $i12;
        $i13$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_16 = r0.<com.example.amazed.Maze: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 507);
        $i13 = r0.<com.example.amazed.Maze: int mY>;
        $f3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i13$sym, 6);
        $f3 = (float) $i13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2154, null, null, $f2$sym, $f3$sym, null);
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r9, $f2, $f3, r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        goto label8;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45470, 1);
        goto label6;

     label6:
        $r10$sym = <com.example.amazed.Maze: acteve.symbolic.integer.Expression mMazeData$sym>;
        _sym_tmp_17 = <com.example.amazed.Maze: int mMazeData$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 503);
        $r10 = <com.example.amazed.Maze: int[] mMazeData>;
        $i14$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>($r10$sym, i0$sym, $r10, i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r10, i0);
        $i14 = $r10[i0];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        _sym_tmp_27 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i14$sym, null, $i14, 1);
        if $i14 != 1 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45471, 0);
        _sym_tmp_18 = r0.<com.example.amazed.Maze: int mRect$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 500);
        $r11 = r0.<com.example.amazed.Maze: android.graphics.Rect mRect>;
        $i15$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_19 = r0.<com.example.amazed.Maze: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 506);
        $i15 = r0.<com.example.amazed.Maze: int mX>;
        $r11.<android.graphics.Rect: int left> = $i15;
        _sym_tmp_20 = r0.<com.example.amazed.Maze: int mRect$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 500);
        $r12 = r0.<com.example.amazed.Maze: android.graphics.Rect mRect>;
        $i16$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_21 = r0.<com.example.amazed.Maze: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 507);
        $i16 = r0.<com.example.amazed.Maze: int mY>;
        $r12.<android.graphics.Rect: int top> = $i16;
        _sym_tmp_22 = r0.<com.example.amazed.Maze: int mRect$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 500);
        $r13 = r0.<com.example.amazed.Maze: android.graphics.Rect mRect>;
        $i17$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mX$sym>;
        _sym_tmp_23 = r0.<com.example.amazed.Maze: int mX$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 506);
        $i17 = r0.<com.example.amazed.Maze: int mX>;
        $i18$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i17$sym, null, $i17, 16);
        $i18 = $i17 + 16;
        $r13.<android.graphics.Rect: int right> = $i18;
        _sym_tmp_24 = r0.<com.example.amazed.Maze: int mRect$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 500);
        $r14 = r0.<com.example.amazed.Maze: android.graphics.Rect mRect>;
        $i19$sym = r0.<com.example.amazed.Maze: acteve.symbolic.integer.Expression mY$sym>;
        _sym_tmp_25 = r0.<com.example.amazed.Maze: int mY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_25, 507);
        $i19 = r0.<com.example.amazed.Maze: int mY>;
        $i20$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i19$sym, null, $i19, 16);
        $i20 = $i19 + 16;
        $r14.<android.graphics.Rect: int bottom> = $i20;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2092, null, null);
        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-16777216);
        _sym_tmp_26 = r0.<com.example.amazed.Maze: int mRect$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 500);
        $r15 = r0.<com.example.amazed.Maze: android.graphics.Rect mRect>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10170, null, null, null);
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r15, r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 7);
        r4[7] = 1;
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45471, 1);
        goto label8;

     label8:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 8);
        r4[8] = 1;
        goto label2;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_27, 45468, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 9);
        r4[9] = 1;
        return;
    }

    public int getCellType(int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i6$sym, $r3$sym, i5$sym, i4$sym, i3$sym, i2$sym, r2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, i1, i2, i3, i4, i5, $i6;
        com.example.amazed.Maze r0;
        boolean[][] $r1;
        boolean[] r2;
        int[] $r3;

        r0 := @this: com.example.amazed.Maze;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21759, 32495, 3);
        i0$sym = a3targs$symargs[1];
        i1$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.example.amazed.Maze: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r1 = <com.example.amazed.Maze: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45472, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Maze: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45472, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 16);
        i2 = i0 / 16;
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 16);
        i3 = i1 / 16;
        i4$sym = null;
        i4 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 0);
        if i3 <= 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45473, 0);
        i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 20);
        i4 = i3 * 20;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45473, 1);
        goto label3;

     label3:
        i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, i2$sym, i4, i2);
        i5 = i4 + i2;
        $r3$sym = <com.example.amazed.Maze: acteve.symbolic.integer.Expression mMazeData$sym>;
        _sym_tmp_2 = <com.example.amazed.Maze: int mMazeData$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 503);
        $r3 = <com.example.amazed.Maze: int[] mMazeData>;
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>($r3$sym, i5$sym, $r3, i5);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, i5);
        $i6 = $r3[i5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21759, $i6$sym);
        return $i6;
    }

    private static void closeStream(java.io.Closeable)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.io.Closeable r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r4;

        r0 := @parameter0: java.io.Closeable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18190, 32496, 1);
        _sym_tmp_1 = <com.example.amazed.Maze: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r1 = <com.example.amazed.Maze: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45474, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.example.amazed.Maze: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45474, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_2 = null;
        if r0 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45475, 0);

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        interfaceinvoke r0.<java.io.Closeable: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;
        r3 = $r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45475, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32497, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.example.amazed.Maze: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32498, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.example.amazed.Maze: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 499);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.example.amazed.Maze: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(499);
        <com.example.amazed.Maze: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[10];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/amazed/Maze", 8833113581649420723L);
        return $r0;
    }
}
public final class com.example.amazed.R$array extends java.lang.Object
{
    public static final int gameStrings;
    public static final acteve.symbolic.integer.Expression gameStrings$sym;
    public static final int gameStrings$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.example.amazed.R$array r0;

        r0 := @this: com.example.amazed.R$array;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32499, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.example.amazed.R$attr extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.example.amazed.R$attr r0;

        r0 := @this: com.example.amazed.R$attr;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32500, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.example.amazed.R$drawable extends java.lang.Object
{
    public static final int exit;
    public static final int icon;
    public static final int path;
    public static final acteve.symbolic.integer.Expression exit$sym;
    public static final int exit$a3tid;
    public static final acteve.symbolic.integer.Expression icon$sym;
    public static final int icon$a3tid;
    public static final acteve.symbolic.integer.Expression path$sym;
    public static final int path$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.example.amazed.R$drawable r0;

        r0 := @this: com.example.amazed.R$drawable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32501, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.example.amazed.R$string extends java.lang.Object
{
    public static final int app_name;
    public static final acteve.symbolic.integer.Expression app_name$sym;
    public static final int app_name$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.example.amazed.R$string r0;

        r0 := @this: com.example.amazed.R$string;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32502, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.example.amazed.R extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.example.amazed.R r0;

        r0 := @this: com.example.amazed.R;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32503, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
