public final class com.tum.yahtzee.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;
    public static final acteve.symbolic.integer.Expression DEBUG$sym;
    public static final int DEBUG$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.tum.yahtzee.BuildConfig r0;

        r0 := @this: com.tum.yahtzee.BuildConfig;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32419, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements com.tum.yahtzee.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private static final int DEFAULT_COVERAGE_FILE_PATH$a3tid;
    private final int mResults$a3tid;
    private int mIntent$a3tid;
    private static final acteve.symbolic.integer.Expression LOGD$sym;
    private static final int LOGD$a3tid;
    private acteve.symbolic.integer.Expression mCoverage$sym;
    private int mCoverage$a3tid;
    private int mCoverageFilePath$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32420, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45366, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45366, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        _sym_tmp_2 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 449);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(449);
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym> = null;
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 450);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(450);
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32421, 2);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45367, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45367, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $r4 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_7 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45368, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21742, null, null, null);
        $z0 = specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21742);
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym> = $z0$sym;
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 450);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(450);
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        _sym_tmp_4 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 452);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(452);
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45368, 1);
        goto label3;

     label3:
        $r11 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8437, null);
        $r12 = virtualinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "com/tum/yahtzee/EmmaInstrument/InstrumentedActivity");
        _sym_tmp_5 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 453);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(453);
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        _sym_tmp_6 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 453);
        $r13 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1591, null, null);
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(8425, 32422, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45369, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45369, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $r4 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8425, null);
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(10470);
        staticinvoke <android.os.Looper: void prepare()>();
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 453);
        $r5 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8450, null, null);
        $r6 = virtualinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (com.tum.yahtzee.EmmaInstrument.InstrumentedActivity) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21743, null, null);
        virtualinvoke r3.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: void setFinishListener(com.tum.yahtzee.EmmaInstrument.FinishListener)>(r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21742, 32423, 3);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r3 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45370, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45370, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 3);
        r4 = $r3[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_2 = null;
        if r5 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45371, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(20857, null);
        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(20857);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45372, 0);
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label5;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45371, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45372, 1);
        goto label4;

     label4:
        $z1$sym = null;
        $z1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21742, $z1$sym);
        return $z1;
    }

    private void generateCoverageReport()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21747, 32424, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45373, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45373, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $r6 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21744, null);
        $r8 = specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2060, null);
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 0);
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 1);
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 2);
        $r9[2] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2770, null, null, null);
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 0);
        $r13[0] = r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 1);
        $r13[1] = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 2);
        $r13[2] = $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2771, null, null, null);
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label10;

     label4:
        $r17 := @caughtexception;
        r18 = $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label10;

     label5:
        $r19 := @caughtexception;
        r20 = $r19;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21746, null, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label10;

     label6:
        $r21 := @caughtexception;
        r22 = $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21746, null, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label10;

     label7:
        $r23 := @caughtexception;
        r24 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21746, null, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label10;

     label8:
        $r25 := @caughtexception;
        r26 = $r25;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21746, null, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label10;

     label9:
        $r27 := @caughtexception;
        r28 = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21746, null, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
        catch java.lang.SecurityException from label2 to label3 with label5;
        catch java.lang.NoSuchMethodException from label2 to label3 with label6;
        catch java.lang.IllegalArgumentException from label2 to label3 with label7;
        catch java.lang.IllegalAccessException from label2 to label3 with label8;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label9;
    }

    private java.lang.String getCoverageFilePath()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21744, 32425, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45374, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45374, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 452);
        $r3 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = null;
        if $r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45375, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45375, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 452);
        $r4 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21748, 32426, 2);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45376, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45376, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 6);
        r3 = $r2[6];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45377, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45378, 0);
        _sym_tmp_2 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 452);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(452);
        r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21748, null);
        return 1;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45377, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45378, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21748, null);
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21746, 32427, 2);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45379, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45379, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 7);
        r3 = $r2[7];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21745, null, null, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21745, 32428, 3);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r3 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45380, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45380, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 8);
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $r9 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(110, null, null, null);
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 449);
        $r10 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(7751, null, null, null);
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21749, 32429, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45381, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45381, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $r3 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0$sym = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym>;
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 450);
        $z0 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45382, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21747, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45382, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 449);
        $r4 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8430, null, null, null);
        virtualinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21750, 32430, 2);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45383, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45383, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 10);
        r3 = $r2[10];
        _sym_tmp_2 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $r4 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0$sym = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym>;
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 450);
        $z0 = r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45384, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21748, null, null);
        $z1 = specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21748);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45385, 0);
        _sym_tmp_4 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 451);
        $r9 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45385, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21747, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21748, null, null);
        specialinvoke r0.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45384, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32431, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 11);
        r1 = $r0[11];
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 451);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(451);
        <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32432, 0);
        $r0 = newmultiarray (boolean)[12][];
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 448);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(448);
        <com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  com.tum.yahtzee.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final com.tum.yahtzee.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.EmmaInstrument.InstrumentedActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21752, 32433, 2);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 454);
        $r2 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45386, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45386, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 455);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(455);
        r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z1$sym, $z0$sym, $r16$sym, $r15$sym, $r14$sym, $i0$sym, $r12$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity $r10, $r18;
        com.tum.yahtzee.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32434, 3);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 454);
        $r3 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45387, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45387, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        _sym_tmp_2 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 455);
        $r10 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21753, null);
        $r11 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: com.tum.yahtzee.EmmaInstrument.FinishListener access$000(com.tum.yahtzee.EmmaInstrument.InstrumentedActivity)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = null;
        if $r11 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45388, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_4 = null;
        if r5 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45389, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(731, null, null);
        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(731);
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0$sym = null;
        $i0 = lengthof r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45390, 0);
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r6, 0);
        $r14 = r6[0];
        $r15$sym = $r14$sym;
        $r15 = (byte[]) $r14;
        $r16$sym = $r15$sym;
        $r16 = (byte[]) $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5113, $r16$sym);
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4804, null);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5110, null);
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45391, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45392, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45391, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 455);
        $r18 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21753, null);
        $r19 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: com.tum.yahtzee.EmmaInstrument.FinishListener access$000(com.tum.yahtzee.EmmaInstrument.InstrumentedActivity)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21750, null, null);
        interfaceinvoke $r19.<com.tum.yahtzee.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        goto label8;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45388, 1);
        goto label8;

        goto label8;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45389, 1);
        goto label8;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45390, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45392, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32435, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32436, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 454);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(454);
        <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class com.tum.yahtzee.EmmaInstrument.InstrumentedActivity extends com.tum.yahtzee.YahtzeeActivity
{
    public static java.lang.String TAG;
    private com.tum.yahtzee.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private int mListener$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32437, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 456);
        $r1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45393, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45393, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<com.tum.yahtzee.YahtzeeActivity: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void setFinishListener(com.tum.yahtzee.EmmaInstrument.FinishListener)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity r0;
        com.tum.yahtzee.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: com.tum.yahtzee.EmmaInstrument.FinishListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21743, 32438, 2);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 456);
        $r2 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45394, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45394, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        com.tum.yahtzee.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1658, 32439, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 456);
        $r1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45395, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45395, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_2 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 457);
        $r4 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        specialinvoke r0.<com.tum.yahtzee.YahtzeeActivity: void finish()>();
        _sym_tmp_3 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 458);
        $r8 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: com.tum.yahtzee.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = null;
        if $r8 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45396, 0);
        _sym_tmp_4 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 458);
        $r9 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: com.tum.yahtzee.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21749, null);
        interfaceinvoke $r9.<com.tum.yahtzee.EmmaInstrument.FinishListener: void onActivityFinished()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45396, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    static com.tum.yahtzee.EmmaInstrument.FinishListener access$000(com.tum.yahtzee.EmmaInstrument.InstrumentedActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: com.tum.yahtzee.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21753, 32440, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 456);
        $r1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45397, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45397, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 458);
        $r3 = r0.<com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: com.tum.yahtzee.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32441, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 457);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(457);
        <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32442, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 456);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(456);
        <com.tum.yahtzee.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32443, 1);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 459);
        $r1 = <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45398, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45398, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32444, 3);
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 459);
        $r3 = <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45399, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45399, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<com.tum.yahtzee.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_2 = null;
        if r6 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45400, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21750, null, null);
        interfaceinvoke r6.<com.tum.yahtzee.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45400, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32445, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 460);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(460);
        <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32446, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 459);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(459);
        <com.tum.yahtzee.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
class com.tum.yahtzee.GameActivity$1 extends com.tum.yahtzee.listeners.OnCubeClickListener
{
    final com.tum.yahtzee.GameActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.GameActivity, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.GameActivity$1 r0;
        com.tum.yahtzee.GameActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.GameActivity$1;
        r1 := @parameter0: com.tum.yahtzee.GameActivity;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21754, 32447, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 461);
        $r2 = <com.tum.yahtzee.GameActivity$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45401, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45401, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 462);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(462);
        r0.<com.tum.yahtzee.GameActivity$1: com.tum.yahtzee.GameActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, i0$sym);
        specialinvoke r0.<com.tum.yahtzee.listeners.OnCubeClickListener: void <init>(int)>(i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.tum.yahtzee.GameActivity $r4;

        r0 := @this: com.tum.yahtzee.GameActivity$1;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32448, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 461);
        $r2 = <com.tum.yahtzee.GameActivity$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45402, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45402, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1399, null, null);
        specialinvoke r0.<com.tum.yahtzee.listeners.OnCubeClickListener: void onClick(android.view.View)>(r1);
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 462);
        $r4 = r0.<com.tum.yahtzee.GameActivity$1: com.tum.yahtzee.GameActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21755, null);
        staticinvoke <com.tum.yahtzee.GameActivity: void access$000(com.tum.yahtzee.GameActivity)>($r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32449, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameActivity$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32450, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 461);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameActivity$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(461);
        <com.tum.yahtzee.GameActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/GameActivity$1", 4397209119404517693L);
        return $r0;
    }
}
class com.tum.yahtzee.GameActivity$2 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.tum.yahtzee.GameActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.GameActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$2 r0;
        com.tum.yahtzee.GameActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.GameActivity$2;
        r1 := @parameter0: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21756, 32451, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 463);
        $r2 = <com.tum.yahtzee.GameActivity$2: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45403, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45403, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 464);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity$2: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(464);
        r0.<com.tum.yahtzee.GameActivity$2: com.tum.yahtzee.GameActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$2 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.tum.yahtzee.GameController $r4;
        com.tum.yahtzee.units.Player $r5;
        boolean $z0;
        com.tum.yahtzee.GameActivity $r6, $r7;

        r0 := @this: com.tum.yahtzee.GameActivity$2;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32452, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 463);
        $r2 = <com.tum.yahtzee.GameActivity$2: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45404, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45404, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r4 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21758, null);
        $r5 = virtualinvoke $r4.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player getCurrentPlayer()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21759, null);
        $z0 = virtualinvoke $r5.<com.tum.yahtzee.units.Player: boolean shake()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21759);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45405, 0);
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 464);
        $r6 = r0.<com.tum.yahtzee.GameActivity$2: com.tum.yahtzee.GameActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21760, null, null);
        staticinvoke <com.tum.yahtzee.services.MessageService: void showMessage(android.content.Context,java.lang.String)>($r6, "You can only shake 2 times. (2 because first time is used to generate the random cubes.)");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45405, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameActivity$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 464);
        $r7 = r0.<com.tum.yahtzee.GameActivity$2: com.tum.yahtzee.GameActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21755, null);
        staticinvoke <com.tum.yahtzee.GameActivity: void access$000(com.tum.yahtzee.GameActivity)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32453, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameActivity$2: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32454, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 463);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameActivity$2: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(463);
        <com.tum.yahtzee.GameActivity$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/GameActivity$2", -2875816740484243731L);
        return $r0;
    }
}
class com.tum.yahtzee.GameActivity$3 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.tum.yahtzee.GameActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.GameActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$3 r0;
        com.tum.yahtzee.GameActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.GameActivity$3;
        r1 := @parameter0: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21756, 32455, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 465);
        $r2 = <com.tum.yahtzee.GameActivity$3: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45406, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45406, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 466);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity$3: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        r0.<com.tum.yahtzee.GameActivity$3: com.tum.yahtzee.GameActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$3 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.tum.yahtzee.GameActivity $r4;

        r0 := @this: com.tum.yahtzee.GameActivity$3;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32456, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 465);
        $r2 = <com.tum.yahtzee.GameActivity$3: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45407, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45407, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 466);
        $r4 = r0.<com.tum.yahtzee.GameActivity$3: com.tum.yahtzee.GameActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21761, null);
        staticinvoke <com.tum.yahtzee.GameActivity: void access$100(com.tum.yahtzee.GameActivity)>($r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32457, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameActivity$3: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32458, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 465);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameActivity$3: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(465);
        <com.tum.yahtzee.GameActivity$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/GameActivity$3", 4320153508954628847L);
        return $r0;
    }
}
class com.tum.yahtzee.GameActivity$4 extends java.lang.Object implements android.widget.AdapterView$OnItemSelectedListener
{
    final com.tum.yahtzee.GameActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.GameActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$4 r0;
        com.tum.yahtzee.GameActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.GameActivity$4;
        r1 := @parameter0: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21756, 32459, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 467);
        $r2 = <com.tum.yahtzee.GameActivity$4: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45408, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45408, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 468);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity$4: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(468);
        r0.<com.tum.yahtzee.GameActivity$4: com.tum.yahtzee.GameActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onItemSelected(android.widget.AdapterView, android.view.View, int, long)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $r7$sym, r4$sym, l1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.GameActivity$4 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        long l1;
        boolean[][] $r3;
        boolean[] r4;
        com.tum.yahtzee.GameController $r5;
        com.tum.yahtzee.units.Player $r6;
        java.lang.Object $r7;
        java.lang.String $r8;
        com.tum.yahtzee.GameActivity $r9;

        r0 := @this: com.tum.yahtzee.GameActivity$4;
        r1 := @parameter0: android.widget.AdapterView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1660, 32460, 5);
        i0$sym = a3targs$symargs[3];
        l1$sym = a3targs$symargs[4];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 467);
        $r3 = <com.tum.yahtzee.GameActivity$4: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45409, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.tum.yahtzee.GameActivity$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45409, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r5 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21758, null);
        $r6 = virtualinvoke $r5.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player getCurrentPlayer()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(12456, null, i0$sym);
        $r7 = virtualinvoke r1.<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>(i0);
        $r7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(12456);
        $r8 = (java.lang.String) $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21762, null, null);
        virtualinvoke $r6.<com.tum.yahtzee.units.Player: void setSelectedMove(java.lang.String)>($r8);
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 468);
        $r9 = r0.<com.tum.yahtzee.GameActivity$4: com.tum.yahtzee.GameActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21763, null);
        staticinvoke <com.tum.yahtzee.GameActivity: void access$200(com.tum.yahtzee.GameActivity)>($r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void onNothingSelected(android.widget.AdapterView)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.GameActivity$4 r0;
        android.widget.AdapterView r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.GameActivity$4;
        r1 := @parameter0: android.widget.AdapterView;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1661, 32461, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 467);
        $r2 = <com.tum.yahtzee.GameActivity$4: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45410, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45410, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32462, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameActivity$4: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32463, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 467);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameActivity$4: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(467);
        <com.tum.yahtzee.GameActivity$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/GameActivity$4", -8973321037043264735L);
        return $r0;
    }
}
class com.tum.yahtzee.GameActivity$5 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.List val$emptyMoves;
    final com.tum.yahtzee.GameActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$emptyMoves$a3tid;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.GameActivity, java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$5 r0;
        com.tum.yahtzee.GameActivity r1;
        java.util.List r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.tum.yahtzee.GameActivity$5;
        r1 := @parameter0: com.tum.yahtzee.GameActivity;
        r2 := @parameter1: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21764, 32464, 3);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 469);
        $r3 = <com.tum.yahtzee.GameActivity$5: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45411, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.tum.yahtzee.GameActivity$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45411, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 470);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity$5: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(470);
        r0.<com.tum.yahtzee.GameActivity$5: com.tum.yahtzee.GameActivity this$0> = r1;
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameActivity$5: int val$emptyMoves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 471);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity$5: int val$emptyMoves$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(471);
        r0.<com.tum.yahtzee.GameActivity$5: java.util.List val$emptyMoves> = r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $r7$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.GameActivity$5 r0;
        android.content.DialogInterface r1;
        boolean[][] $r2;
        boolean[] r3;
        com.tum.yahtzee.GameController $r4;
        com.tum.yahtzee.units.Player $r5;
        java.util.List $r6;
        java.lang.Object $r7;
        java.lang.String $r8;

        r0 := @this: com.tum.yahtzee.GameActivity$5;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1528, 32465, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 469);
        $r2 = <com.tum.yahtzee.GameActivity$5: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45412, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45412, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r4 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21758, null);
        $r5 = virtualinvoke $r4.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player getCurrentPlayer()>();
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$5: int val$emptyMoves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 471);
        $r6 = r0.<com.tum.yahtzee.GameActivity$5: java.util.List val$emptyMoves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);
        $r7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r8 = (java.lang.String) $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null);
        virtualinvoke $r5.<com.tum.yahtzee.units.Player: void doSpecialMove(java.lang.String)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32466, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameActivity$5: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32467, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 469);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameActivity$5: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(469);
        <com.tum.yahtzee.GameActivity$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/GameActivity$5", 4705431560093717393L);
        return $r0;
    }
}
class com.tum.yahtzee.GameActivity$6 extends com.tum.yahtzee.services.MethodPointer
{
    final com.tum.yahtzee.GameActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.GameActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$6 r0;
        com.tum.yahtzee.GameActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.GameActivity$6;
        r1 := @parameter0: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21756, 32468, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 472);
        $r2 = <com.tum.yahtzee.GameActivity$6: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45413, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45413, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 473);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity$6: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(473);
        r0.<com.tum.yahtzee.GameActivity$6: com.tum.yahtzee.GameActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<com.tum.yahtzee.services.MethodPointer: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void execute()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity$6 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.GameActivity $r3;

        r0 := @this: com.tum.yahtzee.GameActivity$6;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11307, 32469, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 472);
        $r1 = <com.tum.yahtzee.GameActivity$6: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45414, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45414, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r3 = r0.<com.tum.yahtzee.GameActivity$6: com.tum.yahtzee.GameActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21766, null);
        staticinvoke <com.tum.yahtzee.GameActivity: void access$300(com.tum.yahtzee.GameActivity)>($r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32470, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameActivity$6: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32471, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 472);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameActivity$6: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(472);
        <com.tum.yahtzee.GameActivity$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/GameActivity$6", 4320153508954628847L);
        return $r0;
    }
}
public class com.tum.yahtzee.GameActivity extends android.app.Activity
{
    private android.widget.TextView playerText;
    private android.widget.TextView possibilityText;
    private android.widget.TextView pointsText;
    private android.widget.ImageButton[] cubeButtons;
    private android.widget.Button shakeButton;
    private android.widget.Button saveButton;
    private android.widget.Spinner moveSpinner;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int playerText$a3tid;
    private int possibilityText$a3tid;
    private int pointsText$a3tid;
    private int cubeButtons$a3tid;
    private int shakeButton$a3tid;
    private int saveButton$a3tid;
    private int moveSpinner$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.widget.ImageButton[] $r3;

        r0 := @this: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32472, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45415, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45415, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Activity: void <init>()>();
        $r3 = newarray (android.widget.ImageButton)[5];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 475);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(475);
        r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_16, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.GameActivity r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.View $r4, $r6, $r8, $r11, $r14, $r17, $r20, $r23, $r28, $r30, $r32;
        android.widget.TextView $r5, $r7, $r9;
        android.widget.ImageButton[] $r10, $r13, $r16, $r19, $r22, $r25;
        android.widget.ImageButton $r12, $r15, $r18, $r21, $r24, $r26;
        com.tum.yahtzee.GameActivity$1 $r27;
        android.widget.Button $r29, $r31, $r34, $r36;
        android.widget.Spinner $r33;
        com.tum.yahtzee.GameActivity$2 $r35;
        com.tum.yahtzee.GameActivity$3 $r37;

        r0 := @this: com.tum.yahtzee.GameActivity;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32473, 2);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r2 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_16 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45416, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45416, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1626, null, null);
        virtualinvoke r0.<com.tum.yahtzee.GameActivity: void setContentView(int)>(2130903040);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r4 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034113);
        $r5 = (android.widget.TextView) $r4;
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity: int playerText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 476);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity: int playerText$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(476);
        r0.<com.tum.yahtzee.GameActivity: android.widget.TextView playerText> = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r6 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034126);
        $r7 = (android.widget.TextView) $r6;
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameActivity: int possibilityText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 477);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity: int possibilityText$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(477);
        r0.<com.tum.yahtzee.GameActivity: android.widget.TextView possibilityText> = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r8 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034129);
        $r9 = (android.widget.TextView) $r8;
        _sym_tmp_4 = r0.<com.tum.yahtzee.GameActivity: int pointsText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 478);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity: int pointsText$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(478);
        r0.<com.tum.yahtzee.GameActivity: android.widget.TextView pointsText> = $r9;
        _sym_tmp_5 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 475);
        $r10 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r11 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034115);
        $r12 = (android.widget.ImageButton) $r11;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r10, 0);
        $r10[0] = $r12;
        _sym_tmp_6 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 475);
        $r13 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r14 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034116);
        $r15 = (android.widget.ImageButton) $r14;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 1);
        $r13[1] = $r15;
        _sym_tmp_7 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 475);
        $r16 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r17 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034117);
        $r18 = (android.widget.ImageButton) $r17;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r16, 2);
        $r16[2] = $r18;
        _sym_tmp_8 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 475);
        $r19 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r20 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034118);
        $r21 = (android.widget.ImageButton) $r20;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r19, 3);
        $r19[3] = $r21;
        _sym_tmp_9 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 475);
        $r22 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r23 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034119);
        $r24 = (android.widget.ImageButton) $r23;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r22, 4);
        $r22[4] = $r24;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 5);
        if i0 >= 5 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45417, 0);
        _sym_tmp_10 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 475);
        $r25 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r25, i0);
        $r26 = $r25[i0];
        $r27 = new com.tum.yahtzee.GameActivity$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21754, null, null, i0$sym);
        specialinvoke $r27.<com.tum.yahtzee.GameActivity$1: void <init>(com.tum.yahtzee.GameActivity,int)>(r0, i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1450, null, null);
        virtualinvoke $r26.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r27);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45417, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r28 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034120);
        $r29 = (android.widget.Button) $r28;
        _sym_tmp_11 = r0.<com.tum.yahtzee.GameActivity: int shakeButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 479);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity: int shakeButton$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(479);
        r0.<com.tum.yahtzee.GameActivity: android.widget.Button shakeButton> = $r29;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r30 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034130);
        $r31 = (android.widget.Button) $r30;
        _sym_tmp_12 = r0.<com.tum.yahtzee.GameActivity: int saveButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 480);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity: int saveButton$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(480);
        r0.<com.tum.yahtzee.GameActivity: android.widget.Button saveButton> = $r31;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r32 = virtualinvoke r0.<com.tum.yahtzee.GameActivity: android.view.View findViewById(int)>(2131034123);
        $r33 = (android.widget.Spinner) $r32;
        _sym_tmp_13 = r0.<com.tum.yahtzee.GameActivity: int moveSpinner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 481);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameActivity: int moveSpinner$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(481);
        r0.<com.tum.yahtzee.GameActivity: android.widget.Spinner moveSpinner> = $r33;
        _sym_tmp_14 = r0.<com.tum.yahtzee.GameActivity: int shakeButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 479);
        $r34 = r0.<com.tum.yahtzee.GameActivity: android.widget.Button shakeButton>;
        $r35 = new com.tum.yahtzee.GameActivity$2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21756, null, null);
        specialinvoke $r35.<com.tum.yahtzee.GameActivity$2: void <init>(com.tum.yahtzee.GameActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1450, null, null);
        virtualinvoke $r34.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r35);
        _sym_tmp_15 = r0.<com.tum.yahtzee.GameActivity: int saveButton$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 480);
        $r36 = r0.<com.tum.yahtzee.GameActivity: android.widget.Button saveButton>;
        $r37 = new com.tum.yahtzee.GameActivity$3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21756, null, null);
        specialinvoke $r37.<com.tum.yahtzee.GameActivity$3: void <init>(com.tum.yahtzee.GameActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1450, null, null);
        virtualinvoke $r36.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r37);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10698, null);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void update()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        return;
    }

    private void update()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.units.Player r3;
        java.lang.String[] r4, $r9;
        com.tum.yahtzee.GameController $r5;
        android.widget.TextView $r6;
        java.lang.String $r7;
        java.util.List $r8;
        java.lang.Object[] $r10;
        android.widget.Spinner $r11, $r13;
        android.widget.ArrayAdapter $r12;
        com.tum.yahtzee.GameActivity$4 $r14;

        r0 := @this: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10698, 32474, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45418, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45418, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r5 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21758, null);
        r3 = virtualinvoke $r5.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player getCurrentPlayer()>();
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity: int playerText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 476);
        $r6 = r0.<com.tum.yahtzee.GameActivity: android.widget.TextView playerText>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r7 = virtualinvoke r3.<com.tum.yahtzee.units.Player: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21767, null);
        $r8 = virtualinvoke r3.<com.tum.yahtzee.units.Player: java.util.List getMoves()>();
        $r9 = newarray (java.lang.String)[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(153, null, null);
        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);
        r4 = (java.lang.String[]) $r10;
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameActivity: int moveSpinner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 481);
        $r11 = r0.<com.tum.yahtzee.GameActivity: android.widget.Spinner moveSpinner>;
        $r12 = new android.widget.ArrayAdapter;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10783, null, null, null, null);
        specialinvoke $r12.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>(r0, 17367048, r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13209, null, null);
        virtualinvoke $r11.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>($r12);
        _sym_tmp_4 = r0.<com.tum.yahtzee.GameActivity: int moveSpinner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 481);
        $r13 = r0.<com.tum.yahtzee.GameActivity: android.widget.Spinner moveSpinner>;
        $r14 = new com.tum.yahtzee.GameActivity$4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21756, null, null);
        specialinvoke $r14.<com.tum.yahtzee.GameActivity$4: void <init>(com.tum.yahtzee.GameActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1891, null, null);
        virtualinvoke $r13.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void updateCubes()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void updateCubes()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i4$sym, $r24$sym, $z4$sym, $r22$sym, $i3$sym, $r20$sym, $z3$sym, $r18$sym, $i2$sym, $r16$sym, $z2$sym, $r14$sym, $i1$sym, $r12$sym, $z1$sym, $r10$sym, $i0$sym, $r8$sym, $z0$sym, $r6$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0, $i1, $i2, $i3, $i4;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.units.Player r3;
        java.util.List r4;
        com.tum.yahtzee.GameController $r5;
        java.lang.Object $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        com.tum.yahtzee.units.Cube $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21768, 32475, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45419, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45419, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r5 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21758, null);
        r3 = virtualinvoke $r5.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player getCurrentPlayer()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        r4 = virtualinvoke r3.<com.tum.yahtzee.units.Player: java.util.List getCubes()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r6 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r7 = (com.tum.yahtzee.units.Cube) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $z0 = virtualinvoke $r7.<com.tum.yahtzee.units.Cube: boolean getUsed()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21770);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r8 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r9 = (com.tum.yahtzee.units.Cube) $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i0 = virtualinvoke $r9.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21772, null, $z0$sym, null, $i0$sym);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void setImage(boolean,int,int)>($z0, 0, $i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(1);
        $r10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r11 = (com.tum.yahtzee.units.Cube) $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $z1 = virtualinvoke $r11.<com.tum.yahtzee.units.Cube: boolean getUsed()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21770);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(1);
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r13 = (com.tum.yahtzee.units.Cube) $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke $r13.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21772, null, $z1$sym, null, $i1$sym);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void setImage(boolean,int,int)>($z1, 1, $i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(2);
        $r14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r15 = (com.tum.yahtzee.units.Cube) $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $z2 = virtualinvoke $r15.<com.tum.yahtzee.units.Cube: boolean getUsed()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21770);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r16 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(2);
        $r16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r17 = (com.tum.yahtzee.units.Cube) $r16;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i2 = virtualinvoke $r17.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21772, null, $z2$sym, null, $i2$sym);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void setImage(boolean,int,int)>($z2, 2, $i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r18 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(3);
        $r18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r19 = (com.tum.yahtzee.units.Cube) $r18;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $z3 = virtualinvoke $r19.<com.tum.yahtzee.units.Cube: boolean getUsed()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21770);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r20 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(3);
        $r20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r21 = (com.tum.yahtzee.units.Cube) $r20;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i3 = virtualinvoke $r21.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21772, null, $z3$sym, null, $i3$sym);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void setImage(boolean,int,int)>($z3, 3, $i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r22 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4);
        $r22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r23 = (com.tum.yahtzee.units.Cube) $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $z4 = virtualinvoke $r23.<com.tum.yahtzee.units.Cube: boolean getUsed()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21770);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r24 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4);
        $r24$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r25 = (com.tum.yahtzee.units.Cube) $r24;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i4 = virtualinvoke $r25.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21772, null, $z4$sym, null, $i4$sym);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void setImage(boolean,int,int)>($z4, 4, $i4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void updateMoveDetails()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i1$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.units.Player r3;
        com.tum.yahtzee.GameController $r4;
        android.widget.TextView $r5, $r7;
        boolean $z0;
        java.lang.String $r6, $r11;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21775, 32476, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45420, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45420, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r4 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21758, null);
        r3 = virtualinvoke $r4.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player getCurrentPlayer()>();
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity: int possibilityText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 477);
        $r5 = r0.<com.tum.yahtzee.GameActivity: android.widget.TextView possibilityText>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21773, null);
        $z0 = virtualinvoke r3.<com.tum.yahtzee.units.Player: boolean isSelectedMovePossible()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21773);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45421, 0);
        $r6 = "yes";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45421, 1);
        goto label3;

     label3:
        $r6 = "no";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21774, null);
        i0 = virtualinvoke r3.<com.tum.yahtzee.units.Player: int getPointsForSelectedMove()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21774);
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameActivity: int pointsText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 478);
        $r7 = r0.<com.tum.yahtzee.GameActivity: android.widget.TextView pointsText>;
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, -1);
        if i0 == -1 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45422, 0);
        $i1$sym = i0$sym;
        $i1 = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45422, 1);
        goto label6;

     label6:
        $i1$sym = null;
        $i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i1$sym);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        return;
    }

    private void saveAndContinue()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.units.Player r3, $r20;
        java.lang.String r4, $r21, $r24;
        java.util.List r5;
        java.lang.CharSequence[] r6, $r9;
        android.app.AlertDialog$Builder r7, $r11;
        com.tum.yahtzee.GameController $r8, $r16, $r19;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object[] $r10;
        com.tum.yahtzee.GameActivity$5 $r13;
        java.lang.StringBuilder $r17, $r18, $r22, $r23;
        com.tum.yahtzee.GameActivity$6 $r25;

        r0 := @this: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21783, 32477, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45423, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45423, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r8 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21758, null);
        r3 = virtualinvoke $r8.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player getCurrentPlayer()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21773, null);
        $z0 = virtualinvoke r3.<com.tum.yahtzee.units.Player: boolean isSelectedMovePossible()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21773);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45424, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21760, null, null);
        staticinvoke <com.tum.yahtzee.services.MessageService: void showMessage(android.content.Context,java.lang.String)>(r0, "The selected move isn\'t possible!");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45424, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21776, null);
        r4 = virtualinvoke r3.<com.tum.yahtzee.units.Player: java.lang.String specialMoveRequired()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45425, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_2 = null;
        if r4 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45426, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21777, null);
        r5 = virtualinvoke r3.<com.tum.yahtzee.units.Player: java.util.List getUnusedMoves()>();
        $r9 = newarray (java.lang.CharSequence)[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(153, null, null);
        $r10 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);
        r6 = (java.lang.CharSequence[]) $r10;
        $r11 = new android.app.AlertDialog$Builder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke $r11.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r7 = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1515, null, null);
        virtualinvoke r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>(r4);
        $r13 = new com.tum.yahtzee.GameActivity$5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21764, null, null, null);
        specialinvoke $r13.<com.tum.yahtzee.GameActivity$5: void <init>(com.tum.yahtzee.GameActivity,java.util.List)>(r0, r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2266, null, null, null);
        virtualinvoke r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r6, $r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2267, null);
        virtualinvoke r7.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label9;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45425, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45426, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21778, null);
        $z2 = virtualinvoke r3.<com.tum.yahtzee.units.Player: boolean anyMovePossible()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21778);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45427, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21760, null, null);
        staticinvoke <com.tum.yahtzee.services.MessageService: void showMessage(android.content.Context,java.lang.String)>(r0, "No move possible. Continuing with next user or finishing game now if this was the last round.");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label9;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45427, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21779, null);
        virtualinvoke r3.<com.tum.yahtzee.units.Player: void doSelectedMove()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r16 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21780, null);
        $z3 = virtualinvoke $r16.<com.tum.yahtzee.GameController: boolean next()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21780);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45428, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(10698, null);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void update()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label12;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45428, 1);
        goto label11;

     label11:
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Game finished! ");
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r19 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21781, null);
        $r20 = virtualinvoke $r19.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player winner()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r21 = virtualinvoke $r20.<com.tum.yahtzee.units.Player: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" won the game.");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        $r25 = new com.tum.yahtzee.GameActivity$6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21756, null, null);
        specialinvoke $r25.<com.tum.yahtzee.GameActivity$6: void <init>(com.tum.yahtzee.GameActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21782, null, null, null);
        staticinvoke <com.tum.yahtzee.services.MessageService: void showMessage(android.content.Context,java.lang.String,com.tum.yahtzee.services.MethodPointer)>(r0, $r24, $r25);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;

     label12:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        return;
    }

    private void closeActivity()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21784, 32478, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45429, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45429, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        virtualinvoke r0.<com.tum.yahtzee.GameActivity: void finish()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void setImage(boolean, int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, r2$sym, i1$sym, i0$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        com.tum.yahtzee.GameActivity r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        android.widget.ImageButton[] $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        android.widget.ImageButton $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;

        r0 := @this: com.tum.yahtzee.GameActivity;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21772, 32479, 4);
        z0$sym = a3targs$symargs[1];
        i0$sym = a3targs$symargs[2];
        i1$sym = a3targs$symargs[3];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_14 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45430, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45430, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45431, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45432, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        if i1 == 1 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45433, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 2);
        if i1 == 2 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45434, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 3);
        if i1 == 3 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45435, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 4);
        if i1 == 4 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45436, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 5);
        if i1 == 5 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45437, 0);
        goto label14;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45432, 1);
        goto label3;

     label3:
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 475);
        $r3 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, i0);
        $r4 = $r3[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r4.<android.widget.ImageButton: void setImageResource(int)>(2130837504);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label14;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45433, 1);
        goto label5;

     label5:
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 475);
        $r5 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r5, i0);
        $r6 = $r5[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r6.<android.widget.ImageButton: void setImageResource(int)>(2130837505);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label14;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45434, 1);
        goto label7;

     label7:
        _sym_tmp_4 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 475);
        $r7 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r7, i0);
        $r8 = $r7[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r8.<android.widget.ImageButton: void setImageResource(int)>(2130837506);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label14;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45435, 1);
        goto label9;

     label9:
        _sym_tmp_5 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 475);
        $r9 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r9, i0);
        $r10 = $r9[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r10.<android.widget.ImageButton: void setImageResource(int)>(2130837507);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label14;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45436, 1);
        goto label11;

     label11:
        _sym_tmp_6 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 475);
        $r11 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r11, i0);
        $r12 = $r11[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r12.<android.widget.ImageButton: void setImageResource(int)>(2130837508);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label14;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45437, 1);
        goto label13;

     label13:
        _sym_tmp_7 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 475);
        $r13 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r13, i0);
        $r14 = $r13[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r14.<android.widget.ImageButton: void setImageResource(int)>(2130837509);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;

     label14:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label29;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45431, 1);
        goto label16;

     label16:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45438, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        if i1 == 1 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45439, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 2);
        if i1 == 2 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45440, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 3);
        if i1 == 3 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45441, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 4);
        if i1 == 4 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45442, 0);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 5);
        if i1 == 5 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45443, 0);
        goto label29;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45438, 1);
        goto label18;

     label18:
        _sym_tmp_8 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 475);
        $r15 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r15, i0);
        $r16 = $r15[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r16.<android.widget.ImageButton: void setImageResource(int)>(2130837511);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label29;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45439, 1);
        goto label20;

     label20:
        _sym_tmp_9 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 475);
        $r17 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r17, i0);
        $r18 = $r17[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r18.<android.widget.ImageButton: void setImageResource(int)>(2130837512);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        goto label29;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45440, 1);
        goto label22;

     label22:
        _sym_tmp_10 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 475);
        $r19 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r19, i0);
        $r20 = $r19[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r20.<android.widget.ImageButton: void setImageResource(int)>(2130837513);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label29;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45441, 1);
        goto label24;

     label24:
        _sym_tmp_11 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 475);
        $r21 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r21, i0);
        $r22 = $r21[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r22.<android.widget.ImageButton: void setImageResource(int)>(2130837514);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        goto label29;

        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45442, 1);
        goto label26;

     label26:
        _sym_tmp_12 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 475);
        $r23 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r23, i0);
        $r24 = $r23[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r24.<android.widget.ImageButton: void setImageResource(int)>(2130837515);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        goto label29;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45443, 1);
        goto label28;

     label28:
        _sym_tmp_13 = r0.<com.tum.yahtzee.GameActivity: int cubeButtons$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 475);
        $r25 = r0.<com.tum.yahtzee.GameActivity: android.widget.ImageButton[] cubeButtons>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r25, i0);
        $r26 = $r25[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1715, null, null);
        virtualinvoke $r26.<android.widget.ImageButton: void setImageResource(int)>(2130837516);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;

     label29:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        return;
    }

    static void access$000(com.tum.yahtzee.GameActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32480, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45444, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45444, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void updateCubes()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    static void access$100(com.tum.yahtzee.GameActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21761, 32481, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45445, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45445, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21783, null);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void saveAndContinue()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    static void access$200(com.tum.yahtzee.GameActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21763, 32482, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45446, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45446, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21775, null);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void updateMoveDetails()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    static void access$300(com.tum.yahtzee.GameActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.GameActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.tum.yahtzee.GameActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21766, 32483, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 474);
        $r1 = <com.tum.yahtzee.GameActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45447, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45447, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 11);
        r2 = $r1[11];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21784, null);
        specialinvoke r0.<com.tum.yahtzee.GameActivity: void closeActivity()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32484, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 12);
        r1 = $r0[12];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32485, 0);
        $r0 = newmultiarray (boolean)[13][];
        _sym_tmp_1 = <com.tum.yahtzee.GameActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 474);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(474);
        <com.tum.yahtzee.GameActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[7];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[12];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[17];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/GameActivity", -3447288277257268455L);
        return $r0;
    }
}
public class com.tum.yahtzee.GameController extends java.lang.Object
{
    private static com.tum.yahtzee.GameController instance;
    private int rounds;
    private int currentRound;
    private int currentPlayer;
    private java.util.List players;
    private static final boolean[][] $VRc;
    private static int instance$a3tid;
    private acteve.symbolic.integer.Expression rounds$sym;
    private int rounds$a3tid;
    private acteve.symbolic.integer.Expression currentRound$sym;
    private int currentRound$a3tid;
    private acteve.symbolic.integer.Expression currentPlayer$sym;
    private int currentPlayer$a3tid;
    private int players$a3tid;
    private static final int $VRc$a3tid;

    public static com.tum.yahtzee.GameController get()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        com.tum.yahtzee.GameController $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21757, 32486, 0);
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r0 = <com.tum.yahtzee.GameController: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45448, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameController: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45448, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 0);
        r1 = $r0[0];
        _sym_tmp_2 = <com.tum.yahtzee.GameController: int instance$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 483);
        $r2 = <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController instance>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r2;
    }

    private void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.GameController r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedList $r3;

        r0 := @this: com.tum.yahtzee.GameController;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32487, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r1 = <com.tum.yahtzee.GameController: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45449, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameController: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45449, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.util.LinkedList: void <init>()>();
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameController: int players$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 484);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameController: int players$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(484);
        r0.<com.tum.yahtzee.GameController: java.util.List players> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void newGame(int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $i3$sym, i2$sym, r2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, $i3;
        com.tum.yahtzee.GameController r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3, $r4;
        com.tum.yahtzee.units.Player $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.tum.yahtzee.GameController;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21785, 32488, 3);
        i0$sym = a3targs$symargs[1];
        i1$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r1 = <com.tum.yahtzee.GameController: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45450, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameController: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45450, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression rounds$sym> = i1$sym;
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameController: int rounds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 485);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameController: int rounds$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(485);
        r0.<com.tum.yahtzee.GameController: int rounds> = i1;
        r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentRound$sym> = null;
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameController: int currentRound$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 486);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameController: int currentRound$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(486);
        r0.<com.tum.yahtzee.GameController: int currentRound> = 0;
        r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentPlayer$sym> = null;
        _sym_tmp_4 = r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 487);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(487);
        r0.<com.tum.yahtzee.GameController: int currentPlayer> = 0;
        _sym_tmp_5 = r0.<com.tum.yahtzee.GameController: int players$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 484);
        $r3 = r0.<com.tum.yahtzee.GameController: java.util.List players>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        interfaceinvoke $r3.<java.util.List: void clear()>();
        i2$sym = null;
        i2 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, i0$sym, i2, i0);
        if i2 >= i0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45451, 0);
        _sym_tmp_6 = r0.<com.tum.yahtzee.GameController: int players$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 484);
        $r4 = r0.<com.tum.yahtzee.GameController: java.util.List players>;
        $r5 = new com.tum.yahtzee.units.Player;
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Player ");
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        $i3 = i2 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i3$sym);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r5.<com.tum.yahtzee.units.Player: void <init>(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 1);
        i2 = i2 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45451, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    public com.tum.yahtzee.units.Player getCurrentPlayer()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $r4$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.GameController r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;
        java.lang.Object $r4;
        com.tum.yahtzee.units.Player $r5;

        r0 := @this: com.tum.yahtzee.GameController;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21758, 32489, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r1 = <com.tum.yahtzee.GameController: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45452, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameController: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45452, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameController: int players$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 484);
        $r3 = r0.<com.tum.yahtzee.GameController: java.util.List players>;
        $i0$sym = r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentPlayer$sym>;
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 487);
        $i0 = r0.<com.tum.yahtzee.GameController: int currentPlayer>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, $i0$sym);
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);
        $r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r5 = (com.tum.yahtzee.units.Player) $r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r5;
    }

    public boolean next()
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, $i9$sym, $i8$sym, $r11$sym, $z1$sym, $i7$sym, $i6$sym, $r7$sym, $z0$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.tum.yahtzee.GameController r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3, r10;
        com.tum.yahtzee.units.Player r4, r12;
        java.util.List $r5, $r6, $r9;
        boolean $z0, $z1;
        java.lang.Object $r7, $r11;

        r0 := @this: com.tum.yahtzee.GameController;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21780, 32490, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r1 = <com.tum.yahtzee.GameController: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45453, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameController: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45453, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $i0$sym = r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentPlayer$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 487);
        $i0 = r0.<com.tum.yahtzee.GameController: int currentPlayer>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        $i1 = $i0 + 1;
        _sym_tmp_3 = r0.<com.tum.yahtzee.GameController: int players$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 484);
        $r5 = r0.<com.tum.yahtzee.GameController: java.util.List players>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, $i2$sym, $i1, $i2);
        if $i1 < $i2 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45454, 0);
        $i3$sym = r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentRound$sym>;
        _sym_tmp_4 = r0.<com.tum.yahtzee.GameController: int currentRound$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 486);
        $i3 = r0.<com.tum.yahtzee.GameController: int currentRound>;
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 1);
        $i4 = $i3 + 1;
        $i5$sym = r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression rounds$sym>;
        _sym_tmp_5 = r0.<com.tum.yahtzee.GameController: int rounds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 485);
        $i5 = r0.<com.tum.yahtzee.GameController: int rounds>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, $i5$sym, $i4, $i5);
        if $i4 != $i5 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45455, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21780, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45455, 1);
        goto label3;

     label3:
        r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentPlayer$sym> = null;
        _sym_tmp_6 = r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 487);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(487);
        r0.<com.tum.yahtzee.GameController: int currentPlayer> = 0;
        _sym_tmp_7 = r0.<com.tum.yahtzee.GameController: int players$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 484);
        $r6 = r0.<com.tum.yahtzee.GameController: java.util.List players>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45456, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Player) $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21786, null);
        virtualinvoke r4.<com.tum.yahtzee.units.Player: void unlockCubes()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label4;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45456, 1);
        goto label6;

     label6:
        $i6$sym = r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentRound$sym>;
        _sym_tmp_8 = r0.<com.tum.yahtzee.GameController: int currentRound$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 486);
        $i6 = r0.<com.tum.yahtzee.GameController: int currentRound>;
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 1);
        $i7 = $i6 + 1;
        r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentRound$sym> = $i7$sym;
        _sym_tmp_9 = r0.<com.tum.yahtzee.GameController: int currentRound$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 486);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameController: int currentRound$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(486);
        r0.<com.tum.yahtzee.GameController: int currentRound> = $i7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label12;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45454, 1);
        goto label8;

     label8:
        _sym_tmp_10 = r0.<com.tum.yahtzee.GameController: int players$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 484);
        $r9 = r0.<com.tum.yahtzee.GameController: java.util.List players>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45457, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r12 = (com.tum.yahtzee.units.Player) $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21786, null);
        virtualinvoke r12.<com.tum.yahtzee.units.Player: void unlockCubes()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label9;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45457, 1);
        goto label11;

     label11:
        $i8$sym = r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentPlayer$sym>;
        _sym_tmp_11 = r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 487);
        $i8 = r0.<com.tum.yahtzee.GameController: int currentPlayer>;
        $i9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i8$sym, null, $i8, 1);
        $i9 = $i8 + 1;
        r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentPlayer$sym> = $i9$sym;
        _sym_tmp_12 = r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 487);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.GameController: int currentPlayer$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(487);
        r0.<com.tum.yahtzee.GameController: int currentPlayer> = $i9;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;

     label12:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21780, null);
        return 1;
    }

    public int getRound()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.GameController r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.GameController;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21787, 32491, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r1 = <com.tum.yahtzee.GameController: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45458, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameController: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45458, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        $i0$sym = r0.<com.tum.yahtzee.GameController: acteve.symbolic.integer.Expression currentRound$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameController: int currentRound$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 486);
        $i0 = r0.<com.tum.yahtzee.GameController: int currentRound>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21787, $i0$sym);
        return $i0;
    }

    public com.tum.yahtzee.units.Player winner()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $r15$sym, $i11$sym, $r12$sym, $i10$sym, $r11$sym, $i9$sym, $r9$sym, $i8$sym, $i7$sym, $r7$sym, $i6$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, i1$sym, z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.tum.yahtzee.GameController r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedList r3, $r5;
        boolean z0;
        com.tum.yahtzee.units.Player r4, $r8, $r10, $r16;
        java.util.List $r6;
        java.lang.Object $r7, $r9, $r11, $r12, $r15;

        r0 := @this: com.tum.yahtzee.GameController;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21781, 32492, 1);
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 482);
        $r1 = <com.tum.yahtzee.GameController: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45459, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.GameController: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45459, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        $r5 = new java.util.LinkedList;
        _sym_tmp_2 = r0.<com.tum.yahtzee.GameController: int players$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 484);
        $r6 = r0.<com.tum.yahtzee.GameController: java.util.List players>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8348, null, null);
        specialinvoke $r5.<java.util.LinkedList: void <init>(java.util.Collection)>($r6);
        r3 = $r5;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 - 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i3$sym, i0, $i3);
        if i0 >= $i3 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45460, 0);
        z0$sym = null;
        z0 = 0;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i4 = interfaceinvoke r3.<java.util.List: int size()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 1);
        $i5 = $i4 - 1;
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, i0$sym, $i5, i0);
        $i6 = $i5 - i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i6$sym, i1, $i6);
        if i1 >= $i6 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45461, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i1$sym);
        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);
        $r7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r8 = (com.tum.yahtzee.units.Player) $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i7 = virtualinvoke $r8.<com.tum.yahtzee.units.Player: int getPoints()>();
        $i7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i8 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, $i8$sym);
        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i8);
        $r9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r10 = (com.tum.yahtzee.units.Player) $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i9 = virtualinvoke $r10.<com.tum.yahtzee.units.Player: int getPoints()>();
        $i9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, $i9$sym, $i7, $i9);
        if $i7 >= $i9 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45462, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i1$sym);
        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        r4 = (com.tum.yahtzee.units.Player) $r11;
        $i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i10 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, $i10$sym);
        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i10);
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4833, null, i1$sym, $r12$sym);
        interfaceinvoke r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r12);
        $i11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        $i11 = i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4833, null, $i11$sym, null);
        interfaceinvoke r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i11, r4);
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45462, 1);
        goto label5;

     label5:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label3;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45461, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45463, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label11;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45463, 1);
        goto label9;

     label9:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label2;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45460, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, null);
        $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);
        $r15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r16 = (com.tum.yahtzee.units.Player) $r15;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        return $r16;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        com.tum.yahtzee.GameController $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32493, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.GameController: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        $r2 = new com.tum.yahtzee.GameController;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<com.tum.yahtzee.GameController: void <init>()>();
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int instance$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 483);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameController: int instance$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(483);
        <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController instance> = $r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32494, 0);
        $r0 = newmultiarray (boolean)[8][];
        _sym_tmp_1 = <com.tum.yahtzee.GameController: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 482);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.GameController: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(482);
        <com.tum.yahtzee.GameController: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[12];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[11];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/GameController", 8565990096618139479L);
        return $r0;
    }
}
public final class com.tum.yahtzee.R$attr extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.tum.yahtzee.R$attr r0;

        r0 := @this: com.tum.yahtzee.R$attr;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32495, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.tum.yahtzee.R$drawable extends java.lang.Object
{
    public static final int cube1;
    public static final int cube2;
    public static final int cube3;
    public static final int cube4;
    public static final int cube5;
    public static final int cube6;
    public static final int icon;
    public static final int selectedcube1;
    public static final int selectedcube2;
    public static final int selectedcube3;
    public static final int selectedcube4;
    public static final int selectedcube5;
    public static final int selectedcube6;
    public static final acteve.symbolic.integer.Expression cube1$sym;
    public static final int cube1$a3tid;
    public static final acteve.symbolic.integer.Expression cube2$sym;
    public static final int cube2$a3tid;
    public static final acteve.symbolic.integer.Expression cube3$sym;
    public static final int cube3$a3tid;
    public static final acteve.symbolic.integer.Expression cube4$sym;
    public static final int cube4$a3tid;
    public static final acteve.symbolic.integer.Expression cube5$sym;
    public static final int cube5$a3tid;
    public static final acteve.symbolic.integer.Expression cube6$sym;
    public static final int cube6$a3tid;
    public static final acteve.symbolic.integer.Expression icon$sym;
    public static final int icon$a3tid;
    public static final acteve.symbolic.integer.Expression selectedcube1$sym;
    public static final int selectedcube1$a3tid;
    public static final acteve.symbolic.integer.Expression selectedcube2$sym;
    public static final int selectedcube2$a3tid;
    public static final acteve.symbolic.integer.Expression selectedcube3$sym;
    public static final int selectedcube3$a3tid;
    public static final acteve.symbolic.integer.Expression selectedcube4$sym;
    public static final int selectedcube4$a3tid;
    public static final acteve.symbolic.integer.Expression selectedcube5$sym;
    public static final int selectedcube5$a3tid;
    public static final acteve.symbolic.integer.Expression selectedcube6$sym;
    public static final int selectedcube6$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.tum.yahtzee.R$drawable r0;

        r0 := @this: com.tum.yahtzee.R$drawable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32496, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.tum.yahtzee.R$id extends java.lang.Object
{
    public static final int continueButton;
    public static final int cubeButton1;
    public static final int cubeButton2;
    public static final int cubeButton3;
    public static final int cubeButton4;
    public static final int cubeButton5;
    public static final int game_rounds;
    public static final int game_rounds_title;
    public static final int game_title;
    public static final int linearLayout1;
    public static final int linearLayout2;
    public static final int linearLayout3;
    public static final int linearLayout4;
    public static final int linearLayout5;
    public static final int play_button;
    public static final int player_amount;
    public static final int player_nr_header;
    public static final int player_title;
    public static final int pointsText;
    public static final int possibilityText;
    public static final int shakeButton;
    public static final int spinner1;
    public static final int textView2;
    public static final int textView3;
    public static final int textView4;
    public static final acteve.symbolic.integer.Expression continueButton$sym;
    public static final int continueButton$a3tid;
    public static final acteve.symbolic.integer.Expression cubeButton1$sym;
    public static final int cubeButton1$a3tid;
    public static final acteve.symbolic.integer.Expression cubeButton2$sym;
    public static final int cubeButton2$a3tid;
    public static final acteve.symbolic.integer.Expression cubeButton3$sym;
    public static final int cubeButton3$a3tid;
    public static final acteve.symbolic.integer.Expression cubeButton4$sym;
    public static final int cubeButton4$a3tid;
    public static final acteve.symbolic.integer.Expression cubeButton5$sym;
    public static final int cubeButton5$a3tid;
    public static final acteve.symbolic.integer.Expression game_rounds$sym;
    public static final int game_rounds$a3tid;
    public static final acteve.symbolic.integer.Expression game_rounds_title$sym;
    public static final int game_rounds_title$a3tid;
    public static final acteve.symbolic.integer.Expression game_title$sym;
    public static final int game_title$a3tid;
    public static final acteve.symbolic.integer.Expression linearLayout1$sym;
    public static final int linearLayout1$a3tid;
    public static final acteve.symbolic.integer.Expression linearLayout2$sym;
    public static final int linearLayout2$a3tid;
    public static final acteve.symbolic.integer.Expression linearLayout3$sym;
    public static final int linearLayout3$a3tid;
    public static final acteve.symbolic.integer.Expression linearLayout4$sym;
    public static final int linearLayout4$a3tid;
    public static final acteve.symbolic.integer.Expression linearLayout5$sym;
    public static final int linearLayout5$a3tid;
    public static final acteve.symbolic.integer.Expression play_button$sym;
    public static final int play_button$a3tid;
    public static final acteve.symbolic.integer.Expression player_amount$sym;
    public static final int player_amount$a3tid;
    public static final acteve.symbolic.integer.Expression player_nr_header$sym;
    public static final int player_nr_header$a3tid;
    public static final acteve.symbolic.integer.Expression player_title$sym;
    public static final int player_title$a3tid;
    public static final acteve.symbolic.integer.Expression pointsText$sym;
    public static final int pointsText$a3tid;
    public static final acteve.symbolic.integer.Expression possibilityText$sym;
    public static final int possibilityText$a3tid;
    public static final acteve.symbolic.integer.Expression shakeButton$sym;
    public static final int shakeButton$a3tid;
    public static final acteve.symbolic.integer.Expression spinner1$sym;
    public static final int spinner1$a3tid;
    public static final acteve.symbolic.integer.Expression textView2$sym;
    public static final int textView2$a3tid;
    public static final acteve.symbolic.integer.Expression textView3$sym;
    public static final int textView3$a3tid;
    public static final acteve.symbolic.integer.Expression textView4$sym;
    public static final int textView4$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.tum.yahtzee.R$id r0;

        r0 := @this: com.tum.yahtzee.R$id;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32497, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.tum.yahtzee.R$layout extends java.lang.Object
{
    public static final int game;
    public static final int main;
    public static final acteve.symbolic.integer.Expression game$sym;
    public static final int game$a3tid;
    public static final acteve.symbolic.integer.Expression main$sym;
    public static final int main$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.tum.yahtzee.R$layout r0;

        r0 := @this: com.tum.yahtzee.R$layout;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32498, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.tum.yahtzee.R$string extends java.lang.Object
{
    public static final int AdditionalPoints;
    public static final int Empty;
    public static final int Possible;
    public static final int SaveMove;
    public static final int SelectMove;
    public static final int Shake;
    public static final int app_name;
    public static final int hello;
    public static final acteve.symbolic.integer.Expression AdditionalPoints$sym;
    public static final int AdditionalPoints$a3tid;
    public static final acteve.symbolic.integer.Expression Empty$sym;
    public static final int Empty$a3tid;
    public static final acteve.symbolic.integer.Expression Possible$sym;
    public static final int Possible$a3tid;
    public static final acteve.symbolic.integer.Expression SaveMove$sym;
    public static final int SaveMove$a3tid;
    public static final acteve.symbolic.integer.Expression SelectMove$sym;
    public static final int SelectMove$a3tid;
    public static final acteve.symbolic.integer.Expression Shake$sym;
    public static final int Shake$a3tid;
    public static final acteve.symbolic.integer.Expression app_name$sym;
    public static final int app_name$a3tid;
    public static final acteve.symbolic.integer.Expression hello$sym;
    public static final int hello$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.tum.yahtzee.R$string r0;

        r0 := @this: com.tum.yahtzee.R$string;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32499, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.tum.yahtzee.R extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        com.tum.yahtzee.R r0;

        r0 := @this: com.tum.yahtzee.R;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32500, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
class com.tum.yahtzee.YahtzeeActivity$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.tum.yahtzee.YahtzeeActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.YahtzeeActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.YahtzeeActivity$1 r0;
        com.tum.yahtzee.YahtzeeActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.YahtzeeActivity$1;
        r1 := @parameter0: com.tum.yahtzee.YahtzeeActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21789, 32501, 2);
        _sym_tmp_1 = <com.tum.yahtzee.YahtzeeActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 488);
        $r2 = <com.tum.yahtzee.YahtzeeActivity$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45464, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.YahtzeeActivity$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45464, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.YahtzeeActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 489);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.YahtzeeActivity$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(489);
        r0.<com.tum.yahtzee.YahtzeeActivity$1: com.tum.yahtzee.YahtzeeActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.YahtzeeActivity$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.tum.yahtzee.YahtzeeActivity $r4;

        r0 := @this: com.tum.yahtzee.YahtzeeActivity$1;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32502, 2);
        _sym_tmp_1 = <com.tum.yahtzee.YahtzeeActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 488);
        $r2 = <com.tum.yahtzee.YahtzeeActivity$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45465, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.YahtzeeActivity$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45465, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<com.tum.yahtzee.YahtzeeActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 489);
        $r4 = r0.<com.tum.yahtzee.YahtzeeActivity$1: com.tum.yahtzee.YahtzeeActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1666, null);
        virtualinvoke $r4.<com.tum.yahtzee.YahtzeeActivity: void play()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32503, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.YahtzeeActivity$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32504, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.YahtzeeActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 488);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.YahtzeeActivity$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(488);
        <com.tum.yahtzee.YahtzeeActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/YahtzeeActivity$1", 4320153508954628847L);
        return $r0;
    }
}
public class com.tum.yahtzee.YahtzeeActivity extends android.app.Activity
{
    private android.widget.EditText playerAmountText;
    private android.widget.EditText roundsText;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int playerAmountText$a3tid;
    private int roundsText$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.YahtzeeActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.YahtzeeActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32505, 1);
        _sym_tmp_1 = <com.tum.yahtzee.YahtzeeActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 490);
        $r1 = <com.tum.yahtzee.YahtzeeActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45466, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.YahtzeeActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45466, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Activity: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.YahtzeeActivity r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.TextView r4, r5, r6;
        android.widget.Button r7;
        android.view.View $r8, $r9, $r10, $r11, $r13, $r15;
        android.widget.EditText $r12, $r14;
        com.tum.yahtzee.YahtzeeActivity$1 $r16;

        r0 := @this: com.tum.yahtzee.YahtzeeActivity;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32506, 2);
        _sym_tmp_1 = <com.tum.yahtzee.YahtzeeActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 490);
        $r2 = <com.tum.yahtzee.YahtzeeActivity: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45467, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.YahtzeeActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45467, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1626, null, null);
        virtualinvoke r0.<com.tum.yahtzee.YahtzeeActivity: void setContentView(int)>(2130903041);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r8 = virtualinvoke r0.<com.tum.yahtzee.YahtzeeActivity: android.view.View findViewById(int)>(2131034131);
        r4 = (android.widget.TextView) $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke r4.<android.widget.TextView: void setText(java.lang.CharSequence)>("Yahtzee");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r9 = virtualinvoke r0.<com.tum.yahtzee.YahtzeeActivity: android.view.View findViewById(int)>(2131034132);
        r5 = (android.widget.TextView) $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>("Amount of Players:");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r10 = virtualinvoke r0.<com.tum.yahtzee.YahtzeeActivity: android.view.View findViewById(int)>(2131034134);
        r6 = (android.widget.TextView) $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke r6.<android.widget.TextView: void setText(java.lang.CharSequence)>("Amount of Rounds:");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r11 = virtualinvoke r0.<com.tum.yahtzee.YahtzeeActivity: android.view.View findViewById(int)>(2131034133);
        $r12 = (android.widget.EditText) $r11;
        _sym_tmp_2 = r0.<com.tum.yahtzee.YahtzeeActivity: int playerAmountText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 491);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.YahtzeeActivity: int playerAmountText$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(491);
        r0.<com.tum.yahtzee.YahtzeeActivity: android.widget.EditText playerAmountText> = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r13 = virtualinvoke r0.<com.tum.yahtzee.YahtzeeActivity: android.view.View findViewById(int)>(2131034135);
        $r14 = (android.widget.EditText) $r13;
        _sym_tmp_3 = r0.<com.tum.yahtzee.YahtzeeActivity: int roundsText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 492);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.YahtzeeActivity: int roundsText$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(492);
        r0.<com.tum.yahtzee.YahtzeeActivity: android.widget.EditText roundsText> = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1504, null, null);
        $r15 = virtualinvoke r0.<com.tum.yahtzee.YahtzeeActivity: android.view.View findViewById(int)>(2131034136);
        r7 = (android.widget.Button) $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1348, null, null);
        virtualinvoke r7.<android.widget.Button: void setText(java.lang.CharSequence)>("Play");
        $r16 = new com.tum.yahtzee.YahtzeeActivity$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21789, null, null);
        specialinvoke $r16.<com.tum.yahtzee.YahtzeeActivity$1: void <init>(com.tum.yahtzee.YahtzeeActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1450, null, null);
        virtualinvoke r7.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r16);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void play()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i3$sym, $i2$sym, $i1$sym, $z1$sym, $i0$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        com.tum.yahtzee.YahtzeeActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4;
        android.content.Intent r5, $r15;
        android.widget.EditText $r6, $r8;
        android.text.Editable $r7, $r9;
        boolean $z0, $z1;
        java.lang.Integer $r10, $r11, $r13, $r14;
        com.tum.yahtzee.GameController $r12;

        r0 := @this: com.tum.yahtzee.YahtzeeActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1666, 32507, 1);
        _sym_tmp_1 = <com.tum.yahtzee.YahtzeeActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 490);
        $r1 = <com.tum.yahtzee.YahtzeeActivity: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45468, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.YahtzeeActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45468, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = r0.<com.tum.yahtzee.YahtzeeActivity: int playerAmountText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 491);
        $r6 = r0.<com.tum.yahtzee.YahtzeeActivity: android.widget.EditText playerAmountText>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2403, null);
        $r7 = virtualinvoke $r6.<android.widget.EditText: android.text.Editable getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r3 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();
        _sym_tmp_3 = r0.<com.tum.yahtzee.YahtzeeActivity: int roundsText$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 492);
        $r8 = r0.<com.tum.yahtzee.YahtzeeActivity: android.widget.EditText roundsText>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2403, null);
        $r9 = virtualinvoke $r8.<android.widget.EditText: android.text.Editable getText()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r4 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = null;
        if r3 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45469, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45470, 0);
        $r10 = new java.lang.Integer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r10.<java.lang.Integer: void <init>(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45471, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_4 = null;
        if r4 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45472, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z1 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45473, 0);
        $r11 = new java.lang.Integer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r11.<java.lang.Integer: void <init>(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45474, 0);
        goto label7;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45469, 1);
        goto label7;

        goto label7;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45470, 1);
        goto label7;

        goto label7;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45471, 1);
        goto label7;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45472, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45473, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21760, null, null);
        staticinvoke <com.tum.yahtzee.services.MessageService: void showMessage(android.content.Context,java.lang.String)>(r0, "Amount of Rounds and Players must not be zero.");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45474, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r12 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        $r13 = new java.lang.Integer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r13.<java.lang.Integer: void <init>(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        $r14 = new java.lang.Integer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r14.<java.lang.Integer: void <init>(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i3 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21785, null, $i2$sym, $i3$sym);
        virtualinvoke $r12.<com.tum.yahtzee.GameController: void newGame(int,int)>($i2, $i3);
        $r15 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r15.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/tum/yahtzee/GameActivity");
        r5 = $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1404, null, null);
        virtualinvoke r0.<com.tum.yahtzee.YahtzeeActivity: void startActivity(android.content.Intent)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32508, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.YahtzeeActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32509, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.tum.yahtzee.YahtzeeActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 490);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.YahtzeeActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(490);
        <com.tum.yahtzee.YahtzeeActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[9];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/YahtzeeActivity", -9085842381422966042L);
        return $r0;
    }
}
public class com.tum.yahtzee.listeners.OnCubeClickListener extends java.lang.Object implements android.view.View$OnClickListener
{
    private int cubeId;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private acteve.symbolic.integer.Expression cubeId$sym;
    private int cubeId$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.listeners.OnCubeClickListener r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.listeners.OnCubeClickListener;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(28, 32510, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.tum.yahtzee.listeners.OnCubeClickListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 493);
        $r1 = <com.tum.yahtzee.listeners.OnCubeClickListener: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45475, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.listeners.OnCubeClickListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45475, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.tum.yahtzee.listeners.OnCubeClickListener: acteve.symbolic.integer.Expression cubeId$sym> = i0$sym;
        _sym_tmp_2 = r0.<com.tum.yahtzee.listeners.OnCubeClickListener: int cubeId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 494);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.listeners.OnCubeClickListener: int cubeId$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(494);
        r0.<com.tum.yahtzee.listeners.OnCubeClickListener: int cubeId> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public int getCubeId()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.listeners.OnCubeClickListener r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.listeners.OnCubeClickListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21790, 32511, 1);
        _sym_tmp_1 = <com.tum.yahtzee.listeners.OnCubeClickListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 493);
        $r1 = <com.tum.yahtzee.listeners.OnCubeClickListener: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45476, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.listeners.OnCubeClickListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45476, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        $i0$sym = r0.<com.tum.yahtzee.listeners.OnCubeClickListener: acteve.symbolic.integer.Expression cubeId$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.listeners.OnCubeClickListener: int cubeId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 494);
        $i0 = r0.<com.tum.yahtzee.listeners.OnCubeClickListener: int cubeId>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21790, $i0$sym);
        return $i0;
    }

    public void onClick(android.view.View)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z1$sym, $z0$sym, $r8$sym, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.listeners.OnCubeClickListener r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.tum.yahtzee.units.Cube r4;
        com.tum.yahtzee.GameController $r5;
        com.tum.yahtzee.units.Player $r6;
        java.util.List $r7;
        java.lang.Object $r8;
        boolean $z0, $z1;

        r0 := @this: com.tum.yahtzee.listeners.OnCubeClickListener;
        r1 := @parameter0: android.view.View;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1399, 32512, 2);
        _sym_tmp_1 = <com.tum.yahtzee.listeners.OnCubeClickListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 493);
        $r2 = <com.tum.yahtzee.listeners.OnCubeClickListener: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45477, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.listeners.OnCubeClickListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45477, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        $r5 = staticinvoke <com.tum.yahtzee.GameController: com.tum.yahtzee.GameController get()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21758, null);
        $r6 = virtualinvoke $r5.<com.tum.yahtzee.GameController: com.tum.yahtzee.units.Player getCurrentPlayer()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        $r7 = virtualinvoke $r6.<com.tum.yahtzee.units.Player: java.util.List getCubes()>();
        $i0$sym = r0.<com.tum.yahtzee.listeners.OnCubeClickListener: acteve.symbolic.integer.Expression cubeId$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.listeners.OnCubeClickListener: int cubeId$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 494);
        $i0 = r0.<com.tum.yahtzee.listeners.OnCubeClickListener: int cubeId>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, $i0$sym);
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        r4 = (com.tum.yahtzee.units.Cube) $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21770, null);
        $z0 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: boolean getUsed()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21770);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45478, 0);
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45478, 1);
        goto label3;

     label3:
        $z1$sym = null;
        $z1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21791, null, $z1$sym);
        virtualinvoke r4.<com.tum.yahtzee.units.Cube: void setUsed(boolean)>($z1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32513, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.listeners.OnCubeClickListener: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32514, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.tum.yahtzee.listeners.OnCubeClickListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 493);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.listeners.OnCubeClickListener: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        <com.tum.yahtzee.listeners.OnCubeClickListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/listeners/OnCubeClickListener", -6823901950315371113L);
        return $r0;
    }
}
public class com.tum.yahtzee.moves.ChanceMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private int points;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private acteve.symbolic.integer.Expression points$sym;
    private int points$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public static boolean validate(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21792, 32515, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ChanceMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 495);
        $r1 = <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45479, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45479, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        return 1;
    }

    public static int calculatePoints(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i2$sym, $i1$sym, $r5$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1, $i2;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.units.Cube r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32516, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ChanceMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 495);
        $r1 = <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45480, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45480, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45481, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 + 1;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        i0 = i0 + $i2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45481, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21793, i0$sym);
        return i0;
    }

    public void <init>(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.ChanceMove r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.moves.ChanceMove;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10883, 32517, 2);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ChanceMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 495);
        $r2 = <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45482, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45482, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i0 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: int calculatePoints(java.util.List)>(r1);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        r0.<com.tum.yahtzee.moves.ChanceMove: acteve.symbolic.integer.Expression points$sym> = $i0$sym;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.ChanceMove: int points$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 496);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.moves.ChanceMove: int points$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(496);
        r0.<com.tum.yahtzee.moves.ChanceMove: int points> = $i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.ChanceMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.ChanceMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32518, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ChanceMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 495);
        $r1 = <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45483, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45483, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        $i0$sym = r0.<com.tum.yahtzee.moves.ChanceMove: acteve.symbolic.integer.Expression points$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.ChanceMove: int points$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 496);
        $i0 = r0.<com.tum.yahtzee.moves.ChanceMove: int points>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i0$sym);
        return $i0;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.ChanceMove r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.tum.yahtzee.moves.ChanceMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32519, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ChanceMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 495);
        $r1 = <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45484, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45484, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Chance, Points: ");
        $i0$sym = r0.<com.tum.yahtzee.moves.ChanceMove: acteve.symbolic.integer.Expression points$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.ChanceMove: int points$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 496);
        $i0 = r0.<com.tum.yahtzee.moves.ChanceMove: int points>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32520, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32521, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.ChanceMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 495);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.ChanceMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(495);
        <com.tum.yahtzee.moves.ChanceMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/ChanceMove", 2535180294834810179L);
        return $r0;
    }
}
public class com.tum.yahtzee.moves.DummyMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.moves.DummyMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.DummyMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32522, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.DummyMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r1 = <com.tum.yahtzee.moves.DummyMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45485, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.DummyMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45485, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.moves.DummyMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.DummyMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32523, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.DummyMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r1 = <com.tum.yahtzee.moves.DummyMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45486, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.DummyMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45486, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        return 0;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.moves.DummyMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.DummyMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32524, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.DummyMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r1 = <com.tum.yahtzee.moves.DummyMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45487, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.DummyMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45487, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32525, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.DummyMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32526, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.DummyMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 497);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.DummyMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(497);
        <com.tum.yahtzee.moves.DummyMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/DummyMove", 295704160053502125L);
        return $r0;
    }
}
public class com.tum.yahtzee.moves.FourOfAKindMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private int points;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private acteve.symbolic.integer.Expression points$sym;
    private int points$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public static boolean validate(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i5$sym, i4$sym, $i3$sym, $i2$sym, $i1$sym, $r6$sym, $z0$sym, i0$sym, r3$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1, $i2, $i3, i4, $i5;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        int[] r3;
        com.tum.yahtzee.units.Cube r4;
        java.util.Iterator r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21792, 32527, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FourOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r1 = <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45488, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45488, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        r3 = newarray (int)[6];
        r3$sym = null;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 6);
        if i0 >= 6 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45489, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>(r3$sym, i0$sym, null, r3, i0, 0);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, i0);
        r3[i0] = 0;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45489, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r5 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45490, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r3$sym, $i1$sym, r3, $i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r3, $i1);
        $i2 = r3[$i1];
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>(r3$sym, $i1$sym, $i3$sym, r3, $i1, $i3);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, $i1);
        r3[$i1] = $i3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label5;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45490, 1);
        goto label7;

     label7:
        i4$sym = null;
        i4 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 6);
        if i4 >= 6 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45491, 0);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r3$sym, i4$sym, r3, i4);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r3, i4);
        $i5 = r3[i4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 4);
        if $i5 < 4 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45492, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        return 1;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45492, 1);
        goto label10;

     label10:
        i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 1);
        i4 = i4 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label8;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45491, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        return 0;
    }

    public static int calculatePoints(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i1$sym, $r5$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.units.Cube r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32528, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FourOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r1 = <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45493, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45493, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45494, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        i0 = i0 + $i1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45494, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21793, i0$sym);
        return i0;
    }

    public void <init>(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.FourOfAKindMove r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.moves.FourOfAKindMove;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10883, 32529, 2);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FourOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r2 = <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45495, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45495, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i0 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: int calculatePoints(java.util.List)>(r1);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        r0.<com.tum.yahtzee.moves.FourOfAKindMove: acteve.symbolic.integer.Expression points$sym> = $i0$sym;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.FourOfAKindMove: int points$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 499);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.moves.FourOfAKindMove: int points$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(499);
        r0.<com.tum.yahtzee.moves.FourOfAKindMove: int points> = $i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.FourOfAKindMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.FourOfAKindMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32530, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FourOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r1 = <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45496, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45496, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        $i0$sym = r0.<com.tum.yahtzee.moves.FourOfAKindMove: acteve.symbolic.integer.Expression points$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.FourOfAKindMove: int points$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 499);
        $i0 = r0.<com.tum.yahtzee.moves.FourOfAKindMove: int points>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i0$sym);
        return $i0;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.FourOfAKindMove r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.tum.yahtzee.moves.FourOfAKindMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32531, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FourOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 498);
        $r1 = <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45497, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45497, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FourOfAKind, Points: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i0 = virtualinvoke r0.<com.tum.yahtzee.moves.FourOfAKindMove: int getPoints()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32532, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32533, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.FourOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 498);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.FourOfAKindMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(498);
        <com.tum.yahtzee.moves.FourOfAKindMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[12];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/FourOfAKindMove", 3789966490410998940L);
        return $r0;
    }
}
public class com.tum.yahtzee.moves.FullHouseMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public static boolean validate(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z3$sym, $i6$sym, $i5$sym, z2$sym, z1$sym, $i4$sym, $i3$sym, $i2$sym, $r6$sym, $z0$sym, i1$sym, i0$sym, r3$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        int[] r3;
        com.tum.yahtzee.units.Cube r4;
        java.util.Iterator r5;
        boolean $z0, z1, z2, $z3;
        java.lang.Object $r6;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21792, 32534, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FullHouseMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 500);
        $r1 = <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45498, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45498, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        r3 = newarray (int)[6];
        r3$sym = null;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 6);
        if i0 >= 6 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45499, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>(r3$sym, i0$sym, null, r3, i0, 0);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, i0);
        r3[i0] = 0;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45499, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r5 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45500, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i2 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r3$sym, $i2$sym, r3, $i2);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r3, $i2);
        $i3 = r3[$i2];
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 1);
        $i4 = $i3 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>(r3$sym, $i2$sym, $i4$sym, r3, $i2, $i4);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, $i2);
        r3[$i2] = $i4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label5;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45500, 1);
        goto label7;

     label7:
        z1$sym = null;
        z1 = 0;
        z2$sym = null;
        z2 = 0;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 6);
        if i1 >= 6 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45501, 0);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r3$sym, i1$sym, r3, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r3, i1);
        $i5 = r3[i1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 2);
        if $i5 != 2 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45502, 0);
        z1$sym = null;
        z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45502, 1);
        goto label10;

     label10:
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r3$sym, i1$sym, r3, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r3, i1);
        $i6 = r3[i1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 3);
        if $i6 != 3 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45503, 0);
        z2$sym = null;
        z2 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45503, 1);
        goto label12;

     label12:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label8;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45501, 1);
        goto label14;

     label14:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z1$sym, null, z1, 0);
        if z1 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45504, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z2$sym, null, z2, 0);
        if z2 == 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45505, 0);
        $z3$sym = null;
        $z3 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        goto label18;

        goto label17;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45504, 1);
        goto label17;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45505, 1);
        goto label17;

     label17:
        $z3$sym = null;
        $z3 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;

     label18:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, $z3$sym);
        return $z3;
    }

    public static int calculatePoints(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32535, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FullHouseMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 500);
        $r1 = <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45506, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45506, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        return 25;
    }

    public void <init>(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.moves.FullHouseMove r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.moves.FullHouseMove;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10883, 32536, 2);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FullHouseMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 500);
        $r2 = <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45507, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45507, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.FullHouseMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.FullHouseMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32537, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FullHouseMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 500);
        $r1 = <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45508, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45508, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i0 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: int calculatePoints(java.util.List)>(null);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i0$sym);
        return $i0;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.FullHouseMove r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.tum.yahtzee.moves.FullHouseMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32538, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.FullHouseMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 500);
        $r1 = <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45509, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45509, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FullHouse, Points: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i0 = virtualinvoke r0.<com.tum.yahtzee.moves.FullHouseMove: int getPoints()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32539, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32540, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.FullHouseMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 500);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.FullHouseMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(500);
        <com.tum.yahtzee.moves.FullHouseMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[18];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/FullHouseMove", 5041320502839884208L);
        return $r0;
    }
}
public interface  com.tum.yahtzee.moves.IBaseMove extends java.lang.Object
{

    public abstract int getPoints();

    public abstract void print();
}
public class com.tum.yahtzee.moves.LargeStraightMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public static boolean validate(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $i7$sym, $i6$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $r5$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.units.Cube r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21792, 32541, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.LargeStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 501);
        $r1 = <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45510, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45510, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45511, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45512, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        if $i1 == 1 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45513, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 2);
        if $i1 == 2 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45514, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 3);
        if $i1 == 3 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45515, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 4);
        if $i1 == 4 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45516, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 5);
        if $i1 == 5 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45517, 0);
        goto label15;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45512, 1);
        goto label4;

     label4:
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i2 = i0 & 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 != 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45518, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label22;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45513, 1);
        goto label6;

     label6:
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i3 = i0 & 2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 0);
        if $i3 != 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45519, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        i0 = i0 + 2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label22;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45514, 1);
        goto label8;

     label8:
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 4);
        $i4 = i0 & 4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 0);
        if $i4 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45520, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 4);
        i0 = i0 + 4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label22;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45515, 1);
        goto label10;

     label10:
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 8);
        $i5 = i0 & 8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 0);
        if $i5 != 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45521, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 8);
        i0 = i0 + 8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label22;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45516, 1);
        goto label12;

     label12:
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 16);
        $i6 = i0 & 16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 0);
        if $i6 != 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45522, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 16);
        i0 = i0 + 16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label22;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45517, 1);
        goto label14;

     label14:
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 32);
        $i7 = i0 & 32;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, null, $i7, 0);
        if $i7 != 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45523, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 32);
        i0 = i0 + 32;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        goto label22;

     label15:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        return 0;

        goto label22;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45518, 1);
        goto label22;

        goto label22;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45519, 1);
        goto label22;

        goto label22;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45520, 1);
        goto label22;

        goto label22;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45521, 1);
        goto label22;

        goto label22;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45522, 1);
        goto label22;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45523, 1);
        goto label22;

     label22:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        goto label2;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45511, 1);
        goto label24;

     label24:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 31);
        if i0 == 31 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45524, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 62);
        if i0 != 62 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45525, 0);
        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45524, 1);
        goto label26;

     label26:
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        goto label29;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45525, 1);
        goto label28;

     label28:
        $z1$sym = null;
        $z1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;

     label29:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, $z1$sym);
        return $z1;
    }

    public static int calculatePoints(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32542, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.LargeStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 501);
        $r1 = <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45526, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45526, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        return 40;
    }

    public void <init>(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.moves.LargeStraightMove r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.moves.LargeStraightMove;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10883, 32543, 2);
        _sym_tmp_1 = <com.tum.yahtzee.moves.LargeStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 501);
        $r2 = <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45527, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45527, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.LargeStraightMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.LargeStraightMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32544, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.LargeStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 501);
        $r1 = <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45528, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45528, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i0 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: int calculatePoints(java.util.List)>(null);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i0$sym);
        return $i0;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.LargeStraightMove r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.tum.yahtzee.moves.LargeStraightMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32545, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.LargeStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 501);
        $r1 = <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45529, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45529, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Large Straight, Points: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i0 = virtualinvoke r0.<com.tum.yahtzee.moves.LargeStraightMove: int getPoints()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32546, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32547, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.LargeStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 501);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.LargeStraightMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(501);
        <com.tum.yahtzee.moves.LargeStraightMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[22];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/LargeStraightMove", -2457639345371458057L);
        return $r0;
    }
}
public class com.tum.yahtzee.moves.NumberMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private int cubeCount;
    private int number;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private acteve.symbolic.integer.Expression cubeCount$sym;
    private int cubeCount$a3tid;
    private acteve.symbolic.integer.Expression number$sym;
    private int number$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public static boolean validate(java.util.List, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i1$sym, $r5$sym, $z0$sym, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.units.Cube r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21795, 32548, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.tum.yahtzee.moves.NumberMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r1 = <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45530, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45530, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45531, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, i0$sym, $i1, i0);
        if $i1 != i0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45532, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21795, null);
        return 1;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45532, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label2;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45531, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21795, null);
        return 0;
    }

    public static int calculatePoints(java.util.List, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i1$sym, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.moves.NumberMove r3, $r4;

        r0 := @parameter0: java.util.List;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21797, 32549, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.tum.yahtzee.moves.NumberMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r1 = <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45533, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45533, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        $r4 = new com.tum.yahtzee.moves.NumberMove;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21796, null, null, i0$sym);
        specialinvoke $r4.<com.tum.yahtzee.moves.NumberMove: void <init>(java.util.List,int)>(r0, i0);
        r3 = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i1 = virtualinvoke r3.<com.tum.yahtzee.moves.NumberMove: int getPoints()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21797, $i1$sym);
        return $i1;
    }

    public void <init>(java.util.List, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i3$sym, $i2$sym, $i1$sym, $r6$sym, $z0$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3;
        com.tum.yahtzee.moves.NumberMove r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        com.tum.yahtzee.units.Cube r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.tum.yahtzee.moves.NumberMove;
        r1 := @parameter0: java.util.List;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21796, 32550, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.tum.yahtzee.moves.NumberMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r2 = <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45534, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45534, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression cubeCount$sym> = null;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 503);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(503);
        r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount> = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45535, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r5 = (com.tum.yahtzee.units.Cube) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r5.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, i0$sym, $i1, i0);
        if $i1 != i0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45536, 0);
        $i2$sym = r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression cubeCount$sym>;
        _sym_tmp_3 = r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 503);
        $i2 = r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount>;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 + 1;
        r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression cubeCount$sym> = $i3$sym;
        _sym_tmp_4 = r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 503);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(503);
        r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount> = $i3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45536, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label2;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45535, 1);
        goto label6;

     label6:
        r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression number$sym> = i0$sym;
        _sym_tmp_5 = r0.<com.tum.yahtzee.moves.NumberMove: int number$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 504);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.moves.NumberMove: int number$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(504);
        r0.<com.tum.yahtzee.moves.NumberMove: int number> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        return;
    }

    public int getNumber()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.NumberMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.NumberMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21771, 32551, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.NumberMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r1 = <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45537, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45537, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        $i0$sym = r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression number$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.NumberMove: int number$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 504);
        $i0 = r0.<com.tum.yahtzee.moves.NumberMove: int number>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21771, $i0$sym);
        return $i0;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        com.tum.yahtzee.moves.NumberMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.NumberMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32552, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.NumberMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r1 = <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45538, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45538, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $i0$sym = r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression cubeCount$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 503);
        $i0 = r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount>;
        $i1$sym = r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression number$sym>;
        _sym_tmp_3 = r0.<com.tum.yahtzee.moves.NumberMove: int number$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 504);
        $i1 = r0.<com.tum.yahtzee.moves.NumberMove: int number>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 + 1;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, $i2$sym, $i0, $i2);
        $i3 = $i0 * $i2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i3$sym);
        return $i3;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        com.tum.yahtzee.moves.NumberMove r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.tum.yahtzee.moves.NumberMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32553, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.NumberMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r1 = <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45539, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45539, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $i0$sym = r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression cubeCount$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 503);
        $i0 = r0.<com.tum.yahtzee.moves.NumberMove: int cubeCount>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x ");
        $i1$sym = r0.<com.tum.yahtzee.moves.NumberMove: acteve.symbolic.integer.Expression number$sym>;
        _sym_tmp_3 = r0.<com.tum.yahtzee.moves.NumberMove: int number$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 504);
        $i1 = r0.<com.tum.yahtzee.moves.NumberMove: int number>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i2$sym);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s, Points: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i3 = virtualinvoke r0.<com.tum.yahtzee.moves.NumberMove: int getPoints()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i3$sym);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32554, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 6);
        r1 = $r0[6];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32555, 0);
        $r0 = newmultiarray (boolean)[7][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.NumberMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 502);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.NumberMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(502);
        <com.tum.yahtzee.moves.NumberMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[6];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/NumberMove", -150998355891644053L);
        return $r0;
    }
}
public class com.tum.yahtzee.moves.SmallStraightMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public static boolean validate(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $i7$sym, $i6$sym, $i5$sym, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $r5$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.units.Cube r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21792, 32556, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.SmallStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 505);
        $r1 = <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45540, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45540, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45541, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45542, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        if $i1 == 1 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45543, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 2);
        if $i1 == 2 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45544, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 3);
        if $i1 == 3 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45545, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 4);
        if $i1 == 4 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45546, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 5);
        if $i1 == 5 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45547, 0);
        goto label15;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45542, 1);
        goto label4;

     label4:
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i2 = i0 & 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 != 0 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45548, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label22;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45543, 1);
        goto label6;

     label6:
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        $i3 = i0 & 2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 0);
        if $i3 != 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45549, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 2);
        i0 = i0 + 2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label22;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45544, 1);
        goto label8;

     label8:
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 4);
        $i4 = i0 & 4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 0);
        if $i4 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45550, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 4);
        i0 = i0 + 4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label22;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45545, 1);
        goto label10;

     label10:
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 8);
        $i5 = i0 & 8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 0);
        if $i5 != 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45551, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 8);
        i0 = i0 + 8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label22;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45546, 1);
        goto label12;

     label12:
        $i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 16);
        $i6 = i0 & 16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i6$sym, null, $i6, 0);
        if $i6 != 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45552, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 16);
        i0 = i0 + 16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label22;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45547, 1);
        goto label14;

     label14:
        $i7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 32);
        $i7 = i0 & 32;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, null, $i7, 0);
        if $i7 != 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45553, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 32);
        i0 = i0 + 32;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        goto label22;

     label15:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        return 0;

        goto label22;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45548, 1);
        goto label22;

        goto label22;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45549, 1);
        goto label22;

        goto label22;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45550, 1);
        goto label22;

        goto label22;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45551, 1);
        goto label22;

        goto label22;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45552, 1);
        goto label22;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45553, 1);
        goto label22;

     label22:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        goto label2;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45541, 1);
        goto label24;

     label24:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 15);
        if i0 == 15 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45554, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 30);
        if i0 == 30 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45555, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 60);
        if i0 == 60 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45556, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 31);
        if i0 == 31 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45557, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 62);
        if i0 != 62 goto label30;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45558, 0);
        goto label29;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45554, 1);
        goto label29;

        goto label29;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45555, 1);
        goto label29;

        goto label29;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45556, 1);
        goto label29;

        goto label29;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45557, 1);
        goto label29;

     label29:
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 22);
        r2[22] = 1;
        goto label32;

        goto label31;

     label30:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45558, 1);
        goto label31;

     label31:
        $z1$sym = null;
        $z1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 23);
        r2[23] = 1;

     label32:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 24);
        r2[24] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, $z1$sym);
        return $z1;
    }

    public static int calculatePoints(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32557, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.SmallStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 505);
        $r1 = <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45559, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45559, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        return 30;
    }

    public void <init>(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.moves.SmallStraightMove r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.moves.SmallStraightMove;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10883, 32558, 2);
        _sym_tmp_1 = <com.tum.yahtzee.moves.SmallStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 505);
        $r2 = <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45560, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45560, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.SmallStraightMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.SmallStraightMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32559, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.SmallStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 505);
        $r1 = <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45561, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45561, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i0 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: int calculatePoints(java.util.List)>(null);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i0$sym);
        return $i0;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.SmallStraightMove r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.tum.yahtzee.moves.SmallStraightMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32560, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.SmallStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 505);
        $r1 = <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45562, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45562, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Small Straight, Points: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i0 = virtualinvoke r0.<com.tum.yahtzee.moves.SmallStraightMove: int getPoints()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32561, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32562, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.SmallStraightMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 505);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.SmallStraightMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(505);
        <com.tum.yahtzee.moves.SmallStraightMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[25];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/SmallStraightMove", 4200634781943716824L);
        return $r0;
    }
}
public class com.tum.yahtzee.moves.ThreeOfAKindMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private int points;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private acteve.symbolic.integer.Expression points$sym;
    private int points$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public static boolean validate(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i5$sym, i4$sym, $i3$sym, $i2$sym, $i1$sym, $r6$sym, $z0$sym, i0$sym, r3$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1, $i2, $i3, i4, $i5;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        int[] r3;
        com.tum.yahtzee.units.Cube r4;
        java.util.Iterator r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21792, 32563, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 506);
        $r1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45563, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45563, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        r3 = newarray (int)[6];
        r3$sym = null;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 6);
        if i0 >= 6 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45564, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>(r3$sym, i0$sym, null, r3, i0, 0);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, i0);
        r3[i0] = 0;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45564, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r5 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45565, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r3$sym, $i1$sym, r3, $i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r3, $i1);
        $i2 = r3[$i1];
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        $i3 = $i2 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>(r3$sym, $i1$sym, $i3$sym, r3, $i1, $i3);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, $i1);
        r3[$i1] = $i3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label5;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45565, 1);
        goto label7;

     label7:
        i4$sym = null;
        i4 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 6);
        if i4 >= 6 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45566, 0);
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r3$sym, i4$sym, r3, i4);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r3, i4);
        $i5 = r3[i4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 3);
        if $i5 < 3 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45567, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        return 1;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45567, 1);
        goto label10;

     label10:
        i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i4$sym, null, i4, 1);
        i4 = i4 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label8;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45566, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        return 0;
    }

    public static int calculatePoints(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i1$sym, $r5$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.units.Cube r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32564, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 506);
        $r1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45568, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45568, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45569, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r4.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        i0 = i0 + $i1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45569, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21793, i0$sym);
        return i0;
    }

    public void <init>(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.ThreeOfAKindMove r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.moves.ThreeOfAKindMove;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10883, 32565, 2);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 506);
        $r2 = <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45570, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45570, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i0 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: int calculatePoints(java.util.List)>(r1);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        r0.<com.tum.yahtzee.moves.ThreeOfAKindMove: acteve.symbolic.integer.Expression points$sym> = $i0$sym;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.ThreeOfAKindMove: int points$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 507);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.moves.ThreeOfAKindMove: int points$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(507);
        r0.<com.tum.yahtzee.moves.ThreeOfAKindMove: int points> = $i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.ThreeOfAKindMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.ThreeOfAKindMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32566, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 506);
        $r1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45571, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45571, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        $i0$sym = r0.<com.tum.yahtzee.moves.ThreeOfAKindMove: acteve.symbolic.integer.Expression points$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.moves.ThreeOfAKindMove: int points$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 507);
        $i0 = r0.<com.tum.yahtzee.moves.ThreeOfAKindMove: int points>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i0$sym);
        return $i0;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.ThreeOfAKindMove r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.tum.yahtzee.moves.ThreeOfAKindMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32567, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 506);
        $r1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45572, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45572, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreeOfAKind, Points: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i0 = virtualinvoke r0.<com.tum.yahtzee.moves.ThreeOfAKindMove: int getPoints()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32568, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32569, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.ThreeOfAKindMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 506);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.ThreeOfAKindMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(506);
        <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[12];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/ThreeOfAKindMove", 3789966490410998940L);
        return $r0;
    }
}
public class com.tum.yahtzee.moves.YahtzeeMove extends java.lang.Object implements com.tum.yahtzee.moves.IBaseMove
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public static boolean validate(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z3$sym, $i2$sym, $i1$sym, $z1$sym, $i0$sym, $r7$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0, $i1, $i2;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedList r3, $r6;
        java.util.Iterator r4;
        com.tum.yahtzee.units.Cube r5;
        boolean $z0, $z1, $z3;
        java.lang.Object $r7;
        java.lang.Integer $r8, $r9;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21792, 32570, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.YahtzeeMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 508);
        $r1 = <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45573, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45573, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        $r6 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.util.LinkedList: void <init>()>();
        r3 = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45574, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r5 = (com.tum.yahtzee.units.Cube) $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i0 = virtualinvoke r5.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, $i0$sym);
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z1 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>($r8);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45575, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i1 = virtualinvoke r5.<com.tum.yahtzee.units.Cube: int getNumber()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5, $i1$sym);
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45575, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label2;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45574, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        if $i2 != 1 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45576, 0);
        $z3$sym = null;
        $z3 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label9;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45576, 1);
        goto label8;

     label8:
        $z3$sym = null;
        $z3 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21792, $z3$sym);
        return $z3;
    }

    public static int calculatePoints(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32571, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.YahtzeeMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 508);
        $r1 = <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45577, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45577, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        return 50;
    }

    public void <init>(java.util.List)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.moves.YahtzeeMove r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.moves.YahtzeeMove;
        r1 := @parameter0: java.util.List;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(10883, 32572, 2);
        _sym_tmp_1 = <com.tum.yahtzee.moves.YahtzeeMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 508);
        $r2 = <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45578, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45578, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.YahtzeeMove r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.moves.YahtzeeMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32573, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.YahtzeeMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 508);
        $r1 = <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45579, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45579, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i0 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: int calculatePoints(java.util.List)>(null);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i0$sym);
        return $i0;
    }

    public void print()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.moves.YahtzeeMove r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.tum.yahtzee.moves.YahtzeeMove;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32574, 1);
        _sym_tmp_1 = <com.tum.yahtzee.moves.YahtzeeMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 508);
        $r1 = <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45580, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45580, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Yahtzee Move, Points: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i0 = virtualinvoke r0.<com.tum.yahtzee.moves.YahtzeeMove: int getPoints()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2035, null, null);
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32575, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32576, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <com.tum.yahtzee.moves.YahtzeeMove: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 508);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.moves.YahtzeeMove: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(508);
        <com.tum.yahtzee.moves.YahtzeeMove: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[9];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/moves/YahtzeeMove", 3921009513708407528L);
        return $r0;
    }
}
final class com.tum.yahtzee.services.MessageService$1 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.services.MessageService$1 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.services.MessageService$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32577, 1);
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r1 = <com.tum.yahtzee.services.MessageService$1: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45581, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.services.MessageService$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45581, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        com.tum.yahtzee.services.MessageService$1 r0;
        android.content.DialogInterface r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.services.MessageService$1;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1528, 32578, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r2 = <com.tum.yahtzee.services.MessageService$1: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45582, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.services.MessageService$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45582, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32579, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.services.MessageService$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32580, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 509);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.services.MessageService$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(509);
        <com.tum.yahtzee.services.MessageService$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/services/MessageService$1", 3934875463367318721L);
        return $r0;
    }
}
final class com.tum.yahtzee.services.MessageService$2 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final com.tum.yahtzee.services.MethodPointer val$methodPointer;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int val$methodPointer$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(com.tum.yahtzee.services.MethodPointer)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.services.MessageService$2 r0;
        com.tum.yahtzee.services.MethodPointer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.services.MessageService$2;
        r1 := @parameter0: com.tum.yahtzee.services.MethodPointer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21798, 32581, 2);
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 510);
        $r2 = <com.tum.yahtzee.services.MessageService$2: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45583, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.services.MessageService$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45583, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<com.tum.yahtzee.services.MessageService$2: int val$methodPointer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 511);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.services.MessageService$2: int val$methodPointer$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(511);
        r0.<com.tum.yahtzee.services.MessageService$2: com.tum.yahtzee.services.MethodPointer val$methodPointer> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.services.MessageService$2 r0;
        android.content.DialogInterface r1;
        boolean[][] $r2;
        boolean[] r3;
        com.tum.yahtzee.services.MethodPointer $r4;

        r0 := @this: com.tum.yahtzee.services.MessageService$2;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1528, 32582, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 510);
        $r2 = <com.tum.yahtzee.services.MessageService$2: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45584, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.services.MessageService$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45584, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1527, null);
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        _sym_tmp_2 = r0.<com.tum.yahtzee.services.MessageService$2: int val$methodPointer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 511);
        $r4 = r0.<com.tum.yahtzee.services.MessageService$2: com.tum.yahtzee.services.MethodPointer val$methodPointer>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11307, null);
        virtualinvoke $r4.<com.tum.yahtzee.services.MethodPointer: void execute()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32583, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.services.MessageService$2: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32584, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 510);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.services.MessageService$2: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(510);
        <com.tum.yahtzee.services.MessageService$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/services/MessageService$2", 4320153510620162373L);
        return $r0;
    }
}
public class com.tum.yahtzee.services.MessageService extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.services.MessageService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.services.MessageService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32585, 1);
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r1 = <com.tum.yahtzee.services.MessageService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45585, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.services.MessageService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45585, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static void showMessage(android.content.Context, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        android.content.Context r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        android.app.AlertDialog r4;
        android.app.AlertDialog$Builder $r5;
        com.tum.yahtzee.services.MessageService$1 $r6;

        r0 := @parameter0: android.content.Context;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21760, 32586, 2);
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r2 = <com.tum.yahtzee.services.MessageService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45586, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.services.MessageService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45586, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r5 = new android.app.AlertDialog$Builder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke $r5.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1518, null);
        r4 = virtualinvoke $r5.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1805, null, null);
        virtualinvoke r4.<android.app.AlertDialog: void setCancelable(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1803, null, null);
        virtualinvoke r4.<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>(r1);
        $r6 = new com.tum.yahtzee.services.MessageService$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<com.tum.yahtzee.services.MessageService$1: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8413, null, null, null);
        virtualinvoke r4.<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("OK", $r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke r4.<android.app.AlertDialog: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public static void showMessage(android.content.Context, java.lang.String, com.tum.yahtzee.services.MethodPointer)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        android.content.Context r0;
        java.lang.String r1;
        com.tum.yahtzee.services.MethodPointer r2;
        boolean[][] $r3;
        boolean[] r4;
        android.app.AlertDialog r5;
        android.app.AlertDialog$Builder $r6;
        com.tum.yahtzee.services.MessageService$2 $r7;

        r0 := @parameter0: android.content.Context;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: com.tum.yahtzee.services.MethodPointer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21782, 32587, 3);
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r3 = <com.tum.yahtzee.services.MessageService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45587, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <com.tum.yahtzee.services.MessageService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45587, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        $r6 = new android.app.AlertDialog$Builder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke $r6.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1518, null);
        r5 = virtualinvoke $r6.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1805, null, null);
        virtualinvoke r5.<android.app.AlertDialog: void setCancelable(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1803, null, null);
        virtualinvoke r5.<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>(r1);
        $r7 = new com.tum.yahtzee.services.MessageService$2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21798, null, null);
        specialinvoke $r7.<com.tum.yahtzee.services.MessageService$2: void <init>(com.tum.yahtzee.services.MethodPointer)>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8413, null, null, null);
        virtualinvoke r5.<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("OK", $r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke r5.<android.app.AlertDialog: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32588, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.services.MessageService: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32589, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <com.tum.yahtzee.services.MessageService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 512);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.services.MessageService: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(512);
        <com.tum.yahtzee.services.MessageService: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/services/MessageService", 3223817315510940123L);
        return $r0;
    }
}
public class com.tum.yahtzee.services.MethodPointer extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.services.MethodPointer r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.services.MethodPointer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32590, 1);
        _sym_tmp_1 = <com.tum.yahtzee.services.MethodPointer: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 513);
        $r1 = <com.tum.yahtzee.services.MethodPointer: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45588, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.services.MethodPointer: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45588, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void execute()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.services.MethodPointer r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.services.MethodPointer;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11307, 32591, 1);
        _sym_tmp_1 = <com.tum.yahtzee.services.MethodPointer: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 513);
        $r1 = <com.tum.yahtzee.services.MethodPointer: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45589, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.services.MethodPointer: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45589, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32592, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.services.MethodPointer: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32593, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <com.tum.yahtzee.services.MethodPointer: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 513);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.services.MethodPointer: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(513);
        <com.tum.yahtzee.services.MethodPointer: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/services/MethodPointer", 3934875461701785195L);
        return $r0;
    }
}
public class com.tum.yahtzee.units.Cube extends java.lang.Object
{
    private int number;
    private boolean used;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private acteve.symbolic.integer.Expression number$sym;
    private int number$a3tid;
    private acteve.symbolic.integer.Expression used$sym;
    private int used$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        com.tum.yahtzee.units.Cube r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.units.Cube;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32594, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Cube: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r1 = <com.tum.yahtzee.units.Cube: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45590, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Cube: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45590, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21799, null);
        virtualinvoke r0.<com.tum.yahtzee.units.Cube: void unflag()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        virtualinvoke r0.<com.tum.yahtzee.units.Cube: void shake()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void shake()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i1$sym, $l0$sym, $d1$sym, $d0$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i1;
        com.tum.yahtzee.units.Cube r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        double $d0, $d1;
        long $l0;

        r0 := @this: com.tum.yahtzee.units.Cube;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32595, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Cube: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r1 = <com.tum.yahtzee.units.Cube: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45591, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Cube: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45591, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        $z0$sym = r0.<com.tum.yahtzee.units.Cube: acteve.symbolic.integer.Expression used$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Cube: int used$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 515);
        $z0 = r0.<com.tum.yahtzee.units.Cube: boolean used>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45592, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(579);
        $d0 = staticinvoke <java.lang.Math: double random()>();
        $d0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(579);
        $d1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,double,double)>($d0$sym, null, $d0, 5.0);
        $d1 = $d0 * 5.0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21801, $d1$sym);
        $l0 = staticinvoke <java.lang.Math: long round(double)>($d1);
        $l0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21801);
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($l0$sym, 4);
        $i1 = (int) $l0;
        r0.<com.tum.yahtzee.units.Cube: acteve.symbolic.integer.Expression number$sym> = $i1$sym;
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Cube: int number$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 516);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Cube: int number$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(516);
        r0.<com.tum.yahtzee.units.Cube: int number> = $i1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45592, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public int getNumber()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.units.Cube r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.units.Cube;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21771, 32596, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Cube: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r1 = <com.tum.yahtzee.units.Cube: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45593, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Cube: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45593, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        $i0$sym = r0.<com.tum.yahtzee.units.Cube: acteve.symbolic.integer.Expression number$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Cube: int number$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 516);
        $i0 = r0.<com.tum.yahtzee.units.Cube: int number>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21771, $i0$sym);
        return $i0;
    }

    public void setNumber(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.units.Cube r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.units.Cube;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21802, 32597, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.tum.yahtzee.units.Cube: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r1 = <com.tum.yahtzee.units.Cube: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45594, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Cube: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45594, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        r0.<com.tum.yahtzee.units.Cube: acteve.symbolic.integer.Expression number$sym> = i0$sym;
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Cube: int number$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 516);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Cube: int number$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(516);
        r0.<com.tum.yahtzee.units.Cube: int number> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void setUsed(boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Cube r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.units.Cube;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21791, 32598, 2);
        z0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.tum.yahtzee.units.Cube: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r1 = <com.tum.yahtzee.units.Cube: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45595, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Cube: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45595, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        r0.<com.tum.yahtzee.units.Cube: acteve.symbolic.integer.Expression used$sym> = z0$sym;
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Cube: int used$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 515);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Cube: int used$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(515);
        r0.<com.tum.yahtzee.units.Cube: boolean used> = z0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public boolean getUsed()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Cube r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: com.tum.yahtzee.units.Cube;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21770, 32599, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Cube: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r1 = <com.tum.yahtzee.units.Cube: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45596, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Cube: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45596, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        $z0$sym = r0.<com.tum.yahtzee.units.Cube: acteve.symbolic.integer.Expression used$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Cube: int used$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 515);
        $z0 = r0.<com.tum.yahtzee.units.Cube: boolean used>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21770, $z0$sym);
        return $z0;
    }

    public void unflag()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Cube r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.tum.yahtzee.units.Cube;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21799, 32600, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Cube: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r1 = <com.tum.yahtzee.units.Cube: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45597, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Cube: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45597, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        r0.<com.tum.yahtzee.units.Cube: acteve.symbolic.integer.Expression used$sym> = null;
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Cube: int used$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 515);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Cube: int used$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(515);
        r0.<com.tum.yahtzee.units.Cube: boolean used> = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32601, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.units.Cube: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32602, 0);
        $r0 = newmultiarray (boolean)[8][];
        _sym_tmp_1 = <com.tum.yahtzee.units.Cube: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 514);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.units.Cube: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(514);
        <com.tum.yahtzee.units.Cube: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/units/Cube", 7900216330204005298L);
        return $r0;
    }
}
public class com.tum.yahtzee.units.Player extends java.lang.Object
{
    private java.util.List cubes;
    private java.util.List moves;
    private java.util.List lockedMoves;
    private int finalPoints;
    private int shaken;
    private java.lang.String selectedMove;
    private java.lang.String name;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int cubes$a3tid;
    private int moves$a3tid;
    private int lockedMoves$a3tid;
    private acteve.symbolic.integer.Expression finalPoints$sym;
    private int finalPoints$a3tid;
    private acteve.symbolic.integer.Expression shaken$sym;
    private int shaken$a3tid;
    private int selectedMove$a3tid;
    private int name$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.units.Player r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.LinkedList $r4, $r5, $r6;
        java.util.List $r7;
        com.tum.yahtzee.units.Cube $r8;

        r0 := @this: com.tum.yahtzee.units.Player;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 32603, 2);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r2 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45598, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45598, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.util.LinkedList: void <init>()>();
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 518);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int cubes$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(518);
        r0.<com.tum.yahtzee.units.Player: java.util.List cubes> = $r4;
        $r5 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.util.LinkedList: void <init>()>();
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 519);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int moves$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(519);
        r0.<com.tum.yahtzee.units.Player: java.util.List moves> = $r5;
        $r6 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.util.LinkedList: void <init>()>();
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int lockedMoves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 520);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int lockedMoves$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(520);
        r0.<com.tum.yahtzee.units.Player: java.util.List lockedMoves> = $r6;
        r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression finalPoints$sym> = null;
        _sym_tmp_5 = r0.<com.tum.yahtzee.units.Player: int finalPoints$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 521);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int finalPoints$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(521);
        r0.<com.tum.yahtzee.units.Player: int finalPoints> = -1;
        r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression shaken$sym> = null;
        _sym_tmp_6 = r0.<com.tum.yahtzee.units.Player: int shaken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 522);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int shaken$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(522);
        r0.<com.tum.yahtzee.units.Player: int shaken> = 1;
        _sym_tmp_7 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 523);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(523);
        r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove> = "Number 1";
        _sym_tmp_8 = r0.<com.tum.yahtzee.units.Player: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 524);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int name$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(524);
        r0.<com.tum.yahtzee.units.Player: java.lang.String name> = r1;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 5);
        if i0 >= 5 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45599, 0);
        _sym_tmp_9 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 518);
        $r7 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        $r8 = new com.tum.yahtzee.units.Cube;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<com.tum.yahtzee.units.Cube: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45599, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        return;
    }

    public java.lang.String getName()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(993, 32604, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45600, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45600, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 524);
        $r3 = r0.<com.tum.yahtzee.units.Player: java.lang.String name>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void unlockCubes()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $r6$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.units.Cube r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21786, 32605, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45601, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45601, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 518);
        $r5 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45602, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21799, null);
        virtualinvoke r4.<com.tum.yahtzee.units.Cube: void unflag()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45602, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    public java.util.List getMoves()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i1$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedList r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21767, 32606, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45603, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45603, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        $r4 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.util.LinkedList: void <init>()>();
        r3 = $r4;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 6);
        if i0 >= 6 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45604, 0);
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number ");
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i1 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i1$sym);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45604, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("ThreeOfAKind");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("FourOfAKind");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("FullHouse");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("SmallStraight");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("LargeStraight");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("Yahtzee");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("Chance");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return r3;
    }

    public java.lang.String getSelectedMove()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21803, 32607, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45605, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45605, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r3 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setSelectedMove(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Player r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.tum.yahtzee.units.Player;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21762, 32608, 2);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r2 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45606, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45606, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 5);
        r3 = $r2[5];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 523);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(523);
        r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean shake()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i2$sym, $i1$sym, $r6$sym, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.units.Cube r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21759, 32609, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45607, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45607, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        $i0$sym = r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression shaken$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int shaken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 522);
        $i0 = r0.<com.tum.yahtzee.units.Player: int shaken>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 3);
        if $i0 != 3 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45608, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21759, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45608, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 518);
        $r5 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45609, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.units.Cube) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        virtualinvoke r4.<com.tum.yahtzee.units.Cube: void shake()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label4;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45609, 1);
        goto label6;

     label6:
        $i1$sym = r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression shaken$sym>;
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int shaken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 522);
        $i1 = r0.<com.tum.yahtzee.units.Player: int shaken>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        $i2 = $i1 + 1;
        r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression shaken$sym> = $i2$sym;
        _sym_tmp_5 = r0.<com.tum.yahtzee.units.Player: int shaken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 522);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int shaken$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(522);
        r0.<com.tum.yahtzee.units.Player: int shaken> = $i2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21759, null);
        return 1;
    }

    public java.util.List getCubes()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21769, 32610, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45610, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45610, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 518);
        $r3 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public int getPointsForSelectedMove()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21774, 32611, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45611, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45611, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r3 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21804, null, null);
        $i0 = virtualinvoke r0.<com.tum.yahtzee.units.Player: int getPointsForMove(java.lang.String)>($r3);
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21804);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21774, $i0$sym);
        return $i0;
    }

    public int getPointsForMove(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_18, $i12$sym, $z22$sym, $z21$sym, $z20$sym, $i11$sym, $z19$sym, $z18$sym, $i10$sym, $z17$sym, $z16$sym, $z15$sym, $i9$sym, $z14$sym, $z13$sym, $z12$sym, $i8$sym, $z11$sym, $z10$sym, $z9$sym, $i7$sym, $z8$sym, $z7$sym, $z6$sym, $i6$sym, $z5$sym, $z4$sym, $z3$sym, $i5$sym, $i4$sym, $z2$sym, $i3$sym, $z1$sym, $i2$sym, $i1$sym, $z0$sym, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.tum.yahtzee.units.Player r0;
        java.lang.String r1, $r5, $r6;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.lang.Integer $r4;
        java.util.List $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        r0 := @this: com.tum.yahtzee.units.Player;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21804, 32612, 2);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r2 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_18 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45612, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45612, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 9);
        r3 = $r2[9];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("Number");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45613, 0);
        $r4 = new java.lang.Integer;
        $r5 = "Number ";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i1$sym);
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r4.<java.lang.Integer: void <init>(java.lang.String)>($r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 518);
        $r7 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i2 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21795, null, $i2$sym);
        $z1 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean validate(java.util.List,int)>($r7, $i2);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21795);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45614, 0);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i3 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, $i3$sym);
        $z2 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean numberMoveAlreadyDone(int)>($i3);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21805);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45615, 0);
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 518);
        $r8 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i4 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21797, null, $i4$sym);
        $i5 = staticinvoke <com.tum.yahtzee.moves.NumberMove: int calculatePoints(java.util.List,int)>($r8, $i4);
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21797);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, $i5$sym);
        return $i5;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45614, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45615, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label33;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45613, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ThreeOfAKind");
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45616, 0);
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 518);
        $r9 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z4 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean validate(java.util.List)>($r9);
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45617, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z5 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/ThreeOfAKindMove");
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45618, 0);
        _sym_tmp_5 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 518);
        $r10 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i6 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: int calculatePoints(java.util.List)>($r10);
        $i6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, $i6$sym);
        return $i6;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45616, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("FourOfAKind");
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45619, 0);
        _sym_tmp_6 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 518);
        $r11 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z7 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean validate(java.util.List)>($r11);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45620, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z8 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/FourOfAKindMove");
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 != 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45621, 0);
        _sym_tmp_7 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 518);
        $r12 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i7 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: int calculatePoints(java.util.List)>($r12);
        $i7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 12);
        r3[12] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, $i7$sym);
        return $i7;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45619, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("FullHouse");
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 13);
        r3[13] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45622, 0);
        _sym_tmp_8 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 518);
        $r13 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z10 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean validate(java.util.List)>($r13);
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 14);
        r3[14] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45623, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z11 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/FullHouseMove");
        $z11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 15);
        r3[15] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z11$sym, null, $z11, 0);
        if $z11 != 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45624, 0);
        _sym_tmp_9 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 518);
        $r14 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i8 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: int calculatePoints(java.util.List)>($r14);
        $i8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 16);
        r3[16] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, $i8$sym);
        return $i8;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45622, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("SmallStraight");
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 17);
        r3[17] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45625, 0);
        _sym_tmp_10 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 518);
        $r15 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z13 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean validate(java.util.List)>($r15);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 18);
        r3[18] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45626, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z14 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/SmallStraightMove");
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 19);
        r3[19] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 != 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45627, 0);
        _sym_tmp_11 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 518);
        $r16 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i9 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: int calculatePoints(java.util.List)>($r16);
        $i9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 20);
        r3[20] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, $i9$sym);
        return $i9;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45625, 1);
        goto label14;

     label14:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z15 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("LargeStraight");
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 21);
        r3[21] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45628, 0);
        _sym_tmp_12 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 518);
        $r17 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z16 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean validate(java.util.List)>($r17);
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 22);
        r3[22] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 == 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45629, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z17 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/LargeStraightMove");
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 23);
        r3[23] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 != 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45630, 0);
        _sym_tmp_13 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 518);
        $r18 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i10 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: int calculatePoints(java.util.List)>($r18);
        $i10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 24);
        r3[24] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, $i10$sym);
        return $i10;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45628, 1);
        goto label16;

     label16:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z18 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("Yahtzee");
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 25);
        r3[25] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45631, 0);
        _sym_tmp_14 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 518);
        $r19 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z19 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean validate(java.util.List)>($r19);
        $z19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 26);
        r3[26] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z19$sym, null, $z19, 0);
        if $z19 == 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45632, 0);
        _sym_tmp_15 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 518);
        $r20 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i11 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: int calculatePoints(java.util.List)>($r20);
        $i11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 27);
        r3[27] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, $i11$sym);
        return $i11;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45631, 1);
        goto label18;

     label18:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z20 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("Chance");
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 28, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 28);
        r3[28] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z20$sym, null, $z20, 0);
        if $z20 == 0 goto label30;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45633, 0);
        _sym_tmp_16 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 518);
        $r21 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z21 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean validate(java.util.List)>($r21);
        $z21$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 29, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 29);
        r3[29] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z21$sym, null, $z21, 0);
        if $z21 == 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45634, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z22 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/ChanceMove");
        $z22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 30, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 30);
        r3[30] = 1;
        _sym_tmp_18 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z22$sym, null, $z22, 0);
        if $z22 != 0 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45635, 0);
        _sym_tmp_17 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 518);
        $r22 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21793, null);
        $i12 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: int calculatePoints(java.util.List)>($r22);
        $i12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21793);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 31, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 31);
        r3[31] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, $i12$sym);
        return $i12;

        goto label33;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45617, 1);
        goto label33;

        goto label33;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45618, 1);
        goto label33;

        goto label33;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45620, 1);
        goto label33;

        goto label33;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45621, 1);
        goto label33;

        goto label33;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45623, 1);
        goto label33;

        goto label33;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45624, 1);
        goto label33;

        goto label33;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45626, 1);
        goto label33;

        goto label33;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45627, 1);
        goto label33;

        goto label33;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45629, 1);
        goto label33;

        goto label33;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45630, 1);
        goto label33;

        goto label33;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45632, 1);
        goto label33;

        goto label33;

     label30:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45633, 1);
        goto label33;

        goto label33;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45634, 1);
        goto label33;

        goto label33;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_18, 45635, 1);
        goto label33;

     label33:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 32, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 32);
        r3[32] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21804, null);
        return -1;
    }

    public boolean isSelectedMovePossible()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21773, 32613, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45636, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45636, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21774, null);
        $i0 = virtualinvoke r0.<com.tum.yahtzee.units.Player: int getPointsForSelectedMove()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21774);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, -1);
        if $i0 == -1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45637, 0);
        $z0$sym = null;
        $z0 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45637, 1);
        goto label3;

     label3:
        $z0$sym = null;
        $z0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21773, $z0$sym);
        return $z0;
    }

    public void doSelectedMove()
    {
        acteve.symbolic.integer.Expression _sym_tmp_37, $z29$sym, $z28$sym, $z27$sym, $z25$sym, $z24$sym, $z22$sym, $z21$sym, $z20$sym, $z18$sym, $z17$sym, $z16$sym, $z14$sym, $z13$sym, $z12$sym, $z10$sym, $z9$sym, $z8$sym, $z6$sym, $z5$sym, $z4$sym, $i4$sym, $z2$sym, $i3$sym, $z1$sym, $i2$sym, $i1$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_36, _sym_tmp_35, _sym_tmp_34, _sym_tmp_33, _sym_tmp_32, _sym_tmp_31, _sym_tmp_30, _sym_tmp_29, _sym_tmp_28, _sym_tmp_27, _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3, $i4;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r5, $r6, $r7, $r12, $r17, $r22, $r27, $r32, $r37, $r42;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, $z8, $z9, $z10, $z12, $z13, $z14, $z16, $z17, $z18, $z20, $z21, $z22, $z24, $z25, $z27, $z28, $z29;
        java.lang.Integer $r4;
        java.util.List $r8, $r9, $r11, $r13, $r14, $r16, $r18, $r19, $r21, $r23, $r24, $r26, $r28, $r29, $r31, $r33, $r34, $r36, $r38, $r39, $r41, $r43, $r44, $r46;
        com.tum.yahtzee.moves.NumberMove $r10;
        com.tum.yahtzee.moves.ThreeOfAKindMove $r15;
        com.tum.yahtzee.moves.FourOfAKindMove $r20;
        com.tum.yahtzee.moves.FullHouseMove $r25;
        com.tum.yahtzee.moves.SmallStraightMove $r30;
        com.tum.yahtzee.moves.LargeStraightMove $r35;
        com.tum.yahtzee.moves.YahtzeeMove $r40;
        com.tum.yahtzee.moves.ChanceMove $r45;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21779, 32614, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_37 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45638, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45638, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 11);
        r2 = $r1[11];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r3 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("Number");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45639, 0);
        $r4 = new java.lang.Integer;
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 523);
        $r5 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        $r6 = "Number ";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i1$sym);
        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r4.<java.lang.Integer: void <init>(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 518);
        $r8 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i2 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21795, null, $i2$sym);
        $z1 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean validate(java.util.List,int)>($r8, $i2);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21795);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45640, 0);
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i3 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, $i3$sym);
        $z2 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean numberMoveAlreadyDone(int)>($i3);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21805);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45641, 0);
        _sym_tmp_5 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 519);
        $r9 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r10 = new com.tum.yahtzee.moves.NumberMove;
        _sym_tmp_6 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 518);
        $r11 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        $i4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i4 = i0 - 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21796, null, null, $i4$sym);
        specialinvoke $r10.<com.tum.yahtzee.moves.NumberMove: void <init>(java.util.List,int)>($r11, $i4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45640, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45641, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label33;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45639, 1);
        goto label6;

     label6:
        _sym_tmp_7 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 523);
        $r12 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("ThreeOfAKind");
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45642, 0);
        _sym_tmp_8 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 518);
        $r13 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z5 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean validate(java.util.List)>($r13);
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45643, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z6 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/ThreeOfAKindMove");
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45644, 0);
        _sym_tmp_9 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 519);
        $r14 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r15 = new com.tum.yahtzee.moves.ThreeOfAKindMove;
        _sym_tmp_10 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 518);
        $r16 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r15.<com.tum.yahtzee.moves.ThreeOfAKindMove: void <init>(java.util.List)>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label33;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45642, 1);
        goto label8;

     label8:
        _sym_tmp_11 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 523);
        $r17 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("FourOfAKind");
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45645, 0);
        _sym_tmp_12 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 518);
        $r18 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z9 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean validate(java.util.List)>($r18);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45646, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z10 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/FourOfAKindMove");
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 != 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45647, 0);
        _sym_tmp_13 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 519);
        $r19 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r20 = new com.tum.yahtzee.moves.FourOfAKindMove;
        _sym_tmp_14 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 518);
        $r21 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r20.<com.tum.yahtzee.moves.FourOfAKindMove: void <init>(java.util.List)>($r21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label33;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45645, 1);
        goto label10;

     label10:
        _sym_tmp_15 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 523);
        $r22 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z12 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("FullHouse");
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45648, 0);
        _sym_tmp_16 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 518);
        $r23 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z13 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean validate(java.util.List)>($r23);
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45649, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z14 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/FullHouseMove");
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 != 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45650, 0);
        _sym_tmp_17 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 519);
        $r24 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r25 = new com.tum.yahtzee.moves.FullHouseMove;
        _sym_tmp_18 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 518);
        $r26 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r25.<com.tum.yahtzee.moves.FullHouseMove: void <init>(java.util.List)>($r26);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r25);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        goto label33;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45648, 1);
        goto label12;

     label12:
        _sym_tmp_19 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 523);
        $r27 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z16 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("SmallStraight");
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45651, 0);
        _sym_tmp_20 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 518);
        $r28 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z17 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean validate(java.util.List)>($r28);
        $z17$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z17$sym, null, $z17, 0);
        if $z17 == 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45652, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z18 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/SmallStraightMove");
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 != 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45653, 0);
        _sym_tmp_21 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 519);
        $r29 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r30 = new com.tum.yahtzee.moves.SmallStraightMove;
        _sym_tmp_22 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 518);
        $r31 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r30.<com.tum.yahtzee.moves.SmallStraightMove: void <init>(java.util.List)>($r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r30);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;
        goto label33;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45651, 1);
        goto label14;

     label14:
        _sym_tmp_23 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 523);
        $r32 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z20 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("LargeStraight");
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z20$sym, null, $z20, 0);
        if $z20 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45654, 0);
        _sym_tmp_24 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 518);
        $r33 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z21 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean validate(java.util.List)>($r33);
        $z21$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 22);
        r2[22] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z21$sym, null, $z21, 0);
        if $z21 == 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45655, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z22 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/LargeStraightMove");
        $z22$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 23);
        r2[23] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z22$sym, null, $z22, 0);
        if $z22 != 0 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45656, 0);
        _sym_tmp_25 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_25, 519);
        $r34 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r35 = new com.tum.yahtzee.moves.LargeStraightMove;
        _sym_tmp_26 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 518);
        $r36 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r35.<com.tum.yahtzee.moves.LargeStraightMove: void <init>(java.util.List)>($r36);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>($r35);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 24);
        r2[24] = 1;
        goto label33;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45654, 1);
        goto label16;

     label16:
        _sym_tmp_27 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_27, 523);
        $r37 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z24 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>("Yahtzee");
        $z24$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 25);
        r2[25] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z24$sym, null, $z24, 0);
        if $z24 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45657, 0);
        _sym_tmp_28 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_28, 518);
        $r38 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z25 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean validate(java.util.List)>($r38);
        $z25$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 26);
        r2[26] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z25$sym, null, $z25, 0);
        if $z25 == 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45658, 0);
        _sym_tmp_29 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_29, 519);
        $r39 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r40 = new com.tum.yahtzee.moves.YahtzeeMove;
        _sym_tmp_30 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_30, 518);
        $r41 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r40.<com.tum.yahtzee.moves.YahtzeeMove: void <init>(java.util.List)>($r41);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r39.<java.util.List: boolean add(java.lang.Object)>($r40);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 27);
        r2[27] = 1;
        goto label33;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45657, 1);
        goto label18;

     label18:
        _sym_tmp_31 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_31, 523);
        $r42 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z27 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("Chance");
        $z27$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 28, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 28);
        r2[28] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z27$sym, null, $z27, 0);
        if $z27 == 0 goto label30;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45659, 0);
        _sym_tmp_32 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_32, 518);
        $r43 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z28 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean validate(java.util.List)>($r43);
        $z28$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 29, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 29);
        r2[29] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z28$sym, null, $z28, 0);
        if $z28 == 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45660, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z29 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/ChanceMove");
        $z29$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 30, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 30);
        r2[30] = 1;
        _sym_tmp_37 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z29$sym, null, $z29, 0);
        if $z29 != 0 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45661, 0);
        _sym_tmp_33 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_33, 519);
        $r44 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r45 = new com.tum.yahtzee.moves.ChanceMove;
        _sym_tmp_34 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_34, 518);
        $r46 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r45.<com.tum.yahtzee.moves.ChanceMove: void <init>(java.util.List)>($r46);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r44.<java.util.List: boolean add(java.lang.Object)>($r45);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 31, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 31);
        r2[31] = 1;
        goto label33;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45643, 1);
        goto label33;

        goto label33;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45644, 1);
        goto label33;

        goto label33;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45646, 1);
        goto label33;

        goto label33;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45647, 1);
        goto label33;

        goto label33;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45649, 1);
        goto label33;

        goto label33;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45650, 1);
        goto label33;

        goto label33;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45652, 1);
        goto label33;

        goto label33;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45653, 1);
        goto label33;

        goto label33;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45655, 1);
        goto label33;

        goto label33;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45656, 1);
        goto label33;

        goto label33;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45658, 1);
        goto label33;

        goto label33;

     label30:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45659, 1);
        goto label33;

        goto label33;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45660, 1);
        goto label33;

        goto label33;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_37, 45661, 1);
        goto label33;

     label33:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21786, null);
        virtualinvoke r0.<com.tum.yahtzee.units.Player: void unlockCubes()>();
        r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression shaken$sym> = null;
        _sym_tmp_35 = r0.<com.tum.yahtzee.units.Player: int shaken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_35, 522);
        _sym_tmp_35 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int shaken$a3tid> = _sym_tmp_35;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(522);
        r0.<com.tum.yahtzee.units.Player: int shaken> = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21759, null);
        virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean shake()>();
        _sym_tmp_36 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_36, 523);
        _sym_tmp_36 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid> = _sym_tmp_36;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(523);
        r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove> = "Number 1";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 32, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 32);
        r2[32] = 1;
        return;
    }

    public java.lang.String specialMoveRequired()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21776, 32615, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45662, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45662, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 12);
        r2 = $r1[12];
        r3 = "";
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r4 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("Yahtzee");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45663, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21773, null);
        $z1 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean isSelectedMovePossible()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21773);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45664, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z2 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/YahtzeeMove");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45665, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21807, null);
        $z3 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMoveUnused()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21807);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45666, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return "Select a Field where you want to save another YahtzeeMove.";

        goto label6;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45663, 1);
        goto label6;

        goto label6;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45664, 1);
        goto label6;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45665, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45666, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21778, null);
        $z4 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMovePossible()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21778);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45667, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21807, null);
        $z5 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMoveUnused()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21807);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45668, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return "Select a Field you want to lock. (Required because there aren\'t any other options you have.)";

        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45667, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45668, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        return r3;
    }

    public void doSpecialMove(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $z6$sym, $z5$sym, $z2$sym, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        com.tum.yahtzee.units.Player r0;
        java.lang.String r1, $r4, $r9, $r17;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0, $z1, $z2, $z5, $z6;
        java.util.List $r5, $r10, $r12, $r13, $r18;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r15, $r16;
        com.tum.yahtzee.moves.YahtzeeMove $r11;
        com.tum.yahtzee.moves.DummyMove $r19;

        r0 := @this: com.tum.yahtzee.units.Player;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21765, 32616, 2);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r2 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45669, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45669, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 13);
        r3 = $r2[13];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r4 = r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_10 = null;
        if $r4 != "Yahtzee" goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45670, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21773, null);
        $z0 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean isSelectedMovePossible()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21773);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45671, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z1 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/YahtzeeMove");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45672, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21807, null);
        $z2 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMoveUnused()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21807);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45673, 0);
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int lockedMoves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 520);
        $r5 = r0.<com.tum.yahtzee.units.Player: java.util.List lockedMoves>;
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Move");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 519);
        $r10 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r11 = new com.tum.yahtzee.moves.YahtzeeMove;
        _sym_tmp_5 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 518);
        $r12 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r11.<com.tum.yahtzee.moves.YahtzeeMove: void <init>(java.util.List)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label9;

        goto label6;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45670, 1);
        goto label6;

        goto label6;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45671, 1);
        goto label6;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45672, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45673, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21778, null);
        $z5 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMovePossible()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21778);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45674, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21807, null);
        $z6 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMoveUnused()>();
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21807);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45675, 0);
        _sym_tmp_6 = r0.<com.tum.yahtzee.units.Player: int lockedMoves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 520);
        $r13 = r0.<com.tum.yahtzee.units.Player: java.util.List lockedMoves>;
        $r14 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Move");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r17);
        _sym_tmp_7 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 519);
        $r18 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r19 = new com.tum.yahtzee.moves.DummyMove;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r19.<com.tum.yahtzee.moves.DummyMove: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45674, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45675, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21786, null);
        virtualinvoke r0.<com.tum.yahtzee.units.Player: void unlockCubes()>();
        r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression shaken$sym> = null;
        _sym_tmp_8 = r0.<com.tum.yahtzee.units.Player: int shaken$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 522);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int shaken$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(522);
        r0.<com.tum.yahtzee.units.Player: int shaken> = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21759, null);
        virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean shake()>();
        _sym_tmp_9 = r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 523);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int selectedMove$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(523);
        r0.<com.tum.yahtzee.units.Player: java.lang.String selectedMove> = "Number 1";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        return;
    }

    public java.util.List getUnusedMoves()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z14$sym, $z12$sym, $z10$sym, $z8$sym, $z6$sym, $z4$sym, $z2$sym, $i1$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedList r3, $r4;
        boolean $z0, $z2, $z4, $z6, $z8, $z10, $z12, $z14;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21777, 32617, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45676, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45676, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 14);
        r2 = $r1[14];
        $r4 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.util.LinkedList: void <init>()>();
        r3 = $r4;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 6);
        if i0 >= 6 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45677, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, i0$sym);
        $z0 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean numberMoveAlreadyDone(int)>(i0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21805);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45678, 0);
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number ");
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i1 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i1$sym);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45678, 1);
        goto label4;

     label4:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label2;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45677, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z2 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/SmallStraightMove");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45679, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("SmallStraight");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45679, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z4 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/LargeStraightMove");
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45680, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("LargeStraight");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45680, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z6 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/FullHouseMove");
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45681, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("FullHouse");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45681, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z8 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/YahtzeeMove");
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 != 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45682, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("Yahtzee");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45682, 1);
        goto label14;

     label14:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z10 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/ThreeOfAKindMove");
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45683, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("ThreeOfAKind");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45683, 1);
        goto label16;

     label16:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z12 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/FourOfAKindMove");
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 != 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45684, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("FourOfAKind");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45684, 1);
        goto label18;

     label18:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z14 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/ChanceMove");
        $z14$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z14$sym, null, $z14, 0);
        if $z14 != 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45685, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("Chance");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45685, 1);
        goto label20;

     label20:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        return r3;
    }

    public int getPoints()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i6$sym, $i5$sym, $i4$sym, $i3$sym, $r6$sym, $z0$sym, $i2$sym, i1$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        com.tum.yahtzee.moves.IBaseMove r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Class $r7;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32618, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45686, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45686, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 15);
        r2 = $r1[15];
        $i2$sym = r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression finalPoints$sym>;
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int finalPoints$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 521);
        $i2 = r0.<com.tum.yahtzee.units.Player: int finalPoints>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, -1);
        if $i2 != -1 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45687, 0);
        i0$sym = null;
        i0 = 0;
        i1$sym = null;
        i1 = 0;
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 519);
        $r5 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45688, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r4 = (com.tum.yahtzee.moves.IBaseMove) $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_6 = null;
        if r4 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45689, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r7 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_6 = null;
        if $r7 != class "com/tum/yahtzee/moves/NumberMove" goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45690, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i3 = interfaceinvoke r4.<com.tum.yahtzee.moves.IBaseMove: int getPoints()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i3$sym, i0, $i3);
        i0 = i0 + $i3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label6;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45690, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21788, null);
        $i4 = interfaceinvoke r4.<com.tum.yahtzee.moves.IBaseMove: int getPoints()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21788);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i4$sym, i1, $i4);
        i1 = i1 + $i4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45689, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label2;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45688, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 63);
        if i0 < 63 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45691, 0);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 35);
        i0 = i0 + 35;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45691, 1);
        goto label10;

     label10:
        $i5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i1$sym, i0, i1);
        $i5 = i0 + i1;
        r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression finalPoints$sym> = $i5$sym;
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int finalPoints$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 521);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<com.tum.yahtzee.units.Player: int finalPoints$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(521);
        r0.<com.tum.yahtzee.units.Player: int finalPoints> = $i5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45687, 1);
        goto label12;

     label12:
        $i6$sym = r0.<com.tum.yahtzee.units.Player: acteve.symbolic.integer.Expression finalPoints$sym>;
        _sym_tmp_5 = r0.<com.tum.yahtzee.units.Player: int finalPoints$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 521);
        $i6 = r0.<com.tum.yahtzee.units.Player: int finalPoints>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21788, $i6$sym);
        return $i6;
    }

    private boolean moveAlreadyDone(java.lang.Class)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z1$sym, $z0$sym, $r6$sym, $i1$sym, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1;
        com.tum.yahtzee.units.Player r0;
        java.lang.Class r1, $r8;
        boolean[][] $r2;
        boolean[] r3;
        java.util.List $r4, $r5, $r9;
        java.lang.Object $r6;
        com.tum.yahtzee.moves.IBaseMove $r7;
        java.lang.String $r10;
        boolean $z0, $z1;

        r0 := @this: com.tum.yahtzee.units.Player;
        r1 := @parameter0: java.lang.Class;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21806, 32619, 2);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r2 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45692, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45692, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 16);
        r3 = $r2[16];
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label2:
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 519);
        $r4 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        if i0 >= $i1 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45693, 0);
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 519);
        $r5 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i0$sym);
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r7 = (com.tum.yahtzee.moves.IBaseMove) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_5 = null;
        if $r8 != r1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45694, 0);
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int lockedMoves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 520);
        $r9 = r0.<com.tum.yahtzee.units.Player: java.util.List lockedMoves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r10 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>($r10);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45695, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21807, null);
        $z1 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMoveUnused()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21807);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45696, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21806, null);
        return 1;

        goto label6;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45694, 1);
        goto label6;

        goto label6;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45695, 1);
        goto label6;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45696, 1);
        goto label6;

     label6:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        goto label2;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45693, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21806, null);
        return 0;
    }

    private boolean numberMoveAlreadyDone(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $z1$sym, $z0$sym, $i4$sym, $i3$sym, $r11$sym, $r7$sym, $i2$sym, i1$sym, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2, $i3, $i4;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        com.tum.yahtzee.moves.NumberMove r3;
        java.lang.String r4;
        java.util.List $r5, $r6, $r10, $r15;
        java.lang.Object $r7, $r11;
        com.tum.yahtzee.moves.IBaseMove $r8;
        java.lang.Class $r9;
        java.lang.StringBuilder $r12, $r13, $r14;
        boolean $z0, $z1;

        r0 := @this: com.tum.yahtzee.units.Player;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21805, 32620, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45697, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45697, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 17);
        r2 = $r1[17];
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 519);
        $r5 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, $i2$sym, i1, $i2);
        if i1 >= $i2 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45698, 0);
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 519);
        $r6 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i1$sym);
        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);
        $r7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        $r8 = (com.tum.yahtzee.moves.IBaseMove) $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_6 = null;
        if $r9 != class "com/tum/yahtzee/moves/NumberMove" goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45699, 0);
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 519);
        $r10 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(348, null, i1$sym);
        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);
        $r11$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(348);
        r3 = (com.tum.yahtzee.moves.NumberMove) $r11;
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number ");
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i3 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i3$sym);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21771, null);
        $i4 = virtualinvoke r3.<com.tum.yahtzee.moves.NumberMove: int getNumber()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21771);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, i0$sym, $i4, i0);
        if $i4 != i0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45700, 0);
        _sym_tmp_5 = r0.<com.tum.yahtzee.units.Player: int lockedMoves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 520);
        $r15 = r0.<com.tum.yahtzee.units.Player: java.util.List lockedMoves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(49, null, null);
        $z0 = interfaceinvoke $r15.<java.util.List: boolean contains(java.lang.Object)>(r4);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(49);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45701, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21807, null);
        $z1 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMoveUnused()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21807);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45702, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21805, null);
        return 1;

        goto label7;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45699, 1);
        goto label7;

        goto label7;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45700, 1);
        goto label7;

        goto label7;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45701, 1);
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45702, 1);
        goto label7;

     label7:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label2;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45698, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21805, null);
        return 0;
    }

    public boolean anyMoveUnused()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21807, 32621, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45703, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45703, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 18);
        r2 = $r1[18];
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 519);
        $r3 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 13);
        if $i0 > 13 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45704, 0);
        $z0$sym = null;
        $z0 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45704, 1);
        goto label3;

     label3:
        $z0$sym = null;
        $z0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21807, $z0$sym);
        return $z0;
    }

    public boolean anyMovePossible()
    {
        acteve.symbolic.integer.Expression _sym_tmp_24, $z21$sym, $z20$sym, $z18$sym, $z16$sym, $z15$sym, $z13$sym, $z12$sym, $z10$sym, $z9$sym, $z7$sym, $z6$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        com.tum.yahtzee.units.Player r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z9, $z10, $z12, $z13, $z15, $z16, $z18, $z20, $z21;
        java.util.List $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r28, $r29, $r31;
        com.tum.yahtzee.moves.ThreeOfAKindMove $r6;
        com.tum.yahtzee.moves.FourOfAKindMove $r10;
        com.tum.yahtzee.moves.FullHouseMove $r14;
        com.tum.yahtzee.moves.SmallStraightMove $r18;
        com.tum.yahtzee.moves.LargeStraightMove $r22;
        com.tum.yahtzee.moves.YahtzeeMove $r26;
        com.tum.yahtzee.moves.ChanceMove $r30;

        r0 := @this: com.tum.yahtzee.units.Player;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21778, 32622, 1);
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <com.tum.yahtzee.units.Player: boolean[][] $VRc>;
        _sym_tmp_24 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45705, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45705, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 19);
        r2 = $r1[19];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21807, null);
        $z0 = virtualinvoke r0.<com.tum.yahtzee.units.Player: boolean anyMoveUnused()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21807);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45706, 0);
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 6);
        if i0 >= 6 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45707, 0);
        _sym_tmp_2 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 518);
        $r3 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21795, null, i0$sym);
        $z1 = staticinvoke <com.tum.yahtzee.moves.NumberMove: boolean validate(java.util.List,int)>($r3, i0);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21795);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45708, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, i0$sym);
        $z2 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean numberMoveAlreadyDone(int)>(i0);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21805);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45709, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21778, null);
        return 1;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45708, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45709, 1);
        goto label5;

     label5:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label2;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45707, 1);
        goto label7;

     label7:
        _sym_tmp_3 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 518);
        $r4 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z3 = staticinvoke <com.tum.yahtzee.moves.ThreeOfAKindMove: boolean validate(java.util.List)>($r4);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45710, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z4 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/ThreeOfAKindMove");
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45711, 0);
        _sym_tmp_4 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 519);
        $r5 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r6 = new com.tum.yahtzee.moves.ThreeOfAKindMove;
        _sym_tmp_5 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 518);
        $r7 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r6.<com.tum.yahtzee.moves.ThreeOfAKindMove: void <init>(java.util.List)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label10;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45710, 1);
        goto label10;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45711, 1);
        goto label10;

     label10:
        _sym_tmp_6 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 518);
        $r8 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z6 = staticinvoke <com.tum.yahtzee.moves.FourOfAKindMove: boolean validate(java.util.List)>($r8);
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45712, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z7 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/FourOfAKindMove");
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 != 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45713, 0);
        _sym_tmp_7 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 519);
        $r9 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r10 = new com.tum.yahtzee.moves.FourOfAKindMove;
        _sym_tmp_8 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 518);
        $r11 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r10.<com.tum.yahtzee.moves.FourOfAKindMove: void <init>(java.util.List)>($r11);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label13;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45712, 1);
        goto label13;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45713, 1);
        goto label13;

     label13:
        _sym_tmp_9 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 518);
        $r12 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z9 = staticinvoke <com.tum.yahtzee.moves.FullHouseMove: boolean validate(java.util.List)>($r12);
        $z9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z9$sym, null, $z9, 0);
        if $z9 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45714, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z10 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/FullHouseMove");
        $z10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z10$sym, null, $z10, 0);
        if $z10 != 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45715, 0);
        _sym_tmp_10 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 519);
        $r13 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r14 = new com.tum.yahtzee.moves.FullHouseMove;
        _sym_tmp_11 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 518);
        $r15 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r14.<com.tum.yahtzee.moves.FullHouseMove: void <init>(java.util.List)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        goto label16;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45714, 1);
        goto label16;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45715, 1);
        goto label16;

     label16:
        _sym_tmp_12 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 518);
        $r16 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z12 = staticinvoke <com.tum.yahtzee.moves.SmallStraightMove: boolean validate(java.util.List)>($r16);
        $z12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z12$sym, null, $z12, 0);
        if $z12 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45716, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z13 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/SmallStraightMove");
        $z13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z13$sym, null, $z13, 0);
        if $z13 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45717, 0);
        _sym_tmp_13 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 519);
        $r17 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r18 = new com.tum.yahtzee.moves.SmallStraightMove;
        _sym_tmp_14 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 518);
        $r19 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r18.<com.tum.yahtzee.moves.SmallStraightMove: void <init>(java.util.List)>($r19);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        goto label19;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45716, 1);
        goto label19;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45717, 1);
        goto label19;

     label19:
        _sym_tmp_15 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 518);
        $r20 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z15 = staticinvoke <com.tum.yahtzee.moves.LargeStraightMove: boolean validate(java.util.List)>($r20);
        $z15$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z15$sym, null, $z15, 0);
        if $z15 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45718, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z16 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/LargeStraightMove");
        $z16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z16$sym, null, $z16, 0);
        if $z16 != 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45719, 0);
        _sym_tmp_16 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 519);
        $r21 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r22 = new com.tum.yahtzee.moves.LargeStraightMove;
        _sym_tmp_17 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 518);
        $r23 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r22.<com.tum.yahtzee.moves.LargeStraightMove: void <init>(java.util.List)>($r23);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;
        goto label22;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45718, 1);
        goto label22;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45719, 1);
        goto label22;

     label22:
        _sym_tmp_18 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 518);
        $r24 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z18 = staticinvoke <com.tum.yahtzee.moves.YahtzeeMove: boolean validate(java.util.List)>($r24);
        $z18$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 22);
        r2[22] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z18$sym, null, $z18, 0);
        if $z18 == 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45720, 0);
        _sym_tmp_19 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 519);
        $r25 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r26 = new com.tum.yahtzee.moves.YahtzeeMove;
        _sym_tmp_20 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 518);
        $r27 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r26.<com.tum.yahtzee.moves.YahtzeeMove: void <init>(java.util.List)>($r27);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r26);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 23);
        r2[23] = 1;
        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45720, 1);
        goto label24;

     label24:
        _sym_tmp_21 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 518);
        $r28 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21792, null);
        $z20 = staticinvoke <com.tum.yahtzee.moves.ChanceMove: boolean validate(java.util.List)>($r28);
        $z20$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21792);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 24);
        r2[24] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z20$sym, null, $z20, 0);
        if $z20 == 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45721, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21806, null, null);
        $z21 = specialinvoke r0.<com.tum.yahtzee.units.Player: boolean moveAlreadyDone(java.lang.Class)>(class "com/tum/yahtzee/moves/ChanceMove");
        $z21$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21806);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 25);
        r2[25] = 1;
        _sym_tmp_24 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z21$sym, null, $z21, 0);
        if $z21 != 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45722, 0);
        _sym_tmp_22 = r0.<com.tum.yahtzee.units.Player: int moves$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 519);
        $r29 = r0.<com.tum.yahtzee.units.Player: java.util.List moves>;
        $r30 = new com.tum.yahtzee.moves.ChanceMove;
        _sym_tmp_23 = r0.<com.tum.yahtzee.units.Player: int cubes$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 518);
        $r31 = r0.<com.tum.yahtzee.units.Player: java.util.List cubes>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(10883, null, null);
        specialinvoke $r30.<com.tum.yahtzee.moves.ChanceMove: void <init>(java.util.List)>($r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r30);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 26);
        r2[26] = 1;
        goto label28;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45706, 1);
        goto label28;

        goto label28;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45721, 1);
        goto label28;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_24, 45722, 1);
        goto label28;

     label28:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 27);
        r2[27] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21778, null);
        return 0;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32623, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <com.tum.yahtzee.units.Player: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 20);
        r1 = $r0[20];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r21$sym, $r20$sym, $r19$sym, $r18$sym, $r17$sym, $r16$sym, $r15$sym, $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32624, 0);
        $r0 = newmultiarray (boolean)[21][];
        _sym_tmp_1 = <com.tum.yahtzee.units.Player: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 517);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <com.tum.yahtzee.units.Player: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(517);
        <com.tum.yahtzee.units.Player: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[4];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[33];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[4];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[33];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[9];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[9];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        $r15 = newarray (boolean)[20];
        $r15$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 14);
        $r0[14] = $r15;
        $r16 = newarray (boolean)[12];
        $r16$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 15);
        $r0[15] = $r16;
        $r17 = newarray (boolean)[8];
        $r17$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 16);
        $r0[16] = $r17;
        $r18 = newarray (boolean)[9];
        $r18$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 17);
        $r0[17] = $r18;
        $r19 = newarray (boolean)[4];
        $r19$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 18);
        $r0[18] = $r19;
        $r20 = newarray (boolean)[28];
        $r20$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 19);
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r21$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 20);
        $r0[20] = $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21751, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/tum/yahtzee/units/Player", -2137017083162725740L);
        return $r0;
    }
}
