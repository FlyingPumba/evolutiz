public final class be.ppareit.swiftp_free.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;
    public static final acteve.symbolic.integer.Expression DEBUG$sym;
    public static final int DEBUG$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        be.ppareit.swiftp_free.BuildConfig r0;

        r0 := @this: be.ppareit.swiftp_free.BuildConfig;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32419, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class be.ppareit.swiftp_free.Defaults extends java.lang.Object
{
    protected static int inputBufferSize;
    public static int dataChunkSize;
    protected static int sessionMonitorScrollBack;
    protected static int serverLogScrollBack;
    protected static int uiLogLevel;
    protected static int consoleLogLevel;
    protected static java.lang.String settingsName;
    protected static int portNumber;
    public static final int tcpConnectionBacklog;
    public static final java.lang.String chrootDir;
    public static final boolean acceptWifi;
    public static final boolean acceptNet;
    public static final boolean stayAwake;
    public static final int REMOTE_PROXY_PORT;
    public static final java.lang.String STRING_ENCODING;
    public static final int SO_TIMEOUT_MS;
    public static final java.lang.String SESSION_ENCODING;
    public static final boolean release;
    public static final boolean do_mediascanner_notify;
    protected static int settingsMode;
    private static final boolean[][] $VRc;
    protected static acteve.symbolic.integer.Expression inputBufferSize$sym;
    protected static int inputBufferSize$a3tid;
    public static acteve.symbolic.integer.Expression dataChunkSize$sym;
    public static int dataChunkSize$a3tid;
    protected static acteve.symbolic.integer.Expression sessionMonitorScrollBack$sym;
    protected static int sessionMonitorScrollBack$a3tid;
    protected static acteve.symbolic.integer.Expression serverLogScrollBack$sym;
    protected static int serverLogScrollBack$a3tid;
    protected static acteve.symbolic.integer.Expression uiLogLevel$sym;
    protected static int uiLogLevel$a3tid;
    protected static acteve.symbolic.integer.Expression consoleLogLevel$sym;
    protected static int consoleLogLevel$a3tid;
    protected static int settingsName$a3tid;
    protected static acteve.symbolic.integer.Expression portNumber$sym;
    protected static int portNumber$a3tid;
    public static final acteve.symbolic.integer.Expression tcpConnectionBacklog$sym;
    public static final int tcpConnectionBacklog$a3tid;
    public static final int chrootDir$a3tid;
    public static final acteve.symbolic.integer.Expression acceptWifi$sym;
    public static final int acceptWifi$a3tid;
    public static final acteve.symbolic.integer.Expression acceptNet$sym;
    public static final int acceptNet$a3tid;
    public static final acteve.symbolic.integer.Expression stayAwake$sym;
    public static final int stayAwake$a3tid;
    public static final acteve.symbolic.integer.Expression REMOTE_PROXY_PORT$sym;
    public static final int REMOTE_PROXY_PORT$a3tid;
    public static final int STRING_ENCODING$a3tid;
    public static final acteve.symbolic.integer.Expression SO_TIMEOUT_MS$sym;
    public static final int SO_TIMEOUT_MS$a3tid;
    public static final int SESSION_ENCODING$a3tid;
    public static final acteve.symbolic.integer.Expression release$sym;
    public static final int release$a3tid;
    public static final acteve.symbolic.integer.Expression do_mediascanner_notify$sym;
    public static final int do_mediascanner_notify$a3tid;
    protected static acteve.symbolic.integer.Expression settingsMode$sym;
    protected static int settingsMode$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.Defaults r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.Defaults;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32420, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45366, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45366, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static int getPortNumber()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21742, 32421, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45367, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45367, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 1);
        r1 = $r0[1];
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression portNumber$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int portNumber$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 449);
        $i0 = <be.ppareit.swiftp_free.Defaults: int portNumber>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21742, $i0$sym);
        return $i0;
    }

    public static void setPortNumber(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21743, 32422, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45368, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45368, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression portNumber$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int portNumber$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 449);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int portNumber$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(449);
        <be.ppareit.swiftp_free.Defaults: int portNumber> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static java.lang.String getSettingsName()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21744, 32423, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45369, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45369, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int settingsName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 450);
        $r2 = <be.ppareit.swiftp_free.Defaults: java.lang.String settingsName>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r2;
    }

    public static void setSettingsName(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21745, 32424, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r1 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45370, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45370, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int settingsName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 450);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int settingsName$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(450);
        <be.ppareit.swiftp_free.Defaults: java.lang.String settingsName> = r0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static int getSettingsMode()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21746, 32425, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45371, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45371, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression settingsMode$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int settingsMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 451);
        $i0 = <be.ppareit.swiftp_free.Defaults: int settingsMode>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21746, $i0$sym);
        return $i0;
    }

    public static void setSettingsMode(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21747, 32426, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45372, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45372, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 6);
        r1 = $r0[6];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression settingsMode$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int settingsMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 451);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int settingsMode$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(451);
        <be.ppareit.swiftp_free.Defaults: int settingsMode> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static void setServerLogScrollBack(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21748, 32427, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45373, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45373, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression serverLogScrollBack$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 452);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(452);
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getUiLogLevel()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21749, 32428, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45374, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45374, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 8);
        r1 = $r0[8];
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression uiLogLevel$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int uiLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 453);
        $i0 = <be.ppareit.swiftp_free.Defaults: int uiLogLevel>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21749, $i0$sym);
        return $i0;
    }

    public static void setUiLogLevel(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21750, 32429, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45375, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45375, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 9);
        r1 = $r0[9];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression uiLogLevel$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int uiLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 453);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int uiLogLevel$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(453);
        <be.ppareit.swiftp_free.Defaults: int uiLogLevel> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getInputBufferSize()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21751, 32430, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45376, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45376, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 10);
        r1 = $r0[10];
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression inputBufferSize$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int inputBufferSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 454);
        $i0 = <be.ppareit.swiftp_free.Defaults: int inputBufferSize>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21751, $i0$sym);
        return $i0;
    }

    public static void setInputBufferSize(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21752, 32431, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45377, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45377, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 11);
        r1 = $r0[11];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression inputBufferSize$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int inputBufferSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 454);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int inputBufferSize$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(454);
        <be.ppareit.swiftp_free.Defaults: int inputBufferSize> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getDataChunkSize()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21753, 32432, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45378, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45378, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 12);
        r1 = $r0[12];
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression dataChunkSize$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int dataChunkSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 455);
        $i0 = <be.ppareit.swiftp_free.Defaults: int dataChunkSize>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21753, $i0$sym);
        return $i0;
    }

    public static void setDataChunkSize(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21754, 32433, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45379, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45379, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 13);
        r1 = $r0[13];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression dataChunkSize$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int dataChunkSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 455);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int dataChunkSize$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(455);
        <be.ppareit.swiftp_free.Defaults: int dataChunkSize> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getSessionMonitorScrollBack()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32434, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45380, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45380, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 14);
        r1 = $r0[14];
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression sessionMonitorScrollBack$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 456);
        $i0 = <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21755, $i0$sym);
        return $i0;
    }

    public static void setSessionMonitorScrollBack(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21756, 32435, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45381, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45381, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 15);
        r1 = $r0[15];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression sessionMonitorScrollBack$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 456);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(456);
        <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getServerLogScrollBack()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21757, 32436, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45382, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45382, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 16);
        r1 = $r0[16];
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression serverLogScrollBack$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 452);
        $i0 = <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21757, $i0$sym);
        return $i0;
    }

    public static void setLogScrollBack(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21758, 32437, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45383, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45383, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 17);
        r1 = $r0[17];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression serverLogScrollBack$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 452);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(452);
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getConsoleLogLevel()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21759, 32438, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45384, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45384, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 18);
        r1 = $r0[18];
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression consoleLogLevel$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int consoleLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 457);
        $i0 = <be.ppareit.swiftp_free.Defaults: int consoleLogLevel>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21759, $i0$sym);
        return $i0;
    }

    public static void setConsoleLogLevel(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21760, 32439, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 448);
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45385, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45385, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 19);
        r1 = $r0[19];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression consoleLogLevel$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int consoleLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 457);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int consoleLogLevel$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(457);
        <be.ppareit.swiftp_free.Defaults: int consoleLogLevel> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32440, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 20);
        r1 = $r0[20];
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression inputBufferSize$sym> = null;
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int inputBufferSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 454);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int inputBufferSize$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(454);
        <be.ppareit.swiftp_free.Defaults: int inputBufferSize> = 256;
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression dataChunkSize$sym> = null;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Defaults: int dataChunkSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 455);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int dataChunkSize$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(455);
        <be.ppareit.swiftp_free.Defaults: int dataChunkSize> = 65536;
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression sessionMonitorScrollBack$sym> = null;
        _sym_tmp_3 = <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 456);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(456);
        <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack> = 10;
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression serverLogScrollBack$sym> = null;
        _sym_tmp_4 = <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 452);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(452);
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack> = 10;
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression uiLogLevel$sym> = null;
        _sym_tmp_5 = <be.ppareit.swiftp_free.Defaults: int uiLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 453);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int uiLogLevel$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(453);
        <be.ppareit.swiftp_free.Defaults: int uiLogLevel> = 4;
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression consoleLogLevel$sym> = null;
        _sym_tmp_6 = <be.ppareit.swiftp_free.Defaults: int consoleLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 457);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int consoleLogLevel$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(457);
        <be.ppareit.swiftp_free.Defaults: int consoleLogLevel> = 4;
        _sym_tmp_7 = <be.ppareit.swiftp_free.Defaults: int settingsName$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 450);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int settingsName$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(450);
        <be.ppareit.swiftp_free.Defaults: java.lang.String settingsName> = "SwiFTP";
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression portNumber$sym> = null;
        _sym_tmp_8 = <be.ppareit.swiftp_free.Defaults: int portNumber$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 449);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int portNumber$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(449);
        <be.ppareit.swiftp_free.Defaults: int portNumber> = 2121;
        <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression settingsMode$sym> = null;
        _sym_tmp_9 = <be.ppareit.swiftp_free.Defaults: int settingsMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 451);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int settingsMode$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(451);
        <be.ppareit.swiftp_free.Defaults: int settingsMode> = 2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r21$sym, $r20$sym, $r19$sym, $r18$sym, $r17$sym, $r16$sym, $r15$sym, $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32441, 0);
        $r0 = newmultiarray (boolean)[21][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 448);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Defaults: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(448);
        <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r15$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 14);
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r16$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 15);
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r17$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 16);
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r18$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 17);
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r19$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 18);
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r20$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 19);
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r21$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 20);
        $r0[20] = $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Defaults", 9041753046014221510L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements be.ppareit.swiftp_free.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private static final int DEFAULT_COVERAGE_FILE_PATH$a3tid;
    private final int mResults$a3tid;
    private int mIntent$a3tid;
    private static final acteve.symbolic.integer.Expression LOGD$sym;
    private static final int LOGD$a3tid;
    private acteve.symbolic.integer.Expression mCoverage$sym;
    private int mCoverage$a3tid;
    private int mCoverageFilePath$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32442, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45386, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45386, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 459);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(459);
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym> = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 460);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(460);
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32443, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45387, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45387, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 461);
        $r4 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_7 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45388, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21762, null, null, null);
        $z0 = specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21762);
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym> = $z0$sym;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 460);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(460);
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 462);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(462);
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45388, 1);
        goto label3;

     label3:
        $r11 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8437, null);
        $r12 = virtualinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "be/ppareit/swiftp_free/EmmaInstrument/InstrumentedActivity");
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 463);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(463);
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 463);
        $r13 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1591, null, null);
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(8425, 32444, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45389, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45389, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 461);
        $r4 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8425, null);
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(10470);
        staticinvoke <android.os.Looper: void prepare()>();
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mIntent$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 463);
        $r5 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8450, null, null);
        $r6 = virtualinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21763, null, null);
        virtualinvoke r3.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: void setFinishListener(be.ppareit.swiftp_free.EmmaInstrument.FinishListener)>(r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z1$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21762, 32445, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45390, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45390, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 3);
        r4 = $r3[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_2 = null;
        if r5 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45391, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(20857, null);
        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(20857);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45392, 0);
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label5;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45391, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45392, 1);
        goto label4;

     label4:
        $z1$sym = null;
        $z1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21762, $z1$sym);
        return $z1;
    }

    private void generateCoverageReport()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21767, 32446, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45393, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45393, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 461);
        $r6 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21764, null);
        $r8 = specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2060, null);
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 0);
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 1);
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r9, 2);
        $r9[2] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2770, null, null, null);
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 0);
        $r13[0] = r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 1);
        $r13[1] = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2654, null);
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r13, 2);
        $r13[2] = $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2771, null, null, null);
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label10;

     label4:
        $r17 := @caughtexception;
        r18 = $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label10;

     label5:
        $r19 := @caughtexception;
        r20 = $r19;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label10;

     label6:
        $r21 := @caughtexception;
        r22 = $r21;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label10;

     label7:
        $r23 := @caughtexception;
        r24 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label10;

     label8:
        $r25 := @caughtexception;
        r26 = $r25;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label10;

     label9:
        $r27 := @caughtexception;
        r28 = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21766, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
        catch java.lang.SecurityException from label2 to label3 with label5;
        catch java.lang.NoSuchMethodException from label2 to label3 with label6;
        catch java.lang.IllegalArgumentException from label2 to label3 with label7;
        catch java.lang.IllegalAccessException from label2 to label3 with label8;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label9;
    }

    private java.lang.String getCoverageFilePath()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21764, 32447, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45394, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45394, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 462);
        $r3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = null;
        if $r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45395, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45395, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 462);
        $r4 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21768, 32448, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45396, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45396, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 6);
        r3 = $r2[6];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = null;
        if r1 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45397, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45398, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 462);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverageFilePath$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(462);
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        return 1;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45397, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45398, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21768, null);
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21766, 32449, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45399, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45399, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 7);
        r3 = $r2[7];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21765, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21765, 32450, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45400, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45400, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 8);
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 461);
        $r9 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(110, null, null, null);
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 459);
        $r10 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(7751, null, null, null);
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21769, 32451, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45401, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45401, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 461);
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0$sym = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym>;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 460);
        $z0 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45402, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21767, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45402, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mResults$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 459);
        $r4 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8430, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21770, 32452, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 458);
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45403, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45403, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 10);
        r3 = $r2[10];
        _sym_tmp_2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 461);
        $r4 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0$sym = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: acteve.symbolic.integer.Expression mCoverage$sym>;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int mCoverage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 460);
        $z0 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45404, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21768, null, null);
        $z1 = specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21768);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45405, 0);
        _sym_tmp_4 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 461);
        $r9 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45405, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21767, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21768, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45404, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32453, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 11);
        r1 = $r0[11];
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 461);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(461);
        <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32454, 0);
        $r0 = newmultiarray (boolean)[12][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 458);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(458);
        <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  be.ppareit.swiftp_free.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21771, 32455, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 464);
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45406, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45406, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 465);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(465);
        r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z1$sym, $z0$sym, $r16$sym, $r15$sym, $r14$sym, $i0$sym, $r12$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity $r10, $r18;
        be.ppareit.swiftp_free.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32456, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 464);
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45407, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45407, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 465);
        $r10 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21772, null);
        $r11 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener access$000(be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = null;
        if $r11 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45408, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_4 = null;
        if r5 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45409, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(731, null, null);
        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r12$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(731);
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0$sym = null;
        $i0 = lengthof r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 <= 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45410, 0);
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r6, 0);
        $r14 = r6[0];
        $r15$sym = $r14$sym;
        $r15 = (byte[]) $r14;
        $r16$sym = $r15$sym;
        $r16 = (byte[]) $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5113, $r16$sym);
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4804, null);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5110, null);
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45411, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45412, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45411, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 465);
        $r18 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21772, null);
        $r19 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener access$000(be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity)>($r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21770, null, null);
        interfaceinvoke $r19.<be.ppareit.swiftp_free.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        goto label8;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45408, 1);
        goto label8;

        goto label8;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45409, 1);
        goto label8;

        goto label8;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45410, 1);
        goto label8;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45412, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32457, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32458, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 464);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(464);
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity extends be.ppareit.swiftp_free.gui.ServerPreferenceActivity
{
    public static java.lang.String TAG;
    private be.ppareit.swiftp_free.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private int mListener$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32459, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 466);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45413, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45413, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void setFinishListener(be.ppareit.swiftp_free.EmmaInstrument.FinishListener)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r0;
        be.ppareit.swiftp_free.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: be.ppareit.swiftp_free.EmmaInstrument.FinishListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21763, 32460, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 466);
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45414, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45414, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        be.ppareit.swiftp_free.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1658, 32461, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 466);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45415, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45415, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        _sym_tmp_2 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 467);
        $r4 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(624, null, null);
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1658, null);
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void finish()>();
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 468);
        $r8 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = null;
        if $r8 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45416, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 468);
        $r9 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21769, null);
        interfaceinvoke $r9.<be.ppareit.swiftp_free.EmmaInstrument.FinishListener: void onActivityFinished()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45416, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    static be.ppareit.swiftp_free.EmmaInstrument.FinishListener access$000(be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21772, 32462, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 466);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45417, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45417, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int mListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 468);
        $r3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener mListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32463, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 467);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(467);
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32464, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 466);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(466);
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;
    public static int TAG$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32465, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 469);
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45418, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45418, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32466, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 469);
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45419, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45419, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(730, null);
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_2 = null;
        if r6 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45420, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21770, null, null);
        interfaceinvoke r6.<be.ppareit.swiftp_free.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45420, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32467, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 470);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(470);
        <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32468, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 469);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(469);
        <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.FTPServerService extends android.app.Service implements java.lang.Runnable
{
    public static final java.lang.String ACTION_STARTED;
    public static final java.lang.String ACTION_STOPPED;
    public static final java.lang.String ACTION_FAILEDTOSTART;
    protected static java.lang.Thread serverThread;
    protected boolean shouldExit;
    protected be.ppareit.swiftp_free.MyLog myLog;
    protected static be.ppareit.swiftp_free.MyLog staticLog;
    public static final int BACKLOG;
    public static final int MAX_SESSIONS;
    public static final java.lang.String WAKE_LOCK_TAG;
    protected java.net.ServerSocket listenSocket;
    protected static android.net.wifi.WifiManager$WifiLock wifiLock;
    protected static java.util.List sessionMonitor;
    protected static java.util.List serverLog;
    protected static int uiLogLevel;
    public static final int WAKE_INTERVAL_MS;
    protected static int port;
    protected static boolean acceptWifi;
    protected static boolean acceptNet;
    protected static boolean fullWake;
    private be.ppareit.swiftp_free.server.TcpListener wifiListener;
    private be.ppareit.swiftp_free.server.ProxyConnector proxyConnector;
    private final java.util.List sessionThreads;
    private static android.content.SharedPreferences settings;
    android.app.NotificationManager notificationMgr;
    android.os.PowerManager$WakeLock wakeLock;
    private static final boolean[][] $VRc;
    public static final int ACTION_STARTED$a3tid;
    public static final int ACTION_STOPPED$a3tid;
    public static final int ACTION_FAILEDTOSTART$a3tid;
    protected static int serverThread$a3tid;
    protected acteve.symbolic.integer.Expression shouldExit$sym;
    protected int shouldExit$a3tid;
    protected int myLog$a3tid;
    protected static int staticLog$a3tid;
    public static final acteve.symbolic.integer.Expression BACKLOG$sym;
    public static final int BACKLOG$a3tid;
    public static final acteve.symbolic.integer.Expression MAX_SESSIONS$sym;
    public static final int MAX_SESSIONS$a3tid;
    public static final int WAKE_LOCK_TAG$a3tid;
    protected int listenSocket$a3tid;
    protected static int wifiLock$a3tid;
    protected static int sessionMonitor$a3tid;
    protected static int serverLog$a3tid;
    protected static acteve.symbolic.integer.Expression uiLogLevel$sym;
    protected static int uiLogLevel$a3tid;
    public static final acteve.symbolic.integer.Expression WAKE_INTERVAL_MS$sym;
    public static final int WAKE_INTERVAL_MS$a3tid;
    protected static acteve.symbolic.integer.Expression port$sym;
    protected static int port$a3tid;
    protected static acteve.symbolic.integer.Expression acceptWifi$sym;
    protected static int acceptWifi$a3tid;
    protected static acteve.symbolic.integer.Expression acceptNet$sym;
    protected static int acceptNet$a3tid;
    protected static acteve.symbolic.integer.Expression fullWake$sym;
    protected static int fullWake$a3tid;
    private int wifiListener$a3tid;
    private int proxyConnector$a3tid;
    private final int sessionThreads$a3tid;
    private static int settings$a3tid;
    int notificationMgr$a3tid;
    int wakeLock$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        java.util.ArrayList $r6;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32469, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45421, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45421, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.app.Service: void <init>()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression shouldExit$sym> = null;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 472);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(472);
        r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit> = 0;
        $r3 = new be.ppareit.swiftp_free.MyLog;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r5);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 473);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(473);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog> = $r3;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 474);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(474);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener> = null;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 475);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(475);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        $r6 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.FTPServerService: int sessionThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 476);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int sessionThreads$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(476);
        r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads> = $r6;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 477);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(477);
        r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        r1 := @parameter0: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2993, 32470, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r2 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45422, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45422, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return null;
    }

    public void onCreate()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3, r5;
        be.ppareit.swiftp_free.MyLog $r4;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1936, 32471, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45423, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45423, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "SwiFTP server created");
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = null;
        if r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45424, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: android.content.Context getApplicationContext()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_3 = null;
        if r5 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45425, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5707, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setContext(android.content.Context)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45424, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45425, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    public void onStart(android.content.Intent, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, i1$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        be.ppareit.swiftp_free.FTPServerService r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Thread $r4, $r8, $r9;
        be.ppareit.swiftp_free.MyLog $r5, $r6, $r7;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        r1 := @parameter0: android.content.Intent;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9489, 32472, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r2 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45426, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45426, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9489, null, null, i0$sym);
        specialinvoke r0.<android.app.Service: void onStart(android.content.Intent,int)>(r1, i0);
        r0.<be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression shouldExit$sym> = null;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 472);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(472);
        r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit> = 0;
        i1$sym = null;
        i1 = 10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label2:
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 478);
        $r4 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_9 = null;
        if $r4 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45427, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 473);
        $r5 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(5, "Won\'t start, server thread exists");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 <= 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45428, 0);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, -1);
        i1 = i1 + -1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21774, null);
        staticinvoke <be.ppareit.swiftp_free.Util: void sleepIgnoreInterupt(long)>(1000L);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45428, 1);
        goto label4;

     label4:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 473);
        $r6 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Server thread already exists");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45427, 1);
        goto label6;

     label6:
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 473);
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Creating server thread");
        $r8 = new java.lang.Thread;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8363, null, null);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);
        _sym_tmp_7 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 478);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(478);
        <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread> = $r8;
        _sym_tmp_8 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 478);
        $r9 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        return;
    }

    public static boolean isRunning()
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $z0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Thread $r2, $r4;
        be.ppareit.swiftp_free.MyLog $r3, $r5, $r6;
        boolean $z0;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(12783, 32473, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45429, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45429, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        _sym_tmp_2 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 478);
        $r2 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        _sym_tmp_7 = null;
        if $r2 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45430, 0);
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 479);
        $r3 = <be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Server is not running (null serverThread)");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(12783, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45430, 1);
        goto label3;

     label3:
        _sym_tmp_4 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 478);
        $r4 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3675, null);
        $z0 = virtualinvoke $r4.<java.lang.Thread: boolean isAlive()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3675);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45431, 0);
        _sym_tmp_5 = <be.ppareit.swiftp_free.FTPServerService: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 479);
        $r5 = <be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "serverThread non-null but !isAlive()");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45431, 1);
        goto label5;

     label5:
        _sym_tmp_6 = <be.ppareit.swiftp_free.FTPServerService: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 479);
        $r6 = <be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Server is alive");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 4);
        r1[4] = 1;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 5);
        r1[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(12783, null);
        return 1;
    }

    public void onDestroy()
    {
        acteve.symbolic.integer.Expression _sym_tmp_19, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.InterruptedException r3, $r9;
        be.ppareit.swiftp_free.MyLog $r4, $r6, $r11, $r12, $r14, $r20;
        java.lang.Thread $r5, $r7, $r8, $r10;
        boolean $z0;
        java.net.ServerSocket $r13, $r15;
        java.io.IOException $r16, r17;
        android.net.wifi.WifiManager$WifiLock $r18, $r19;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1920, 32474, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_19 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45432, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45432, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "onDestroy() Stopping server");
        r0.<be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression shouldExit$sym> = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 472);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(472);
        r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit> = 1;
        _sym_tmp_4 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 478);
        $r5 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_19 = null;
        if $r5 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45433, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 473);
        $r6 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(5, "Stopping with null serverThread");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45433, 1);
        goto label3;

     label3:
        _sym_tmp_6 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 478);
        $r7 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(537, null);
        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

     label4:
        _sym_tmp_7 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 478);
        $r8 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21775, null, null);
        virtualinvoke $r8.<java.lang.Thread: void join(long)>(10000L);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;
        r3 = $r9;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label7:
        _sym_tmp_8 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 478);
        $r10 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3675, null);
        $z0 = virtualinvoke $r10.<java.lang.Thread: boolean isAlive()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3675);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_19 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45434, 0);
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 473);
        $r11 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(5, "Server thread failed to exit");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45434, 1);
        goto label9;

     label9:
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 473);
        $r12 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("serverThread join()ed ok");
        _sym_tmp_11 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 478);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(478);
        <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label10:
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.FTPServerService: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 480);
        $r13 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_19 = null;
        if $r13 == null goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45435, 0);
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 473);
        $r14 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Closing listenSocket");
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.FTPServerService: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 480);
        $r15 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r15.<java.net.ServerSocket: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45435, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;

     label13:
        goto label15;

     label14:
        $r16 := @caughtexception;
        r17 = $r16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;

     label15:
        _sym_tmp_15 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 481);
        $r18 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_19 = null;
        if $r18 == null goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45436, 0);
        _sym_tmp_16 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 481);
        $r19 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(335, null);
        virtualinvoke $r19.<android.net.wifi.WifiManager$WifiLock: void release()>();
        _sym_tmp_17 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_17, 481);
        _sym_tmp_17 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid> = _sym_tmp_17;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(481);
        <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_19, 45436, 1);
        goto label17;

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21777, null);
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void clearNotification()>();
        _sym_tmp_18 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 473);
        $r20 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("FTPServerService.onDestroy() finished");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        return;

        catch java.lang.InterruptedException from label4 to label5 with label6;
        catch java.io.IOException from label10 to label13 with label14;
    }

    private boolean loadSettings()
    {
        acteve.symbolic.integer.Expression _sym_tmp_22, $z3$sym, $z2$sym, $z1$sym, $z0$sym, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r5, $r10, $r16;
        java.io.File r6, $r24;
        be.ppareit.swiftp_free.MyLog $r7, $r12, $r23, $r25;
        android.content.SharedPreferences $r8, $r9, $r17, $r18, $r19, $r20, $r21, $r22;
        java.lang.Integer $r11;
        java.lang.StringBuilder $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21779, 32475, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_22 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45437, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45437, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Loading settings");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4842, null);
        $r8 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 482);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(482);
        <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings> = $r8;
        _sym_tmp_4 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 482);
        $r9 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        $r10 = interfaceinvoke $r9.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("portNum", "2121");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(9787, null);
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression port$sym> = $i0$sym;
        _sym_tmp_5 = <be.ppareit.swiftp_free.FTPServerService: int port$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 483);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int port$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(483);
        <be.ppareit.swiftp_free.FTPServerService: int port> = $i0;
        $i1$sym = <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression port$sym>;
        _sym_tmp_6 = <be.ppareit.swiftp_free.FTPServerService: int port$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 483);
        $i1 = <be.ppareit.swiftp_free.FTPServerService: int port>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45438, 0);
        $i2$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression portNumber$sym>;
        _sym_tmp_7 = <be.ppareit.swiftp_free.Defaults: int portNumber$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 449);
        $i2 = <be.ppareit.swiftp_free.Defaults: int portNumber>;
        <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression port$sym> = $i2$sym;
        _sym_tmp_8 = <be.ppareit.swiftp_free.FTPServerService: int port$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 483);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int port$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(483);
        <be.ppareit.swiftp_free.FTPServerService: int port> = $i2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45438, 1);
        goto label3;

     label3:
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 473);
        $r12 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using port ");
        $i3$sym = <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression port$sym>;
        _sym_tmp_10 = <be.ppareit.swiftp_free.FTPServerService: int port$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 483);
        $i3 = <be.ppareit.swiftp_free.FTPServerService: int port>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i3$sym);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r16);
        _sym_tmp_11 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 482);
        $r17 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2688, null, null, null);
        $z0 = interfaceinvoke $r17.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("allowNet", 0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2688);
        <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression acceptNet$sym> = $z0$sym;
        _sym_tmp_12 = <be.ppareit.swiftp_free.FTPServerService: int acceptNet$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 484);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int acceptNet$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(484);
        <be.ppareit.swiftp_free.FTPServerService: boolean acceptNet> = $z0;
        _sym_tmp_13 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 482);
        $r18 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2688, null, null, null);
        $z1 = interfaceinvoke $r18.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("allowWifi", 1);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2688);
        <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression acceptWifi$sym> = $z1$sym;
        _sym_tmp_14 = <be.ppareit.swiftp_free.FTPServerService: int acceptWifi$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_14, 485);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int acceptWifi$a3tid> = _sym_tmp_14;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(485);
        <be.ppareit.swiftp_free.FTPServerService: boolean acceptWifi> = $z1;
        _sym_tmp_15 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 482);
        $r19 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2688, null, null, null);
        $z2 = interfaceinvoke $r19.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("stayAwake", 0);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2688);
        <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression fullWake$sym> = $z2$sym;
        _sym_tmp_16 = <be.ppareit.swiftp_free.FTPServerService: int fullWake$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_16, 486);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int fullWake$a3tid> = _sym_tmp_16;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(486);
        <be.ppareit.swiftp_free.FTPServerService: boolean fullWake> = $z2;
        _sym_tmp_17 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 482);
        $r20 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r3 = interfaceinvoke $r20.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("username", null);
        _sym_tmp_18 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 482);
        $r21 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r4 = interfaceinvoke $r21.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", null);
        _sym_tmp_19 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 482);
        $r22 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r5 = interfaceinvoke $r22.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("chrootDir", "/");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_22 = null;
        if r3 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45439, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_22 = null;
        if r4 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45440, 0);
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45439, 1);
        goto label5;

     label5:
        _sym_tmp_20 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 473);
        $r23 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r23.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Username or password is invalid");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label10;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45440, 1);
        goto label7;

     label7:
        $r24 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r24.<java.io.File: void <init>(java.lang.String)>(r5);
        r6 = $r24;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z3 = virtualinvoke r6.<java.io.File: boolean isDirectory()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45441, 0);
        _sym_tmp_21 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 473);
        $r25 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r25.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Chroot dir is invalid");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45441, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21778, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setChrootDir(java.io.File)>(r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11564, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setUsername(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21779, null);
        return 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21779, null);
        return 0;
    }

    void setupListener() throws java.io.IOException
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.ServerSocket $r3, $r4, $r5;
        java.net.InetSocketAddress $r6;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21780, 32476, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45442, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45442, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];
        $r3 = new java.net.ServerSocket;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.net.ServerSocket: void <init>()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 480);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int listenSocket$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(480);
        r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket> = $r3;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.FTPServerService: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 480);
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4999, null, null);
        virtualinvoke $r4.<java.net.ServerSocket: void setReuseAddress(boolean)>(1);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 480);
        $r5 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        $r6 = new java.net.InetSocketAddress;
        $i0$sym = <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression port$sym>;
        _sym_tmp_5 = <be.ppareit.swiftp_free.FTPServerService: int port$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 483);
        $i0 = <be.ppareit.swiftp_free.FTPServerService: int port>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, $i0$sym);
        specialinvoke $r6.<java.net.InetSocketAddress: void <init>(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5000, null, null);
        virtualinvoke $r5.<java.net.ServerSocket: void bind(java.net.SocketAddress)>($r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void setupNotification()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $i3$sym, $i2$sym, $r10$sym, l1$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i2, $i3;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r6, r7;
        long l1;
        android.app.Notification r5, $r12;
        android.content.Intent r8, $r13;
        android.app.PendingIntent r9;
        java.lang.Object $r10;
        android.app.NotificationManager $r11, $r16;
        android.content.Context $r14;
        be.ppareit.swiftp_free.MyLog $r17;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21781, 32477, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45443, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45443, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        r3 = "notification";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r10 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.Object getSystemService(java.lang.String)>(r3);
        $r10$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        $r11 = (android.app.NotificationManager) $r10;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 477);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(477);
        r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr> = $r11;
        i0$sym = null;
        i0 = 2130837506;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        r4 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.String getString(int)>(2131034149);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(212);
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        l1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(212);
        $r12 = new android.app.Notification;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9321, null, i0$sym, null, l1$sym);
        specialinvoke $r12.<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>(i0, r4, l1);
        r5 = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        r6 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.String getString(int)>(2131034150);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        r7 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.String getString(int)>(2131034151);
        $r13 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r13.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "be/ppareit/swiftp_free/gui/ServerPreferenceActivity");
        r8 = $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4787, null, null, null, null);
        r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, r8, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        $r14 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: android.content.Context getApplicationContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1586, null, null, null, null, null);
        virtualinvoke r5.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>($r14, r6, r7, r9);
        $i2$sym = null;
        $i2 = r5.<android.app.Notification: int flags>;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 2);
        $i3 = $i2 | 2;
        r5.<android.app.Notification: int flags> = $i3;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 477);
        $r16 = r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1587, null, null, null);
        virtualinvoke $r16.<android.app.NotificationManager: void notify(int,android.app.Notification)>(0, r5);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 473);
        $r17 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Notication setup done");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void clearNotification()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $r5$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3;
        android.app.NotificationManager $r4, $r6, $r7;
        java.lang.Object $r5;
        be.ppareit.swiftp_free.MyLog $r8;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21777, 32478, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45444, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45444, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 477);
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_6 = null;
        if $r4 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45445, 0);
        r3 = "notification";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r5 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.Object getSystemService(java.lang.String)>(r3);
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        $r6 = (android.app.NotificationManager) $r5;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 477);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(477);
        r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr> = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45445, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int notificationMgr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 477);
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(9464, null);
        virtualinvoke $r7.<android.app.NotificationManager: void cancelAll()>();
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 473);
        $r8 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Cleared notification");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_38, $b9$sym, $l8$sym, $b7$sym, $l6$sym, l5$sym, $b4$sym, $l3$sym, l2$sym, $z8$sym, $z7$sym, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, z0$sym, l1$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_37, _sym_tmp_36, _sym_tmp_35, _sym_tmp_34, _sym_tmp_33, _sym_tmp_32, _sym_tmp_31, _sym_tmp_30, _sym_tmp_29, _sym_tmp_28, _sym_tmp_27, _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        long l1, l2, $l3, l5, $l6, $l8;
        java.io.IOException r3, $r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        be.ppareit.swiftp_free.MyLog $r4, $r8, $r9, $r13, $r23, $r28, $r29, $r32, $r37, $r42;
        android.content.Intent $r5, $r6, $r10;
        be.ppareit.swiftp_free.server.TcpListener $r11, $r12, $r14, $r17, $r18, $r20, $r40, $r41;
        java.lang.InterruptedException $r15, r16, $r25, r26, $r35, r36;
        java.net.ServerSocket $r19;
        be.ppareit.swiftp_free.server.ProxyConnector $r21, $r22, $r24, $r30, $r33, $r34, $r38, $r39;
        java.util.Date $r27, $r31;
        byte $b4, $b7, $b9;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32479, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_38 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45446, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45446, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        i0$sym = null;
        i0 = 0;
        l1$sym = null;
        l1 = 0L;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Server thread running");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21779, null);
        $z1 = specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: boolean loadSettings()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21779);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45447, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21782, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        $r5 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("org.swiftp.FTPServerService.FAILEDTOSTART");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(932, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void sendBroadcast(android.content.Intent)>($r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45447, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(15790);
        $z2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isWifiEnabled()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(15790);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45448, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21782, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        $r6 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("org.swiftp.FTPServerService.FAILEDTOSTART");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(932, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void sendBroadcast(android.content.Intent)>($r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45448, 1);
        goto label5;

     label5:
        $z3$sym = <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression acceptWifi$sym>;
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int acceptWifi$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 485);
        $z3 = <be.ppareit.swiftp_free.FTPServerService: boolean acceptWifi>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45449, 0);

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21780, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void setupListener()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;
        r3 = $r7;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 473);
        $r8 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(5, "Error opening port, check your network connection.");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21782, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        return;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21783, null);
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void takeWifiLock()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45449, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21784, null);
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void takeWakeLock()>();
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 473);
        $r9 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "SwiFTP server ready");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21781, null);
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void setupNotification()>();
        $r10 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("org.swiftp.FTPServerService.STARTED");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(932, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void sendBroadcast(android.content.Intent)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;

     label12:
        $z4$sym = r0.<be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression shouldExit$sym>;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 472);
        $z4 = r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label43;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45450, 0);
        $z5$sym = <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression acceptWifi$sym>;
        _sym_tmp_7 = <be.ppareit.swiftp_free.FTPServerService: int acceptWifi$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 485);
        $z5 = <be.ppareit.swiftp_free.FTPServerService: boolean acceptWifi>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45451, 0);
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 474);
        $r11 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_38 = null;
        if $r11 == null goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45452, 0);
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 474);
        $r12 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3675, null);
        $z6 = virtualinvoke $r12.<be.ppareit.swiftp_free.server.TcpListener: boolean isAlive()>();
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3675);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45453, 0);
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 473);
        $r13 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Joining crashed wifiListener thread");

     label13:
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 474);
        $r14 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11636, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.TcpListener: void join()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;

     label14:
        goto label16;

     label15:
        $r15 := @caughtexception;
        r16 = $r15;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;

     label16:
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 474);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(474);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        goto label19;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45452, 1);
        goto label19;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45453, 1);
        goto label19;

     label19:
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 474);
        $r17 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        _sym_tmp_38 = null;
        if $r17 != null goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45454, 0);
        $r18 = new be.ppareit.swiftp_free.server.TcpListener;
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.FTPServerService: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 480);
        $r19 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21785, null, null, null);
        specialinvoke $r18.<be.ppareit.swiftp_free.server.TcpListener: void <init>(java.net.ServerSocket,be.ppareit.swiftp_free.FTPServerService)>($r19, r0);
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_15, 474);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid> = _sym_tmp_15;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(474);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener> = $r18;
        _sym_tmp_16 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 474);
        $r20 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.server.TcpListener: void start()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        goto label22;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45451, 1);
        goto label22;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45454, 1);
        goto label22;

     label22:
        $z7$sym = <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression acceptNet$sym>;
        _sym_tmp_17 = <be.ppareit.swiftp_free.FTPServerService: int acceptNet$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 484);
        $z7 = <be.ppareit.swiftp_free.FTPServerService: boolean acceptNet>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label37;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45455, 0);
        _sym_tmp_18 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 475);
        $r21 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        _sym_tmp_38 = null;
        if $r21 == null goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45456, 0);
        _sym_tmp_19 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 475);
        $r22 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3675, null);
        $z8 = virtualinvoke $r22.<be.ppareit.swiftp_free.server.ProxyConnector: boolean isAlive()>();
        $z8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3675);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z8$sym, null, $z8, 0);
        if $z8 != 0 goto label30;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45457, 0);
        _sym_tmp_20 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 473);
        $r23 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r23.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Joining crashed proxy connector");

     label23:
        _sym_tmp_21 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 475);
        $r24 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11636, null);
        virtualinvoke $r24.<be.ppareit.swiftp_free.server.ProxyConnector: void join()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;

     label24:
        goto label26;

     label25:
        $r25 := @caughtexception;
        r26 = $r25;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 22);
        r2[22] = 1;

     label26:
        _sym_tmp_22 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_22, 475);
        _sym_tmp_22 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid> = _sym_tmp_22;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(475);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        $r27 = new java.util.Date;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r27.<java.util.Date: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5882, null);
        l2 = virtualinvoke $r27.<java.util.Date: long getTime()>();
        l2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(5882);
        $l3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>(l2$sym, l1$sym, l2, l1);
        $l3 = l2 - l1;
        $b4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l3$sym, null, $l3, 3000L);
        $b4 = $l3 cmp 3000L;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 23);
        r2[23] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b4$sym, null, $b4, 0);
        if $b4 >= 0 goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45458, 0);
        _sym_tmp_23 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 473);
        $r28 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r28.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Incrementing proxy start failures");
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 24);
        r2[24] = 1;
        goto label31;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45458, 1);
        goto label28;

     label28:
        _sym_tmp_24 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 473);
        $r29 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r29.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Resetting proxy start failures");
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 25);
        r2[25] = 1;
        goto label31;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45456, 1);
        goto label31;

        goto label31;

     label30:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45457, 1);
        goto label31;

     label31:
        _sym_tmp_25 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_25, 475);
        $r30 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 26);
        r2[26] = 1;
        _sym_tmp_38 = null;
        if $r30 != null goto label38;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45459, 0);
        $r31 = new java.util.Date;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r31.<java.util.Date: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5882, null);
        l5 = virtualinvoke $r31.<java.util.Date: long getTime()>();
        l5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(5882);
        z0$sym = null;
        z0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 27);
        r2[27] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 3);
        if i0 >= 3 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45460, 0);
        $l6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>(l5$sym, l1$sym, l5, l1);
        $l6 = l5 - l1;
        $b7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l6$sym, null, $l6, 5000L);
        $b7 = $l6 cmp 5000L;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 28, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 28);
        r2[28] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b7$sym, null, $b7, 0);
        if $b7 <= 0 goto label33;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45461, 0);
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 29, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 29);
        r2[29] = 1;
        goto label36;

        goto label34;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45460, 1);
        goto label34;

        goto label34;

     label33:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45461, 1);
        goto label34;

     label34:
        $l8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>(l5$sym, l1$sym, l5, l1);
        $l8 = l5 - l1;
        $b9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l8$sym, null, $l8, 30000L);
        $b9 = $l8 cmp 30000L;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 30, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 30);
        r2[30] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b9$sym, null, $b9, 0);
        if $b9 <= 0 goto label35;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45462, 0);
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 31, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 31);
        r2[31] = 1;
        goto label36;

     label35:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45462, 1);
        goto label36;

     label36:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 32, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 32);
        r2[32] = 1;
        _sym_tmp_38 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label39;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45463, 0);
        _sym_tmp_26 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 473);
        $r32 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r32.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Spawning ProxyConnector");
        $r33 = new be.ppareit.swiftp_free.server.ProxyConnector;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21786, null, null);
        specialinvoke $r33.<be.ppareit.swiftp_free.server.ProxyConnector: void <init>(be.ppareit.swiftp_free.FTPServerService)>(r0);
        _sym_tmp_27 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_27, 475);
        _sym_tmp_27 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid> = _sym_tmp_27;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(475);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = $r33;
        _sym_tmp_28 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_28, 475);
        $r34 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke $r34.<be.ppareit.swiftp_free.server.ProxyConnector: void start()>();
        l1$sym = l5$sym;
        l1 = l5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 33, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 33);
        r2[33] = 1;
        goto label40;

     label37:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45455, 1);
        goto label40;

        goto label40;

     label38:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45459, 1);
        goto label40;

        goto label40;

     label39:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45463, 1);
        goto label40;

     label40:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(532, null);
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 34, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 34);
        r2[34] = 1;

     label41:
        goto label12;

     label42:
        $r35 := @caughtexception;
        r36 = $r35;
        _sym_tmp_29 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_29, 473);
        $r37 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r37.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Thread interrupted");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 35, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 35);
        r2[35] = 1;
        goto label12;

        goto label44;

     label43:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45450, 1);
        goto label44;

     label44:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21787, null);
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void terminateAllSessions()>();
        _sym_tmp_30 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_30, 475);
        $r38 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 36, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 36);
        r2[36] = 1;
        _sym_tmp_38 = null;
        if $r38 == null goto label45;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45464, 0);
        _sym_tmp_31 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_31, 475);
        $r39 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2822, null);
        virtualinvoke $r39.<be.ppareit.swiftp_free.server.ProxyConnector: void quit()>();
        _sym_tmp_32 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_32, 475);
        _sym_tmp_32 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid> = _sym_tmp_32;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(475);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 37, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 37);
        r2[37] = 1;
        goto label46;

     label45:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45464, 1);
        goto label46;

     label46:
        _sym_tmp_33 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_33, 474);
        $r40 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 38, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 38);
        r2[38] = 1;
        _sym_tmp_38 = null;
        if $r40 == null goto label47;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45465, 0);
        _sym_tmp_34 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_34, 474);
        $r41 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2822, null);
        virtualinvoke $r41.<be.ppareit.swiftp_free.server.TcpListener: void quit()>();
        _sym_tmp_35 = r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_35, 474);
        _sym_tmp_35 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int wifiListener$a3tid> = _sym_tmp_35;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(474);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 39, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 39);
        r2[39] = 1;
        goto label48;

     label47:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_38, 45465, 1);
        goto label48;

     label48:
        r0.<be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression shouldExit$sym> = null;
        _sym_tmp_36 = r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_36, 472);
        _sym_tmp_36 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int shouldExit$a3tid> = _sym_tmp_36;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(472);
        r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit> = 0;
        _sym_tmp_37 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_37, 473);
        $r42 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r42.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Exiting cleanly, returning from run()");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21782, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 40, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 40);
        r2[40] = 1;
        return;

        catch java.io.IOException from label6 to label7 with label8;
        catch java.lang.InterruptedException from label13 to label14 with label15;
        catch java.lang.InterruptedException from label23 to label24 with label25;
        catch java.lang.InterruptedException from label40 to label41 with label42;
    }

    private void terminateAllSessions()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $r16$sym, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.FTPServerService r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r4;
        be.ppareit.swiftp_free.server.SessionThread r5;
        java.lang.Throwable r6, $r17;
        be.ppareit.swiftp_free.MyLog $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;
        java.util.List $r10, $r15;
        java.lang.String $r13;
        boolean $z0;
        java.lang.Object $r16;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21787, 32480, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45466, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45466, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 11);
        r2 = $r1[11];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Terminating ");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.FTPServerService: int sessionThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 476);
        $r10 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i0$sym);
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" session thread(s)");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r13);
        r3 = r0;
        entermonitor r0;

     label2:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int sessionThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 476);
        $r15 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45467, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r16$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r5 = (be.ppareit.swiftp_free.server.SessionThread) $r16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_5 = null;
        if r5 == null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45468, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21789, null);
        virtualinvoke r5.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3370, null);
        virtualinvoke r5.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45468, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label3;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45467, 1);
        goto label7;

     label7:
        exitmonitor r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label8:
        goto label12;

     label9:
        $r17 := @caughtexception;

     label10:
        r6 = $r17;
        exitmonitor r3;

     label11:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        throw r6;

     label12:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;

        catch java.lang.Throwable from label2 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    public void cleanupAndStopService()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Intent $r3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21782, 32481, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45469, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45469, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 12);
        r2 = $r1[12];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2997, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void stopSelf()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(953, null);
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void releaseWifiLock()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4637, null);
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void releaseWakeLock()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21777, null);
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void clearNotification()>();
        $r3 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("org.swiftp.FTPServerService.STOPPED");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(932, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void sendBroadcast(android.content.Intent)>($r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void takeWakeLock()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z0$sym, $r5$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.PowerManager r3;
        android.os.PowerManager$WakeLock $r4, $r6, $r7, $r8, $r10;
        java.lang.Object $r5;
        boolean $z0;
        be.ppareit.swiftp_free.MyLog $r9;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21784, 32482, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45470, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45470, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 13);
        r2 = $r1[13];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 487);
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = null;
        if $r4 != null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45471, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r5 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.Object getSystemService(java.lang.String)>("power");
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        r3 = (android.os.PowerManager) $r5;
        $z0$sym = <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression fullWake$sym>;
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int fullWake$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 486);
        $z0 = <be.ppareit.swiftp_free.FTPServerService: boolean fullWake>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45472, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(750, null, null, null);
        $r6 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(26, "SwiFTP");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 487);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(487);
        r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock> = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45472, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(750, null, null, null);
        $r7 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "SwiFTP");
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 487);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(487);
        r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock> = $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label4:
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 487);
        $r8 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(751, null, null);
        virtualinvoke $r8.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45471, 1);
        goto label6;

     label6:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 473);
        $r9 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Acquiring wake lock");
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 487);
        $r10 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(754, null);
        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void acquire()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        return;
    }

    private void releaseWakeLock()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3, $r6, $r7;
        android.os.PowerManager$WakeLock $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(4637, 32483, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45473, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45473, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 14);
        r2 = $r1[14];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r3 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Releasing wake lock");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 487);
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_8 = null;
        if $r4 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45474, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 487);
        $r5 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(335, null);
        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void release()>();
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 487);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: int wakeLock$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(487);
        r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock> = null;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 473);
        $r6 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Finished releasing wake lock");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45474, 1);
        goto label3;

     label3:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 473);
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Couldn\'t release null wake lock");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    private void takeWifiLock()
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $r6$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.net.wifi.WifiManager r3;
        be.ppareit.swiftp_free.MyLog $r4;
        android.net.wifi.WifiManager$WifiLock $r5, $r7, $r8, $r9;
        java.lang.Object $r6;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21783, 32484, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45475, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45475, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 15);
        r2 = $r1[15];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Taking wifi lock");
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 481);
        $r5 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_7 = null;
        if $r5 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45476, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r6 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.Object getSystemService(java.lang.String)>("wifi");
        $r6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        r3 = (android.net.wifi.WifiManager) $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15796, null, null);
        $r7 = virtualinvoke r3.<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)>("SwiFTP");
        _sym_tmp_4 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 481);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(481);
        <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock> = $r7;
        _sym_tmp_5 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 481);
        $r8 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(751, null, null);
        virtualinvoke $r8.<android.net.wifi.WifiManager$WifiLock: void setReferenceCounted(boolean)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45476, 1);
        goto label3;

     label3:
        _sym_tmp_6 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 481);
        $r9 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(754, null);
        virtualinvoke $r9.<android.net.wifi.WifiManager$WifiLock: void acquire()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    private void releaseWifiLock()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;
        android.net.wifi.WifiManager$WifiLock $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(953, 32485, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45477, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45477, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 16);
        r2 = $r1[16];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r3 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Releasing wifi lock");
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 481);
        $r4 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_6 = null;
        if $r4 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45478, 0);
        _sym_tmp_4 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 481);
        $r5 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(335, null);
        virtualinvoke $r5.<android.net.wifi.WifiManager$WifiLock: void release()>();
        _sym_tmp_5 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 481);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(481);
        <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45478, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public void errorShutdown()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21790, 32486, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45479, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45479, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 17);
        r2 = $r1[17];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 473);
        $r3 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Service errorShutdown() called");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21782, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static java.net.InetAddress getWifiIp()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, $r5$sym, i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context r2;
        android.net.wifi.WifiManager r3;
        java.lang.NullPointerException $r4;
        java.lang.Object $r5;
        boolean $z0;
        android.net.wifi.WifiInfo $r6;
        java.net.InetAddress $r7;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21792, 32487, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45480, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45480, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 18);
        r1 = $r0[18];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        r2 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        _sym_tmp_2 = null;
        if r2 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45481, 0);
        $r4 = new java.lang.NullPointerException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Global context is null");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        throw $r4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45481, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r5 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        r3 = (android.net.wifi.WifiManager) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(15790);
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isWifiEnabled()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(15790);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45482, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15725, null);
        $r6 = virtualinvoke r3.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15762, null);
        i0 = virtualinvoke $r6.<android.net.wifi.WifiInfo: int getIpAddress()>();
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(15762);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45483, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 4);
        r1[4] = 1;
        return null;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45483, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21791, i0$sym);
        $r7 = staticinvoke <be.ppareit.swiftp_free.Util: java.net.InetAddress intToInet(int)>(i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 5);
        r1[5] = 1;
        return $r7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45482, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 6);
        r1[6] = 1;
        return null;
    }

    public static boolean isWifiEnabled()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, $r5$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context r2;
        android.net.wifi.WifiManager r3;
        java.lang.NullPointerException $r4;
        java.lang.Object $r5;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(15790, 32488, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45484, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45484, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 19);
        r1 = $r0[19];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        r2 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        _sym_tmp_2 = null;
        if r2 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45485, 0);
        $r4 = new java.lang.NullPointerException;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Global context is null");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        throw $r4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45485, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(102, null, null);
        $r5 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(102);
        r3 = (android.net.wifi.WifiManager) $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15625, null);
        $i0 = virtualinvoke r3.<android.net.wifi.WifiManager: int getWifiState()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(15625);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 3);
        if $i0 != 3 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45486, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(15790, null);
        return 1;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45486, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 4);
        r1[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(15790, null);
        return 0;
    }

    public static java.util.List getSessionMonitorContents()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21793, 32489, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45487, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45487, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 20);
        r1 = $r0[20];
        $r3 = new java.util.ArrayList;
        _sym_tmp_2 = <be.ppareit.swiftp_free.FTPServerService: int sessionMonitor$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 488);
        $r2 = <be.ppareit.swiftp_free.FTPServerService: java.util.List sessionMonitor>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8348, null, null);
        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r3;
    }

    public static java.util.List getServerLogContents()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21794, 32490, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45488, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45488, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 21);
        r1 = $r0[21];
        $r3 = new java.util.ArrayList;
        _sym_tmp_2 = <be.ppareit.swiftp_free.FTPServerService: int serverLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 489);
        $r2 = <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8348, null, null);
        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r3;
    }

    public static void log(int, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $i2$sym, i1$sym, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3, $r4, $r5;

        i0 := @parameter0: int;
        r0 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21795, 32491, 2);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45489, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45489, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 22);
        r2 = $r1[22];
        _sym_tmp_2 = <be.ppareit.swiftp_free.FTPServerService: int serverLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 489);
        $r3 = <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21757);
        i1 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getServerLogScrollBack()>();
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21757);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int serverLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 489);
        $r4 = <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, i1$sym, $i2, i1);
        if $i2 <= i1 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45490, 0);
        _sym_tmp_4 = <be.ppareit.swiftp_free.FTPServerService: int serverLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 489);
        $r5 = <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(345, null, null);
        interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45490, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    public static void writeMonitor(boolean, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        boolean z0;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;

        z0 := @parameter0: boolean;
        r0 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21796, 32492, 2);
        z0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45491, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45491, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 23);
        r2 = $r1[23];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static int getPort()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(588, 32493, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45492, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45492, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 24);
        r1 = $r0[24];
        $i0$sym = <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression port$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.FTPServerService: int port$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 483);
        $i0 = <be.ppareit.swiftp_free.FTPServerService: int port>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(588, $i0$sym);
        return $i0;
    }

    public static void setPort(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(605, 32494, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45493, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45493, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 25);
        r1 = $r0[25];
        <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression port$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.FTPServerService: int port$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 483);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int port$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(483);
        <be.ppareit.swiftp_free.FTPServerService: int port> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public void registerSessionThread(be.ppareit.swiftp_free.server.SessionThread)
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $r19$sym, $z3$sym, $z1$sym, $r13$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0, r4;
        be.ppareit.swiftp_free.server.SessionThread r1, r7, r20;
        boolean[][] $r2;
        boolean[] r3;
        java.util.ArrayList r5, $r11;
        java.util.Iterator r6, r18;
        java.lang.InterruptedException r8, $r16;
        java.lang.Throwable r9, $r23;
        java.util.List $r12, $r21, $r22;
        boolean $z0, $z1, $z3;
        java.lang.Object $r13, $r19;
        be.ppareit.swiftp_free.MyLog $r14, $r15, $r17, $r24;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21797, 32495, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r2 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45494, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45494, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 26);
        r3 = $r2[26];
        r4 = r0;
        entermonitor r0;

     label2:
        $r11 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r5 = $r11;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int sessionThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 476);
        $r12 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r6 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45495, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        $r13$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r7 = (be.ppareit.swiftp_free.server.SessionThread) $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3675, null);
        $z1 = virtualinvoke r7.<be.ppareit.swiftp_free.server.SessionThread: boolean isAlive()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3675);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45496, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 473);
        $r14 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Cleaning up finished session...");

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11636, null);
        virtualinvoke r7.<be.ppareit.swiftp_free.server.SessionThread: void join()>();
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 473);
        $r15 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Thread joined");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3370, null);
        virtualinvoke r7.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label5:
        goto label8;

     label6:
        $r16 := @caughtexception;
        r8 = $r16;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 473);
        $r17 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Interrupted while joining");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45496, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        goto label3;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45495, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r18 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45497, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        $r19$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r20 = (be.ppareit.swiftp_free.server.SessionThread) $r19;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.FTPServerService: int sessionThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 476);
        $r21 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(97, null, null);
        interfaceinvoke $r21.<java.util.List: boolean remove(java.lang.Object)>(r20);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        goto label11;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45497, 1);
        goto label13;

     label13:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.FTPServerService: int sessionThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 476);
        $r22 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>(r1);
        exitmonitor r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;

     label14:
        goto label18;

     label15:
        $r23 := @caughtexception;

     label16:
        r9 = $r23;
        exitmonitor r4;

     label17:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        throw r9;

     label18:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.FTPServerService: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 473);
        $r24 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r24.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Registered session thread");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        return;

        catch java.lang.InterruptedException from label4 to label5 with label6;
        catch java.lang.Throwable from label2 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector $r3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21798, 32496, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45498, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45498, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 27);
        r2 = $r1[27];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.FTPServerService: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 475);
        $r3 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public static android.content.SharedPreferences getSettings()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        android.content.SharedPreferences $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21799, 32497, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 471);
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45499, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45499, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 28);
        r1 = $r0[28];
        _sym_tmp_2 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 482);
        $r2 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r2;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        acteve.symbolic.integer.Expression $i0$sym, r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.String $r4;
        java.util.ArrayList $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32498, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 29);
        r1 = $r0[29];
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 478);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int serverThread$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(478);
        <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread> = null;
        $r3 = new be.ppareit.swiftp_free.MyLog;
        $r2 = class "be/ppareit/swiftp_free/FTPServerService";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r4);
        _sym_tmp_2 = <be.ppareit.swiftp_free.FTPServerService: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 479);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int staticLog$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(479);
        <be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog staticLog> = $r3;
        _sym_tmp_3 = <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 481);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int wifiLock$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(481);
        <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock> = null;
        $r5 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        _sym_tmp_4 = <be.ppareit.swiftp_free.FTPServerService: int sessionMonitor$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 488);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int sessionMonitor$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(488);
        <be.ppareit.swiftp_free.FTPServerService: java.util.List sessionMonitor> = $r5;
        $r6 = new java.util.ArrayList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        _sym_tmp_5 = <be.ppareit.swiftp_free.FTPServerService: int serverLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 489);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int serverLog$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(489);
        <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog> = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21749);
        $i0 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getUiLogLevel()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21749);
        <be.ppareit.swiftp_free.FTPServerService: acteve.symbolic.integer.Expression uiLogLevel$sym> = $i0$sym;
        _sym_tmp_6 = <be.ppareit.swiftp_free.FTPServerService: int uiLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 490);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int uiLogLevel$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(490);
        <be.ppareit.swiftp_free.FTPServerService: int uiLogLevel> = $i0;
        _sym_tmp_7 = <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 482);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int settings$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(482);
        <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r30$sym, $r29$sym, $r28$sym, $r27$sym, $r26$sym, $r25$sym, $r24$sym, $r23$sym, $r22$sym, $r21$sym, $r20$sym, $r19$sym, $r18$sym, $r17$sym, $r16$sym, $r15$sym, $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32499, 0);
        $r0 = newmultiarray (boolean)[30][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 471);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.FTPServerService: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(471);
        <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[6];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[14];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[9];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[41];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[8];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[6];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        $r15 = newarray (boolean)[4];
        $r15$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 14);
        $r0[14] = $r15;
        $r16 = newarray (boolean)[3];
        $r16$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 15);
        $r0[15] = $r16;
        $r17 = newarray (boolean)[3];
        $r17$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 16);
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r18$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 17);
        $r0[17] = $r18;
        $r19 = newarray (boolean)[7];
        $r19$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 18);
        $r0[18] = $r19;
        $r20 = newarray (boolean)[5];
        $r20$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 19);
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r21$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 20);
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r22$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 21);
        $r0[21] = $r22;
        $r23 = newarray (boolean)[4];
        $r23$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 22);
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r24$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 23);
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r25$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 24);
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r26$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 25);
        $r0[25] = $r26;
        $r27 = newarray (boolean)[12];
        $r27$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 26);
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r28$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 27);
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r29$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 28);
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r30$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 29);
        $r0[29] = $r30;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/FTPServerService", 2346350861671177131L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.Globals extends java.lang.Object
{
    private static android.content.Context context;
    private static java.lang.String lastError;
    private static java.io.File chrootDir;
    private static be.ppareit.swiftp_free.server.ProxyConnector proxyConnector;
    private static java.lang.String username;
    private static final boolean[][] $VRc;
    private static int context$a3tid;
    private static int lastError$a3tid;
    private static int chrootDir$a3tid;
    private static int proxyConnector$a3tid;
    private static int username$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.Globals r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.Globals;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32500, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45500, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45500, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.ProxyConnector $r2, $r3, $r4;
        boolean $z0;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21798, 32501, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45501, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45501, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 1);
        r1 = $r0[1];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 492);
        $r2 = <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        _sym_tmp_5 = null;
        if $r2 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45502, 0);
        _sym_tmp_3 = <be.ppareit.swiftp_free.Globals: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 492);
        $r3 = <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3675, null);
        $z0 = virtualinvoke $r3.<be.ppareit.swiftp_free.server.ProxyConnector: boolean isAlive()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3675);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45503, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;
        return null;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45502, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45503, 1);
        goto label4;

     label4:
        _sym_tmp_4 = <be.ppareit.swiftp_free.Globals: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 492);
        $r4 = <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;
        return $r4;
    }

    public static void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21800, 32502, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45504, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45504, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 492);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int proxyConnector$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(492);
        <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = r0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static java.io.File getChrootDir()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.io.File $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21801, 32503, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45505, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45505, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int chrootDir$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 493);
        $r2 = <be.ppareit.swiftp_free.Globals: java.io.File chrootDir>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r2;
    }

    public static void setChrootDir(java.io.File)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        java.io.File r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21778, 32504, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45506, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45506, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45507, 0);
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int chrootDir$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 493);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int chrootDir$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        <be.ppareit.swiftp_free.Globals: java.io.File chrootDir> = r0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45507, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public static java.lang.String getLastError()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21802, 32505, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45508, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45508, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int lastError$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 494);
        $r2 = <be.ppareit.swiftp_free.Globals: java.lang.String lastError>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r2;
    }

    public static void setLastError(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21803, 32506, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45509, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45509, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int lastError$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 494);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int lastError$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(494);
        <be.ppareit.swiftp_free.Globals: java.lang.String lastError> = r0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static android.content.Context getContext()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1272, 32507, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45510, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45510, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int context$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 495);
        $r2 = <be.ppareit.swiftp_free.Globals: android.content.Context context>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r2;
    }

    public static void setContext(android.content.Context)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: android.content.Context;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(5707, 32508, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45511, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45511, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = null;
        if r0 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45512, 0);
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int context$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 495);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int context$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(495);
        <be.ppareit.swiftp_free.Globals: android.content.Context context> = r0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45512, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public static java.lang.String getUsername()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11550, 32509, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45513, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45513, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 9);
        r1 = $r0[9];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 496);
        $r2 = <be.ppareit.swiftp_free.Globals: java.lang.String username>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r2;
    }

    public static void setUsername(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11564, 32510, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 491);
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45514, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45514, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 496);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int username$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(496);
        <be.ppareit.swiftp_free.Globals: java.lang.String username> = r0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32511, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 11);
        r1 = $r0[11];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int chrootDir$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 493);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int chrootDir$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(493);
        <be.ppareit.swiftp_free.Globals: java.io.File chrootDir> = null;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Globals: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 492);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int proxyConnector$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(492);
        <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        _sym_tmp_3 = <be.ppareit.swiftp_free.Globals: int username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 496);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int username$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(496);
        <be.ppareit.swiftp_free.Globals: java.lang.String username> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32512, 0);
        $r0 = newmultiarray (boolean)[12][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Globals: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 491);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Globals: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(491);
        <be.ppareit.swiftp_free.Globals: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[3];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Globals", 3497577037437912937L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.MyLog extends java.lang.Object
{
    protected java.lang.String tag;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int tag$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1, 32513, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45515, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45515, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.MyLog: int tag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 498);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.MyLog: int tag$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(498);
        r0.<be.ppareit.swiftp_free.MyLog: java.lang.String tag> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void l(int, java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i3$sym, $i1$sym, r3$sym, z0$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, $i1, $i3;
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1, r7, $r8;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Class r4, $r6;
        java.lang.Throwable r5, $r9;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21804, 32514, 4);
        i0$sym = a3targs$symargs[1];
        z0$sym = a3targs$symargs[3];
        _sym_tmp_1 = <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45516, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45516, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r6 = class "be/ppareit/swiftp_free/MyLog";
        r4 = $r6;
        entermonitor $r6;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r7 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 6);
        if i0 == 6 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45517, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 5);
        if i0 != 5 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45518, 0);
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45517, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21803, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setLastError(java.lang.String)>(r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45518, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21759);
        $i1 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getConsoleLogLevel()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21759);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i1$sym, i0, $i1);
        if i0 < $i1 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45519, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.MyLog: int tag$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 498);
        $r8 = r0.<be.ppareit.swiftp_free.MyLog: java.lang.String tag>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2047, i0$sym, null, null);
        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(i0, $r8, r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45519, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45520, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21749);
        $i3 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getUiLogLevel()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21749);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i3$sym, i0, $i3);
        if i0 < $i3 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45521, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21795, i0$sym, null);
        staticinvoke <be.ppareit.swiftp_free.FTPServerService: void log(int,java.lang.String)>(i0, r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45520, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45521, 1);
        goto label11;

     label11:
        exitmonitor r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;

     label12:
        goto label16;

     label13:
        $r9 := @caughtexception;

     label14:
        r5 = $r9;
        exitmonitor r4;

     label15:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        throw r5;

     label16:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        return;

        catch java.lang.Throwable from label2 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void l(int, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21773, 32515, 3);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45522, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45522, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21804, null, i0$sym, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(i0, r1, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void e(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(15225, 32516, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45523, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45523, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21804, null, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(6, r1, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void w(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21805, 32517, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45524, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45524, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 4);
        r3 = $r2[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21804, null, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(5, r1, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void i(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21788, 32518, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45525, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45525, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 5);
        r3 = $r2[5];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21804, null, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(4, r1, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void d(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21776, 32519, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 497);
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45526, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45526, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 6);
        r3 = $r2[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21804, null, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(3, r1, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32520, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32521, 0);
        $r0 = newmultiarray (boolean)[8][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 497);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.MyLog: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(497);
        <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[11];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/MyLog", 3902846006891928904L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.QuotaStats extends java.lang.Object
{
    private int quota;
    private int used;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private acteve.symbolic.integer.Expression quota$sym;
    private int quota$a3tid;
    private acteve.symbolic.integer.Expression used$sym;
    private int used$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        be.ppareit.swiftp_free.QuotaStats r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.QuotaStats;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1371, 32522, 3);
        i0$sym = a3targs$symargs[1];
        i1$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.QuotaStats: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r1 = <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45527, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45527, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<be.ppareit.swiftp_free.QuotaStats: acteve.symbolic.integer.Expression quota$sym> = i1$sym;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.QuotaStats: int quota$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 500);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.QuotaStats: int quota$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(500);
        r0.<be.ppareit.swiftp_free.QuotaStats: int quota> = i1;
        r0.<be.ppareit.swiftp_free.QuotaStats: acteve.symbolic.integer.Expression used$sym> = i0$sym;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.QuotaStats: int used$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 501);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.QuotaStats: int used$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(501);
        r0.<be.ppareit.swiftp_free.QuotaStats: int used> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public int getQuota()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.QuotaStats r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.QuotaStats;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21806, 32523, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.QuotaStats: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r1 = <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45528, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45528, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        $i0$sym = r0.<be.ppareit.swiftp_free.QuotaStats: acteve.symbolic.integer.Expression quota$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.QuotaStats: int quota$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 500);
        $i0 = r0.<be.ppareit.swiftp_free.QuotaStats: int quota>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21806, $i0$sym);
        return $i0;
    }

    public int getUsed()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.QuotaStats r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.QuotaStats;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21807, 32524, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.QuotaStats: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 499);
        $r1 = <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45529, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45529, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        $i0$sym = r0.<be.ppareit.swiftp_free.QuotaStats: acteve.symbolic.integer.Expression used$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.QuotaStats: int used$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 501);
        $i0 = r0.<be.ppareit.swiftp_free.QuotaStats: int used>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21807, $i0$sym);
        return $i0;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32525, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32526, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.QuotaStats: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 499);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.QuotaStats: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(499);
        <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/QuotaStats", -3108993348983726658L);
        return $r0;
    }
}
public final class be.ppareit.swiftp_free.R$attr extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        be.ppareit.swiftp_free.R$attr r0;

        r0 := @this: be.ppareit.swiftp_free.R$attr;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32527, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$drawable extends java.lang.Object
{
    public static final int icon;
    public static final int logo;
    public static final int notification;
    public static final int widget_off;
    public static final int widget_on;
    public static final acteve.symbolic.integer.Expression icon$sym;
    public static final int icon$a3tid;
    public static final acteve.symbolic.integer.Expression logo$sym;
    public static final int logo$a3tid;
    public static final acteve.symbolic.integer.Expression notification$sym;
    public static final int notification$a3tid;
    public static final acteve.symbolic.integer.Expression widget_off$sym;
    public static final int widget_off$a3tid;
    public static final acteve.symbolic.integer.Expression widget_on$sym;
    public static final int widget_on$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        be.ppareit.swiftp_free.R$drawable r0;

        r0 := @this: be.ppareit.swiftp_free.R$drawable;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32528, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$id extends java.lang.Object
{
    public static final int widget_button_off;
    public static final int widget_button_on;
    public static final acteve.symbolic.integer.Expression widget_button_off$sym;
    public static final int widget_button_off$a3tid;
    public static final acteve.symbolic.integer.Expression widget_button_on$sym;
    public static final int widget_button_on$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        be.ppareit.swiftp_free.R$id r0;

        r0 := @this: be.ppareit.swiftp_free.R$id;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32529, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$layout extends java.lang.Object
{
    public static final int widget;
    public static final acteve.symbolic.integer.Expression widget$sym;
    public static final int widget$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        be.ppareit.swiftp_free.R$layout r0;

        r0 := @this: be.ppareit.swiftp_free.R$layout;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32530, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$string extends java.lang.Object
{
    public static final int about_dlg_message;
    public static final int about_dlg_title;
    public static final int about_label;
    public static final int acceptproxy_default;
    public static final int acceptproxy_label;
    public static final int acceptwifi_default;
    public static final int acceptwifi_label;
    public static final int advancedsettings_label;
    public static final int cant_get_url;
    public static final int chroot_default;
    public static final int chroot_label;
    public static final int extra_label;
    public static final int help_dlg_message;
    public static final int help_dlg_title;
    public static final int help_label;
    public static final int notif_server_starting;
    public static final int notif_text;
    public static final int notif_title;
    public static final int ok;
    public static final int password_default;
    public static final int password_label;
    public static final int password_validation_error;
    public static final int port_validation_error;
    public static final int portnumber_default;
    public static final int portnumber_label;
    public static final int pst_connected;
    public static final int pst_connecting;
    public static final int pst_disconnected;
    public static final int pst_failed;
    public static final int pst_unreachable;
    public static final int running_label;
    public static final int running_summary_failed;
    public static final int running_summary_started;
    public static final int running_summary_stopped;
    public static final int settings_label;
    public static final int show_password_default;
    public static final int show_password_label;
    public static final int storage_warning;
    public static final int swiftp_name;
    public static final int 'unknown';
    public static final int username_default;
    public static final int username_label;
    public static final int username_validation_error;
    public static final int wakelock_default;
    public static final int wakelock_label;
    public static final int widget_name;
    public static final int wifi_state_receiver_label;
    public static final acteve.symbolic.integer.Expression about_dlg_message$sym;
    public static final int about_dlg_message$a3tid;
    public static final acteve.symbolic.integer.Expression about_dlg_title$sym;
    public static final int about_dlg_title$a3tid;
    public static final acteve.symbolic.integer.Expression about_label$sym;
    public static final int about_label$a3tid;
    public static final acteve.symbolic.integer.Expression acceptproxy_default$sym;
    public static final int acceptproxy_default$a3tid;
    public static final acteve.symbolic.integer.Expression acceptproxy_label$sym;
    public static final int acceptproxy_label$a3tid;
    public static final acteve.symbolic.integer.Expression acceptwifi_default$sym;
    public static final int acceptwifi_default$a3tid;
    public static final acteve.symbolic.integer.Expression acceptwifi_label$sym;
    public static final int acceptwifi_label$a3tid;
    public static final acteve.symbolic.integer.Expression advancedsettings_label$sym;
    public static final int advancedsettings_label$a3tid;
    public static final acteve.symbolic.integer.Expression cant_get_url$sym;
    public static final int cant_get_url$a3tid;
    public static final acteve.symbolic.integer.Expression chroot_default$sym;
    public static final int chroot_default$a3tid;
    public static final acteve.symbolic.integer.Expression chroot_label$sym;
    public static final int chroot_label$a3tid;
    public static final acteve.symbolic.integer.Expression extra_label$sym;
    public static final int extra_label$a3tid;
    public static final acteve.symbolic.integer.Expression help_dlg_message$sym;
    public static final int help_dlg_message$a3tid;
    public static final acteve.symbolic.integer.Expression help_dlg_title$sym;
    public static final int help_dlg_title$a3tid;
    public static final acteve.symbolic.integer.Expression help_label$sym;
    public static final int help_label$a3tid;
    public static final acteve.symbolic.integer.Expression notif_server_starting$sym;
    public static final int notif_server_starting$a3tid;
    public static final acteve.symbolic.integer.Expression notif_text$sym;
    public static final int notif_text$a3tid;
    public static final acteve.symbolic.integer.Expression notif_title$sym;
    public static final int notif_title$a3tid;
    public static final acteve.symbolic.integer.Expression ok$sym;
    public static final int ok$a3tid;
    public static final acteve.symbolic.integer.Expression password_default$sym;
    public static final int password_default$a3tid;
    public static final acteve.symbolic.integer.Expression password_label$sym;
    public static final int password_label$a3tid;
    public static final acteve.symbolic.integer.Expression password_validation_error$sym;
    public static final int password_validation_error$a3tid;
    public static final acteve.symbolic.integer.Expression port_validation_error$sym;
    public static final int port_validation_error$a3tid;
    public static final acteve.symbolic.integer.Expression portnumber_default$sym;
    public static final int portnumber_default$a3tid;
    public static final acteve.symbolic.integer.Expression portnumber_label$sym;
    public static final int portnumber_label$a3tid;
    public static final acteve.symbolic.integer.Expression pst_connected$sym;
    public static final int pst_connected$a3tid;
    public static final acteve.symbolic.integer.Expression pst_connecting$sym;
    public static final int pst_connecting$a3tid;
    public static final acteve.symbolic.integer.Expression pst_disconnected$sym;
    public static final int pst_disconnected$a3tid;
    public static final acteve.symbolic.integer.Expression pst_failed$sym;
    public static final int pst_failed$a3tid;
    public static final acteve.symbolic.integer.Expression pst_unreachable$sym;
    public static final int pst_unreachable$a3tid;
    public static final acteve.symbolic.integer.Expression running_label$sym;
    public static final int running_label$a3tid;
    public static final acteve.symbolic.integer.Expression running_summary_failed$sym;
    public static final int running_summary_failed$a3tid;
    public static final acteve.symbolic.integer.Expression running_summary_started$sym;
    public static final int running_summary_started$a3tid;
    public static final acteve.symbolic.integer.Expression running_summary_stopped$sym;
    public static final int running_summary_stopped$a3tid;
    public static final acteve.symbolic.integer.Expression settings_label$sym;
    public static final int settings_label$a3tid;
    public static final acteve.symbolic.integer.Expression show_password_default$sym;
    public static final int show_password_default$a3tid;
    public static final acteve.symbolic.integer.Expression show_password_label$sym;
    public static final int show_password_label$a3tid;
    public static final acteve.symbolic.integer.Expression storage_warning$sym;
    public static final int storage_warning$a3tid;
    public static final acteve.symbolic.integer.Expression swiftp_name$sym;
    public static final int swiftp_name$a3tid;
    public static final acteve.symbolic.integer.Expression unknown$sym;
    public static final int unknown$a3tid;
    public static final acteve.symbolic.integer.Expression username_default$sym;
    public static final int username_default$a3tid;
    public static final acteve.symbolic.integer.Expression username_label$sym;
    public static final int username_label$a3tid;
    public static final acteve.symbolic.integer.Expression username_validation_error$sym;
    public static final int username_validation_error$a3tid;
    public static final acteve.symbolic.integer.Expression wakelock_default$sym;
    public static final int wakelock_default$a3tid;
    public static final acteve.symbolic.integer.Expression wakelock_label$sym;
    public static final int wakelock_label$a3tid;
    public static final acteve.symbolic.integer.Expression widget_name$sym;
    public static final int widget_name$a3tid;
    public static final acteve.symbolic.integer.Expression wifi_state_receiver_label$sym;
    public static final int wifi_state_receiver_label$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        be.ppareit.swiftp_free.R$string r0;

        r0 := @this: be.ppareit.swiftp_free.R$string;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32531, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$xml extends java.lang.Object
{
    public static final int preferences;
    public static final int widget_provider;
    public static final acteve.symbolic.integer.Expression preferences$sym;
    public static final int preferences$a3tid;
    public static final acteve.symbolic.integer.Expression widget_provider$sym;
    public static final int widget_provider$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        be.ppareit.swiftp_free.R$xml r0;

        r0 := @this: be.ppareit.swiftp_free.R$xml;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32532, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R extends java.lang.Object
{

    public void <init>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        be.ppareit.swiftp_free.R r0;

        r0 := @this: be.ppareit.swiftp_free.R;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32533, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class be.ppareit.swiftp_free.Settings extends java.lang.Object
{
    protected static int inputBufferSize;
    protected static boolean allowOverwrite;
    protected static int dataChunkSize;
    protected static int sessionMonitorScrollBack;
    protected static int serverLogScrollBack;
    protected static int uiLogLevel;
    private static final boolean[][] $VRc;
    protected static acteve.symbolic.integer.Expression inputBufferSize$sym;
    protected static int inputBufferSize$a3tid;
    protected static acteve.symbolic.integer.Expression allowOverwrite$sym;
    protected static int allowOverwrite$a3tid;
    protected static acteve.symbolic.integer.Expression dataChunkSize$sym;
    protected static int dataChunkSize$a3tid;
    protected static acteve.symbolic.integer.Expression sessionMonitorScrollBack$sym;
    protected static int sessionMonitorScrollBack$a3tid;
    protected static acteve.symbolic.integer.Expression serverLogScrollBack$sym;
    protected static int serverLogScrollBack$a3tid;
    protected static acteve.symbolic.integer.Expression uiLogLevel$sym;
    protected static int uiLogLevel$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.Settings r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.Settings;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32534, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r1 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45530, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45530, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static int getUiLogLevel()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21749, 32535, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45531, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45531, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 1);
        r1 = $r0[1];
        $i0$sym = <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression uiLogLevel$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int uiLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 503);
        $i0 = <be.ppareit.swiftp_free.Settings: int uiLogLevel>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21749, $i0$sym);
        return $i0;
    }

    public static void setUiLogLevel(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21750, 32536, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45532, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45532, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression uiLogLevel$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int uiLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 503);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int uiLogLevel$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(503);
        <be.ppareit.swiftp_free.Settings: int uiLogLevel> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getInputBufferSize()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21751, 32537, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45533, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45533, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        $i0$sym = <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression inputBufferSize$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int inputBufferSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 504);
        $i0 = <be.ppareit.swiftp_free.Settings: int inputBufferSize>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21751, $i0$sym);
        return $i0;
    }

    public static void setInputBufferSize(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21752, 32538, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45534, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45534, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression inputBufferSize$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int inputBufferSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 504);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int inputBufferSize$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(504);
        <be.ppareit.swiftp_free.Settings: int inputBufferSize> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static boolean isAllowOverwrite()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        boolean $z0;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21808, 32539, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45535, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45535, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        $z0$sym = <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression allowOverwrite$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int allowOverwrite$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 505);
        $z0 = <be.ppareit.swiftp_free.Settings: boolean allowOverwrite>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21808, $z0$sym);
        return $z0;
    }

    public static void setAllowOverwrite(boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean z0;
        boolean[][] $r0;
        boolean[] r1;

        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21809, 32540, 1);
        z0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45536, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45536, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 6);
        r1 = $r0[6];
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression allowOverwrite$sym> = z0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int allowOverwrite$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 505);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int allowOverwrite$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(505);
        <be.ppareit.swiftp_free.Settings: boolean allowOverwrite> = z0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getDataChunkSize()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21753, 32541, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45537, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45537, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        $i0$sym = <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression dataChunkSize$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int dataChunkSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 506);
        $i0 = <be.ppareit.swiftp_free.Settings: int dataChunkSize>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21753, $i0$sym);
        return $i0;
    }

    public static void setDataChunkSize(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21754, 32542, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45538, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45538, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 8);
        r1 = $r0[8];
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression dataChunkSize$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int dataChunkSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 506);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int dataChunkSize$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(506);
        <be.ppareit.swiftp_free.Settings: int dataChunkSize> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getSessionMonitorScrollBack()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21755, 32543, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45539, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45539, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 9);
        r1 = $r0[9];
        $i0$sym = <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression sessionMonitorScrollBack$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 507);
        $i0 = <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21755, $i0$sym);
        return $i0;
    }

    public static void setSessionMonitorScrollBack(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21756, 32544, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45540, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45540, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 10);
        r1 = $r0[10];
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression sessionMonitorScrollBack$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 507);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(507);
        <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    public static int getServerLogScrollBack()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21757, 32545, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45541, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45541, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 11);
        r1 = $r0[11];
        $i0$sym = <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression serverLogScrollBack$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int serverLogScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 508);
        $i0 = <be.ppareit.swiftp_free.Settings: int serverLogScrollBack>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21757, $i0$sym);
        return $i0;
    }

    public static void setLogScrollBack(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21758, 32546, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 502);
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45542, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45542, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 12);
        r1 = $r0[12];
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression serverLogScrollBack$sym> = i0$sym;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int serverLogScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 508);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int serverLogScrollBack$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(508);
        <be.ppareit.swiftp_free.Settings: int serverLogScrollBack> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32547, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 13);
        r1 = $r0[13];
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression inputBufferSize$sym> = null;
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int inputBufferSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 504);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int inputBufferSize$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(504);
        <be.ppareit.swiftp_free.Settings: int inputBufferSize> = 256;
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression allowOverwrite$sym> = null;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Settings: int allowOverwrite$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 505);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int allowOverwrite$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(505);
        <be.ppareit.swiftp_free.Settings: boolean allowOverwrite> = 0;
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression dataChunkSize$sym> = null;
        _sym_tmp_3 = <be.ppareit.swiftp_free.Settings: int dataChunkSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 506);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int dataChunkSize$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(506);
        <be.ppareit.swiftp_free.Settings: int dataChunkSize> = 8192;
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression sessionMonitorScrollBack$sym> = null;
        _sym_tmp_4 = <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 507);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(507);
        <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack> = 10;
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression serverLogScrollBack$sym> = null;
        _sym_tmp_5 = <be.ppareit.swiftp_free.Settings: int serverLogScrollBack$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 508);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int serverLogScrollBack$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(508);
        <be.ppareit.swiftp_free.Settings: int serverLogScrollBack> = 10;
        <be.ppareit.swiftp_free.Settings: acteve.symbolic.integer.Expression uiLogLevel$sym> = null;
        _sym_tmp_6 = <be.ppareit.swiftp_free.Settings: int uiLogLevel$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 503);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int uiLogLevel$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(503);
        <be.ppareit.swiftp_free.Settings: int uiLogLevel> = 4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32548, 0);
        $r0 = newmultiarray (boolean)[14][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Settings: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 502);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Settings: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(502);
        <be.ppareit.swiftp_free.Settings: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Settings", 717338994651870716L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.Util$MediaScannerNotifier extends java.lang.Object implements android.media.MediaScannerConnection$MediaScannerConnectionClient
{
    private final android.media.MediaScannerConnection connection;
    private final java.lang.String path;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private final int connection$a3tid;
    private final int path$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(android.content.Context, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.Util$MediaScannerNotifier r0;
        android.content.Context r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        android.media.MediaScannerConnection $r5, $r6;

        r0 := @this: be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9490, 32549, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r3 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45543, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45543, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: int path$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 510);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: int path$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(510);
        r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: java.lang.String path> = r2;
        $r5 = new android.media.MediaScannerConnection;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(17859, null, null, null);
        specialinvoke $r5.<android.media.MediaScannerConnection: void <init>(android.content.Context,android.media.MediaScannerConnection$MediaScannerConnectionClient)>(r1, r0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: int connection$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 511);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: int connection$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(511);
        r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: android.media.MediaScannerConnection connection> = $r5;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: int connection$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 511);
        $r6 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: android.media.MediaScannerConnection connection>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1984, null);
        virtualinvoke $r6.<android.media.MediaScannerConnection: void connect()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void onMediaScannerConnected()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.Util$MediaScannerNotifier r0;
        boolean[][] $r1;
        boolean[] r2;
        android.media.MediaScannerConnection $r3;
        java.lang.String $r4;

        r0 := @this: be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17678, 32550, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r1 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45544, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45544, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: int connection$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 511);
        $r3 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: android.media.MediaScannerConnection connection>;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: int path$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 510);
        $r4 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: java.lang.String path>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(17398, null, null, null);
        virtualinvoke $r3.<android.media.MediaScannerConnection: void scanFile(java.lang.String,java.lang.String)>($r4, null);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onScanCompleted(java.lang.String, android.net.Uri)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.Util$MediaScannerNotifier r0;
        java.lang.String r1;
        android.net.Uri r2;
        boolean[][] $r3;
        boolean[] r4;
        android.media.MediaScannerConnection $r5;

        r0 := @this: be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: android.net.Uri;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(17511, 32551, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 509);
        $r3 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45545, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45545, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: int connection$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 511);
        $r5 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: android.media.MediaScannerConnection connection>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1986, null);
        virtualinvoke $r5.<android.media.MediaScannerConnection: void disconnect()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32552, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32553, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 509);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Util$MediaScannerNotifier: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(509);
        <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Util$MediaScannerNotifier", 1277027055199244056L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.Util extends java.lang.Object
{
    static be.ppareit.swiftp_free.MyLog myLog;
    private static final boolean[][] $VRc;
    static int myLog$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.Util r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.Util;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32554, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45546, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45546, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static java.lang.String getAndroidId()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        android.content.ContentResolver r2;
        android.content.Context $r3;
        java.lang.String $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21810, 32555, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45547, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45547, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 1);
        r1 = $r0[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r3 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(273, null);
        r2 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2346, null, null);
        $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r2, "android_id");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r4;
    }

    public static java.lang.String getVersion()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String r2, $r8;
        android.content.pm.PackageManager$NameNotFoundException r3, $r9;
        android.content.Context $r4, $r5;
        android.content.pm.PackageManager $r6;
        android.content.pm.PackageInfo $r7;
        be.ppareit.swiftp_free.MyLog $r10;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(5976, 32556, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45548, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45548, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r4 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5965, null);
        r2 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r5 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1228, null);
        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8200, null, null, null);
        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r2, 0);
        $r8 = $r7.<android.content.pm.PackageInfo: java.lang.String versionName>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;

     label3:
        return $r8;

     label4:
        $r9 := @caughtexception;
        r3 = $r9;
        _sym_tmp_2 = <be.ppareit.swiftp_free.Util: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 513);
        $r10 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "NameNotFoundException looking up SwiFTP version");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    public static byte byteOfInt(int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $b4$sym, $i3$sym, i2$sym, r1$sym, i1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1, i2, $i3;
        boolean[][] $r0;
        boolean[] r1;
        byte $b4;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21811, 32557, 2);
        i0$sym = a3targs$symargs[0];
        i1$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45549, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45549, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 8);
        i2 = i1 * 8;
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i2$sym, i0, i2);
        $i3 = i0 >> i2;
        $b4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i3$sym, 3);
        $b4 = (byte) $i3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21811, $b4$sym);
        return $b4;
    }

    public static java.lang.String ipToString(int, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $b4$sym, $b3$sym, $b2$sym, $b1$sym, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        java.lang.String r0, $r15, $r17, $r18;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuffer r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b1, $b2, $b3, $b4;
        be.ppareit.swiftp_free.MyLog $r12;
        java.lang.StringBuilder $r13, $r14, $r16;

        i0 := @parameter0: int;
        r0 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21812, 32558, 2);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45550, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45550, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 <= 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45551, 0);
        $r4 = new java.lang.StringBuffer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        r3 = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21811, i0$sym, null);
        $b1 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, 0);
        $b1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21811);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15686, null, $b1$sym);
        $r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1038, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21811, i0$sym, null);
        $b2 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, 1);
        $b2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21811);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15686, null, $b2$sym);
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1038, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21811, i0$sym, null);
        $b3 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, 2);
        $b3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21811);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15686, null, $b3$sym);
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1038, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21811, i0$sym, null);
        $b4 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, 3);
        $b4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21811);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15686, null, $b4$sym);
        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b4);
        _sym_tmp_2 = <be.ppareit.swiftp_free.Util: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 513);
        $r12 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ipToString returning: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r17);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r18 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return $r18;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45551, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return null;
    }

    public static java.net.InetAddress intToInet(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $b2$sym, i1$sym, r2$sym, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1;
        boolean[][] $r0;
        boolean[] r1;
        byte[] r2;
        byte $b2;
        java.net.InetAddress $r3;
        java.net.UnknownHostException $r4, r5;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21791, 32559, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45552, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45552, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        r2 = newarray (byte)[4];
        r2$sym = null;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 4);
        if i1 >= 4 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45553, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21811, i0$sym, i1$sym);
        $b2 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, i1);
        $b2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21811);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int,byte)>(r2$sym, i1$sym, $b2$sym, r2, i1, $b2);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, i1);
        r2[i1] = $b2;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45553, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21813, r2$sym);
        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;

     label5:
        return $r3;

     label6:
        $r4 := @caughtexception;
        r5 = $r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 4);
        r1[4] = 1;
        return null;

        catch java.net.UnknownHostException from label4 to label5 with label6;
    }

    public static java.lang.String ipToString(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.MyLog $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21814, 32560, 1);
        i0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45554, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45554, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 6);
        r1 = $r0[6];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45555, 0);
        _sym_tmp_2 = <be.ppareit.swiftp_free.Util: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 513);
        $r2 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r2.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "ipToString won\'t convert value 0");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        return null;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45555, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21812, i0$sym, null);
        $r3 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String ipToString(int,java.lang.String)>(i0, ".");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;
        return $r3;
    }

    public static byte[] jsonToByteArray(org.json.JSONObject) throws org.json.JSONException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $r5$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        org.json.JSONObject r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.UnsupportedEncodingException r3, $r6;
        java.lang.String $r4;
        byte[] $r5;

        r0 := @parameter0: org.json.JSONObject;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21815, 32561, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45556, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45556, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r4 = virtualinvoke r0.<org.json.JSONObject: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(134, null, null);
        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");
        $r5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(134);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21815, $r5$sym);
        return $r5;

     label4:
        $r6 := @caughtexception;
        r3 = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return null;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static org.json.JSONObject byteArrayToJson(byte[]) throws org.json.JSONException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym, r0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        byte[] r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        java.io.UnsupportedEncodingException r4, $r6;
        org.json.JSONObject $r5;

        r0 := @parameter0: byte[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21816, 32562, 1);
        r0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45557, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45557, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];

     label2:
        $r5 = new org.json.JSONObject;
        $r3 = new java.lang.String;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(140, null, r0$sym, null);
        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, "UTF-8");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>($r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;
        r4 = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return null;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static void newFileNotify(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        java.lang.String r0, $r7;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        be.ppareit.swiftp_free.MyLog $r4;
        be.ppareit.swiftp_free.Util$MediaScannerNotifier $r8;
        android.content.Context $r9;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21817, 32563, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45558, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45558, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Util: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 513);
        $r4 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        $r3 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying others about new file: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r7);
        $r8 = new be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r9 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9490, null, null, null);
        specialinvoke $r8.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: void <init>(android.content.Context,java.lang.String)>($r9, r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static void deletedFileNotify(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        java.lang.String r0, $r7;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        be.ppareit.swiftp_free.MyLog $r4;
        be.ppareit.swiftp_free.Util$MediaScannerNotifier $r8;
        android.content.Context $r9;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21818, 32564, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45559, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45559, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        _sym_tmp_2 = <be.ppareit.swiftp_free.Util: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 513);
        $r4 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        $r3 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying others about deleted file: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r7);
        $r8 = new be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r9 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9490, null, null, null);
        specialinvoke $r8.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: void <init>(android.content.Context,java.lang.String)>($r9, r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public static java.lang.String[] concatStrArrays(java.lang.String[], java.lang.String[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i5$sym, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String[] r0, r1, r4;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: java.lang.String[];
        r1 := @parameter1: java.lang.String[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21819, 32565, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r2 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45560, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45560, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 11);
        r3 = $r2[11];
        $i0$sym = null;
        $i0 = lengthof r0;
        $i1$sym = null;
        $i1 = lengthof r1;
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, $i1$sym, $i0, $i1);
        $i2 = $i0 + $i1;
        r4 = newarray (java.lang.String)[$i2];
        $i3$sym = null;
        $i3 = lengthof r0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(132, null, null, null, null, $i3$sym);
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r4, 0, $i3);
        $i4$sym = null;
        $i4 = lengthof r0;
        $i5$sym = null;
        $i5 = lengthof r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(132, null, null, null, $i4$sym, $i5$sym);
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r4, $i4, $i5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return r4;
    }

    public static void sleepIgnoreInterupt(long)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r1$sym, l0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        long l0;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.InterruptedException r2, $r3;

        l0 := @parameter0: long;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21774, 32566, 1);
        l0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 512);
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45561, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45561, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 12);
        r1 = $r0[12];

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(532, l0$sym);
        staticinvoke <java.lang.Thread: void sleep(long)>(l0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;
        r2 = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.String $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32567, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 13);
        r1 = $r0[13];
        $r3 = new be.ppareit.swiftp_free.MyLog;
        $r2 = class "be/ppareit/swiftp_free/Util";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r4);
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 513);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Util: int myLog$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(513);
        <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32568, 0);
        $r0 = newmultiarray (boolean)[14][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.Util: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 512);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.Util: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(512);
        <be.ppareit.swiftp_free.Util: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[2];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[5];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[2];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[2];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[3];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Util", -194078992301101743L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.WidgetProvider extends android.appwidget.AppWidgetProvider
{
    public static java.lang.String ACTION_WIDGET_BUTTON;
    private static final boolean[][] $VRc;
    public static int ACTION_WIDGET_BUTTON$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.WidgetProvider r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32569, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetProvider: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r1 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45562, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45562, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r5$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        android.appwidget.AppWidgetManager r2;
        int[] r3;
        boolean[][] $r4;
        boolean[] r5;
        android.widget.RemoteViews r6, $r9;
        android.content.Intent r7, $r11;
        android.app.PendingIntent r8;
        java.lang.String $r10, $r12;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.appwidget.AppWidgetManager;
        r3 := @parameter2: int[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9976, 32570, 4);
        r3$sym = a3targs$symargs[3];
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetProvider: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r4 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45563, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45563, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 1);
        r5 = $r4[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21820, r3$sym, null, null);
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void registerWidgets(int[],android.content.Context,android.appwidget.AppWidgetManager)>(r3, r1, r2);
        $r9 = new android.widget.RemoteViews;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5965, null);
        $r10 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r9.<android.widget.RemoteViews: void <init>(java.lang.String,int)>($r10, 2130903040);
        r6 = $r9;
        $r11 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "be/ppareit/swiftp_free/WidgetProvider");
        r7 = $r11;
        _sym_tmp_2 = <be.ppareit.swiftp_free.WidgetProvider: int ACTION_WIDGET_BUTTON$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 515);
        $r12 = <be.ppareit.swiftp_free.WidgetProvider: java.lang.String ACTION_WIDGET_BUTTON>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(20118, null, null);
        virtualinvoke r7.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(839, null, null, null, null);
        r8 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r1, 0, r7, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13456, null, null, null);
        virtualinvoke r6.<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>(2131099649, r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13456, null, null, null);
        virtualinvoke r6.<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>(2131099648, r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(12783);
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(12783);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45564, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13446, null, null, null);
        virtualinvoke r6.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099648, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13446, null, null, null);
        virtualinvoke r6.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099649, 8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 1);
        r5[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45564, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13446, null, null, null);
        virtualinvoke r6.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099648, 8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13446, null, null, null);
        virtualinvoke r6.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099649, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 2);
        r5[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9946, null, r3$sym, null);
        virtualinvoke r2.<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>(r3, r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9976, null, null, null, r3$sym);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>(r1, r2, r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 3);
        r5[3] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z1$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        android.content.Intent r2, r5, $r8;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32571, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetProvider: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r3 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45565, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45565, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(729, null);
        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        _sym_tmp_2 = <be.ppareit.swiftp_free.WidgetProvider: int ACTION_WIDGET_BUTTON$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 515);
        $r7 = <be.ppareit.swiftp_free.WidgetProvider: java.lang.String ACTION_WIDGET_BUTTON>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45566, 0);
        $r8 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "be/ppareit/swiftp_free/FTPServerService");
        r5 = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(12783);
        $z1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(12783);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45567, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1887, null, null);
        virtualinvoke r1.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label5;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45567, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8590, null, null);
        virtualinvoke r1.<android.content.Context: boolean stopService(android.content.Intent)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45566, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(728, null, null, null);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>(r1, r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        return;
    }

    public void onDeleted(android.content.Context, int[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        int[] r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: int[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9977, 32572, 3);
        r2$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetProvider: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r3 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45568, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45568, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 3);
        r4 = $r3[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21821, r2$sym);
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void unregisterWidgets(int[])>(r2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9977, null, null, r2$sym);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>(r1, r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void onEnabled(android.content.Context)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9978, 32573, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetProvider: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r2 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45569, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45569, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 4);
        r3 = $r2[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21822);
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void registerAtUiUpdater()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9978, null, null);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onDisabled(android.content.Context)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(9979, 32574, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetProvider: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 514);
        $r2 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45570, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45570, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 5);
        r3 = $r2[5];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21823);
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void unregisterAtUiUpdater()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21824);
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void unregisterAllWidgets()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9979, null, null);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>(r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32575, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 6);
        r1 = $r0[6];
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetProvider: int ACTION_WIDGET_BUTTON$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 515);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.WidgetProvider: int ACTION_WIDGET_BUTTON$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(515);
        <be.ppareit.swiftp_free.WidgetProvider: java.lang.String ACTION_WIDGET_BUTTON> = "actionWidgetButton";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32576, 0);
        $r0 = newmultiarray (boolean)[7][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetProvider: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 514);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.WidgetProvider: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(514);
        <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/WidgetProvider", -677173304999326279L);
        return $r0;
    }
}
final class be.ppareit.swiftp_free.WidgetUiUpdater$1 extends android.os.Handler
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.WidgetUiUpdater$1 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.WidgetUiUpdater$1;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32577, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 516);
        $r1 = <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45571, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45571, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.os.Handler: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.WidgetUiUpdater$1 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.WidgetUiUpdater$1;
        r1 := @parameter0: android.os.Message;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(980, 32578, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 516);
        $r2 = <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45572, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45572, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $i0$sym = null;
        $i0 = r1.<android.os.Message: int what>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45573, 0);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 == 1 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45574, 0);
        goto label6;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45573, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3198, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.WidgetUiUpdater$1: void removeMessages(int)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(14516);
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void access$000()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45574, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3198, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.WidgetUiUpdater$1: void removeMessages(int)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32579, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32580, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 516);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.WidgetUiUpdater$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(516);
        <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/WidgetUiUpdater$1", 19550811991544352L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.WidgetUiUpdater extends java.lang.Object
{
    private static java.util.HashSet widgetIds;
    private static android.content.Context context;
    private static android.appwidget.AppWidgetManager appWidgetManager;
    private static android.os.Handler handler;
    private static final boolean[][] $VRc;
    private static int widgetIds$a3tid;
    private static int context$a3tid;
    private static int appWidgetManager$a3tid;
    private static int handler$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.WidgetUiUpdater r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.WidgetUiUpdater;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32581, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45575, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45575, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    protected static void registerWidgets(int[], android.content.Context, android.appwidget.AppWidgetManager)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, i2$sym, i1$sym, i0$sym, r5$sym, r4$sym, r0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2;
        int[] r0, r5;
        android.content.Context r1;
        android.appwidget.AppWidgetManager r2;
        boolean[][] $r3;
        boolean[] r4;
        java.util.HashSet $r6;
        java.lang.Integer $r7;

        r0 := @parameter0: int[];
        r1 := @parameter1: android.content.Context;
        r2 := @parameter2: android.appwidget.AppWidgetManager;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21820, 32582, 3);
        r0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r3 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45576, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45576, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        _sym_tmp_2 = <be.ppareit.swiftp_free.WidgetUiUpdater: int context$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 518);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.WidgetUiUpdater: int context$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(518);
        <be.ppareit.swiftp_free.WidgetUiUpdater: android.content.Context context> = r1;
        _sym_tmp_3 = <be.ppareit.swiftp_free.WidgetUiUpdater: int appWidgetManager$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 519);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.WidgetUiUpdater: int appWidgetManager$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(519);
        <be.ppareit.swiftp_free.WidgetUiUpdater: android.appwidget.AppWidgetManager appWidgetManager> = r2;
        r5$sym = r0$sym;
        r5 = r0;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>(r5$sym);
        i0 = lengthof r5;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45577, 0);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r5$sym, i1$sym, r5, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, i1);
        i2 = r5[i1];
        _sym_tmp_4 = <be.ppareit.swiftp_free.WidgetUiUpdater: int widgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 520);
        $r6 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        $r7 = new java.lang.Integer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, i2$sym);
        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>($r7);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45577, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        return;
    }

    protected static void unregisterWidgets(int[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, i2$sym, i1$sym, i0$sym, r3$sym, r2$sym, r0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2;
        int[] r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        java.util.HashSet $r4, $r5;
        boolean $z0;
        java.lang.Integer $r6;

        r0 := @parameter0: int[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21821, 32583, 1);
        r0$sym = a3targs$symargs[0];
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r1 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45578, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45578, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        _sym_tmp_2 = <be.ppareit.swiftp_free.WidgetUiUpdater: int widgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 520);
        $r4 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(755, null);
        $z0 = virtualinvoke $r4.<java.util.HashSet: boolean isEmpty()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(755);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45579, 0);
        r3$sym = r0$sym;
        r3 = r0;
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>(r3$sym);
        i0 = lengthof r3;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45580, 0);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>(r3$sym, i1$sym, r3, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r3, i1);
        i2 = r3[i1];
        _sym_tmp_3 = <be.ppareit.swiftp_free.WidgetUiUpdater: int widgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 520);
        $r5 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        $r6 = new java.lang.Integer;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, i2$sym);
        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(97, null, null);
        virtualinvoke $r5.<java.util.HashSet: boolean remove(java.lang.Object)>($r6);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label2;

        goto label5;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45579, 1);
        goto label5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45580, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return;
    }

    protected static void unregisterAllWidgets()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.util.HashSet $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21824, 32584, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45581, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45581, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        _sym_tmp_2 = <be.ppareit.swiftp_free.WidgetUiUpdater: int widgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 520);
        $r2 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(76, null);
        virtualinvoke $r2.<java.util.HashSet: void clear()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    protected static void registerAtUiUpdater()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21822, 32585, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45582, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45582, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    protected static void unregisterAtUiUpdater()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21823, 32586, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45583, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45583, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static void updateWidgetUi()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $i0$sym, $r9$sym, $z1$sym, $z0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context $r2;
        android.widget.RemoteViews r3, $r6;
        java.util.Iterator r4;
        java.lang.Integer r5;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.util.HashSet $r8;
        java.lang.Object $r9;
        android.appwidget.AppWidgetManager $r10;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21825, 32587, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45584, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45584, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 6);
        r1 = $r0[6];
        $r6 = new android.widget.RemoteViews;
        _sym_tmp_2 = <be.ppareit.swiftp_free.WidgetUiUpdater: int context$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 518);
        $r2 = <be.ppareit.swiftp_free.WidgetUiUpdater: android.content.Context context>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5965, null);
        $r7 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r6.<android.widget.RemoteViews: void <init>(java.lang.String,int)>($r7, 2130903040);
        r3 = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(12783);
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(12783);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45585, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13446, null, null, null);
        virtualinvoke r3.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099648, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13446, null, null, null);
        virtualinvoke r3.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099649, 8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45585, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13446, null, null, null);
        virtualinvoke r3.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099648, 8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(13446, null, null, null);
        virtualinvoke r3.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099649, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;

     label4:
        _sym_tmp_3 = <be.ppareit.swiftp_free.WidgetUiUpdater: int widgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 520);
        $r8 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(94, null);
        r4 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(95, null);
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(95);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 4);
        r1[4] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45586, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(96, null);
        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(96);
        r5 = (java.lang.Integer) $r9;
        _sym_tmp_4 = <be.ppareit.swiftp_free.WidgetUiUpdater: int appWidgetManager$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 519);
        $r10 = <be.ppareit.swiftp_free.WidgetUiUpdater: android.appwidget.AppWidgetManager appWidgetManager>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(217, null);
        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(217);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1894, null, $i0$sym, null);
        virtualinvoke $r10.<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>($i0, r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 5);
        r1[5] = 1;
        goto label5;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45586, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 6);
        r1[6] = 1;
        return;
    }

    static void access$000()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(14516, 32588, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 517);
        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45587, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45587, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21825);
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void updateWidgetUi()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        java.util.HashSet $r2;
        be.ppareit.swiftp_free.WidgetUiUpdater$1 $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32589, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 8);
        r1 = $r0[8];
        $r2 = new java.util.HashSet;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r2.<java.util.HashSet: void <init>()>();
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int widgetIds$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 520);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.WidgetUiUpdater: int widgetIds$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(520);
        <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds> = $r2;
        $r3 = new be.ppareit.swiftp_free.WidgetUiUpdater$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.WidgetUiUpdater$1: void <init>()>();
        _sym_tmp_2 = <be.ppareit.swiftp_free.WidgetUiUpdater: int handler$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 521);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.WidgetUiUpdater: int handler$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(521);
        <be.ppareit.swiftp_free.WidgetUiUpdater: android.os.Handler handler> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32590, 0);
        $r0 = newmultiarray (boolean)[9][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 517);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.WidgetUiUpdater: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(517);
        <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[7];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/WidgetUiUpdater", 1805043575595913939L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32591, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45588, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45588, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 523);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(523);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Boolean $r5;
        boolean $z0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r6, $r7;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18467, 32592, 3);
        r2$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 522);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45589, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45589, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        $r5 = (java.lang.Boolean) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2659, null);
        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2659);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45590, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 523);
        $r6 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21827, null);
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$000(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45590, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 523);
        $r7 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21828, null);
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32593, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32594, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 522);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(522);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$1", 6304573652989947447L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32595, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 524);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45591, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45591, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 525);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(525);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z1$sym, $z0$sym, r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5;
        java.lang.CharSequence $r6;
        boolean $z0, $z1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r7, $r9;
        android.widget.Toast $r8;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18467, 32596, 3);
        r2$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 524);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45592, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45592, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        r5 = (java.lang.String) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18356, null);
        $r6 = virtualinvoke r1.<android.preference.Preference: java.lang.CharSequence getSummary()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45593, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45593, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(382, null, null);
        $z1 = virtualinvoke r5.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z0-9]+");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(382);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45594, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 525);
        $r7 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(106, null, null, null);
        $r8 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r7, 2131034145, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke $r8.<android.widget.Toast: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45594, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>(r5);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 525);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21828, null);
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32597, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32598, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 524);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(524);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$2", 3093550946908485374L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32599, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 526);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45595, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45595, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 527);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(527);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5, $r8;
        boolean $z0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r6, $r9;
        android.widget.Toast $r7;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18467, 32600, 3);
        r2$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 526);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45596, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45596, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        r5 = (java.lang.String) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(382, null, null);
        $z0 = virtualinvoke r5.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z0-9]+");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(382);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45597, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 527);
        $r6 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(106, null, null, null);
        $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r6, 2131034146, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke $r7.<android.widget.Toast: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45597, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21829, null);
        $r8 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String access$200(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r8);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 527);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21828, null);
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32601, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32602, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 526);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(526);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$3", -2721668518369241344L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32603, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 528);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45598, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45598, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 529);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(529);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z0$sym, i0$sym, r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5;
        java.lang.Exception r6, $r8;
        java.lang.CharSequence $r7;
        boolean $z0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r9, $r11;
        android.widget.Toast $r10;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18467, 32604, 3);
        r2$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 528);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45599, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45599, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        r5 = (java.lang.String) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18356, null);
        $r7 = virtualinvoke r1.<android.preference.Preference: java.lang.CharSequence getSummary()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45600, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45600, 1);
        goto label3;

     label3:
        i0$sym = null;
        i0 = 0;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2063, null);
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2063);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;
        r6 = $r8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 0);
        if i0 <= 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45601, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, i0$sym, 65535, i0);
        if 65535 >= i0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45602, 0);
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45601, 1);
        goto label9;

     label9:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 529);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(106, null, null, null);
        $r10 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r9, 2131034147, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke $r10.<android.widget.Toast: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 0;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45602, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>(r5);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 529);
        $r11 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21828, null);
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 7);
        r4[7] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 1;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32605, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32606, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 528);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(528);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$4", -3647057260410593710L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32607, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 530);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45603, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45603, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 531);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(531);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z2$sym, $z1$sym, $z0$sym, r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5;
        java.io.File r6, $r8;
        java.lang.CharSequence $r7;
        boolean $z0, $z1, $z2;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18467, 32608, 3);
        r2$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 530);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45604, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45604, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        r5 = (java.lang.String) r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18356, null);
        $r7 = virtualinvoke r1.<android.preference.Preference: java.lang.CharSequence getSummary()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45605, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45605, 1);
        goto label3;

     label3:
        $r8 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r5);
        r6 = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z1 = virtualinvoke r6.<java.io.File: boolean isDirectory()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45606, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(992, null);
        $z2 = virtualinvoke r6.<java.io.File: boolean canRead()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(992);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45607, 0);
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45606, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 0;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45607, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>(r5);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 531);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21828, null);
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32609, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32610, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 530);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(530);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$5", -2967324834895439275L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32611, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 532);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45608, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45608, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 533);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(533);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r5;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18467, 32612, 3);
        r2$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 532);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45609, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45609, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 533);
        $r5 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21828, null);
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18467, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32613, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32614, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 532);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(532);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$6", 4320153509232217768L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7 extends java.lang.Object implements android.preference.Preference$OnPreferenceClickListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32615, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 534);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45610, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45610, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 535);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(535);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceClick(android.preference.Preference)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7 r0;
        android.preference.Preference r1;
        boolean[][] $r2;
        boolean[] r3;
        android.app.AlertDialog$Builder $r4, $r6, $r7, $r10;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r5, $r8;
        java.lang.CharSequence $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7;
        r1 := @parameter0: android.preference.Preference;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18472, 32616, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 534);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45611, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45611, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r4 = new android.app.AlertDialog$Builder;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 535);
        $r5 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke $r4.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1795, null, null);
        $r6 = virtualinvoke $r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034138);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1796, null, null);
        $r7 = virtualinvoke $r6.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131034139);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 535);
        $r8 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1292, null, null);
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.CharSequence getText(int)>(2131034144);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5120, null, null, null);
        $r10 = virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r9, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2267, null);
        virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18472, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32617, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32618, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 534);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(534);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$7", 4320153517837474319L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8 extends java.lang.Object implements android.preference.Preference$OnPreferenceClickListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32619, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 536);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45612, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45612, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 537);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(537);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceClick(android.preference.Preference)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8 r0;
        android.preference.Preference r1;
        boolean[][] $r2;
        boolean[] r3;
        android.app.AlertDialog$Builder $r4, $r6, $r7, $r10;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r5, $r8;
        java.lang.CharSequence $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8;
        r1 := @parameter0: android.preference.Preference;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(18472, 32620, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 536);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45613, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45613, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        $r4 = new android.app.AlertDialog$Builder;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 537);
        $r5 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(274, null, null);
        specialinvoke $r4.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1795, null, null);
        $r6 = virtualinvoke $r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034140);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1796, null, null);
        $r7 = virtualinvoke $r6.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131034141);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 537);
        $r8 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1292, null, null);
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.CharSequence getText(int)>(2131034144);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5120, null, null, null);
        $r10 = virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r9, null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2267, null);
        virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(18472, null);
        return 1;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32621, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32622, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 536);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(536);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$8", 4320153517837474319L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9 extends android.content.BroadcastReceiver
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    final int this$0$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21826, 32623, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 538);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45614, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45614, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 539);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: int this$0$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(539);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z2$sym, $z1$sym, $i2$sym, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i2;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9 r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.preference.CheckBoxPreference r5;
        java.net.InetAddress r6;
        java.lang.String r7, r9, $r10, $r13, $r15, $r18, $r19, $r22, $r29, $r30;
        android.content.res.Resources r8;
        java.lang.StringBuilder $r11, $r12, $r14, $r20, $r21, $r23, $r24, $r25, $r26;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r16, $r27;
        android.preference.Preference $r17;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r28;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(728, 32624, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 538);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45615, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45615, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 1);
        r4 = $r3[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(15478);
        $r10 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String access$300()>();
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FTPServerService action received: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(729, null);
        $r13 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(775, null, null);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r10, $r15);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 539);
        $r16 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        $r17 = virtualinvoke $r16.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("running_state");
        r5 = (android.preference.CheckBoxPreference) $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(729, null);
        $r18 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("org.swiftp.FTPServerService.STARTED");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45616, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1381, null, null);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setChecked(boolean)>(1);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21792);
        r6 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: java.net.InetAddress getWifiIp()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        _sym_tmp_4 = null;
        if r6 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45617, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(15478);
        $r19 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String access$300()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(775, null, null);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r19, "Unable to retreive wifi ip address");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18458, null, null);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setSummary(int)>(2131034142);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45617, 1);
        goto label3;

     label3:
        $r20 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ftp://");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(962, null);
        $r22 = virtualinvoke r6.<java.net.InetAddress: java.lang.String getHostAddress()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(588);
        $i2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: int getPort()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(588);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i2$sym);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r7 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: int this$0$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 539);
        $r27 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1196, null);
        r8 = virtualinvoke $r27.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.res.Resources getResources()>();
        $r28 = newarray (java.lang.Object)[1];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r28, 0);
        $r28[0] = r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1631, null, null, null);
        r9 = virtualinvoke r8.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131034115, $r28);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setSummary(java.lang.CharSequence)>(r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        goto label9;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45616, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(729, null);
        $r29 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("org.swiftp.FTPServerService.STOPPED");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45618, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1381, null, null);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setChecked(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18458, null, null);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setSummary(int)>(2131034114);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        goto label9;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45618, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(729, null);
        $r30 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("org.swiftp.FTPServerService.FAILEDTOSTART");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45619, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1381, null, null);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setChecked(boolean)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18458, null, null);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setSummary(int)>(2131034116);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 7);
        r4[7] = 1;
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45619, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 8);
        r4[8] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32625, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32626, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 538);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(538);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[9];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$9", -2172901231569244558L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.gui.ServerPreferenceActivity extends android.preference.PreferenceActivity implements android.content.SharedPreferences$OnSharedPreferenceChangeListener
{
    private static java.lang.String TAG;
    android.preference.EditTextPreference mPassWordPref;
    android.content.BroadcastReceiver ftpServerReceiver;
    private static final boolean[][] $VRc;
    private static int TAG$a3tid;
    int mPassWordPref$a3tid;
    int ftpServerReceiver$a3tid;
    private static final int $VRc$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9 $r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32627, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45620, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45620, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<android.preference.PreferenceActivity: void <init>()>();
        $r3 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int ftpServerReceiver$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 541);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int ftpServerReceiver$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(541);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.BroadcastReceiver ftpServerReceiver> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        android.content.res.Resources r5;
        android.preference.CheckBoxPreference r6, r11;
        android.preference.EditTextPreference r7, r9, r10, $r22, $r24, $r26;
        java.lang.String r8, $r18, $r19, r23, $r25, $r29, $r30, $r33, $r34;
        android.preference.Preference r12, r13, $r15, $r17, $r21, $r28, $r32, $r36;
        android.content.Context $r14;
        boolean $z0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1 $r16;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2 $r20;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3 $r27;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4 $r31;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5 $r35;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6 $r37;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7 $r38;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8 $r39;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        r1 := @parameter0: android.os.Bundle;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1621, 32628, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45621, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45621, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1621, null, null);
        specialinvoke r0.<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18567, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void addPreferencesFromResource(int)>(2130968576);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        $r14 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.Context getApplicationContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5707, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setContext(android.content.Context)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4842, null);
        r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1196, null);
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.res.Resources getResources()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        $r15 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("running_state");
        r6 = (android.preference.CheckBoxPreference) $r15;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(12783);
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(12783);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1381, null, $z0$sym);
        virtualinvoke r6.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);
        $r16 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r16.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18468, null, null);
        virtualinvoke r6.<android.preference.CheckBoxPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        $r17 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("username");
        r7 = (android.preference.EditTextPreference) $r17;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r18 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034119);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        $r19 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("username", $r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke r7.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r19);
        $r20 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r20.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18468, null, null);
        virtualinvoke r7.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        $r21 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("password");
        $r22 = (android.preference.EditTextPreference) $r21;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int mPassWordPref$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 542);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int mPassWordPref$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(542);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.EditTextPreference mPassWordPref> = $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        r8 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034121);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r23 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", r8);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int mPassWordPref$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 542);
        $r24 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.EditTextPreference mPassWordPref>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21830, null);
        $r25 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String transformPassword(java.lang.String)>(r23);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke $r24.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r25);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int mPassWordPref$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 542);
        $r26 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.EditTextPreference mPassWordPref>;
        $r27 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r27.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18468, null, null);
        virtualinvoke $r26.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r27);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        $r28 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("portNum");
        r9 = (android.preference.EditTextPreference) $r28;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r29 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034126);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        $r30 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("portNum", $r29);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke r9.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r30);
        $r31 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r31.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18468, null, null);
        virtualinvoke r9.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r31);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        $r32 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("chrootDir");
        r10 = (android.preference.EditTextPreference) $r32;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r33 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034128);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        $r34 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("chrootDir", $r33);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke r10.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r34);
        $r35 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r35.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18468, null, null);
        virtualinvoke r10.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r35);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        $r36 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("stayAwake");
        r11 = (android.preference.CheckBoxPreference) $r36;
        $r37 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r37.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18468, null, null);
        virtualinvoke r11.<android.preference.CheckBoxPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r37);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        r12 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("help");
        $r38 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r38.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18470, null, null);
        virtualinvoke r12.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r38);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18391, null, null);
        r13 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("about");
        $r39 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21826, null, null);
        specialinvoke $r39.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18470, null, null);
        virtualinvoke r13.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r39);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, r6, r8, $r10;
        boolean[][] $r3;
        boolean[] r4;
        android.content.res.Resources r5;
        boolean $z0;
        android.content.Context $r7;
        android.preference.EditTextPreference $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        r1 := @parameter0: android.content.SharedPreferences;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(8351, 32629, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45622, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45622, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("show_password");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45623, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r7 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1196, null);
        r5 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        r6 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034121);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r8 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int mPassWordPref$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 542);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.EditTextPreference mPassWordPref>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21830, null);
        $r10 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String transformPassword(java.lang.String)>(r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(18457, null, null);
        virtualinvoke $r9.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45623, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        return;
    }

    private void startServer()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3;
        android.content.Intent r4, $r5;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21832, 32630, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45624, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45624, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        r3 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.Context getApplicationContext()>();
        $r5 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r3, class "be/ppareit/swiftp_free/FTPServerService");
        r4 = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(12783);
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(12783);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45625, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21831, null);
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void warnIfNoExternalStorage()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1887, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.ComponentName startService(android.content.Intent)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45625, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    private void stopServer()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3;
        android.content.Intent r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21833, 32631, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45626, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45626, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8525, null);
        r3 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.Context getApplicationContext()>();
        $r5 = new android.content.Intent;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9129, null, null, null);
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r3, class "be/ppareit/swiftp_free/FTPServerService");
        r4 = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8590, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean stopService(android.content.Intent)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    protected void onResume()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.IntentFilter r3, $r8;
        java.lang.String $r4, $r7;
        android.preference.PreferenceScreen $r5;
        android.content.SharedPreferences $r6;
        android.content.BroadcastReceiver $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1787, 32632, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45627, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45627, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 543);
        $r4 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(775, null, null);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r4, "onResume");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1787, null);
        specialinvoke r0.<android.preference.PreferenceActivity: void onResume()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18389, null);
        $r5 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18387, null);
        $r6 = virtualinvoke $r5.<android.preference.PreferenceScreen: android.content.SharedPreferences getSharedPreferences()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8721, null, null);
        interfaceinvoke $r6.<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);
        _sym_tmp_3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 543);
        $r7 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(775, null, null);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r7, "Registering the FTP server actions");
        $r8 = new android.content.IntentFilter;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<android.content.IntentFilter: void <init>()>();
        r3 = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1831, null, null);
        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("org.swiftp.FTPServerService.STARTED");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1831, null, null);
        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("org.swiftp.FTPServerService.STOPPED");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1831, null, null);
        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("org.swiftp.FTPServerService.FAILEDTOSTART");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int ftpServerReceiver$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 541);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.BroadcastReceiver ftpServerReceiver>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(824, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    protected void onPause()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;
        android.content.BroadcastReceiver $r5;
        android.preference.PreferenceScreen $r6;
        android.content.SharedPreferences $r7;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1669, 32633, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45628, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45628, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        _sym_tmp_2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 543);
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(775, null, null);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r3, "onPause");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1669, null);
        specialinvoke r0.<android.preference.PreferenceActivity: void onPause()>();
        _sym_tmp_3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 543);
        $r4 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(775, null, null);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r4, "Unregistering the FTPServer actions");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int ftpServerReceiver$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 541);
        $r5 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.BroadcastReceiver ftpServerReceiver>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(826, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void unregisterReceiver(android.content.BroadcastReceiver)>($r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18389, null);
        $r6 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18387, null);
        $r7 = virtualinvoke $r6.<android.preference.PreferenceScreen: android.content.SharedPreferences getSharedPreferences()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8722, null, null);
        interfaceinvoke $r7.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void warnIfNoExternalStorage()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r5, $r9;
        android.widget.Toast r4;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21831, 32634, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45629, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45629, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(3000);
        r3 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("mounted");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45630, 0);
        _sym_tmp_2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 543);
        $r5 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning due to storage state ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(775, null, null);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r5, $r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(106, null, null, null);
        r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r0, 2131034157, 1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(7123, null, null, null, null);
        virtualinvoke r4.<android.widget.Toast: void setGravity(int,int,int)>(17, 0, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(107, null);
        virtualinvoke r4.<android.widget.Toast: void show()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45630, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    private static java.lang.String transformPassword(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $i2$sym, $i1$sym, z3$sym, $z2$sym, $z1$sym, i0$sym, z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, $i1, $i2;
        java.lang.String r0, $r8, $r11;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.res.Resources r4;
        boolean z0, $z1, $z2, z3;
        java.lang.StringBuilder r5, $r9;
        android.content.Context $r6, $r7;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21830, 32635, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45631, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45631, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r6 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4842, null);
        r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r7 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1196, null);
        r4 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r8 = virtualinvoke r4.<android.content.res.Resources: java.lang.String getString(int)>(2131034123);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("true");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45632, 0);
        $z2$sym = null;
        $z2 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45632, 1);
        goto label3;

     label3:
        $z2$sym = null;
        $z2 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        z0$sym = $z2$sym;
        z0 = $z2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2688, null, null, z0$sym);
        z3 = interfaceinvoke r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("show_password", z0);
        z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2688);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z3$sym, null, z3, 1);
        if z3 != 1 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45633, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return r0;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45633, 1);
        goto label6;

     label6:
        $r9 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(28, null, $i1$sym);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i1);
        r5 = $r9;
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i2$sym, i0, $i2);
        if i0 >= $i2 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45634, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, null);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label7;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45634, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        return $r11;
    }

    static void access$000(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21827, 32636, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45635, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45635, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21832, null);
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void startServer()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    static void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21828, 32637, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45636, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45636, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21833, null);
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void stopServer()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    static java.lang.String access$200(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.lang.String r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21829, 32638, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45637, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45637, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 11);
        r2 = $r1[11];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21830, null);
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String transformPassword(java.lang.String)>(r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    static java.lang.String access$300()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(15478, 32639, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 540);
        $r0 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45638, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45638, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 12);
        r1 = $r0[12];
        _sym_tmp_2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 543);
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r2;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32640, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 13);
        r1 = $r0[13];
        $r2 = class "be/ppareit/swiftp_free/gui/ServerPreferenceActivity";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(662, null);
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int TAG$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 543);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int TAG$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(543);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32641, 0);
        $r0 = newmultiarray (boolean)[14][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 540);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(540);
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[9];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity", 5490363918352845512L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.Account extends java.lang.Object
{
    protected java.lang.String username;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int username$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.Account r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.Account;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32642, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.Account: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 544);
        $r1 = <be.ppareit.swiftp_free.server.Account: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45639, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.Account: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45639, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.Account: int username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 545);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.Account: int username$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(545);
        r0.<be.ppareit.swiftp_free.server.Account: java.lang.String username> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public java.lang.String getUsername()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.Account r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: be.ppareit.swiftp_free.server.Account;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11550, 32643, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.Account: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 544);
        $r1 = <be.ppareit.swiftp_free.server.Account: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45640, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.Account: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45640, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.Account: int username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 545);
        $r3 = r0.<be.ppareit.swiftp_free.server.Account: java.lang.String username>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setUsername(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.Account r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.Account;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11564, 32644, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.Account: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 544);
        $r2 = <be.ppareit.swiftp_free.server.Account: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45641, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.Account: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45641, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.Account: int username$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 545);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.Account: int username$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(545);
        r0.<be.ppareit.swiftp_free.server.Account: java.lang.String username> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32645, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.Account: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32646, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.Account: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 544);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.Account: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(544);
        <be.ppareit.swiftp_free.server.Account: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/Account", 7932310856815346666L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdAPPE extends be.ppareit.swiftp_free.server.CmdAbstractStore implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdAPPE r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAPPE;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32647, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAPPE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 546);
        $r3 = <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45642, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45642, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdAPPE";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdAPPE: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 547);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdAPPE: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(547);
        r0.<be.ppareit.swiftp_free.server.CmdAPPE: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdAPPE r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAPPE;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32648, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAPPE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 546);
        $r1 = <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45643, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45643, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdAPPE: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 547);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdAPPE: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        $r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdAPPE: java.lang.String getParameter(java.lang.String)>($r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21836, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdAPPE: void doStorOrAppe(java.lang.String,boolean)>($r4, 1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32649, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32650, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAPPE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 546);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdAPPE: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(546);
        <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdAPPE", 4859542773776183139L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.server.CmdAbstractListing extends be.ppareit.swiftp_free.server.FtpCmd
{
    protected static be.ppareit.swiftp_free.MyLog staticLog;
    private static final boolean[][] $VRc;
    protected static int staticLog$a3tid;
    private static final int $VRc$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdAbstractListing r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractListing;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32651, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 548);
        $r3 = <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45644, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45644, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdAbstractListing";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    abstract java.lang.String makeLsString(java.io.File);

    public java.lang.String listDirectory(java.lang.StringBuilder, java.io.File)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i2$sym, $z0$sym, i1$sym, i0$sym, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2;
        be.ppareit.swiftp_free.server.CmdAbstractListing r0;
        java.lang.StringBuilder r1, $r10, $r11, $r13, $r16, $r17, $r18;
        java.io.File r2, r7;
        boolean[][] $r3;
        boolean[] r4;
        java.io.File[] r5, r6;
        java.lang.String r8, $r12, $r14, $r19;
        boolean $z0;
        be.ppareit.swiftp_free.MyLog $r9, $r15;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractListing;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 := @parameter1: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21838, 32652, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 548);
        $r3 = <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45645, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45645, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 2);
        r4 = $r3[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45646, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;
        return "500 Internal error, listDirectory on non-directory\r\n";

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45646, 1);
        goto label3;

     label3:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listing directory: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r12 = virtualinvoke r2.<java.io.File: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5807, null);
        r5 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;
        _sym_tmp_4 = null;
        if r5 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45647, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        return "500 Couldn\'t list directory. Check config and mount status.\r\n";

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45647, 1);
        goto label5;

     label5:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 549);
        $r15 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        $r16 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dir len ");
        $i2$sym = null;
        $i2 = lengthof r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i2$sym);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r19);
        r6 = r5;
        i0$sym = null;
        i0 = lengthof r6;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 4);
        r4[4] = 1;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 5);
        r4[5] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45648, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r6, i1);
        r7 = r6[i1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21837, null, null);
        r8 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: java.lang.String makeLsString(java.io.File)>(r7);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 6);
        r4[6] = 1;
        _sym_tmp_4 = null;
        if r8 == null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45649, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 7);
        r4[7] = 1;
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45649, 1);
        goto label8;

     label8:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 8);
        r4[8] = 1;
        goto label6;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45648, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 9);
        r4[9] = 1;
        return null;
    }

    protected java.lang.String sendListing(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, $z2$sym, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdAbstractListing r0;
        java.lang.String r1, r4, $r9, $r15;
        boolean[][] $r2;
        boolean[] r3;
        be.ppareit.swiftp_free.server.SessionThread $r5, $r7, $r8, $r10, $r17, $r19, $r20, $r22;
        boolean $z0, $z1, $z2;
        be.ppareit.swiftp_free.MyLog $r6, $r16, $r18, $r21;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractListing;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21842, 32653, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 548);
        $r2 = <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRc>;
        _sym_tmp_14 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45650, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45650, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 550);
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21839, null);
        $z0 = virtualinvoke $r5.<be.ppareit.swiftp_free.server.SessionThread: boolean startUsingDataSocket()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21839);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45651, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 549);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "LIST/NLST done making socket");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45651, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21789, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return "425 Error opening data socket\r\n";

     label4:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21840, null);
        $z1 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: boolean isBinaryMode()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21840);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45652, 0);
        $r9 = "BINARY";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45652, 1);
        goto label6;

     label6:
        $r9 = "ASCII";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;

     label7:
        r4 = $r9;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("150 Opening ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode data connection for file list\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>($r15);
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Sent code 150, sending listing string now");
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 550);
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21841, null, null);
        $z2 = virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(java.lang.String)>(r1);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21841);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45653, 0);
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 549);
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r18.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "sendViaDataSocket failure");
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 550);
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21789, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        return "426 Data socket or network error\r\n";

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45653, 1);
        goto label9;

     label9:
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 550);
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21789, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 549);
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r21.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Listing sendViaDataSocket success");
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 550);
        $r22 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r22.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("226 Data transmission OK\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        return null;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.String $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32654, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 4);
        r1 = $r0[4];
        $r3 = new be.ppareit.swiftp_free.MyLog;
        $r2 = class "be/ppareit/swiftp_free/server/CmdLIST";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r4);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 551);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdAbstractListing: int staticLog$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(551);
        <be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog staticLog> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32655, 0);
        $r0 = newmultiarray (boolean)[5][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 548);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdAbstractListing: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(548);
        <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r2;
        $r3 = newarray (boolean)[9];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdAbstractListing", 4275241123269594348L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.server.CmdAbstractStore extends be.ppareit.swiftp_free.server.FtpCmd
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final int message$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdAbstractStore r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractStore;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32656, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAbstractStore: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 552);
        $r3 = <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45654, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45654, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdAbstractStore";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void doStorOrAppe(java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_22, $i9$sym, $i8$sym, $b7$sym, $z7$sym, i6$sym, $i5$sym, $z6$sym, r32$sym, $i4$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, i3$sym, i2$sym, i1$sym, i0$sym, r3$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, i3, $i4, $i5, i6, $i8, $i9;
        be.ppareit.swiftp_free.server.CmdAbstractStore r0;
        java.lang.String r1, r6, $r15, $r18, $r25, $r45, $r49, $r51, $r55, $r61, $r63, $r66;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r13, $r14, $r21, $r22, $r23, $r24, $r26, $r27, $r42, $r43, $r44, $r47, $r48, $r50, $r59, $r60, $r62;
        java.io.File r5, $r17;
        java.io.FileOutputStream r7, $r19;
        java.io.FileNotFoundException r8, $r20;
        java.io.IOException r9, $r28, $r39, r40, $r56, r57;
        java.lang.StackTraceElement[] r10, r53;
        java.lang.StackTraceElement r11;
        be.ppareit.swiftp_free.MyLog $r12, $r30, $r34, $r35, $r37, $r41, $r46, $r52, $r54, $r58, $r68;
        be.ppareit.swiftp_free.server.SessionThread $r16, $r29, $r31, $r33, $r36, $r38, $r64, $r65, $r67;
        byte[] r32;
        byte $b7;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractStore;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21836, 32657, 3);
        z0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAbstractStore: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 552);
        $r2 = <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRc>;
        _sym_tmp_22 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45655, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45655, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STOR/APPE executing with append=");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1993, null, z0$sym);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r15);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r17 = virtualinvoke $r16.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21844, null, null);
        r5 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractStore: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r17, r1);
        r6 = null;
        r7 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z1 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: boolean violatesChroot(java.io.File)>(r5);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45656, 0);
        r6 = "550 Invalid name or chroot violation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label45;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45656, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z2 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45657, 0);
        r6 = "451 Can\'t overwrite a directory\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label45;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45657, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(394, null);
        $z3 = virtualinvoke r5.<java.io.File: boolean exists()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(394);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45658, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45659, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2758, null);
        $z4 = virtualinvoke r5.<java.io.File: boolean delete()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2758);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45660, 0);
        r6 = "451 Couldn\'t truncate file\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;

     label6:
        goto label45;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45660, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1843, null);
        $r18 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21818, null);
        staticinvoke <be.ppareit.swiftp_free.Util: void deletedFileNotify(java.lang.String)>($r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        goto label11;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45658, 1);
        goto label11;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45659, 1);
        goto label11;

     label11:
        $r19 = new java.io.FileOutputStream;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3078, null, null, z0$sym);
        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r5, z0);
        r7 = $r19;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;

     label12:
        goto label18;

     label13:
        $r20 := @caughtexception;
        r8 = $r20;

     label14:
        $r21 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("451 Couldn\'t open file \"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" aka \"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(14929, null);
        $r25 = virtualinvoke r5.<java.io.File: java.lang.String getCanonicalPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" for writing\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r6 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;

     label15:
        goto label17;

     label16:
        $r28 := @caughtexception;
        r9 = $r28;
        r6 = "451 Couldn\'t open file, nested exception\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;

     label17:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 12);
        r3[12] = 1;
        goto label45;

     label18:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r29 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21839, null);
        $z5 = virtualinvoke $r29.<be.ppareit.swiftp_free.server.SessionThread: boolean startUsingDataSocket()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21839);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 13);
        r3[13] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 != 0 goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45661, 0);
        r6 = "425 Couldn\'t open data socket\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 14);
        r3[14] = 1;
        goto label45;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45661, 1);
        goto label20;

     label20:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 549);
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r30.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Data socket ready");
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r31.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("150 Data socket ready\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21753);
        $i4 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getDataChunkSize()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21753);
        r32 = newarray (byte)[$i4];
        r32$sym = null;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r33 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21840, null);
        $z6 = virtualinvoke $r33.<be.ppareit.swiftp_free.server.SessionThread: boolean isBinaryMode()>();
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21840);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 15);
        r3[15] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45662, 0);
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r34 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r34.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Mode is binary");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 16);
        r3[16] = 1;
        goto label23;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45662, 1);
        goto label22;

     label22:
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 549);
        $r35 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r35.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Mode is ascii");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 17);
        r3[17] = 1;

     label23:
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 550);
        $r36 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21846, null, r32$sym);
        $i5 = virtualinvoke $r36.<be.ppareit.swiftp_free.server.SessionThread: int receiveFromDataSocket(byte[])>(r32);
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21846);
        i6$sym = $i5$sym;
        i6 = $i5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 18);
        r3[18] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, -2);
        if $i5 == -2 goto label28;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45663, 0);
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, -1);
        if $i5 == -1 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45664, 0);
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 0);
        if $i5 == 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45665, 0);
        goto label30;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45664, 1);
        goto label25;

     label25:
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 549);
        $r37 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r37.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Returned from final read");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 19);
        r3[19] = 1;
        goto label45;

        goto label27;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45665, 1);
        goto label27;

     label27:
        r6 = "426 Couldn\'t receive data\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 20);
        r3[20] = 1;
        goto label45;

        goto label29;

     label28:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45663, 1);
        goto label29;

     label29:
        r6 = "425 Could not connect data socket\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 21);
        r3[21] = 1;
        goto label45;

     label30:
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 550);
        $r38 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21840, null);
        $z7 = virtualinvoke $r38.<be.ppareit.swiftp_free.server.SessionThread: boolean isBinaryMode()>();
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21840);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 22);
        r3[22] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 == 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45666, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(293, null, r32$sym, null, i6$sym);
        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[],int,int)>(r32, 0, i6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 23);
        r3[23] = 1;
        goto label39;

        goto label32;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45666, 1);
        goto label32;

     label32:
        i0$sym = null;
        i0 = 0;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 24);
        r3[24] = 1;

     label33:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 25);
        r3[25] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i6$sym, i1, i6);
        if i1 >= i6 goto label36;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45667, 0);
        $b7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int)>(r32$sym, i1$sym, r32, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r32, i1);
        $b7 = r32[i1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 26);
        r3[26] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b7$sym, null, $b7, 13);
        if $b7 != 13 goto label34;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45668, 0);
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        $i8 = i1 - i0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(293, null, r32$sym, i0$sym, $i8$sym);
        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[],int,int)>(r32, i0, $i8);
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i0 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 27);
        r3[27] = 1;
        goto label35;

     label34:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45668, 1);
        goto label35;

     label35:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 28, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 28);
        r3[28] = 1;
        goto label33;

        goto label37;

     label36:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45667, 1);
        goto label37;

     label37:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 29, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 29);
        r3[29] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, i6$sym, i0, i6);
        if i0 >= i6 goto label38;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45669, 0);
        $i9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        $i9 = i1 - i0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(293, null, r32$sym, i0$sym, $i9$sym);
        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[],int,int)>(r32, i0, $i9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 30, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 30);
        r3[30] = 1;
        goto label39;

     label38:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45669, 1);
        goto label39;

     label39:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2039, null);
        virtualinvoke r7.<java.io.FileOutputStream: void flush()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 31, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 31);
        r3[31] = 1;

     label40:
        goto label23;

     label41:
        $r39 := @caughtexception;
        r40 = $r39;
        r6 = "451 File IO problem. Device might be full.\r\n";
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 549);
        $r41 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r42 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while storing: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r41.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r45);
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 549);
        $r46 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r47 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(104, null);
        $r49 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r46.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r51);
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 549);
        $r52 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r52.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Stack trace: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(7676, null);
        r53 = virtualinvoke r40.<java.io.IOException: java.lang.StackTraceElement[] getStackTrace()>();
        r10 = r53;
        i2$sym = null;
        i2 = lengthof r10;
        i3$sym = null;
        i3 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 32, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 32);
        r3[32] = 1;

     label42:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 33, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 33);
        r3[33] = 1;
        _sym_tmp_22 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, i2$sym, i3, i2);
        if i3 >= i2 goto label43;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45670, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r10, i3);
        r11 = r10[i3];
        _sym_tmp_16 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 549);
        $r54 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r55 = virtualinvoke r11.<java.lang.StackTraceElement: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r54.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r55);
        i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i3$sym, null, i3, 1);
        i3 = i3 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 34, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 34);
        r3[34] = 1;
        goto label42;

        goto label44;

     label43:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45670, 1);
        goto label44;

     label44:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 35, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 35);
        r3[35] = 1;
        goto label45;

     label45:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 36, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 36);
        r3[36] = 1;
        _sym_tmp_22 = null;
        if r7 == null goto label46;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45671, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke r7.<java.io.FileOutputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 37, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 37);
        r3[37] = 1;
        goto label47;

     label46:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45671, 1);
        goto label47;

     label47:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 38, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 38);
        r3[38] = 1;
        goto label49;

     label48:
        $r56 := @caughtexception;
        r57 = $r56;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 39, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 39);
        r3[39] = 1;

     label49:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 40, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 40);
        r3[40] = 1;
        _sym_tmp_22 = null;
        if r6 == null goto label50;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45672, 0);
        _sym_tmp_17 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 549);
        $r58 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r59 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STOR error: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r61 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r58.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r63);
        _sym_tmp_18 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 550);
        $r64 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r64.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 41, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 41);
        r3[41] = 1;
        goto label52;

        goto label51;

     label50:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_22, 45672, 1);
        goto label51;

     label51:
        _sym_tmp_19 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 550);
        $r65 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r65.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("226 Transmission complete\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1843, null);
        $r66 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21817, null);
        staticinvoke <be.ppareit.swiftp_free.Util: void newFileNotify(java.lang.String)>($r66);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 42, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 42);
        r3[42] = 1;

     label52:
        _sym_tmp_20 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 550);
        $r67 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21789, null);
        virtualinvoke $r67.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        _sym_tmp_21 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 549);
        $r68 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r68.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "STOR finished");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 43, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 43);
        r3[43] = 1;
        return;

        catch java.io.FileNotFoundException from label5 to label6 with label13;
        catch java.io.FileNotFoundException from label8 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label30 to label40 with label41;
        catch java.io.IOException from label45 to label47 with label48;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32658, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32659, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdAbstractStore: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 552);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdAbstractStore: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(552);
        <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[44];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdAbstractStore", -6231712829433261676L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdCDUP extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdCDUP r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdCDUP;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32660, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdCDUP: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 553);
        $r3 = <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45673, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45673, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdCDUP";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z2$sym, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdCDUP r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r17;
        java.io.File r4, r5, r9;
        java.io.IOException r6, $r11;
        be.ppareit.swiftp_free.MyLog $r7, $r13, $r19;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r10, $r12, $r18;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r14, $r15, $r16;

        r0 := @this: be.ppareit.swiftp_free.server.CmdCDUP;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32661, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdCDUP: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 553);
        $r1 = <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45674, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45674, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "CDUP executing");
        r3 = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        r4 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3071, null);
        r5 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = null;
        if r5 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45675, 0);
        r3 = "550 Current dir cannot find parent\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label14;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45675, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdCDUP: boolean violatesChroot(java.io.File)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45676, 0);
        r3 = "550 Invalid name or chroot violation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label14;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45676, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21847, null);
        r9 = virtualinvoke r5.<java.io.File: java.io.File getCanonicalFile()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z1 = virtualinvoke r9.<java.io.File: boolean isDirectory()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45677, 0);
        r3 = "550 Can\'t CWD to invalid directory\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label6:
        goto label14;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45677, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(992, null);
        $z2 = virtualinvoke r9.<java.io.File: boolean canRead()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(992);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45678, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21848, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void setWorkingDir(java.io.File)>(r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label12;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45678, 1);
        goto label10;

     label10:
        r3 = "550 That path is inaccessible\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;

     label11:
        goto label14;

     label12:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label14;

     label13:
        $r11 := @caughtexception;
        r6 = $r11;
        r3 = "550 Invalid path\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label14;

     label14:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_9 = null;
        if r3 == null goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45679, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.MyLog myLog>;
        $r14 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDUP error: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r17);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label17;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45679, 1);
        goto label16;

     label16:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r18.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("200 CDUP successful\r\n");
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "CDUP success");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;

     label17:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        return;

        catch java.io.IOException from label5 to label6 with label13;
        catch java.io.IOException from label8 to label11 with label13;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32662, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32663, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdCDUP: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 553);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdCDUP: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(553);
        <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[15];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdCDUP", 8517991199116176101L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdCWD extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdCWD r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdCWD;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32664, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdCWD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 554);
        $r3 = <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45680, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45680, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdCWD";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdCWD: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 555);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdCWD: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(555);
        r0.<be.ppareit.swiftp_free.server.CmdCWD: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, $z2$sym, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdCWD r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r7, r10;
        null_type n0;
        java.io.File r4, $r9, r13;
        java.io.IOException r5, $r18;
        be.ppareit.swiftp_free.MyLog $r6, $r12, $r20;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r11, $r14, $r15, $r16, $r17, $r19;
        boolean $z0, $z1, $z2;

        r0 := @this: be.ppareit.swiftp_free.server.CmdCWD;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32665, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdCWD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 554);
        $r1 = <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45681, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45681, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "CWD executing");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdCWD: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 555);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdCWD: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: java.lang.String getParameter(java.lang.String)>($r7);
        n0 = null;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21844, null, null);
        r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r9, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdCWD: boolean violatesChroot(java.io.File)>(r4);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45682, 0);
        r10 = "550 Invalid name or chroot violation\r\n";
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r10);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label10;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45682, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21847, null);
        r13 = virtualinvoke r4.<java.io.File: java.io.File getCanonicalFile()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z1 = virtualinvoke r13.<java.io.File: boolean isDirectory()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45683, 0);
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("550 Can\'t CWD to invalid directory\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label8;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45683, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(992, null);
        $z2 = virtualinvoke r13.<java.io.File: boolean canRead()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(992);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45684, 0);
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 550);
        $r15 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21848, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.server.SessionThread: void setWorkingDir(java.io.File)>(r13);
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 550);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 CWD successful\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45684, 1);
        goto label7;

     label7:
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 550);
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("550 That path is inaccessible\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label10;

     label9:
        $r18 := @caughtexception;
        r5 = $r18;
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 550);
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("550 Invalid path\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label10;

     label10:
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 549);
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "CWD complete");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        return;

        catch java.io.IOException from label3 to label8 with label9;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32666, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32667, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdCWD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 554);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdCWD: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(554);
        <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdCWD", 4463277163715737937L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdDELE extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdDELE r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdDELE;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32668, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdDELE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 556);
        $r3 = <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45685, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45685, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdDELE";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdDELE: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 557);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdDELE: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(557);
        r0.<be.ppareit.swiftp_free.server.CmdDELE: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z2$sym, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdDELE r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r5, $r7, $r14, $r16, $r18;
        java.io.File r4, $r9;
        be.ppareit.swiftp_free.MyLog $r6, $r11, $r19;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r10, $r17;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r13, $r15;

        r0 := @this: be.ppareit.swiftp_free.server.CmdDELE;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32669, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdDELE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 556);
        $r1 = <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45686, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45686, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "DELE executing");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdDELE: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 557);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdDELE: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: java.lang.String getParameter(java.lang.String)>($r7);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21844, null, null);
        r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r9, r3);
        r5 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdDELE: boolean violatesChroot(java.io.File)>(r4);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45687, 0);
        r5 = "550 Invalid name or chroot violation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label7;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45687, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z1 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45688, 0);
        r5 = "550 Can\'t DELE a directory\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label7;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45688, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2758, null);
        $z2 = virtualinvoke r4.<java.io.File: boolean delete()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2758);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45689, 0);
        r5 = "450 Error deleting file\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45689, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_9 = null;
        if r5 == null goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45690, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r5);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DELE failed: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r14 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r16);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45690, 1);
        goto label9;

     label9:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 File successfully deleted\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1843, null);
        $r18 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21818, null);
        staticinvoke <be.ppareit.swiftp_free.Util: void deletedFileNotify(java.lang.String)>($r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;

     label10:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "DELE finished");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32670, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32671, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdDELE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 556);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdDELE: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(556);
        <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdDELE", -7725524324035103077L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdFEAT extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final int message$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdFEAT r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdFEAT;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32672, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdFEAT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 558);
        $r3 = <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45691, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45691, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdFEAT";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdFEAT r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.SessionThread $r3, $r4, $r5;
        be.ppareit.swiftp_free.MyLog $r6;

        r0 := @this: be.ppareit.swiftp_free.server.CmdFEAT;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32673, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdFEAT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 558);
        $r1 = <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45692, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45692, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 550);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdFEAT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("211-Features supported\r\n");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdFEAT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(" UTF8\r\n");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdFEAT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("211 End\r\n");
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 549);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdFEAT: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Gave FEAT response");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32674, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32675, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdFEAT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 558);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdFEAT: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(558);
        <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdFEAT", 4474264735406184959L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdLIST extends be.ppareit.swiftp_free.server.CmdAbstractListing implements java.lang.Runnable
{
    public static final long MS_IN_SIX_MONTHS;
    private final java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final acteve.symbolic.integer.Expression MS_IN_SIX_MONTHS$sym;
    public static final int MS_IN_SIX_MONTHS$a3tid;
    private final int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdLIST r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdLIST;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32676, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdLIST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 559);
        $r3 = <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45693, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45693, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, r2);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdLIST: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 560);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdLIST: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(560);
        r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdLIST r0;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0, n1;
        java.lang.String r3, r5, $r6, $r11, $r16, r19, $r29;
        java.lang.StringBuilder r4, $r8, $r9, $r10, $r13, $r14, $r15, $r23, $r26, $r27, $r28;
        be.ppareit.swiftp_free.MyLog $r7, $r12, $r25, $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        be.ppareit.swiftp_free.server.SessionThread $r17, $r21, $r24;
        java.io.File r18, $r20, $r22;

        r0 := @this: be.ppareit.swiftp_free.server.CmdLIST;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32677, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdLIST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 559);
        $r1 = <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45694, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45694, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        n0 = null;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdLIST: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 560);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: java.lang.String getParameter(java.lang.String)>($r6);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 549);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog myLog>;
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST parameter: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("-");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45695, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 549);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST is skipping dashed arg ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: java.lang.String getParameter(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label2;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45695, 1);
        goto label4;

     label4:
        n1 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45696, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        r18 = virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label10;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45696, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z2 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45697, 0);
        r19 = "550 LIST does not support wildcards\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label18;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45697, 1);
        goto label8;

     label8:
        $r20 = new java.io.File;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r22 = virtualinvoke $r21.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4424, null, null, null);
        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, r3);
        r18 = $r20;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z3 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdLIST: boolean violatesChroot(java.io.File)>(r18);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45698, 0);
        r19 = "450 Listing target violates chroot\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label18;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45698, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z4 = virtualinvoke r18.<java.io.File: boolean isDirectory()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        _sym_tmp_10 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label13;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45699, 0);
        $r23 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        r4 = $r23;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21838, null, null, null);
        r19 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String listDirectory(java.lang.StringBuilder,java.io.File)>(r4, r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_10 = null;
        if r19 == null goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45700, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        goto label18;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45700, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label16;

        goto label14;

     label13:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45699, 1);
        goto label14;

     label14:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21837, null, null);
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String makeLsString(java.io.File)>(r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_10 = null;
        if r5 != null goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45701, 0);
        r19 = "450 Couldn\'t list that file\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        goto label18;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45701, 1);
        goto label16;

     label16:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21842, null, null);
        r19 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String sendListing(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        _sym_tmp_10 = null;
        if r19 == null goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45702, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        goto label18;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45702, 1);
        goto label18;

     label18:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        _sym_tmp_10 = null;
        if r19 == null goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45703, 0);
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r24 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r24.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r19);
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r25 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog myLog>;
        $r26 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST failed with: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r25.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r29);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        goto label21;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45703, 1);
        goto label20;

     label20:
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 549);
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r30.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "LIST completed OK");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;

     label21:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;
        return;
    }

    protected java.lang.String makeLsString(java.io.File)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $l8$sym, $b7$sym, $l6$sym, $l5$sym, $i4$sym, $i3$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, l2$sym, i1$sym, l0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i1, $i3, $i4;
        be.ppareit.swiftp_free.server.CmdLIST r0;
        java.io.File r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder r4, $r8;
        java.lang.String r5, r6, $r21, $r25;
        long l0, l2, $l5, $l6, $l8;
        java.text.SimpleDateFormat r7, $r16, $r18;
        boolean $z0, $z1, $z2, $z3;
        be.ppareit.swiftp_free.MyLog $r9, $r10;
        java.lang.Long $r13;
        byte $b7;
        java.util.Locale $r17, $r19;
        java.util.Date $r20;

        r0 := @this: be.ppareit.swiftp_free.server.CmdLIST;
        r1 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21837, 32678, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdLIST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 559);
        $r2 = <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45704, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45704, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        r4 = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(394, null);
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(394);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45705, 0);
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 551);
        $r9 = <be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "makeLsString had nonexistent file");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        return null;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45705, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r5 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z1 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45706, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45707, 0);
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45706, 1);
        goto label5;

     label5:
        _sym_tmp_3 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 551);
        $r10 = <be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Filename omitted due to disallowed character");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return null;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45707, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z3 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45708, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drwxr-xr-x 1 owner group");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45708, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-rw-r--r-- 1 owner group");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(996, null);
        l0 = virtualinvoke r1.<java.io.File: long length()>();
        l0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(996);
        $r13 = new java.lang.Long;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2681, null, l0$sym);
        specialinvoke $r13.<java.lang.Long: void <init>(long)>(l0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r6 = virtualinvoke $r13.<java.lang.Long: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i3 = virtualinvoke r6.<java.lang.String: int length()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(null, $i3$sym, 13, $i3);
        i1 = 13 - $i3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;

     label11:
        $i4$sym = i1$sym;
        $i4 = i1;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, -1);
        i1 = i1 + -1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 0);
        if $i4 <= 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45709, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(326, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        goto label11;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45709, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18168, null);
        l2 = virtualinvoke r1.<java.io.File: long lastModified()>();
        l2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(18168);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(212);
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(212);
        $l6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l5$sym, l2$sym, $l5, l2);
        $l6 = $l5 - l2;
        $b7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l6$sym, null, $l6, -1627869184L);
        $b7 = $l6 cmp -1627869184L;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b7$sym, null, $b7, 0);
        if $b7 <= 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45710, 0);
        $r16 = new java.text.SimpleDateFormat;
        $r17 = <java.util.Locale: java.util.Locale US>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21849, null, null, null);
        specialinvoke $r16.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(" MMM dd HH:mm ", $r17);
        r7 = $r16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 12);
        r3[12] = 1;
        goto label16;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45710, 1);
        goto label15;

     label15:
        $r18 = new java.text.SimpleDateFormat;
        $r19 = <java.util.Locale: java.util.Locale US>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21849, null, null, null);
        specialinvoke $r18.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(" MMM dd  yyyy ", $r19);
        r7 = $r18;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 13);
        r3[13] = 1;

     label16:
        $r20 = new java.util.Date;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(18168, null);
        $l8 = virtualinvoke r1.<java.io.File: long lastModified()>();
        $l8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(18168);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2681, null, $l8$sym);
        specialinvoke $r20.<java.util.Date: void <init>(long)>($l8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(9384, null, null);
        $r21 = virtualinvoke r7.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r25 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 14);
        r3[14] = 1;
        return $r25;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32679, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32680, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdLIST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 559);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdLIST: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(559);
        <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[21];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[15];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdLIST", -7954665349173526861L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdMKD extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdMKD r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMKD;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32681, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMKD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 561);
        $r3 = <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45711, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45711, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdMKD";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdMKD: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 562);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdMKD: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(562);
        r0.<be.ppareit.swiftp_free.server.CmdMKD: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z2$sym, $z1$sym, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.CmdMKD r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r7, $r14, $r16;
        java.io.File r5, $r9;
        be.ppareit.swiftp_free.MyLog $r6, $r11, $r18;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r10, $r17;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r13, $r15;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMKD;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32682, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMKD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 561);
        $r1 = <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45712, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45712, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "MKD executing");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdMKD: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 562);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdMKD: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: java.lang.String getParameter(java.lang.String)>($r7);
        r4 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 >= 1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45713, 0);
        r4 = "550 Invalid name\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label9;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45713, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21844, null, null);
        r5 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r9, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdMKD: boolean violatesChroot(java.io.File)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45714, 0);
        r4 = "550 Invalid name or chroot violation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label9;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45714, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(394, null);
        $z1 = virtualinvoke r5.<java.io.File: boolean exists()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(394);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45715, 0);
        r4 = "550 Already exists\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label9;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45715, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3072, null);
        $z2 = virtualinvoke r5.<java.io.File: boolean mkdir()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3072);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45716, 0);
        r4 = "550 Error making directory (permissions?)\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45716, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_9 = null;
        if r4 == null goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45717, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MKD error: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r14 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r16);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label12;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45717, 1);
        goto label11;

     label11:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 Directory created\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;

     label12:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r18.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "MKD complete");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32683, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32684, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMKD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 561);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdMKD: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(561);
        <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[12];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdMKD", -2292088862297336769L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdMap extends java.lang.Object
{
    protected java.lang.Class cmdClass;
    java.lang.String name;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int cmdClass$a3tid;
    int name$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(java.lang.String, java.lang.Class)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdMap r0;
        java.lang.String r1;
        java.lang.Class r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21850, 32685, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMap: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 563);
        $r3 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45718, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45718, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdMap: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 564);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdMap: int name$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(564);
        r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.String name> = r1;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdMap: int cmdClass$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 565);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdMap: int cmdClass$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(565);
        r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.Class cmdClass> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public java.lang.Class getCommand()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdMap r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Class $r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21851, 32686, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMap: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 563);
        $r1 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45719, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45719, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdMap: int cmdClass$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 565);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.Class cmdClass>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setCommand(java.lang.Class)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdMap r0;
        java.lang.Class r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        r1 := @parameter0: java.lang.Class;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21852, 32687, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMap: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 563);
        $r2 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45720, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45720, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdMap: int cmdClass$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 565);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdMap: int cmdClass$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(565);
        r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.Class cmdClass> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public java.lang.String getName()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdMap r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(993, 32688, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMap: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 563);
        $r1 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45721, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45721, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdMap: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 564);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.String name>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setName(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdMap r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1050, 32689, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMap: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 563);
        $r2 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45722, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45722, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 4);
        r3 = $r2[4];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdMap: int name$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 564);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdMap: int name$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(564);
        r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.String name> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32690, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32691, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdMap: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 563);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdMap: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(563);
        <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdMap", -296480080569900512L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdNLST extends be.ppareit.swiftp_free.server.CmdAbstractListing implements java.lang.Runnable
{
    public static final long MS_IN_SIX_MONTHS;
    private final java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final acteve.symbolic.integer.Expression MS_IN_SIX_MONTHS$sym;
    public static final int MS_IN_SIX_MONTHS$a3tid;
    private final int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdNLST r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNLST;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32692, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdNLST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 566);
        $r3 = <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45723, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45723, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, r2);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdNLST: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 567);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdNLST: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(567);
        r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdNLST r0;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0, n1;
        java.lang.String r3, r5, $r6, r9, $r19;
        java.lang.StringBuilder r4, $r13, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        be.ppareit.swiftp_free.server.SessionThread $r7, $r11, $r14;
        java.io.File r8, $r10, $r12;
        be.ppareit.swiftp_free.MyLog $r15, $r20;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNLST;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32693, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdNLST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 566);
        $r1 = <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45724, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45724, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        n0 = null;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdNLST: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 567);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: java.lang.String getParameter(java.lang.String)>($r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("-");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45725, 0);
        r3 = "";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45725, 1);
        goto label3;

     label3:
        n1 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45726, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        r8 = virtualinvoke $r7.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label11;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45726, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z2 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45727, 0);
        r9 = "550 NLST does not support wildcards\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label19;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45727, 1);
        goto label7;

     label7:
        $r10 = new java.io.File;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r12 = virtualinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4424, null, null, null);
        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, r3);
        r8 = $r10;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z3 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdNLST: boolean violatesChroot(java.io.File)>(r8);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45728, 0);
        r9 = "450 Listing target violates chroot\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label19;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45728, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(991, null);
        $z4 = virtualinvoke r8.<java.io.File: boolean isFile()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(991);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45729, 0);
        r9 = "550 NLST for regular files is unsupported\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label19;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45729, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z5 = virtualinvoke r8.<java.io.File: boolean isDirectory()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45730, 0);
        $r13 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        r4 = $r13;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21838, null, null, null);
        r9 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String listDirectory(java.lang.StringBuilder,java.io.File)>(r4, r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        _sym_tmp_8 = null;
        if r9 == null goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45731, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label19;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45731, 1);
        goto label13;

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        goto label17;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45730, 1);
        goto label15;

     label15:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21837, null, null);
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String makeLsString(java.io.File)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        _sym_tmp_8 = null;
        if r5 != null goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45732, 0);
        r9 = "450 Couldn\'t list that file\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        goto label19;

        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45732, 1);
        goto label17;

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21842, null, null);
        r9 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String sendListing(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        _sym_tmp_8 = null;
        if r9 == null goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45733, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        goto label19;

        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45733, 1);
        goto label19;

     label19:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        _sym_tmp_8 = null;
        if r9 == null goto label20;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45734, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r9);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r15 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog myLog>;
        $r16 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NLST failed with: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r19);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        goto label22;

        goto label21;

     label20:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45734, 1);
        goto label21;

     label21:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "NLST completed OK");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;

     label22:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;
        return;
    }

    protected java.lang.String makeLsString(java.io.File)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z2$sym, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdNLST r0;
        java.io.File r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r11, $r15;
        boolean $z0, $z1, $z2;
        be.ppareit.swiftp_free.MyLog $r5, $r6, $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r14;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNLST;
        r1 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21837, 32694, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdNLST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 566);
        $r2 = <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45735, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45735, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(394, null);
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(394);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45736, 0);
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 551);
        $r5 = <be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "makeLsString had nonexistent file");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        return null;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45736, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        r4 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45737, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z2 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45738, 0);
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45737, 1);
        goto label5;

     label5:
        _sym_tmp_3 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 551);
        $r6 = <be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Filename omitted due to disallowed character");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return null;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45738, 1);
        goto label7;

     label7:
        _sym_tmp_4 = <be.ppareit.swiftp_free.server.CmdAbstractListing: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 551);
        $r7 = <be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog staticLog>;
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filename: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r11);
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        return $r15;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32695, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32696, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdNLST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 566);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdNLST: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(566);
        <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[22];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdNLST", -7786808087596388709L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdNOOP extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final int message$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdNOOP r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNOOP;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32697, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdNOOP: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 568);
        $r3 = <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45739, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45739, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdNOOP";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdNOOP r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.SessionThread $r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNOOP;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32698, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdNOOP: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 568);
        $r1 = <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45740, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45740, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 550);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdNOOP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("200 NOOP ok\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32699, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32700, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdNOOP: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 568);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdNOOP: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(568);
        <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdNOOP", 4474264727633695171L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdOPTS extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private final java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final int message$a3tid;
    private final int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdOPTS r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdOPTS;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32701, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdOPTS: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 569);
        $r3 = <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45741, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45741, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdOPTS";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 570);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdOPTS: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(570);
        r0.<be.ppareit.swiftp_free.server.CmdOPTS: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, $z1$sym, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.CmdOPTS r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r6, r7, $r8, $r11, $r12, $r20;
        java.lang.String[] r5;
        be.ppareit.swiftp_free.MyLog $r9, $r10, $r13, $r15, $r16, $r22, $r24;
        boolean $z0, $z1;
        be.ppareit.swiftp_free.server.SessionThread $r14, $r21, $r23;
        java.lang.StringBuilder $r17, $r18, $r19;

        r0 := @this: be.ppareit.swiftp_free.server.CmdOPTS;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32702, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdOPTS: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 569);
        $r1 = <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45742, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45742, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 570);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdOPTS: java.lang.String getParameter(java.lang.String)>($r8);
        r4 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_13 = null;
        if r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45743, 0);
        r4 = "550 Need argument to OPTS\r\n";
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 549);
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void w(java.lang.String)>("Couldn\'t understand empty OPTS command");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label10;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45743, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(149, null, null);
        r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        $i0$sym = null;
        $i0 = lengthof r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 2);
        if $i0 == 2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45744, 0);
        r4 = "550 Malformed OPTS command\r\n";
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 549);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void w(java.lang.String)>("Couldn\'t parse OPTS command");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label10;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45744, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, 0);
        $r11 = r5[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(504, null);
        r6 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase()>();
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, 1);
        $r12 = r5[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(504, null);
        r7 = virtualinvoke $r12.<java.lang.String: java.lang.String toUpperCase()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("UTF8");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45745, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("ON");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45746, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 549);
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Got OPTS UTF8 ON");
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11353, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: void setEncoding(java.lang.String)>("UTF-8");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label10;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45746, 1);
        goto label7;

     label7:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r15 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Ignoring OPTS UTF8 for something besides ON");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45745, 1);
        goto label9;

     label9:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized OPTS option: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r20);
        r4 = "502 Unrecognized option\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        _sym_tmp_13 = null;
        if r4 == null goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45747, 0);
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 550);
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r21.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 549);
        $r22 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r22.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Template log message");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label13;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45747, 1);
        goto label12;

     label12:
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 550);
        $r23 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r23.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("200 OPTS accepted\r\n");
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 549);
        $r24 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r24.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Handled OPTS ok");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;

     label13:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32703, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32704, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdOPTS: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 569);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdOPTS: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(569);
        <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[13];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdOPTS", -3666739412344079468L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdPASS extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdPASS r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPASS;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32705, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPASS: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 571);
        $r3 = <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45748, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45748, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdPASS";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdPASS: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 572);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdPASS: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(572);
        r0.<be.ppareit.swiftp_free.server.CmdPASS: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_16, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdPASS r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r7, r8, $r11, $r24;
        android.content.Context r5;
        android.content.SharedPreferences r6;
        java.lang.InterruptedException r9, $r26;
        be.ppareit.swiftp_free.MyLog $r10, $r15, $r16, $r19, $r27;
        be.ppareit.swiftp_free.server.SessionThread $r12, $r14, $r17, $r18, $r25, $r28, $r29;
        be.ppareit.swiftp_free.server.Account $r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r20, $r21, $r22, $r23;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPASS;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32706, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPASS: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 571);
        $r1 = <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRc>;
        _sym_tmp_16 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45749, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45749, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Executing PASS");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdPASS: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 572);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdPASS: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21853, null, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASS: java.lang.String getParameter(java.lang.String,boolean)>($r11, 1);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        _sym_tmp_5 = $r12.<be.ppareit.swiftp_free.server.SessionThread: int account$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 573);
        $r13 = $r12.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(11550, null);
        r4 = virtualinvoke $r13.<be.ppareit.swiftp_free.server.Account: java.lang.String getUsername()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_16 = null;
        if r4 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45750, 0);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("503 Must send USER first\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45750, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        r5 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_16 = null;
        if r5 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45751, 0);
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r15 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "No global context in PASS\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45751, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4842, null);
        r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r7 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("username", null);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r8 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", null);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_16 = null;
        if r7 == null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45752, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_16 = null;
        if r8 != null goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45753, 0);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45752, 1);
        goto label7;

     label7:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Username or password misconfigured");
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 550);
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("500 Internal error during authentication");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label16;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45753, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45754, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45755, 0);
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 550);
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r18.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("230 Access granted\r\n");
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 549);
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        $r20 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" password verified");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r24);
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 550);
        $r25 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21854, null, null);
        virtualinvoke $r25.<be.ppareit.swiftp_free.server.SessionThread: void authAttempt(boolean)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label16;

        goto label12;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45754, 1);
        goto label12;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45755, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(532, null);
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;

     label13:
        goto label15;

     label14:
        $r26 := @caughtexception;
        r9 = $r26;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;

     label15:
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 549);
        $r27 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Failed authentication");
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 550);
        $r28 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r28.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("530 Login incorrect.\r\n");
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 550);
        $r29 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21854, null, null);
        virtualinvoke $r29.<be.ppareit.swiftp_free.server.SessionThread: void authAttempt(boolean)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;

     label16:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        return;

        catch java.lang.InterruptedException from label12 to label13 with label14;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32707, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32708, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPASS: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 571);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdPASS: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(571);
        <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[14];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdPASS", 4632107627296153889L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdPASV extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdPASV r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPASV;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32709, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPASV: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 574);
        $r3 = <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45756, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45756, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdPASV";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, $i3$sym, $i2$sym, $i1$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3;
        be.ppareit.swiftp_free.server.CmdPASV r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r6, $r17, $r19, $r23, $r24, $r36;
        java.net.InetAddress r4;
        java.lang.StringBuilder r5, $r15, $r16, $r18, $r22, $r33, $r34, $r35;
        be.ppareit.swiftp_free.MyLog $r7, $r9, $r12, $r14, $r20, $r32;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r10, $r11, $r13, $r21, $r31;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPASV;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32710, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPASV: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 574);
        $r1 = <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRc>;
        _sym_tmp_14 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45757, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45757, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        r3 = "502 Couldn\'t open a port\r\n";
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PASV running");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21855, null);
        $i1 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: int onPasv()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21855);
        i0$sym = $i1$sym;
        i0 = $i1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45758, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 549);
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Couldn\'t open a port for PASV");
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45758, 1);
        goto label3;

     label3:
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21856, null);
        r4 = virtualinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: java.net.InetAddress getDataSocketPasvIp()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_14 = null;
        if r4 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45759, 0);
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "PASV IP string invalid");
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 550);
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45759, 1);
        goto label5;

     label5:
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 549);
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        $r15 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PASV sending IP: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(962, null);
        $r17 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r19);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        if i0 >= 1 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45760, 0);
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 549);
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "PASV port number invalid");
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 550);
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r21.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        return;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 45760, 1);
        goto label7;

     label7:
        $r22 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("227 Entering Passive Mode (");
        r5 = $r22;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(962, null);
        $r23 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3496, null, null, null);
        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String replace(char,char)>(46, 44);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 256);
        $i2 = i0 / 256;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i2$sym);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $i3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 256);
        $i3 = i0 % 256;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i3$sym);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r6 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 550);
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r31.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r6);
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 549);
        $r32 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        $r33 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PASV completed, sent: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r32.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r36);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32711, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32712, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPASV: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 574);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdPASV: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(574);
        <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdPASV", 4512002127777399289L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdPORT extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdPORT r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPORT;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32713, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPORT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 575);
        $r3 = <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45761, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45761, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdPORT";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdPORT: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 576);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdPORT: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(576);
        r0.<be.ppareit.swiftp_free.server.CmdPORT: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, i10$sym, $i9$sym, $i8$sym, $i7$sym, $b6$sym, r15$sym, $i5$sym, $z2$sym, $i4$sym, $i3$sym, $z1$sym, $z0$sym, i2$sym, i1$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, i10;
        be.ppareit.swiftp_free.server.CmdPORT r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r7, $r8, $r9, $r12, $r16, $r21, $r27, $r28, $r36;
        java.lang.String[] r5;
        be.ppareit.swiftp_free.MyLog $r6, $r31, $r32;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r19, $r20, $r22, $r23, $r33, $r34, $r35;
        byte[] r15;
        byte $b6;
        java.lang.Exception $r17, r18;
        java.net.InetAddress r24;
        java.net.UnknownHostException $r25, r26;
        be.ppareit.swiftp_free.server.SessionThread $r29, $r30, $r37;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPORT;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32714, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPORT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 575);
        $r1 = <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45762, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45762, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PORT running");
        r3 = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdPORT: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 576);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdPORT: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdPORT: java.lang.String getParameter(java.lang.String)>($r7);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("|");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45763, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("::");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45764, 0);
        r3 = "550 No IPv6 support, reconfigure your client\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label26;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45763, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45764, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(149, null, null);
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");
        $i3$sym = null;
        $i3 = lengthof r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 6);
        if $i3 == 6 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45765, 0);
        r3 = "550 Malformed PORT argument\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label26;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45765, 1);
        goto label6;

     label6:
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label7:
        $i4$sym = null;
        $i4 = lengthof r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i4$sym, i0, $i4);
        if i0 >= $i4 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45766, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, i0);
        $r8 = r5[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(382, null, null);
        $z2 = virtualinvoke $r8.<java.lang.String: boolean matches(java.lang.String)>("[0-9]+");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(382);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45767, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, i0);
        $r9 = r5[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i5 = virtualinvoke $r9.<java.lang.String: int length()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i5$sym, null, $i5, 3);
        if $i5 <= 3 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45768, 0);
        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45767, 1);
        goto label9;

     label9:
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("550 Invalid PORT argument: ");
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, i0);
        $r12 = r5[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label26;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45768, 1);
        goto label11;

     label11:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        goto label7;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45766, 1);
        goto label13;

     label13:
        r15 = newarray (byte)[4];
        r15$sym = null;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;

     label14:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 4);
        if i1 >= 4 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45769, 0);

     label15:
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, i1);
        $r16 = r5[i1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2063, null);
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);
        i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2063);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 128);
        if i2 < 128 goto label16;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45770, 0);
        i2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, -256);
        i2 = i2 + -256;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        goto label17;

     label16:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45770, 1);
        goto label17;

     label17:
        $b6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>(i2$sym, 3);
        $b6 = (byte) i2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int,byte)>(r15$sym, i1$sym, $b6$sym, r15, i1, $b6);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r15, i1);
        r15[i1] = $b6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;

     label18:
        goto label20;

     label19:
        $r17 := @caughtexception;
        r18 = $r17;
        $r19 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("550 Invalid PORT format: ");
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, i1);
        $r21 = r5[i1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        goto label26;

     label20:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        goto label14;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45769, 1);
        goto label22;

     label22:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21813, r15$sym);
        r24 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r15);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;

     label23:
        goto label25;

     label24:
        $r25 := @caughtexception;
        r26 = $r25;
        r3 = "550 Unknown host\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, 4);
        $r27 = r5[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2063, null);
        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);
        $i7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2063);
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i7$sym, null, $i7, 256);
        $i8 = $i7 * 256;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r5, 5);
        $r28 = r5[5];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2063, null);
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);
        $i9$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2063);
        i10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i8$sym, $i9$sym, $i8, $i9);
        i10 = $i8 + $i9;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r29 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21857, null, null, i10$sym);
        virtualinvoke $r29.<be.ppareit.swiftp_free.server.SessionThread: boolean onPort(java.net.InetAddress,int)>(r24, i10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;

     label26:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;
        _sym_tmp_9 = null;
        if r3 != null goto label27;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45771, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r30.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("200 PORT OK\r\n");
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r31.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PORT completed");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 22);
        r2[22] = 1;
        goto label29;

        goto label28;

     label27:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45771, 1);
        goto label28;

     label28:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r32 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.MyLog myLog>;
        $r33 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PORT error: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r32.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r36);
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 550);
        $r37 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r37.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 23);
        r2[23] = 1;

     label29:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 24);
        r2[24] = 1;
        return;

        catch java.lang.Exception from label15 to label18 with label19;
        catch java.net.UnknownHostException from label22 to label23 with label24;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32715, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32716, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPORT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 575);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdPORT: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(575);
        <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[25];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdPORT", 666320873687305126L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdPWD extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdPWD r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPWD;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32717, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPWD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 577);
        $r3 = <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45772, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45772, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdPWD";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        be.ppareit.swiftp_free.server.CmdPWD r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r8, r9, $r15;
        be.ppareit.swiftp_free.MyLog $r4, $r18, $r20;
        be.ppareit.swiftp_free.server.SessionThread $r5, $r10, $r19;
        java.io.File $r6, $r7;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        java.io.IOException $r16, r17;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPWD;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32718, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPWD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 577);
        $r1 = <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45773, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45773, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PWD executing");

     label2:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r6 = virtualinvoke $r5.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(14929, null);
        r3 = virtualinvoke $r6.<java.io.File: java.lang.String getCanonicalPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21801);
        $r7 = staticinvoke <be.ppareit.swiftp_free.Globals: java.io.File getChrootDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(14929, null);
        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getCanonicalPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i0$sym);
        r9 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i1 = virtualinvoke r9.<java.lang.String: int length()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 != 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45774, 0);
        r9 = "/";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45774, 1);
        goto label4;

     label4:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("257 \"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;
        r17 = $r16;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 549);
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r18.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "PWD canonicalize");
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3370, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label7:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PWD complete");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return;

        catch java.io.IOException from label2 to label5 with label6;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32719, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32720, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdPWD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 577);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdPWD: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(577);
        <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdPWD", 6576146208568307850L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdQUIT extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final int message$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdQUIT r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdQUIT;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32721, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdQUIT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 578);
        $r3 = <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45775, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45775, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdQUIT";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdQUIT r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;
        be.ppareit.swiftp_free.server.SessionThread $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdQUIT;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32722, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdQUIT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 578);
        $r1 = <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45776, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45776, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdQUIT: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "QUITting");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdQUIT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("221 Goodbye\r\n");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdQUIT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3370, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32723, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32724, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdQUIT: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 578);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdQUIT: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(578);
        <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdQUIT", 4474264732352706828L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdRETR extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdRETR r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRETR;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32725, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRETR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 579);
        $r3 = <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45777, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45777, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdRETR";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdRETR: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 580);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdRETR: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(580);
        r0.<be.ppareit.swiftp_free.server.CmdRETR: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_25, $b13$sym, $i12$sym, $i11$sym, $b10$sym, $i9$sym, $i8$sym, $b7$sym, i6$sym, $r37$sym, i5$sym, $i4$sym, z8$sym, $z7$sym, $i3$sym, $z6$sym, $z5$sym, $i2$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, r9$sym, z0$sym, i1$sym, i0$sym, r7$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, $i2, $i3, $i4, i5, i6, $i8, $i9, $i11, $i12;
        be.ppareit.swiftp_free.server.CmdRETR r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r13, $r20, $r22;
        java.io.File r5, $r15;
        java.io.FileInputStream r6, $r24;
        byte[] r7, r9, $r37;
        java.io.IOException r8, r11, $r28, $r34, r35, $r42, r43, $r46, r47, $r48, r49, $r50, r51, $r53;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        java.lang.Throwable r10, $r52;
        be.ppareit.swiftp_free.MyLog $r12, $r16, $r17, $r23, $r26, $r27, $r31, $r33, $r36, $r57;
        be.ppareit.swiftp_free.server.SessionThread $r14, $r25, $r29, $r30, $r32, $r38, $r39, $r40, $r41, $r54, $r55, $r56;
        java.lang.StringBuilder $r18, $r19, $r21;
        byte $b7, $b10, $b13;
        java.io.FileNotFoundException $r44, r45;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRETR;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32726, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRETR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 579);
        $r1 = <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRc>;
        _sym_tmp_25 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45778, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45778, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RETR executing");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdRETR: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 580);
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdRETR: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: java.lang.String getParameter(java.lang.String)>($r13);
        r4 = null;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r15 = virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21844, null, null);
        r5 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r15, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z1 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRETR: boolean violatesChroot(java.io.File)>(r5);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45779, 0);
        r4 = "550 Invalid name or chroot violation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label68;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45779, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z2 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45780, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 549);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Ignoring RETR for directory");
        r4 = "550 Can\'t RETR a directory\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label68;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45780, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(394, null);
        $z3 = virtualinvoke r5.<java.io.File: boolean exists()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(394);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45781, 0);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        $r18 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t RETR nonexistent file: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2303, null);
        $r20 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r22);
        r4 = "550 File does not exist\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label68;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45781, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(992, null);
        $z4 = virtualinvoke r5.<java.io.File: boolean canRead()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(992);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45782, 0);
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r23 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r23.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Failed RETR permission (canRead() is false)");
        r4 = "550 No read permissions\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label68;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45782, 1);
        goto label9;

     label9:
        r6 = null;

     label10:
        $r24 = new java.io.FileInputStream;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(994, null, null);
        specialinvoke $r24.<java.io.FileInputStream: void <init>(java.io.File)>(r5);
        r6 = $r24;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21753);
        $i2 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getDataChunkSize()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21753);
        r7 = newarray (byte)[$i2];
        r7$sym = null;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 550);
        $r25 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21839, null);
        $z5 = virtualinvoke $r25.<be.ppareit.swiftp_free.server.SessionThread: boolean startUsingDataSocket()>();
        $z5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21839);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z5$sym, null, $z5, 0);
        if $z5 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45783, 0);
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 549);
        $r26 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r26.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RETR opened data socket");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label17;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45783, 1);
        goto label12;

     label12:
        r4 = "425 Error opening socket\r\n";
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 549);
        $r27 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Error in initDataSocket()");

     label13:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_25 = null;
        if r6 == null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45784, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45784, 1);
        goto label15;

     label15:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;
        goto label68;

     label16:
        $r28 := @caughtexception;
        r8 = $r28;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        goto label68;

     label17:
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 550);
        $r29 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r29.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("150 Sending file\r\n");
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 550);
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21840, null);
        $z6 = virtualinvoke $r30.<be.ppareit.swiftp_free.server.SessionThread: boolean isBinaryMode()>();
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21840);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z6$sym, null, $z6, 0);
        if $z6 == 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45785, 0);
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 549);
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r31.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Transferring in binary mode");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        goto label19;

     label18:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45787, 1);
        goto label19;

     label19:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(295, null, r7$sym);
        $i3 = virtualinvoke r6.<java.io.FileInputStream: int read(byte[])>(r7);
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(295);
        i0$sym = $i3$sym;
        i0 = $i3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, -1);
        if $i3 == -1 goto label41;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45786, 0);
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 550);
        $r32 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21858, null, r7$sym, i0$sym);
        $z7 = virtualinvoke $r32.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int)>(r7, i0);
        $z7$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21858);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z7$sym, null, $z7, 0);
        if $z7 != 0 goto label18;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45787, 0);
        r4 = "426 Data socket error\r\n";
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 549);
        $r33 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r33.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Data socket error");

     label20:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        _sym_tmp_25 = null;
        if r6 == null goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45788, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45788, 1);
        goto label22;

     label22:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;

     label23:
        goto label68;

     label24:
        $r34 := @caughtexception;
        r35 = $r34;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;
        goto label68;

        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45785, 1);
        goto label26;

     label26:
        _sym_tmp_16 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 549);
        $r36 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r36.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Transferring in ASCII mode");
        z8$sym = null;
        z8 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 22);
        r2[22] = 1;

     label27:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(295, null, r7$sym);
        $i4 = virtualinvoke r6.<java.io.FileInputStream: int read(byte[])>(r7);
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(295);
        i5$sym = $i4$sym;
        i5 = $i4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 23);
        r2[23] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, -1);
        if $i4 == -1 goto label42;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45789, 0);
        i1$sym = null;
        i1 = 0;
        z0$sym = null;
        z0 = 0;
        $r37 = newarray (byte)[2];
        $r37$sym = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int,byte)>($r37$sym, null, null, $r37, 0, 13);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r37, 0);
        $r37[0] = 13;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int,byte)>($r37$sym, null, null, $r37, 1, 10);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r37, 1);
        $r37[1] = 10;
        r9$sym = $r37$sym;
        r9 = $r37;
        i6$sym = null;
        i6 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 24);
        r2[24] = 1;

     label28:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 25);
        r2[25] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, i5$sym, i6, i5);
        if i6 >= i5 goto label36;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45790, 0);
        $b7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int)>(r7$sym, i6$sym, r7, i6);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r7, i6);
        $b7 = r7[i6];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 26);
        r2[26] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b7$sym, null, $b7, 10);
        if $b7 != 10 goto label34;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45791, 0);
        _sym_tmp_17 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 550);
        $r38 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $i8$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, i1$sym, i6, i1);
        $i8 = i6 - i1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21859, null, r7$sym, i1$sym, $i8$sym);
        virtualinvoke $r38.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int,int)>(r7, i1, $i8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 27);
        r2[27] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, null, i6, 0);
        if i6 != 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45792, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 28, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 28);
        r2[28] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z8$sym, null, z8, 0);
        if z8 != 0 goto label31;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45793, 0);
        _sym_tmp_18 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 550);
        $r39 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21858, null, r9$sym, null);
        virtualinvoke $r39.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int)>(r9, 1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 29, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 29);
        r2[29] = 1;
        goto label33;

        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45792, 1);
        goto label30;

     label30:
        $i9$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, null, i6, 1);
        $i9 = i6 - 1;
        $b10$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int)>(r7$sym, $i9$sym, r7, $i9);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r7, $i9);
        $b10 = r7[$i9];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 30, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 30);
        r2[30] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b10$sym, null, $b10, 13);
        if $b10 == 13 goto label32;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45794, 0);
        _sym_tmp_19 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 550);
        $r40 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21858, null, r9$sym, null);
        virtualinvoke $r40.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int)>(r9, 1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 31, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 31);
        r2[31] = 1;
        goto label33;

     label31:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45793, 1);
        goto label33;

        goto label33;

     label32:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45794, 1);
        goto label33;

     label33:
        i1$sym = i6$sym;
        i1 = i6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 32, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 32);
        r2[32] = 1;
        goto label35;

     label34:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45791, 1);
        goto label35;

     label35:
        i6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, null, i6, 1);
        i6 = i6 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 33, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 33);
        r2[33] = 1;
        goto label28;

        goto label37;

     label36:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45790, 1);
        goto label37;

     label37:
        _sym_tmp_20 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 550);
        $r41 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $i11$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i6$sym, i1$sym, i6, i1);
        $i11 = i6 - i1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21859, null, r7$sym, i1$sym, $i11$sym);
        virtualinvoke $r41.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int,int)>(r7, i1, $i11);
        $i12$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i5$sym, null, i5, 1);
        $i12 = i5 - 1;
        $b13$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int)>(r7$sym, $i12$sym, r7, $i12);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r7, $i12);
        $b13 = r7[$i12];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 34, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 34);
        r2[34] = 1;
        _sym_tmp_25 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b13$sym, null, $b13, 13);
        if $b13 != 13 goto label38;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45795, 0);
        z8$sym = null;
        z8 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 35, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 35);
        r2[35] = 1;
        goto label40;

        goto label39;

     label38:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45795, 1);
        goto label39;

     label39:
        z8$sym = null;
        z8 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 36, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 36);
        r2[36] = 1;

     label40:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 37, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 37);
        r2[37] = 1;
        goto label27;

        goto label43;

     label41:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45786, 1);
        goto label43;

        goto label43;

     label42:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45789, 1);
        goto label43;

     label43:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 38, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 38);
        r2[38] = 1;
        _sym_tmp_25 = null;
        if r6 == null goto label44;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45796, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 39, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 39);
        r2[39] = 1;
        goto label45;

     label44:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45796, 1);
        goto label45;

     label45:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 40, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 40);
        r2[40] = 1;
        goto label68;

     label46:
        $r42 := @caughtexception;
        r43 = $r42;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 41, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 41);
        r2[41] = 1;
        goto label68;

     label47:
        $r44 := @caughtexception;

     label48:
        r45 = $r44;
        r4 = "550 File not found\r\n";

     label49:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 42, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 42);
        r2[42] = 1;
        _sym_tmp_25 = null;
        if r6 == null goto label50;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45797, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 43, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 43);
        r2[43] = 1;
        goto label51;

     label50:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45797, 1);
        goto label51;

     label51:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 44, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 44);
        r2[44] = 1;
        goto label68;

     label52:
        $r46 := @caughtexception;
        r47 = $r46;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 45, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 45);
        r2[45] = 1;
        goto label68;

     label53:
        $r48 := @caughtexception;

     label54:
        r49 = $r48;
        r4 = "425 Network error\r\n";

     label55:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 46, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 46);
        r2[46] = 1;
        _sym_tmp_25 = null;
        if r6 == null goto label56;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45798, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 47, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 47);
        r2[47] = 1;
        goto label57;

     label56:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45798, 1);
        goto label57;

     label57:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 48, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 48);
        r2[48] = 1;

     label58:
        goto label68;

     label59:
        $r50 := @caughtexception;
        r51 = $r50;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 49, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 49);
        r2[49] = 1;
        goto label68;

     label60:
        $r52 := @caughtexception;

     label61:
        r10 = $r52;

     label62:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 50, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 50);
        r2[50] = 1;
        _sym_tmp_25 = null;
        if r6 == null goto label63;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45799, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 51, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 51);
        r2[51] = 1;
        goto label64;

     label63:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45799, 1);
        goto label64;

     label64:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 52, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 52);
        r2[52] = 1;

     label65:
        goto label67;

     label66:
        $r53 := @caughtexception;
        r11 = $r53;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 53, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 53);
        r2[53] = 1;

     label67:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 54, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 54);
        r2[54] = 1;
        throw r10;

     label68:
        _sym_tmp_21 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 550);
        $r54 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21789, null);
        virtualinvoke $r54.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 55, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 55);
        r2[55] = 1;
        _sym_tmp_25 = null;
        if r4 == null goto label69;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45800, 0);
        _sym_tmp_22 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 550);
        $r55 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r55.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 56, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 56);
        r2[56] = 1;
        goto label71;

        goto label70;

     label69:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_25, 45800, 1);
        goto label70;

     label70:
        _sym_tmp_23 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 550);
        $r56 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r56.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("226 Transmission finished\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 57, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 57);
        r2[57] = 1;

     label71:
        _sym_tmp_24 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 549);
        $r57 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r57.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RETR done");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 58, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 58);
        r2[58] = 1;
        return;

        catch java.io.IOException from label13 to label15 with label16;
        catch java.io.IOException from label20 to label23 with label24;
        catch java.io.IOException from label43 to label45 with label46;
        catch java.io.FileNotFoundException from label10 to label13 with label47;
        catch java.io.FileNotFoundException from label17 to label20 with label47;
        catch java.io.FileNotFoundException from label26 to label43 with label47;
        catch java.io.IOException from label49 to label51 with label52;
        catch java.io.IOException from label10 to label13 with label53;
        catch java.io.IOException from label17 to label20 with label53;
        catch java.io.IOException from label26 to label43 with label53;
        catch java.io.IOException from label55 to label58 with label59;
        catch java.lang.Throwable from label10 to label13 with label60;
        catch java.lang.Throwable from label17 to label20 with label60;
        catch java.lang.Throwable from label26 to label43 with label60;
        catch java.lang.Throwable from label48 to label49 with label60;
        catch java.lang.Throwable from label54 to label55 with label60;
        catch java.io.IOException from label62 to label65 with label66;
        catch java.lang.Throwable from label61 to label62 with label60;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32727, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32728, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRETR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 579);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdRETR: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(579);
        <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[59];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdRETR", -4157216162400516749L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdRMD extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final int message$a3tid;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdRMD r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRMD;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32729, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRMD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 581);
        $r3 = <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45801, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45801, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdRMD";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdRMD: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 582);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdRMD: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(582);
        r0.<be.ppareit.swiftp_free.server.CmdRMD: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z3$sym, $z2$sym, $z1$sym, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.CmdRMD r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r7, $r15, $r17;
        java.io.File r5, $r9, $r10;
        be.ppareit.swiftp_free.MyLog $r6, $r12, $r19;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r11, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRMD;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32730, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRMD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 581);
        $r1 = <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45802, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45802, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "RMD executing");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdRMD: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 582);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdRMD: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: java.lang.String getParameter(java.lang.String)>($r7);
        r4 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        if $i0 >= 1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45803, 0);
        r4 = "550 Invalid argument\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label11;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45803, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21844, null, null);
        r5 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r9, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRMD: boolean violatesChroot(java.io.File)>(r5);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45804, 0);
        r4 = "550 Invalid name or chroot violation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label11;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45804, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z1 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45805, 0);
        r4 = "550 Can\'t RMD a non-directory\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label11;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45805, 1);
        goto label7;

     label7:
        $r10 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>("/");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke r5.<java.io.File: boolean equals(java.lang.Object)>($r10);
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45806, 0);
        r4 = "550 Won\'t RMD the root directory\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label11;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45806, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21860, null, null);
        $z3 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRMD: boolean recursiveDelete(java.io.File)>(r5);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21860);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45807, 0);
        r4 = "550 Deletion error, possibly incomplete\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45807, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_9 = null;
        if r4 == null goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45808, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RMD failed: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r17);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        goto label14;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45808, 1);
        goto label13;

     label13:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r18.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 Removed directory\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;

     label14:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RMD finished");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        return;
    }

    protected boolean recursiveDelete(java.io.File)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z6$sym, $z5$sym, $z4$sym, $z3$sym, $z2$sym, $z1$sym, i1$sym, i0$sym, z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        be.ppareit.swiftp_free.server.CmdRMD r0;
        java.io.File r1, r5;
        boolean[][] $r2;
        boolean[] r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.File[] r4;
        be.ppareit.swiftp_free.MyLog $r6, $r11;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r14;
        java.lang.String $r10, $r15;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRMD;
        r1 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21860, 32731, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRMD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 581);
        $r2 = <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45809, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45809, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(394, null);
        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(394);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45810, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21860, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45810, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3472, null);
        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3472);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45811, 0);
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5807, null);
        r4 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();
        i0$sym = null;
        i0 = lengthof r4;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45812, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, i1);
        r5 = r4[i1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21860, null, null);
        $z3 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRMD: boolean recursiveDelete(java.io.File)>(r5);
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21860);
        z0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, $z3$sym, z0, $z3);
        z0 = z0 & $z3;
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        goto label4;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45812, 1);
        goto label6;

     label6:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        $r7 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recursively deleted: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45813, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2758, null);
        $z4 = virtualinvoke r1.<java.io.File: boolean delete()>();
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2758);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45814, 0);
        $z5$sym = null;
        $z5 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        goto label10;

        goto label9;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45813, 1);
        goto label9;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45814, 1);
        goto label9;

     label9:
        $z5$sym = null;
        $z5 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21860, $z5$sym);
        return $z5;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45811, 1);
        goto label12;

     label12:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 549);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RMD deleting file: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2758, null);
        $z6 = virtualinvoke r1.<java.io.File: boolean delete()>();
        $z6$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2758);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21860, $z6$sym);
        return $z6;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32732, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32733, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRMD: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 581);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdRMD: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(581);
        <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[14];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[12];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdRMD", -3278855719986047275L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdRNFR extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdRNFR r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRNFR;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32734, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRNFR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 583);
        $r3 = <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45815, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45815, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdRNFR";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 584);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdRNFR: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(584);
        r0.<be.ppareit.swiftp_free.server.CmdRNFR: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdRNFR r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r5, $r13, $r15;
        null_type n0;
        be.ppareit.swiftp_free.server.SessionThread $r6, $r9, $r16, $r17, $r18;
        java.io.File $r7, r8;
        boolean $z0, $z1;
        be.ppareit.swiftp_free.MyLog $r10;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRNFR;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32735, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRNFR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 583);
        $r1 = <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45816, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45816, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 584);
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: java.lang.String getParameter(java.lang.String)>($r5);
        r4 = null;
        n0 = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r7 = virtualinvoke $r6.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21844, null, null);
        r8 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r7, r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRNFR: boolean violatesChroot(java.io.File)>(r8);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45817, 0);
        r4 = "550 Invalid name or chroot violation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label5;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45817, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(394, null);
        $z1 = virtualinvoke r8.<java.io.File: boolean exists()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(394);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45818, 0);
        r4 = "450 Cannot rename nonexistent file\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45818, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_9 = null;
        if r4 == null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45819, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 549);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.MyLog myLog>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RNFR failed: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r13 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r15);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21861, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.server.SessionThread: void setRenameFrom(java.io.File)>(null);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45819, 1);
        goto label7;

     label7:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("350 Filename noted, now send RNTO\r\n");
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 550);
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21861, null, null);
        virtualinvoke $r18.<be.ppareit.swiftp_free.server.SessionThread: void setRenameFrom(java.io.File)>(r8);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32736, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32737, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRNFR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 583);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdRNFR: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(583);
        <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdRNFR", 5148588878987567013L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdRNTO extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdRNTO r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRNTO;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32738, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRNTO: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 585);
        $r3 = <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45820, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45820, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdRNTO";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 586);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdRNTO: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(586);
        r0.<be.ppareit.swiftp_free.server.CmdRNTO: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_13, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdRNTO r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r6, $r12, $r19, $r21, $r27, $r29;
        null_type n0;
        java.io.File r5, $r14, r15;
        be.ppareit.swiftp_free.MyLog $r7, $r8, $r16, $r24, $r32;
        java.lang.StringBuilder $r9, $r10, $r11, $r17, $r18, $r20, $r25, $r26, $r28;
        be.ppareit.swiftp_free.server.SessionThread $r13, $r22, $r23, $r30, $r31;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRNTO;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32739, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRNTO: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 585);
        $r1 = <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRc>;
        _sym_tmp_13 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45821, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45821, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 586);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: java.lang.String getParameter(java.lang.String)>($r6);
        r4 = null;
        n0 = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 549);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RNTO executing\r\n");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 549);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        $r9 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("param: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r12);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        $r14 = virtualinvoke $r13.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21844, null, null);
        r15 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r14, r3);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RNTO parsed: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1843, null);
        $r19 = virtualinvoke r15.<java.io.File: java.lang.String getPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r21);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRNTO: boolean violatesChroot(java.io.File)>(r15);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45822, 0);
        r4 = "550 Invalid name or chroot violation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label7;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45822, 1);
        goto label3;

     label3:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r22 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21862, null);
        r5 = virtualinvoke $r22.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getRenameFrom()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_13 = null;
        if r5 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45823, 0);
        r4 = "550 Rename error, maybe RNFR not sent\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label7;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45823, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2759, null, null);
        $z1 = virtualinvoke r5.<java.io.File: boolean renameTo(java.io.File)>(r15);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2759);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_13 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45824, 0);
        r4 = "550 Error during rename operation\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label7;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45824, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_13 = null;
        if r4 == null goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45825, 0);
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 550);
        $r23 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r23.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 549);
        $r24 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        $r25 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RNFR failed: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        $r27 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r24.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r29);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_13, 45825, 1);
        goto label9;

     label9:
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 550);
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r30.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 rename successful\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;

     label10:
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 550);
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21861, null, null);
        virtualinvoke $r31.<be.ppareit.swiftp_free.server.SessionThread: void setRenameFrom(java.io.File)>(null);
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 549);
        $r32 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r32.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RNTO finished");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32740, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32741, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdRNTO: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 585);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdRNTO: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(585);
        <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdRNTO", -5809472191647511010L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdSIZE extends be.ppareit.swiftp_free.server.FtpCmd
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdSIZE r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSIZE;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32742, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSIZE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 587);
        $r3 = <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45826, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45826, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdSIZE";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 588);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdSIZE: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(588);
        r0.<be.ppareit.swiftp_free.server.CmdSIZE: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z3$sym, $z2$sym, $z1$sym, $z0$sym, l0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdSIZE r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r9, $r11, $r16, $r18, $r26;
        long l0;
        java.io.File r5, r6, $r12;
        java.io.IOException r7, $r19;
        be.ppareit.swiftp_free.MyLog $r8, $r13, $r27;
        be.ppareit.swiftp_free.server.SessionThread $r10, $r20, $r21;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r14, $r15, $r17, $r22, $r23, $r24, $r25;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSIZE;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32743, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSIZE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 587);
        $r1 = <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45827, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45827, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("SIZE executing");
        r3 = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 588);
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdSIZE: java.lang.String getParameter(java.lang.String)>($r9);
        l0$sym = null;
        l0 = 0L;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21843, null);
        r5 = virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        $r11 = <java.io.File: java.lang.String separator>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4073, null, null);
        $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r11);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4073);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45828, 0);
        r3 = "550 No directory traversal allowed in SIZE param\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label13;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45828, 1);
        goto label3;

     label3:
        $r12 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4424, null, null, null);
        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, r4);
        r6 = $r12;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21845, null, null);
        $z1 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdSIZE: boolean violatesChroot(java.io.File)>(r6);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21845);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45829, 0);
        r3 = "550 SIZE target violates chroot\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label13;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45829, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(394, null);
        $z2 = virtualinvoke r6.<java.io.File: boolean exists()>();
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(394);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45830, 0);
        r3 = "550 Cannot get the SIZE of nonexistent object\r\n";

     label6:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 549);
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.MyLog myLog>;
        $r14 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed getting size of: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(14929, null);
        $r16 = virtualinvoke r6.<java.io.File: java.lang.String getCanonicalPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label7:
        goto label13;

     label8:
        $r19 := @caughtexception;
        r7 = $r19;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label13;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45830, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(991, null);
        $z3 = virtualinvoke r6.<java.io.File: boolean isFile()>();
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(991);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45831, 0);
        r3 = "550 Cannot get the size of a non-file\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label13;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45831, 1);
        goto label12;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(996, null);
        l0 = virtualinvoke r6.<java.io.File: long length()>();
        l0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(996);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;

     label13:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_9 = null;
        if r3 == null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45832, 0);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        goto label16;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45832, 1);
        goto label15;

     label15:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 550);
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r22 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("213 ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(286, null, l0$sym);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r21.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>($r26);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;

     label16:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 549);
        $r27 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("SIZE complete");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        return;

        catch java.io.IOException from label6 to label7 with label8;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32744, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32745, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSIZE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 587);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdSIZE: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(587);
        <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[14];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdSIZE", 2440754377541445343L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdSTOR extends be.ppareit.swiftp_free.server.CmdAbstractStore implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdSTOR r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSTOR;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32746, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSTOR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 589);
        $r3 = <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45833, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45833, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdSTOR";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdSTOR: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 590);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdSTOR: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(590);
        r0.<be.ppareit.swiftp_free.server.CmdSTOR: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdSTOR r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSTOR;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32747, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSTOR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 589);
        $r1 = <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45834, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45834, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdSTOR: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 590);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdSTOR: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        $r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdSTOR: java.lang.String getParameter(java.lang.String)>($r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21836, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdSTOR: void doStorOrAppe(java.lang.String,boolean)>($r4, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32748, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32749, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSTOR: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 589);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdSTOR: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(589);
        <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdSTOR", 4859542773776183139L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdSYST extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String response;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final int response$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdSYST r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSYST;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32750, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSYST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 591);
        $r3 = <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45835, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45835, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdSYST";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdSYST r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3, $r5;
        be.ppareit.swiftp_free.server.SessionThread $r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSYST;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32751, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSYST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 591);
        $r1 = <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45836, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45836, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdSYST: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "SYST executing");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 550);
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdSYST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("215 UNIX Type: L8\r\n");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 549);
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdSYST: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "SYST finished");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32752, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32753, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdSYST: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 591);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdSYST: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(591);
        <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdSYST", 4474264733185473591L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdTYPE extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdTYPE r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdTYPE;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32754, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdTYPE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 592);
        $r3 = <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45837, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45837, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdTYPE";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 593);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdTYPE: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(593);
        r0.<be.ppareit.swiftp_free.server.CmdTYPE: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdTYPE r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r6;
        be.ppareit.swiftp_free.MyLog $r5, $r10;
        boolean $z0, $z1, $z2, $z3;
        be.ppareit.swiftp_free.server.SessionThread $r7, $r8, $r9;

        r0 := @this: be.ppareit.swiftp_free.server.CmdTYPE;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32755, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdTYPE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 592);
        $r1 = <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45838, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45838, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "TYPE executing");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 593);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdTYPE: java.lang.String getParameter(java.lang.String)>($r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("I");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45839, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("L 8");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45840, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45839, 1);
        goto label3;

     label3:
        r4 = "200 Binary type set\r\n";
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21863, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.server.SessionThread: void setBinaryMode(boolean)>(1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label10;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45840, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("A");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45841, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("A N");
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45842, 0);
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45841, 1);
        goto label7;

     label7:
        r4 = "200 ASCII type set\r\n";
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21863, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: void setBinaryMode(boolean)>(0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45842, 1);
        goto label9;

     label9:
        r4 = "503 Malformed TYPE command\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label10:
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 549);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "TYPE complete");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32756, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32757, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdTYPE: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 592);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdTYPE: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(592);
        <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdTYPE", 4480491538288722487L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdTemplate extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final int message$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdTemplate r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdTemplate;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32758, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdTemplate: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 594);
        $r3 = <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45843, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45843, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdTemplate";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdTemplate r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.SessionThread $r3;
        be.ppareit.swiftp_free.MyLog $r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdTemplate;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32759, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdTemplate: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 594);
        $r1 = <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45844, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45844, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 550);
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdTemplate: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("TEMPLATE!!");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 549);
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdTemplate: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Template log message");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32760, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32761, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdTemplate: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 594);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdTemplate: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(594);
        <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdTemplate", 4474264730409584381L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdUSER extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int input$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdUSER r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdUSER;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32762, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdUSER: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r3 = <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45845, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45845, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdUSER";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21834, null, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.CmdUSER: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 596);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.CmdUSER: int input$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(596);
        r0.<be.ppareit.swiftp_free.server.CmdUSER: java.lang.String input> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.CmdUSER r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r5;
        be.ppareit.swiftp_free.MyLog $r4;
        boolean $z0;
        be.ppareit.swiftp_free.server.SessionThread $r6, $r7, $r8;
        be.ppareit.swiftp_free.server.Account $r9;

        r0 := @this: be.ppareit.swiftp_free.server.CmdUSER;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32763, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdUSER: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 595);
        $r1 = <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45846, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45846, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdUSER: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "USER executing");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.CmdUSER: int input$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 596);
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdUSER: java.lang.String input>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21835, null);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: java.lang.String getParameter(java.lang.String)>($r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(382, null, null);
        $z0 = virtualinvoke r3.<java.lang.String: boolean matches(java.lang.String)>("[A-Za-z0-9]+");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(382);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45847, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 550);
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdUSER: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("530 Invalid username\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45847, 1);
        goto label3;

     label3:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 550);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdUSER: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("331 Send password\r\n");
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 550);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdUSER: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        _sym_tmp_7 = $r8.<be.ppareit.swiftp_free.server.SessionThread: int account$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 573);
        $r9 = $r8.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(11564, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.server.Account: void setUsername(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32764, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 2);
        r1 = $r0[2];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32765, 0);
        $r0 = newmultiarray (boolean)[3][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.CmdUSER: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 595);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.CmdUSER: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(595);
        <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdUSER", 4958358402760586864L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.server.DataSocketFactory extends java.lang.Object
{
    protected be.ppareit.swiftp_free.MyLog myLog;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    protected int myLog$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.DataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        r0 := @this: be.ppareit.swiftp_free.server.DataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32766, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.DataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 597);
        $r1 = <be.ppareit.swiftp_free.server.DataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45848, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.DataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45848, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new be.ppareit.swiftp_free.MyLog;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r5);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 598);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(598);
        r0.<be.ppareit.swiftp_free.server.DataSocketFactory: be.ppareit.swiftp_free.MyLog myLog> = $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public abstract boolean onPort(java.net.InetAddress, int);

    public abstract int onPasv();

    public abstract java.net.Socket onTransfer();

    public abstract java.net.InetAddress getPasvIp();

    public abstract void reportTraffic(long);

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32767, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.DataSocketFactory: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 6);
        r1 = $r0[6];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32768, 0);
        $r0 = newmultiarray (boolean)[7][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.DataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 597);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.DataSocketFactory: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(597);
        <be.ppareit.swiftp_free.server.DataSocketFactory: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/DataSocketFactory", 9256202804000L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.server.FtpCmd extends java.lang.Object implements java.lang.Runnable
{
    protected be.ppareit.swiftp_free.server.SessionThread sessionThread;
    protected be.ppareit.swiftp_free.MyLog myLog;
    protected static be.ppareit.swiftp_free.MyLog staticLog;
    protected static be.ppareit.swiftp_free.server.CmdMap[] cmdClasses;
    private static final boolean[][] $VRc;
    protected int sessionThread$a3tid;
    protected int myLog$a3tid;
    protected static int staticLog$a3tid;
    protected static int cmdClasses$a3tid;
    private static final int $VRc$a3tid;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.FtpCmd r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        be.ppareit.swiftp_free.MyLog $r5;

        r0 := @this: be.ppareit.swiftp_free.server.FtpCmd;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21834, 32769, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.FtpCmd: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r3 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45849, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45849, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Object: void <init>()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 550);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.FtpCmd: int sessionThread$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(550);
        r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.SessionThread sessionThread> = r1;
        $r5 = new be.ppareit.swiftp_free.MyLog;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r5.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>(r2);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 549);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(549);
        r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog> = $r5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public abstract void run();

    protected static void dispatchCommand(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_11, $z4$sym, $z3$sym, $z2$sym, $z1$sym, $r27$sym, $z0$sym, $i3$sym, $i2$sym, $i1$sym, i0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2, $i3;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.lang.String r1, r5, r6, r12, r14, r15, $r19, $r35;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4;
        be.ppareit.swiftp_free.server.FtpCmd r7;
        java.lang.reflect.Constructor r8;
        java.lang.NoSuchMethodException r9, $r24;
        be.ppareit.swiftp_free.MyLog $r10, $r11, $r13, $r25, $r30, $r31;
        be.ppareit.swiftp_free.server.CmdMap[] $r16, $r17, $r20;
        be.ppareit.swiftp_free.server.CmdMap $r18, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r22, $r36, $r37, $r38;
        java.lang.Class[] $r23;
        java.lang.Object[] $r26;
        java.lang.Object $r27;
        java.lang.Exception $r28, r29;
        java.lang.StringBuilder $r32, $r33, $r34;

        r0 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21865, 32770, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.FtpCmd: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r2 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        _sym_tmp_11 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45850, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45850, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(149, null, null);
        r4 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        r5 = "502 Command not recognized\r\n";
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_11 = null;
        if r4 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45851, 0);
        r6 = "502 Command parse error\r\n";
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 600);
        $r10 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45851, 1);
        goto label3;

     label3:
        $i1$sym = null;
        $i1 = lengthof r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        if $i1 >= 1 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45852, 0);
        _sym_tmp_3 = <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 600);
        $r11 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "No strings parsed");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        return;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45852, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, 0);
        r12 = r4[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(152, null);
        $i2 = virtualinvoke r12.<java.lang.String: int length()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 1);
        if $i2 >= 1 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45853, 0);
        _sym_tmp_4 = <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 600);
        $r13 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Invalid command verb");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        return;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45853, 1);
        goto label7;

     label7:
        r7 = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(904, null);
        r14 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(504, null);
        r15 = virtualinvoke r14.<java.lang.String: java.lang.String toUpperCase()>();
        i0$sym = null;
        i0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;

     label8:
        _sym_tmp_5 = <be.ppareit.swiftp_free.server.FtpCmd: int cmdClasses$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 601);
        $r16 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.CmdMap[] cmdClasses>;
        $i3$sym = null;
        $i3 = lengthof $r16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, $i3$sym, i0, $i3);
        if i0 >= $i3 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45854, 0);
        _sym_tmp_6 = <be.ppareit.swiftp_free.server.FtpCmd: int cmdClasses$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 601);
        $r17 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.CmdMap[] cmdClasses>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r17, i0);
        $r18 = $r17[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r19 = virtualinvoke $r18.<be.ppareit.swiftp_free.server.CmdMap: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r15);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label15;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45855, 0);

     label9:
        _sym_tmp_7 = <be.ppareit.swiftp_free.server.FtpCmd: int cmdClasses$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 601);
        $r20 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.CmdMap[] cmdClasses>;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r20, i0);
        $r21 = $r20[i0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21851, null);
        $r22 = virtualinvoke $r21.<be.ppareit.swiftp_free.server.CmdMap: java.lang.Class getCommand()>();
        $r23 = newarray (java.lang.Class)[2];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r23, 0);
        $r23[0] = class "be/ppareit/swiftp_free/server/SessionThread";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r23, 1);
        $r23[1] = class "java/lang/String";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(7655, null, null);
        r8 = virtualinvoke $r22.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r23);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;

     label10:
        goto label12;

     label11:
        $r24 := @caughtexception;
        r9 = $r24;
        _sym_tmp_8 = <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 600);
        $r25 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r25.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "FtpCmd subclass lacks expected constructor ");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        return;

     label12:
        $r26 = newarray (java.lang.Object)[2];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r26, 0);
        $r26[0] = r0;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r26, 1);
        $r26[1] = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(7656, null, null);
        $r27 = virtualinvoke r8.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r26);
        $r27$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(7656);
        r7 = (be.ppareit.swiftp_free.server.FtpCmd) $r27;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;

     label13:
        goto label16;

     label14:
        $r28 := @caughtexception;
        r29 = $r28;
        _sym_tmp_9 = <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 600);
        $r30 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r30.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Instance creation error on FtpCmd");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 12);
        r3[12] = 1;
        return;

        goto label16;

     label15:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45855, 1);
        goto label16;

     label16:
        i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        i0 = i0 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 13);
        r3[13] = 1;
        goto label8;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45854, 1);
        goto label18;

     label18:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 14);
        r3[14] = 1;
        _sym_tmp_11 = null;
        if r7 != null goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45856, 0);
        _sym_tmp_10 = <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 600);
        $r31 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        $r32 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unrecognized FTP verb: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r31.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r35);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 15);
        r3[15] = 1;
        return;

        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45856, 1);
        goto label20;

     label20:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21864, null);
        $z1 = virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: boolean isAuthenticated()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21864);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 16);
        r3[16] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45857, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r36 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke $r36.<java.lang.Object: boolean equals(java.lang.Object)>(class "be/ppareit/swiftp_free/server/CmdUSER");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 17);
        r3[17] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 != 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45858, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r37 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z3 = virtualinvoke $r37.<java.lang.Object: boolean equals(java.lang.Object)>(class "be/ppareit/swiftp_free/server/CmdPASS");
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 18);
        r3[18] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 != 0 goto label23;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45859, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r38 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z4 = virtualinvoke $r38.<java.lang.Object: boolean equals(java.lang.Object)>(class "be/ppareit/swiftp_free/server/CmdUSER");
        $z4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 19);
        r3[19] = 1;
        _sym_tmp_11 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z4$sym, null, $z4, 0);
        if $z4 == 0 goto label25;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45860, 0);
        goto label24;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45857, 1);
        goto label24;

        goto label24;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45858, 1);
        goto label24;

        goto label24;

     label23:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45859, 1);
        goto label24;

     label24:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(533, null);
        virtualinvoke r7.<be.ppareit.swiftp_free.server.FtpCmd: void run()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 20);
        r3[20] = 1;
        goto label27;

        goto label26;

     label25:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_11, 45860, 1);
        goto label26;

     label26:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("530 Login first with USER and PASS\r\n");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 21);
        r3[21] = 1;

     label27:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 22);
        r3[22] = 1;
        return;

        catch java.lang.NoSuchMethodException from label9 to label10 with label11;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public static java.lang.String getParameter(java.lang.String, boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i1$sym, i0$sym, r2$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0, $i1;
        java.lang.String r0, r3, r4, $r9;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21853, 32771, 2);
        z0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.FtpCmd: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45861, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45861, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = null;
        if r0 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45862, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return "";

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45862, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1045, null, null);
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(32);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(1045);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, -1);
        if i0 != -1 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45863, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return "";

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45863, 1);
        goto label5;

     label5:
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        $i1 = i0 + 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(463, null, $i1$sym);
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(16092, null, null, null);
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s+$", "");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45864, 0);
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 600);
        $r5 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsed argument: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45864, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        return r4;
    }

    public static java.lang.String getParameter(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.lang.String r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21835, 32772, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.FtpCmd: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r1 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45865, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45865, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21853, null, null);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: java.lang.String getParameter(java.lang.String,boolean)>(r0, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public static java.io.File inputPathToChrootedFile(java.io.File, java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $c0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.io.File r0, r4, $r5, $r8;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        char $c0;
        java.lang.Exception $r6, r7;

        r0 := @parameter0: java.io.File;
        r1 := @parameter1: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21844, 32773, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.FtpCmd: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r2 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45866, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45866, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 5);
        r3 = $r2[5];

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(402, null, null);
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        $c0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(402);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($c0$sym, null, $c0, 47);
        if $c0 != 47 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45867, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21801);
        r4 = staticinvoke <be.ppareit.swiftp_free.Globals: java.io.File getChrootDir()>();
        $r5 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4424, null, null, null);
        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label3:
        return $r5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45867, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label7;

     label6:
        $r6 := @caughtexception;
        r7 = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label7:
        $r8 = new java.io.File;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(4424, null, null, null);
        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        return $r8;

        catch java.lang.Exception from label2 to label3 with label6;
    }

    public boolean violatesChroot(java.io.File)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, $z2$sym, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.FtpCmd r0;
        java.io.File r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r5, $r6, $r12, $r16, $r18, $r24, $r26, $r30, $r32;
        boolean $z0, $z1, $z2;
        be.ppareit.swiftp_free.MyLog $r7, $r8, $r13, $r21, $r27;
        java.lang.StringBuilder $r9, $r10, $r11, $r14, $r15, $r17, $r22, $r23, $r25, $r28, $r29, $r31;
        java.lang.Exception $r19, r20;

        r0 := @this: be.ppareit.swiftp_free.server.FtpCmd;
        r1 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21845, 32774, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.FtpCmd: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 599);
        $r2 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45868, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45868, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 6);
        r3 = $r2[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21801);
        r4 = staticinvoke <be.ppareit.swiftp_free.Globals: java.io.File getChrootDir()>();

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(14929, null);
        r5 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r6 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(57, null, null);
        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>($r6);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(57);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_7 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45869, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 549);
        $r7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Path violated folder restriction, denying");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 549);
        $r8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        $r9 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("path: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r12);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 549);
        $r13 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        $r14 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chroot: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r16 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r18);
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21845, $z1$sym);
        return $z1;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45869, 1);
        goto label5;

     label5:
        $z2$sym = null;
        $z2 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21845, $z2$sym);
        return $z2;

     label7:
        $r19 := @caughtexception;
        r20 = $r19;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 549);
        $r21 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        $r22 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Path canonicalization problem: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r24 = virtualinvoke r20.<java.lang.Exception: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r21.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r26);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.FtpCmd: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 549);
        $r27 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        $r28 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("When checking file: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2303, null);
        $r30 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r32);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21845, null);
        return 1;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        be.ppareit.swiftp_free.server.CmdMap $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        be.ppareit.swiftp_free.MyLog $r4;
        java.lang.String $r5;
        be.ppareit.swiftp_free.server.CmdMap[] $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32775, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        $r4 = new be.ppareit.swiftp_free.MyLog;
        $r2 = class "be/ppareit/swiftp_free/server/FtpCmd";
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r4.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r5);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 600);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.FtpCmd: int staticLog$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(600);
        <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog> = $r4;
        $r6 = newarray (be.ppareit.swiftp_free.server.CmdMap)[28];
        $r3 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("SYST", class "be/ppareit/swiftp_free/server/CmdSYST");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 0);
        $r6[0] = $r3;
        $r7 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r7.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("USER", class "be/ppareit/swiftp_free/server/CmdUSER");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 1);
        $r6[1] = $r7;
        $r8 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r8.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("PASS", class "be/ppareit/swiftp_free/server/CmdPASS");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 2);
        $r6[2] = $r8;
        $r9 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r9.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("TYPE", class "be/ppareit/swiftp_free/server/CmdTYPE");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 3);
        $r6[3] = $r9;
        $r10 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r10.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("CWD", class "be/ppareit/swiftp_free/server/CmdCWD");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 4);
        $r6[4] = $r10;
        $r11 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r11.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("PWD", class "be/ppareit/swiftp_free/server/CmdPWD");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 5);
        $r6[5] = $r11;
        $r12 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r12.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("LIST", class "be/ppareit/swiftp_free/server/CmdLIST");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 6);
        $r6[6] = $r12;
        $r13 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r13.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("PASV", class "be/ppareit/swiftp_free/server/CmdPASV");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 7);
        $r6[7] = $r13;
        $r14 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r14.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("RETR", class "be/ppareit/swiftp_free/server/CmdRETR");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 8);
        $r6[8] = $r14;
        $r15 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r15.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("NLST", class "be/ppareit/swiftp_free/server/CmdNLST");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 9);
        $r6[9] = $r15;
        $r16 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r16.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("NOOP", class "be/ppareit/swiftp_free/server/CmdNOOP");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 10);
        $r6[10] = $r16;
        $r17 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r17.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("STOR", class "be/ppareit/swiftp_free/server/CmdSTOR");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 11);
        $r6[11] = $r17;
        $r18 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r18.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("DELE", class "be/ppareit/swiftp_free/server/CmdDELE");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 12);
        $r6[12] = $r18;
        $r19 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r19.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("RNFR", class "be/ppareit/swiftp_free/server/CmdRNFR");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 13);
        $r6[13] = $r19;
        $r20 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r20.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("RNTO", class "be/ppareit/swiftp_free/server/CmdRNTO");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 14);
        $r6[14] = $r20;
        $r21 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r21.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("RMD", class "be/ppareit/swiftp_free/server/CmdRMD");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 15);
        $r6[15] = $r21;
        $r22 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r22.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("MKD", class "be/ppareit/swiftp_free/server/CmdMKD");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 16);
        $r6[16] = $r22;
        $r23 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r23.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("OPTS", class "be/ppareit/swiftp_free/server/CmdOPTS");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 17);
        $r6[17] = $r23;
        $r24 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r24.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("PORT", class "be/ppareit/swiftp_free/server/CmdPORT");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 18);
        $r6[18] = $r24;
        $r25 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r25.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("QUIT", class "be/ppareit/swiftp_free/server/CmdQUIT");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 19);
        $r6[19] = $r25;
        $r26 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r26.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("FEAT", class "be/ppareit/swiftp_free/server/CmdFEAT");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 20);
        $r6[20] = $r26;
        $r27 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r27.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("SIZE", class "be/ppareit/swiftp_free/server/CmdSIZE");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 21);
        $r6[21] = $r27;
        $r28 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r28.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("CDUP", class "be/ppareit/swiftp_free/server/CmdCDUP");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 22);
        $r6[22] = $r28;
        $r29 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r29.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("APPE", class "be/ppareit/swiftp_free/server/CmdAPPE");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 23);
        $r6[23] = $r29;
        $r30 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r30.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("XCUP", class "be/ppareit/swiftp_free/server/CmdCDUP");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 24);
        $r6[24] = $r30;
        $r31 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r31.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("XPWD", class "be/ppareit/swiftp_free/server/CmdPWD");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 25);
        $r6[25] = $r31;
        $r32 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r32.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("XMKD", class "be/ppareit/swiftp_free/server/CmdMKD");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 26);
        $r6[26] = $r32;
        $r33 = new be.ppareit.swiftp_free.server.CmdMap;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21850, null, null, null);
        specialinvoke $r33.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("XRMD", class "be/ppareit/swiftp_free/server/CmdRMD");
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r6, 27);
        $r6[27] = $r33;
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.FtpCmd: int cmdClasses$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 601);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.FtpCmd: int cmdClasses$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(601);
        <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.CmdMap[] cmdClasses> = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32776, 0);
        $r0 = newmultiarray (boolean)[8][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.FtpCmd: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 599);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.FtpCmd: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(599);
        <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[23];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r2;
        $r3 = newarray (boolean)[7];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r4;
        $r5 = newarray (boolean)[5];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r5;
        $r6 = newarray (boolean)[4];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r7;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/FtpCmd", -2590017180382441304L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.NormalDataSocketFactory extends be.ppareit.swiftp_free.server.DataSocketFactory
{
    java.net.ServerSocket server;
    java.net.InetAddress remoteAddr;
    int remotePort;
    boolean isPasvMode;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int server$a3tid;
    int remoteAddr$a3tid;
    acteve.symbolic.integer.Expression remotePort$sym;
    int remotePort$a3tid;
    acteve.symbolic.integer.Expression isPasvMode$sym;
    int isPasvMode$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32777, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 602);
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45870, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45870, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.DataSocketFactory: void <init>()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 603);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(603);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server> = null;
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: acteve.symbolic.integer.Expression isPasvMode$sym> = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int isPasvMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 604);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int isPasvMode$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(604);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean isPasvMode> = 1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void clearState()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r6;
        java.net.ServerSocket $r4, $r5;
        be.ppareit.swiftp_free.MyLog $r7;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21866, 32778, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 602);
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45871, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45871, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 603);
        $r4 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_8 = null;
        if $r4 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45872, 0);

     label2:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 603);
        $r5 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r5.<java.net.ServerSocket: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;
        r3 = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45872, 1);
        goto label6;

     label6:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 603);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(603);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server> = null;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remoteAddr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 605);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remoteAddr$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(605);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr> = null;
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: acteve.symbolic.integer.Expression remotePort$sym> = null;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 606);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(606);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort> = 0;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 598);
        $r7 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "NormalDataSocketFactory state cleared");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public int onPasv()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r7;
        java.net.ServerSocket $r4, $r6;
        be.ppareit.swiftp_free.MyLog $r5, $r8;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21855, 32779, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 602);
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45873, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45873, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();

     label2:
        $r4 = new java.net.ServerSocket;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1371, null, null, null);
        specialinvoke $r4.<java.net.ServerSocket: void <init>(int,int)>(0, 5);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 603);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(603);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server> = $r4;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 598);
        $r5 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Data socket pasv() listen successful");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 603);
        $r6 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(784, null);
        $i0 = virtualinvoke $r6.<java.net.ServerSocket: int getLocalPort()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(784);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21855, $i0$sym);
        return $i0;

     label4:
        $r7 := @caughtexception;
        r3 = $r7;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 598);
        $r8 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Data socket creation error");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21855, null);
        return 0;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public boolean onPort(java.net.InetAddress, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        java.net.InetAddress r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        r1 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21857, 32780, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 602);
        $r2 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45874, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45874, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remoteAddr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 605);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remoteAddr$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(605);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr> = r1;
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: acteve.symbolic.integer.Expression remotePort$sym> = i0$sym;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 606);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(606);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21857, null);
        return 1;
    }

    public java.net.Socket onTransfer()
    {
        acteve.symbolic.integer.Expression _sym_tmp_15, $i2$sym, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket r3, $r8, r24;
        java.io.IOException r4, $r10;
        java.net.ServerSocket $r5, $r23;
        java.net.InetAddress $r6, $r9, $r14;
        be.ppareit.swiftp_free.MyLog $r7, $r11, $r22, $r25, $r28;
        java.lang.StringBuilder $r12, $r13, $r16, $r17, $r18;
        java.lang.String $r15, $r19;
        java.lang.Exception $r20, r21, $r26, r27;
        null_type n0;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21868, 32781, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 602);
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_15 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45875, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45875, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 603);
        $r5 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_15 = null;
        if $r5 != null goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45876, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remoteAddr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 605);
        $r6 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_15 = null;
        if $r6 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45877, 0);
        $i0$sym = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: acteve.symbolic.integer.Expression remotePort$sym>;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 606);
        $i0 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_15 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45878, 0);
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45877, 1);
        goto label3;

     label3:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 598);
        $r7 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "PORT mode but not initialized correctly");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return null;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45878, 1);
        goto label5;

     label5:
        $r8 = new java.net.Socket;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remoteAddr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 605);
        $r9 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr>;
        $i1$sym = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: acteve.symbolic.integer.Expression remotePort$sym>;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 606);
        $i1 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21867, null, null, $i1$sym);
        specialinvoke $r8.<java.net.Socket: void <init>(java.net.InetAddress,int)>($r9, $i1);
        r3 = $r8;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;

     label6:
        goto label8;

     label7:
        $r10 := @caughtexception;
        r4 = $r10;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 598);
        $r11 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t open PORT data socket to: ");
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remoteAddr$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 605);
        $r14 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.net.InetAddress: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $i2$sym = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: acteve.symbolic.integer.Expression remotePort$sym>;
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 606);
        $i2 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i2$sym);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r19);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        return null;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3362, null, null);
        virtualinvoke r3.<java.net.Socket: void setSoTimeout(int)>(30000);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label9:
        goto label11;

     label10:
        $r20 := @caughtexception;
        r21 = $r20;
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 598);
        $r22 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r22.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Couldn\'t set SO_TIMEOUT");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return null;

     label11:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        return r3;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_15, 45876, 1);
        goto label13;

     label13:
        n0 = null;

     label14:
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 603);
        $r23 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5002, null);
        r24 = virtualinvoke $r23.<java.net.ServerSocket: java.net.Socket accept()>();
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 598);
        $r25 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r25.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "onTransfer pasv accept successful");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;

     label15:
        goto label17;

     label16:
        $r26 := @caughtexception;
        r27 = $r26;
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 598);
        $r28 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r28.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Exception accepting PASV socket");
        r24 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;

     label17:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        return r24;

        catch java.io.IOException from label5 to label6 with label7;
        catch java.lang.Exception from label8 to label9 with label10;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public int getPortNumber()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.ServerSocket $r3, $r4;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21742, 32782, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 602);
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45879, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45879, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 603);
        $r3 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = null;
        if $r3 == null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45880, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int server$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 603);
        $r4 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(784, null);
        $i0 = virtualinvoke $r4.<java.net.ServerSocket: int getLocalPort()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(784);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21742, $i0$sym);
        return $i0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45880, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21742, null);
        return -1;
    }

    public java.net.InetAddress getPasvIp()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.InetAddress $r3;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21869, 32783, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 602);
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45881, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45881, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21792);
        $r3 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: java.net.InetAddress getWifiIp()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void reportTraffic(long)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym, l0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        long l0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        l0 := @parameter0: long;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21870, 32784, 2);
        l0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 602);
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45882, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45882, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32785, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 8);
        r1 = $r0[8];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32786, 0);
        $r0 = newmultiarray (boolean)[9][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 602);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.NormalDataSocketFactory: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(602);
        <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[2];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[12];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/NormalDataSocketFactory", 8739433956279906494L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.server.ProxyConnector$1 extends java.lang.Object
{
    static final int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State;
    private static final boolean[][] $VRc;
    static final acteve.symbolic.integer.Expression $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$sym;
    static final int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid;
    private static final int $VRc$a3tid;

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i4, $i5;
        acteve.symbolic.integer.Expression $i5$sym, $r20$sym, $i4$sym, $r16$sym, $i3$sym, $r12$sym, $i2$sym, $r8$sym, $i1$sym, $r5$sym, $r4$sym, $i0$sym, r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.NoSuchFieldError r2, $r7, $r10, r11, $r14, r15, $r18, r19, $r22, r23;
        be.ppareit.swiftp_free.server.ProxyConnector$State[] $r3;
        int[] $r4, $r5, $r8, $r12, $r16, $r20;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r6, $r9, $r13, $r17, $r21;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32787, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$1: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 0);
        r1 = $r0[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21871);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State[] values()>();
        $i0$sym = null;
        $i0 = lengthof $r3;
        $r4 = newarray (int)[$i0];
        $r4$sym = null;
        <be.ppareit.swiftp_free.server.ProxyConnector$1: acteve.symbolic.integer.Expression $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$sym> = $r4$sym;
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 607);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$1: int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(607);
        <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State> = $r4;

     label0:
        $r5$sym = <be.ppareit.swiftp_free.server.ProxyConnector$1: acteve.symbolic.integer.Expression $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 607);
        $r5 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        _sym_tmp_3 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int DISCONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 608);
        $r6 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(444, null);
        $i1 = virtualinvoke $r6.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(444);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>($r5$sym, $i1$sym, null, $r5, $i1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r5, $i1);
        $r5[$i1] = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r2 = $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 1);
        r1[1] = 1;

     label3:
        $r8$sym = <be.ppareit.swiftp_free.server.ProxyConnector$1: acteve.symbolic.integer.Expression $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$sym>;
        _sym_tmp_4 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 607);
        $r8 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        _sym_tmp_5 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTING$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 609);
        $r9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(444, null);
        $i2 = virtualinvoke $r9.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(444);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>($r8$sym, $i2$sym, null, $r8, $i2, 2);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, $i2);
        $r8[$i2] = 2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 2);
        r1[2] = 1;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;
        r11 = $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 3);
        r1[3] = 1;

     label6:
        $r12$sym = <be.ppareit.swiftp_free.server.ProxyConnector$1: acteve.symbolic.integer.Expression $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$sym>;
        _sym_tmp_6 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 607);
        $r12 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        _sym_tmp_7 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 610);
        $r13 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(444, null);
        $i3 = virtualinvoke $r13.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(444);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>($r12$sym, $i3$sym, null, $r12, $i3, 3);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r12, $i3);
        $r12[$i3] = 3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 4);
        r1[4] = 1;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;
        r15 = $r14;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 5);
        r1[5] = 1;

     label9:
        $r16$sym = <be.ppareit.swiftp_free.server.ProxyConnector$1: acteve.symbolic.integer.Expression $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$sym>;
        _sym_tmp_8 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 607);
        $r16 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        _sym_tmp_9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int FAILED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 611);
        $r17 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(444, null);
        $i4 = virtualinvoke $r17.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(444);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>($r16$sym, $i4$sym, null, $r16, $i4, 4);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r16, $i4);
        $r16[$i4] = 4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 6);
        r1[6] = 1;

     label10:
        goto label12;

     label11:
        $r18 := @caughtexception;
        r19 = $r18;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 7);
        r1[7] = 1;

     label12:
        $r20$sym = <be.ppareit.swiftp_free.server.ProxyConnector$1: acteve.symbolic.integer.Expression $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$sym>;
        _sym_tmp_10 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 607);
        $r20 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        _sym_tmp_11 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int UNREACHABLE$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 612);
        $r21 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(444, null);
        $i5 = virtualinvoke $r21.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $i5$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(444);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int,int)>($r20$sym, $i5$sym, null, $r20, $i5, 5);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r20, $i5);
        $r20[$i5] = 5;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 8);
        r1[8] = 1;

     label13:
        goto label15;

     label14:
        $r22 := @caughtexception;
        r23 = $r22;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 9);
        r1[9] = 1;

     label15:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 10);
        r1[10] = 1;
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r1$sym;
        boolean[][] $r0;
        boolean[] $r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32788, 0);
        $r0 = newmultiarray (boolean)[1][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 613);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$1: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(613);
        <be.ppareit.swiftp_free.server.ProxyConnector$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[11];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyConnector$1", -5295455100792825272L);
        return $r0;
    }
}
public final enum class be.ppareit.swiftp_free.server.ProxyConnector$State extends java.lang.Enum
{
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING;
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED;
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State FAILED;
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE;
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED;
    private static final be.ppareit.swiftp_free.server.ProxyConnector$State[] $VALUES;
    private static final boolean[][] $VRc;
    public static final enum int CONNECTING$a3tid;
    public static final enum int CONNECTED$a3tid;
    public static final enum int FAILED$a3tid;
    public static final enum int UNREACHABLE$a3tid;
    public static final enum int DISCONNECTED$a3tid;
    private static final int $VALUES$a3tid;
    private static final int $VRc$a3tid;

    public static be.ppareit.swiftp_free.server.ProxyConnector$State[] values()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $r3$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.ProxyConnector$State[] $r2, $r4;
        java.lang.Object $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21871, 32789, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 614);
        $r0 = <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45883, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45883, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 0);
        r1 = $r0[0];
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int $VALUES$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 615);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State[] $VALUES>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(63, null);
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(63);
        $r4 = (be.ppareit.swiftp_free.server.ProxyConnector$State[]) $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r4;
    }

    public static be.ppareit.swiftp_free.server.ProxyConnector$State valueOf(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r4;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21872, 32790, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 614);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45884, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45884, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(509, null, null);
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "be/ppareit/swiftp_free/server/ProxyConnector$State", r0);
        $r4 = (be.ppareit.swiftp_free.server.ProxyConnector$State) $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.ProxyConnector$State r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector$State;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(511, 32791, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 614);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45885, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45885, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, i0$sym);
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12;
        be.ppareit.swiftp_free.server.ProxyConnector$State[] $r7;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32792, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        $r2 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r2.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("CONNECTING", 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTING$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 609);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTING$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(609);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING> = $r2;
        $r3 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("CONNECTED", 1);
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 610);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTED$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(610);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED> = $r3;
        $r4 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r4.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("FAILED", 2);
        _sym_tmp_3 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int FAILED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 611);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$State: int FAILED$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(611);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED> = $r4;
        $r5 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r5.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("UNREACHABLE", 3);
        _sym_tmp_4 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int UNREACHABLE$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 612);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$State: int UNREACHABLE$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(612);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE> = $r5;
        $r6 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r6.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("DISCONNECTED", 4);
        _sym_tmp_5 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int DISCONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 608);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$State: int DISCONNECTED$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(608);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED> = $r6;
        $r7 = newarray (be.ppareit.swiftp_free.server.ProxyConnector$State)[5];
        _sym_tmp_6 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTING$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 609);
        $r8 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r7, 0);
        $r7[0] = $r8;
        _sym_tmp_7 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 610);
        $r9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r7, 1);
        $r7[1] = $r9;
        _sym_tmp_8 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int FAILED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 611);
        $r10 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r7, 2);
        $r7[2] = $r10;
        _sym_tmp_9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int UNREACHABLE$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 612);
        $r11 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r7, 3);
        $r7[3] = $r11;
        _sym_tmp_10 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int DISCONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 608);
        $r12 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r7, 4);
        $r7[4] = $r12;
        _sym_tmp_11 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int $VALUES$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 615);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$State: int $VALUES$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(615);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State[] $VALUES> = $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32793, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 614);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector$State: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(614);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyConnector$State", 8394644511464601135L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.ProxyConnector extends java.lang.Thread
{
    public static final int IN_BUF_SIZE;
    public static final java.lang.String ENCODING;
    public static final int RESPONSE_WAIT_MS;
    public static final int QUEUE_WAIT_MS;
    public static final long UPDATE_USAGE_BYTES;
    public static final java.lang.String PREFERRED_SERVER;
    public static final int CONNECT_TIMEOUT;
    private final be.ppareit.swiftp_free.FTPServerService ftpServerService;
    private final be.ppareit.swiftp_free.MyLog myLog;
    private org.json.JSONObject response;
    private java.lang.Thread responseWaiter;
    private final java.util.Queue queuedRequestThreads;
    private java.net.Socket commandSocket;
    private java.io.OutputStream out;
    private java.lang.String hostname;
    private java.io.InputStream inputStream;
    private long proxyUsage;
    private be.ppareit.swiftp_free.server.ProxyConnector$State proxyState;
    private java.lang.String prefix;
    private java.lang.String proxyMessage;
    static final java.lang.String USAGE_PREFS_NAME;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    public static final acteve.symbolic.integer.Expression IN_BUF_SIZE$sym;
    public static final int IN_BUF_SIZE$a3tid;
    public static final int ENCODING$a3tid;
    public static final acteve.symbolic.integer.Expression RESPONSE_WAIT_MS$sym;
    public static final int RESPONSE_WAIT_MS$a3tid;
    public static final acteve.symbolic.integer.Expression QUEUE_WAIT_MS$sym;
    public static final int QUEUE_WAIT_MS$a3tid;
    public static final acteve.symbolic.integer.Expression UPDATE_USAGE_BYTES$sym;
    public static final int UPDATE_USAGE_BYTES$a3tid;
    public static final int PREFERRED_SERVER$a3tid;
    public static final acteve.symbolic.integer.Expression CONNECT_TIMEOUT$sym;
    public static final int CONNECT_TIMEOUT$a3tid;
    private final int ftpServerService$a3tid;
    private final int myLog$a3tid;
    private int response$a3tid;
    private int responseWaiter$a3tid;
    private final int queuedRequestThreads$a3tid;
    private int commandSocket$a3tid;
    private int out$a3tid;
    private int hostname$a3tid;
    private int inputStream$a3tid;
    private acteve.symbolic.integer.Expression proxyUsage$sym;
    private int proxyUsage$a3tid;
    private int proxyState$a3tid;
    private int prefix$a3tid;
    private int proxyMessage$a3tid;
    static final int USAGE_PREFS_NAME$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(be.ppareit.swiftp_free.FTPServerService)
    {
        acteve.symbolic.integer.Expression _sym_tmp_17, $l0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        be.ppareit.swiftp_free.FTPServerService r1;
        boolean[][] $r2;
        boolean[] r3;
        be.ppareit.swiftp_free.MyLog $r4;
        java.lang.Class $r5;
        java.lang.String $r6;
        java.util.LinkedList $r7;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r8, $r9;
        long $l0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21786, 32794, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_17 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_17, 45886, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_17, 45886, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        $r4 = new be.ppareit.swiftp_free.MyLog;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r4.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r6);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 617);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(617);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog> = $r4;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 618);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(618);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response> = null;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 619);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(619);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter> = null;
        $r7 = new java.util.LinkedList;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.util.LinkedList: void <init>()>();
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 620);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(620);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads> = $r7;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 621);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(621);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket> = null;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int out$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 622);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int out$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(622);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.OutputStream out> = null;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 623);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int inputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 624);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int inputStream$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(624);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym> = null;
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 625);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(625);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage> = 0L;
        _sym_tmp_11 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int DISCONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 608);
        $r8 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 626);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyState$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(626);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState> = $r8;
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyMessage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 627);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyMessage$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(627);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String proxyMessage> = null;
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int ftpServerService$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_14, 628);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int ftpServerService$a3tid> = _sym_tmp_14;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(628);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.FTPServerService ftpServerService> = r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21873, null);
        $l0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: long getPersistedProxyUsage()>();
        $l0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21873);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym> = $l0$sym;
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_15, 625);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid> = _sym_tmp_15;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(625);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage> = $l0;
        _sym_tmp_16 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int DISCONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_16, 608);
        $r9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(r0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_62, $z1$sym, $l3$sym, i2$sym, r38$sym, $z0$sym, i1$sym, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_61, _sym_tmp_60, _sym_tmp_59, _sym_tmp_58, _sym_tmp_57, _sym_tmp_56, _sym_tmp_55, _sym_tmp_54, _sym_tmp_53, _sym_tmp_52, _sym_tmp_51, _sym_tmp_50, _sym_tmp_49, _sym_tmp_48, _sym_tmp_47, _sym_tmp_46, _sym_tmp_45, _sym_tmp_44, _sym_tmp_43, _sym_tmp_42, _sym_tmp_41, _sym_tmp_40, _sym_tmp_39, _sym_tmp_38, _sym_tmp_37, _sym_tmp_36, _sym_tmp_35, _sym_tmp_34, _sym_tmp_33, _sym_tmp_32, _sym_tmp_31, _sym_tmp_30, _sym_tmp_29, _sym_tmp_28, _sym_tmp_27, _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1, i2;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] r3, r4;
        java.lang.String r5, $r10, $r21, $r25, $r27, $r33, $r42, r43, $r64, $r73, $r82;
        org.json.JSONObject r6, $r15, $r16, $r18, $r20, $r44, r45, $r47;
        java.lang.Throwable r7, $r85;
        be.ppareit.swiftp_free.MyLog $r8, $r17, $r19, $r22, $r29, $r31, $r39, $r41, $r48, $r50, $r51, $r52, $r56, $r57, $r60, $r66, $r69, $r75, $r78, $r84, $r86;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r9, $r30, $r32, $r53, $r54, $r55, $r65, $r74, $r83;
        java.net.Socket $r11, $r12, $r13, $r14, $r28, $r34, $r36;
        boolean $z0, $z1;
        java.lang.StringBuilder $r23, $r24, $r26, $r61, $r62, $r63, $r70, $r71, $r72, $r79, $r80, $r81;
        java.io.InputStream $r35, $r40;
        java.io.OutputStream $r37;
        byte[] r38;
        long $l3;
        null_type n0;
        java.lang.Thread $r46, $r49;
        java.io.IOException $r58, r59;
        org.json.JSONException $r67, r68;
        java.lang.Exception $r76, r77;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32795, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_62 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45887, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45887, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("In ProxyConnector.run()");
        _sym_tmp_3 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTING$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 609);
        $r9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r9);

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21875, null);
        r3 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String[] getProxyList()>();
        r4 = r3;
        i0$sym = null;
        i0 = lengthof r4;
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_62 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45888, 0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r4, i1);
        r5 = r4[i1];
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 623);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = r5;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 623);
        $r10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21876, null, null, null);
        $r11 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket newAuthedSocket(java.lang.String,int)>($r10, 2222);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 621);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(621);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket> = $r11;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 621);
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_62 = null;
        if $r12 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45889, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label10;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45889, 1);
        goto label5;

     label5:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 621);
        $r13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3362, null, null);
        virtualinvoke $r13.<java.net.Socket: void setSoTimeout(int)>(0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21877, null, null);
        r6 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("start_command_session");
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 621);
        $r14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21878, null, null, null);
        $r15 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>($r14, r6);
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 618);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(618);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response> = $r15;
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 618);
        $r16 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_62 = null;
        if $r16 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45890, 0);
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 617);
        $r17 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r17.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Couldn\'t create proxy command session");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label10;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45890, 1);
        goto label7;

     label7:
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 618);
        $r18 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21879, null, null);
        $z0 = virtualinvoke $r18.<org.json.JSONObject: boolean has(java.lang.String)>("prefix");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21879);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_62 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45891, 0);
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 617);
        $r19 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "start_command_session didn\'t receive a prefix in response");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45891, 1);
        goto label9;

     label9:
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 618);
        $r20 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r21 = virtualinvoke $r20.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("prefix");
        _sym_tmp_16 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int prefix$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_16, 629);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int prefix$a3tid> = _sym_tmp_16;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(629);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String prefix> = $r21;
        _sym_tmp_17 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_17, 618);
        _sym_tmp_17 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid> = _sym_tmp_17;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(618);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response> = null;
        _sym_tmp_18 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 617);
        $r22 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r23 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got prefix of: ");
        _sym_tmp_19 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int prefix$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 629);
        $r25 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String prefix>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r22.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r27);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        goto label12;

     label10:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        goto label3;

        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45888, 1);
        goto label12;

     label12:
        _sym_tmp_20 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 621);
        $r28 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 10);
        r2[10] = 1;
        _sym_tmp_62 = null;
        if $r28 != null goto label14;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45892, 0);
        _sym_tmp_21 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 617);
        $r29 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r29.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "No proxies accepted connection, failing.");
        _sym_tmp_22 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int UNREACHABLE$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 612);
        $r30 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r30);

     label13:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        _sym_tmp_23 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_23, 623);
        _sym_tmp_23 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid> = _sym_tmp_23;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        _sym_tmp_24 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 617);
        $r31 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r31.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21880, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 11);
        r2[11] = 1;
        return;

        goto label15;

     label14:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45892, 1);
        goto label15;

     label15:
        _sym_tmp_25 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_25, 610);
        $r32 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r32);
        _sym_tmp_26 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 623);
        $r33 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21881, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void preferServer(java.lang.String)>($r33);
        _sym_tmp_27 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_27, 621);
        $r34 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3359, null);
        $r35 = virtualinvoke $r34.<java.net.Socket: java.io.InputStream getInputStream()>();
        _sym_tmp_28 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int inputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_28, 624);
        _sym_tmp_28 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int inputStream$a3tid> = _sym_tmp_28;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(624);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream> = $r35;
        _sym_tmp_29 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_29, 621);
        $r36 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3358, null);
        $r37 = virtualinvoke $r36.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        _sym_tmp_30 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int out$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_30, 622);
        _sym_tmp_30 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int out$a3tid> = _sym_tmp_30;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(622);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.OutputStream out> = $r37;
        r38 = newarray (byte)[2048];
        r38$sym = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 12);
        r2[12] = 1;

     label16:
        _sym_tmp_31 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_31, 617);
        $r39 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r39.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("to proxy read()");
        _sym_tmp_32 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int inputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_32, 624);
        $r40 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(295, null, r38$sym);
        i2 = virtualinvoke $r40.<java.io.InputStream: int read(byte[])>(r38);
        i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(295);
        $l3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>(i2$sym, 5);
        $l3 = (long) i2;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21882, null, $l3$sym);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void incrementProxyUsage(long)>($l3);
        _sym_tmp_33 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_33, 617);
        $r41 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r41.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("from proxy read()");
        n0 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 13);
        r2[13] = 1;
        _sym_tmp_62 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 0);
        if i2 <= 0 goto label24;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45893, 0);
        $r42 = new java.lang.String;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(140, null, r38$sym, null);
        specialinvoke $r42.<java.lang.String: void <init>(byte[],java.lang.String)>(r38, "UTF-8");
        r43 = $r42;
        $r44 = new org.json.JSONObject;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r44.<org.json.JSONObject: void <init>(java.lang.String)>(r43);
        r45 = $r44;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21879, null, null);
        $z1 = virtualinvoke r45.<org.json.JSONObject: boolean has(java.lang.String)>("action");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21879);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 14);
        r2[14] = 1;
        _sym_tmp_62 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label17;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45894, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21883, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void incomingCommand(org.json.JSONObject)>(r45);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 15);
        r2[15] = 1;
        goto label23;

        goto label18;

     label17:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45894, 1);
        goto label18;

     label18:
        _sym_tmp_34 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_34, 619);
        $r46 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 16);
        r2[16] = 1;
        _sym_tmp_62 = null;
        if $r46 == null goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45895, 0);
        _sym_tmp_35 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_35, 618);
        $r47 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 17);
        r2[17] = 1;
        _sym_tmp_62 = null;
        if $r47 == null goto label19;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45896, 0);
        _sym_tmp_36 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_36, 617);
        $r48 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r48.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Overwriting existing cmd session response");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 18);
        r2[18] = 1;
        goto label20;

     label19:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45896, 1);
        goto label20;

     label20:
        _sym_tmp_37 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_37, 618);
        _sym_tmp_37 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid> = _sym_tmp_37;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(618);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response> = r45;
        _sym_tmp_38 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_38, 619);
        $r49 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(537, null);
        virtualinvoke $r49.<java.lang.Thread: void interrupt()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 19);
        r2[19] = 1;
        goto label23;

        goto label22;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45895, 1);
        goto label22;

     label22:
        _sym_tmp_39 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_39, 617);
        $r50 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r50.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Response received but no responseWaiter");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 20);
        r2[20] = 1;

     label23:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 21);
        r2[21] = 1;
        goto label28;

        goto label25;

     label24:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45893, 1);
        goto label25;

     label25:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 22);
        r2[22] = 1;
        _sym_tmp_62 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i2$sym, null, i2, 0);
        if i2 != 0 goto label26;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45897, 0);
        _sym_tmp_40 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_40, 617);
        $r51 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r51.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Command socket read 0 bytes, looping");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 23);
        r2[23] = 1;
        goto label28;

        goto label27;

     label26:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45897, 1);
        goto label27;

     label27:
        _sym_tmp_41 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_41, 617);
        $r52 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r52.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Command socket end of stream, exiting");
        _sym_tmp_42 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_42, 626);
        $r53 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState>;
        _sym_tmp_43 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int DISCONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_43, 608);
        $r54 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 24);
        r2[24] = 1;
        _sym_tmp_62 = null;
        if $r53 == $r54 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45898, 0);
        _sym_tmp_44 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int FAILED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_44, 611);
        $r55 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r55);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 25);
        r2[25] = 1;
        goto label30;

     label28:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 26);
        r2[26] = 1;
        goto label16;

        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_62, 45898, 1);
        goto label30;

     label30:
        _sym_tmp_45 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_45, 617);
        $r56 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r56.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "ProxyConnector thread quitting cleanly");

     label31:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        _sym_tmp_46 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_46, 623);
        _sym_tmp_46 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid> = _sym_tmp_46;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        _sym_tmp_47 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_47, 617);
        $r57 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r57.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21880, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 27);
        r2[27] = 1;
        goto label44;

     label32:
        $r58 := @caughtexception;

     label33:
        r59 = $r58;
        _sym_tmp_48 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_48, 617);
        $r60 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r61 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException in command session: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r60.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r64);
        _sym_tmp_49 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int FAILED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_49, 611);
        $r65 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r65);

     label34:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        _sym_tmp_50 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_50, 623);
        _sym_tmp_50 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid> = _sym_tmp_50;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        _sym_tmp_51 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_51, 617);
        $r66 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r66.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21880, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 28, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 28);
        r2[28] = 1;
        goto label44;

     label35:
        $r67 := @caughtexception;

     label36:
        r68 = $r67;
        _sym_tmp_52 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_52, 617);
        $r69 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r70 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commmand socket JSONException: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r69.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r73);
        _sym_tmp_53 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int FAILED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_53, 611);
        $r74 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r74);

     label37:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        _sym_tmp_54 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_54, 623);
        _sym_tmp_54 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid> = _sym_tmp_54;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        _sym_tmp_55 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_55, 617);
        $r75 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r75.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21880, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 29, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 29);
        r2[29] = 1;
        goto label44;

     label38:
        $r76 := @caughtexception;

     label39:
        r77 = $r76;
        _sym_tmp_56 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_56, 617);
        $r78 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r79 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Other exception in ProxyConnector: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r77);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r78.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r82);
        _sym_tmp_57 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int FAILED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_57, 611);
        $r83 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r83);

     label40:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        _sym_tmp_58 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_58, 623);
        _sym_tmp_58 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid> = _sym_tmp_58;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        _sym_tmp_59 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_59, 617);
        $r84 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r84.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21880, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 30, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 30);
        r2[30] = 1;
        goto label44;

     label41:
        $r85 := @caughtexception;

     label42:
        r7 = $r85;

     label43:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        _sym_tmp_60 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_60, 623);
        _sym_tmp_60 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid> = _sym_tmp_60;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(623);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        _sym_tmp_61 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_61, 617);
        $r86 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r86.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21880, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 31, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 31);
        r2[31] = 1;
        throw r7;

     label44:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 32, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 32);
        r2[32] = 1;
        return;

        catch java.io.IOException from label2 to label13 with label32;
        catch java.io.IOException from label15 to label31 with label32;
        catch org.json.JSONException from label2 to label13 with label35;
        catch org.json.JSONException from label15 to label31 with label35;
        catch java.lang.Exception from label2 to label13 with label38;
        catch java.lang.Exception from label15 to label31 with label38;
        catch java.lang.Throwable from label2 to label13 with label41;
        catch java.lang.Throwable from label15 to label31 with label41;
        catch java.lang.Throwable from label33 to label34 with label41;
        catch java.lang.Throwable from label36 to label37 with label41;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label42 to label43 with label41;
    }

    private void preferServer(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        android.content.SharedPreferences$Editor r5;
        android.content.Context $r6;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21881, 32796, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45899, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45899, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r6 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r4 = virtualinvoke $r6.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("preferred_server", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5321, null);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(5322, null, null, null);
        interfaceinvoke r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("preferred_server", r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8350, null);
        interfaceinvoke r5.<android.content.SharedPreferences$Editor: boolean commit()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    private java.lang.String[] getProxyList()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4;
        java.lang.String[] r5, $r8, $r9, r11, $r12, $r13;
        java.util.List r6;
        android.content.Context $r7;
        java.lang.Object[] $r10;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21875, 32797, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45900, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45900, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r7 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r3 = virtualinvoke $r7.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("preferred_server", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2699, null, null, null);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferred_server", null);
        $r8 = newarray (java.lang.String)[9];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 0);
        $r8[0] = "c1.swiftp.org";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 1);
        $r8[1] = "c2.swiftp.org";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 2);
        $r8[2] = "c3.swiftp.org";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 3);
        $r8[3] = "c4.swiftp.org";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 4);
        $r8[4] = "c5.swiftp.org";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 5);
        $r8[5] = "c6.swiftp.org";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 6);
        $r8[6] = "c7.swiftp.org";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 7);
        $r8[7] = "c8.swiftp.org";
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r8, 8);
        $r8[8] = "c9.swiftp.org";
        r5 = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2735, null);
        r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21884, null);
        staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r6);
        $r9 = newarray (java.lang.String)[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(153, null, null);
        $r10 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);
        r11 = (java.lang.String[]) $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_2 = null;
        if r4 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45901, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return r11;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45901, 1);
        goto label3;

     label3:
        $r12 = newarray (java.lang.String)[1];
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r12, 0);
        $r12[0] = r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21819, null, null);
        $r13 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String[] concatStrArrays(java.lang.String[],java.lang.String[])>($r12, r11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r13;
    }

    private boolean checkAndPrintJsonError(org.json.JSONObject) throws org.json.JSONException
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        org.json.JSONObject r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder r4, $r5;
        boolean $z0, $z1;
        java.lang.String $r6, $r9, $r12;
        be.ppareit.swiftp_free.MyLog $r11;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: org.json.JSONObject;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21885, 32798, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45902, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45902, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 4);
        r3 = $r2[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21879, null, null);
        $z0 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("error_code");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21879);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45903, 0);
        $r5 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error in JSON response, code: ");
        r4 = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r6 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("error_code");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21879, null, null);
        $z1 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("error_string");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21879);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45904, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", string: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r9 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("error_string");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45904, 1);
        goto label3;

     label3:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r12 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r12);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21885, null);
        return 1;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45903, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21885, null);
        return 0;
    }

    private void incomingCommand(org.json.JSONObject)
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z3$sym, $z2$sym, $z1$sym, $i0$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        org.json.JSONObject r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, r5, $r10, $r11, $r15, $r18, $r24;
        boolean $z0, $z1, $z2, $z3;
        be.ppareit.swiftp_free.MyLog $r6, $r12, $r19, $r20, $r27;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r16, $r17, $r21, $r22, $r23;
        org.json.JSONException $r25, r26;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: org.json.JSONObject;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21883, 32799, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45905, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45905, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 5);
        r3 = $r2[5];

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        r4 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("action");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("control_connection_waiting");
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45906, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2702, null, null);
        $i0 = virtualinvoke r1.<org.json.JSONObject: int getInt(java.lang.String)>("port");
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2702);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21886, null, $i0$sym);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void startControlSession(int)>($i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label11;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45906, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("prefer_server");
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45907, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        r5 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("host");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21881, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void preferServer(java.lang.String)>(r5);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r7 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New preferred server: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r10);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        goto label11;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45907, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("message");
        $z2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z2$sym, null, $z2, 0);
        if $z2 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45908, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2706, null, null);
        $r11 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("text");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyMessage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 627);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyMessage$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(627);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String proxyMessage> = $r11;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got news from proxy server: \"");
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyMessage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 627);
        $r15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String proxyMessage>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r18);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        goto label11;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45908, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(59, null, null);
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("noop");
        $z3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(59);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z3$sym, null, $z3, 0);
        if $z3 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45909, 0);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 617);
        $r19 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Proxy noop");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        goto label11;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45909, 1);
        goto label10;

     label10:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 617);
        $r20 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r21 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported incoming action: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r24);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;

     label11:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;

     label12:
        goto label14;

     label13:
        $r25 := @caughtexception;
        r26 = $r25;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 617);
        $r27 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "JSONException in proxy incomingCommand");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;

     label14:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        return;

        catch org.json.JSONException from label2 to label12 with label13;
    }

    private void startControlSession(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket r3;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r4, $r10;
        be.ppareit.swiftp_free.server.SessionThread$Source $r5;
        be.ppareit.swiftp_free.server.SessionThread r6, $r11;
        be.ppareit.swiftp_free.MyLog $r7, $r9;
        java.lang.String $r8;
        be.ppareit.swiftp_free.FTPServerService $r12;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21886, 32800, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45910, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45910, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Starting new proxy FTP control session");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 623);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21876, null, null, i0$sym);
        r3 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket newAuthedSocket(java.lang.String,int)>($r8, i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_7 = null;
        if r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45911, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("startControlSession got null authed socket");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 45911, 1);
        goto label3;

     label3:
        $r10 = new be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void <init>()>();
        r4 = $r10;
        $r11 = new be.ppareit.swiftp_free.server.SessionThread;
        _sym_tmp_5 = <be.ppareit.swiftp_free.server.SessionThread$Source: int PROXY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 630);
        $r5 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source PROXY>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21887, null, null, null, null);
        specialinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: void <init>(java.net.Socket,be.ppareit.swiftp_free.server.DataSocketFactory,be.ppareit.swiftp_free.server.SessionThread$Source)>(r3, r4, $r5);
        r6 = $r11;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke r6.<be.ppareit.swiftp_free.server.SessionThread: void start()>();
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int ftpServerService$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 628);
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.FTPServerService ftpServerService>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21797, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.FTPServerService: void registerSessionThread(be.ppareit.swiftp_free.server.SessionThread)>(r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    private java.net.Socket newAuthedSocket(java.lang.String, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $z0$sym, $r26$sym, i1$sym, r6$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.lang.String r1, $r15, $r18, $r20, $r25, $r31, $r41;
        boolean[][] $r2;
        boolean[] r3;
        org.json.JSONObject r4, $r8, $r30, r32;
        null_type n0, n1, $n2, $n3, $n4;
        java.net.Socket r5, $r16;
        byte[] r6, $r26;
        be.ppareit.swiftp_free.MyLog $r7, $r9, $r27, $r28, $r29, $r33, $r37;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r38, $r39, $r40;
        java.net.InetSocketAddress $r17;
        java.io.OutputStream r23;
        java.io.InputStream r24;
        boolean $z0;
        java.lang.Exception $r35, r36;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21876, 32801, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45912, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45912, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 7);
        r3 = $r2[7];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_9 = null;
        if r1 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45913, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("newAuthedSocket can\'t connect to null host");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        return null;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45913, 1);
        goto label3;

     label3:
        $r8 = new org.json.JSONObject;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<org.json.JSONObject: void <init>()>();
        r4 = $r8;
        n0 = null;
        n1 = null;

     label4:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 617);
        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r10 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening proxy connection to ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, i0$sym);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r15);
        $r16 = new java.net.Socket;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<java.net.Socket: void <init>()>();
        r5 = $r16;
        $r17 = new java.net.InetSocketAddress;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, i0$sym);
        specialinvoke $r17.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r1, i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21888, null, null, null);
        virtualinvoke r5.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r17, 5000);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21810);
        $r18 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String getAndroidId()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21889, null, null, null);
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("android_id", $r18);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(5976);
        $r20 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String getVersion()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21889, null, null, null);
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("swiftp_version", $r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21889, null, null, null);
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("action", "login");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3358, null);
        r23 = virtualinvoke r5.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3359, null);
        r24 = virtualinvoke r5.<java.net.Socket: java.io.InputStream getInputStream()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r25 = virtualinvoke r4.<org.json.JSONObject: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(134, null, null);
        $r26 = virtualinvoke $r25.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");
        $r26$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(134);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(142, null, $r26$sym);
        virtualinvoke r23.<java.io.OutputStream: void write(byte[])>($r26);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r27 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Sent login request");
        r6 = newarray (byte)[2048];
        r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(295, null, r6$sym);
        i1 = virtualinvoke r24.<java.io.InputStream: int read(byte[])>(r6);
        i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(295);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, -1);
        if i1 != -1 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45914, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 617);
        $r28 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r28.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Proxy socket closed while waiting for auth response");
        $n2 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label5:
        return $n2;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45914, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 != 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45915, 0);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 617);
        $r29 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r29.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Short network read waiting for auth, quitting");
        $n3 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;

     label8:
        return $n3;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45915, 1);
        goto label10;

     label10:
        $r30 = new org.json.JSONObject;
        $r31 = new java.lang.String;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1596, null, r6$sym, null, i1$sym, null);
        specialinvoke $r31.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r6, 0, i1, "UTF-8");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r30.<org.json.JSONObject: void <init>(java.lang.String)>($r31);
        r32 = $r30;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21885, null, null);
        $z0 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: boolean checkAndPrintJsonError(org.json.JSONObject)>(r32);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21885);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label12;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45916, 0);
        $n4 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;

     label11:
        return $n4;

        goto label13;

     label12:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45916, 1);
        goto label13;

     label13:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 617);
        $r33 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r33.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("newAuthedSocket successful");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;

     label14:
        return r5;

     label15:
        $r35 := @caughtexception;
        r36 = $r35;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 617);
        $r37 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r38 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during proxy connection or authentication: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r37.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r41);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        return null;

        catch java.lang.Exception from label4 to label5 with label15;
        catch java.lang.Exception from label7 to label8 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public void quit()
    {
        acteve.symbolic.integer.Expression _sym_tmp_12, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r16;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r4;
        java.net.Socket $r5, $r12, $r14;
        org.json.JSONObject $r6;
        java.io.InputStream $r8, $r10;
        be.ppareit.swiftp_free.MyLog $r9, $r11, $r13, $r15;
        org.json.JSONException $r17, r18;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2822, 32802, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_12 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45917, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45917, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int DISCONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 608);
        $r4 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21874, null, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r4);

     label2:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 621);
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21877, null, null);
        $r6 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("finished");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21878, null, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>($r5, $r6);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int inputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 624);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_12 = null;
        if $r8 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45918, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 617);
        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("quit() closing proxy inputStream");
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int inputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 624);
        $r10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r10.<java.io.InputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label5;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45918, 1);
        goto label4;

     label4:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 617);
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("quit() won\'t close null inputStream");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label5:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 621);
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_12 = null;
        if $r12 == null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45919, 0);
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 617);
        $r13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("quit() closing proxy socket");
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 621);
        $r14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r14.<java.net.Socket: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label8;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_12, 45919, 1);
        goto label7;

     label7:
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 617);
        $r15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("quit() won\'t close null socket");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;

     label9:
        goto label12;

     label10:
        $r16 := @caughtexception;
        r3 = $r16;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        goto label12;

     label11:
        $r17 := @caughtexception;
        r18 = $r17;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21880, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21800, null);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        return;

        catch java.io.IOException from label2 to label9 with label10;
        catch org.json.JSONException from label2 to label9 with label11;
    }

    private org.json.JSONObject sendCmdSocketRequest(org.json.JSONObject)
    {
        acteve.symbolic.integer.Expression _sym_tmp_34, $r77$sym, $i4$sym, $r70$sym, $i3$sym, $r56$sym, $i2$sym, z5$sym, $r44$sym, $i1$sym, r36$sym, z4$sym, $r24$sym, $i0$sym, $z1$sym, z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_33, _sym_tmp_32, _sym_tmp_31, _sym_tmp_30, _sym_tmp_29, _sym_tmp_28, _sym_tmp_27, _sym_tmp_26, _sym_tmp_25, _sym_tmp_24, _sym_tmp_23, _sym_tmp_22, _sym_tmp_21, _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i4;
        be.ppareit.swiftp_free.server.ProxyConnector r0, r4, r6, r11, r53, r67;
        org.json.JSONObject r1, $r62, r65;
        boolean[][] $r2;
        boolean[] r3;
        boolean z0, $z1, z4, z5;
        java.lang.Throwable r5, r7, r8, r9, r10, r12, $r29, $r46, $r58, $r72, $r73, $r79;
        null_type n0, $n1, n2;
        java.lang.Thread $r14, $r15, $r17, $r20, $r22, $r25, $r28, $r35, $r45, $r57, $r71, $r78;
        be.ppareit.swiftp_free.MyLog $r16, $r18, $r26, $r30, $r33, $r34, $r40, $r47, $r50, $r51, $r59, $r82;
        java.util.Queue $r19, $r21, $r23, $r27, $r42, $r43, $r54, $r55, $r68, $r69, $r75, $r76;
        java.lang.Object $r24, $r44, $r56, $r70, $r77;
        java.lang.InterruptedException $r31, r32, $r48, r49;
        byte[] r36;
        java.io.OutputStream $r37;
        java.io.IOException $r38, r39;
        java.lang.StringBuilder $r60, $r61, $r63, $r83, $r84, $r85;
        java.lang.String $r64, $r86;
        org.json.JSONException $r80, r81;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: org.json.JSONObject;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21891, 32803, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_34 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45920, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45920, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 9);
        r3 = $r2[9];

     label2:
        r4 = r0;
        entermonitor r0;

     label3:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 619);
        $r14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_34 = null;
        if $r14 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45921, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(790);
        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 619);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(619);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter> = $r15;
        z0$sym = null;
        z0 = 0;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r16 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("sendCmdSocketRequest proceeding without queue");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        goto label10;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45921, 1);
        goto label5;

     label5:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 619);
        $r17 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3675, null);
        $z1 = virtualinvoke $r17.<java.lang.Thread: boolean isAlive()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3675);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 != 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45922, 0);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 617);
        $r18 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r18.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Won\'t wait on dead responseWaiter");
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 620);
        $r19 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i0 = interfaceinvoke $r19.<java.util.Queue: int size()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 0);
        if $i0 != 0 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45923, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(790);
        $r20 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 619);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(619);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter> = $r20;
        z0$sym = null;
        z0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label10;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45923, 1);
        goto label7;

     label7:
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 620);
        $r21 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(790);
        $r22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r21.<java.util.Queue: boolean add(java.lang.Object)>($r22);
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 620);
        $r23 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21890, null);
        $r24 = interfaceinvoke $r23.<java.util.Queue: java.lang.Object remove()>();
        $r24$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21890);
        $r25 = (java.lang.Thread) $r24;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(537, null);
        virtualinvoke $r25.<java.lang.Thread: void interrupt()>();
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        goto label10;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45922, 1);
        goto label9;

     label9:
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 617);
        $r26 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r26.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("sendCmdSocketRequest queueing thread");
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 620);
        $r27 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(790);
        $r28 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(68, null, null);
        interfaceinvoke $r27.<java.util.Queue: boolean add(java.lang.Object)>($r28);
        z0$sym = null;
        z0 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;

     label10:
        exitmonitor r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;

     label11:
        goto label15;

     label12:
        $r29 := @caughtexception;

     label13:
        r5 = $r29;
        exitmonitor r4;

     label14:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;
        throw r5;

     label15:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label21;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45924, 0);
        z4$sym = null;
        z4 = 0;

     label16:
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 617);
        $r30 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r30.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Queued cmd session request thread sleeping...");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(532, null);
        staticinvoke <java.lang.Thread: void sleep(long)>(20000L);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;

     label17:
        goto label19;

     label18:
        $r31 := @caughtexception;
        r32 = $r31;
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 617);
        $r33 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r33.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Proxy request popped and ready");
        z4$sym = null;
        z4 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;

     label19:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 12, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 12);
        r3[12] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z4$sym, null, z4, 0);
        if z4 != 0 goto label22;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45925, 0);
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 617);
        $r34 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r34.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Timed out waiting on proxy queue");
        $n1 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 13, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 13);
        r3[13] = 1;

     label20:
        return $n1;

        goto label23;

     label21:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45924, 1);
        goto label23;

        goto label23;

     label22:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45925, 1);
        goto label23;

     label23:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(790);
        $r35 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        _sym_tmp_16 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_16, 619);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int responseWaiter$a3tid> = _sym_tmp_16;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(619);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter> = $r35;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21815, null);
        r36 = staticinvoke <be.ppareit.swiftp_free.Util: byte[] jsonToByteArray(org.json.JSONObject)>(r1);
        r36$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21815);

     label24:
        _sym_tmp_17 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int out$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_17, 622);
        $r37 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.OutputStream out>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(142, null, r36$sym);
        virtualinvoke $r37.<java.io.OutputStream: void write(byte[])>(r36);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 14, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 14);
        r3[14] = 1;

     label25:
        goto label36;

     label26:
        $r38 := @caughtexception;
        r39 = $r38;
        _sym_tmp_18 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 617);
        $r40 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r40.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "IOException sending proxy request");
        n0 = null;

     label27:
        r6 = r0;
        entermonitor r0;

     label28:
        _sym_tmp_19 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_19, 620);
        $r42 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i1 = interfaceinvoke $r42.<java.util.Queue: int size()>();
        $i1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 15, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 15);
        r3[15] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 0);
        if $i1 == 0 goto label29;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45926, 0);
        _sym_tmp_20 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_20, 620);
        $r43 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21890, null);
        $r44 = interfaceinvoke $r43.<java.util.Queue: java.lang.Object remove()>();
        $r44$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21890);
        $r45 = (java.lang.Thread) $r44;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(537, null);
        virtualinvoke $r45.<java.lang.Thread: void interrupt()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 16, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 16);
        r3[16] = 1;
        goto label30;

     label29:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45926, 1);
        goto label30;

     label30:
        exitmonitor r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 17, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 17);
        r3[17] = 1;

     label31:
        goto label35;

     label32:
        $r46 := @caughtexception;

     label33:
        r7 = $r46;
        exitmonitor r6;

     label34:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 18, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 18);
        r3[18] = 1;
        throw r7;

     label35:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 19, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 19);
        r3[19] = 1;
        return n0;

     label36:
        z5$sym = null;
        z5 = 0;

     label37:
        _sym_tmp_21 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_21, 617);
        $r47 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r47.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Cmd session request sleeping until response");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(532, null);
        staticinvoke <java.lang.Thread: void sleep(long)>(10000L);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 20, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 20);
        r3[20] = 1;

     label38:
        goto label40;

     label39:
        $r48 := @caughtexception;
        r49 = $r48;
        _sym_tmp_22 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_22, 617);
        $r50 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r50.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Cmd session response received");
        z5$sym = null;
        z5 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 21, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 21);
        r3[21] = 1;

     label40:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 22, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 22);
        r3[22] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z5$sym, null, z5, 0);
        if z5 != 0 goto label50;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45927, 0);
        _sym_tmp_23 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_23, 617);
        $r51 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r51.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Proxy request timed out");
        n2 = null;

     label41:
        r53 = r0;
        entermonitor r0;

     label42:
        _sym_tmp_24 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_24, 620);
        $r54 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i2 = interfaceinvoke $r54.<java.util.Queue: int size()>();
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 23, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 23);
        r3[23] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 == 0 goto label43;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45928, 0);
        _sym_tmp_25 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_25, 620);
        $r55 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21890, null);
        $r56 = interfaceinvoke $r55.<java.util.Queue: java.lang.Object remove()>();
        $r56$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21890);
        $r57 = (java.lang.Thread) $r56;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(537, null);
        virtualinvoke $r57.<java.lang.Thread: void interrupt()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 24, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 24);
        r3[24] = 1;
        goto label44;

     label43:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45928, 1);
        goto label44;

     label44:
        exitmonitor r53;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 25, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 25);
        r3[25] = 1;

     label45:
        goto label49;

     label46:
        $r58 := @caughtexception;

     label47:
        r8 = $r58;
        exitmonitor r53;

     label48:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 26, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 26);
        r3[26] = 1;
        throw r8;

     label49:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 27, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 27);
        r3[27] = 1;
        return n2;

        goto label51;

     label50:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45927, 1);
        goto label51;

     label51:
        _sym_tmp_26 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_26, 617);
        $r59 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r60 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cmd session response was: ");
        _sym_tmp_27 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_27, 618);
        $r62 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r59.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r64);
        _sym_tmp_28 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int response$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_28, 618);
        r65 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;

     label52:
        r67 = r0;
        entermonitor r0;

     label53:
        _sym_tmp_29 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_29, 620);
        $r68 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i3 = interfaceinvoke $r68.<java.util.Queue: int size()>();
        $i3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 28, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 28);
        r3[28] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i3$sym, null, $i3, 0);
        if $i3 == 0 goto label54;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45929, 0);
        _sym_tmp_30 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_30, 620);
        $r69 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21890, null);
        $r70 = interfaceinvoke $r69.<java.util.Queue: java.lang.Object remove()>();
        $r70$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21890);
        $r71 = (java.lang.Thread) $r70;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(537, null);
        virtualinvoke $r71.<java.lang.Thread: void interrupt()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 29, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 29);
        r3[29] = 1;
        goto label55;

     label54:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45929, 1);
        goto label55;

     label55:
        exitmonitor r67;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 30, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 30);
        r3[30] = 1;

     label56:
        goto label60;

     label57:
        $r72 := @caughtexception;

     label58:
        r9 = $r72;
        exitmonitor r67;

     label59:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 31, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 31);
        r3[31] = 1;
        throw r9;

     label60:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 32, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 32);
        r3[32] = 1;
        return r65;

     label61:
        $r73 := @caughtexception;

     label62:
        r10 = $r73;

     label63:
        r11 = r0;
        entermonitor r0;

     label64:
        _sym_tmp_31 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_31, 620);
        $r75 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(69, null);
        $i4 = interfaceinvoke $r75.<java.util.Queue: int size()>();
        $i4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(69);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 33, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 33);
        r3[33] = 1;
        _sym_tmp_34 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, null, $i4, 0);
        if $i4 == 0 goto label65;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45930, 0);
        _sym_tmp_32 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int queuedRequestThreads$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_32, 620);
        $r76 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21890, null);
        $r77 = interfaceinvoke $r76.<java.util.Queue: java.lang.Object remove()>();
        $r77$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21890);
        $r78 = (java.lang.Thread) $r77;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(537, null);
        virtualinvoke $r78.<java.lang.Thread: void interrupt()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 34, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 34);
        r3[34] = 1;
        goto label66;

     label65:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_34, 45930, 1);
        goto label66;

     label66:
        exitmonitor r11;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 35, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 35);
        r3[35] = 1;

     label67:
        goto label71;

     label68:
        $r79 := @caughtexception;

     label69:
        r12 = $r79;
        exitmonitor r11;

     label70:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 36, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 36);
        r3[36] = 1;
        throw r12;

     label71:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 37, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 37);
        r3[37] = 1;
        throw r10;

     label72:
        $r80 := @caughtexception;
        r81 = $r80;
        _sym_tmp_33 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_33, 617);
        $r82 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r83 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSONException in sendRequest: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r81);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r82.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r86);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 38, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 38);
        r3[38] = 1;
        return null;

        catch java.lang.Throwable from label3 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.InterruptedException from label16 to label17 with label18;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label28 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.InterruptedException from label37 to label38 with label39;
        catch java.lang.Throwable from label42 to label45 with label46;
        catch java.lang.Throwable from label47 to label48 with label46;
        catch java.lang.Throwable from label53 to label56 with label57;
        catch java.lang.Throwable from label58 to label59 with label57;
        catch java.lang.Throwable from label23 to label27 with label61;
        catch java.lang.Throwable from label36 to label41 with label61;
        catch java.lang.Throwable from label51 to label52 with label61;
        catch java.lang.Throwable from label64 to label67 with label68;
        catch java.lang.Throwable from label69 to label70 with label68;
        catch java.lang.Throwable from label62 to label63 with label61;
        catch org.json.JSONException from label2 to label20 with label72;
        catch org.json.JSONException from label23 to label35 with label72;
        catch org.json.JSONException from label36 to label49 with label72;
        catch org.json.JSONException from label51 to label60 with label72;
        catch org.json.JSONException from label62 to label72 with label72;
    }

    public org.json.JSONObject sendRequest(java.io.InputStream, java.io.OutputStream, org.json.JSONObject) throws org.json.JSONException
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $z0$sym, $r8$sym, i0$sym, r6$sym, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;
        org.json.JSONObject r3, r7;
        boolean[][] $r4;
        boolean[] r5;
        byte[] r6, $r8;
        be.ppareit.swiftp_free.MyLog $r9, $r10, $r11, $r15;
        null_type $n0, $n1;
        boolean $z0;
        java.io.IOException $r13, r14;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.lang.String $r19;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.io.OutputStream;
        r3 := @parameter2: org.json.JSONObject;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21892, 32804, 4);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r4 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45931, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45931, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 10);
        r5 = $r4[10];

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21815, null);
        $r8 = staticinvoke <be.ppareit.swiftp_free.Util: byte[] jsonToByteArray(org.json.JSONObject)>(r3);
        $r8$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21815);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(142, null, $r8$sym);
        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r8);
        r6 = newarray (byte)[2048];
        r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(295, null, r6$sym);
        i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r6);
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(295);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, 1);
        if i0 >= 1 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45932, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Proxy sendRequest short read on response");
        $n0 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 1);
        r5[1] = 1;

     label3:
        return $n0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45932, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21816, r6$sym);
        r7 = staticinvoke <be.ppareit.swiftp_free.Util: org.json.JSONObject byteArrayToJson(byte[])>(r6);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 2);
        r5[2] = 1;
        _sym_tmp_6 = null;
        if r7 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45933, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 617);
        $r10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Null response to sendRequest");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 3);
        r5[3] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45933, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21885, null, null);
        $z0 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: boolean checkAndPrintJsonError(org.json.JSONObject)>(r7);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21885);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 4);
        r5[4] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label9;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45934, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Error response to sendRequest");
        $n1 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 5);
        r5[5] = 1;

     label8:
        return $n1;

        goto label10;

     label9:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45934, 1);
        goto label10;

     label10:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 6);
        r5[6] = 1;

     label11:
        return r7;

     label12:
        $r13 := @caughtexception;
        r14 = $r13;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 617);
        $r15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r16 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException in proxy sendRequest: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r19);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 7);
        r5[7] = 1;
        return null;

        catch java.io.IOException from label2 to label3 with label12;
        catch java.io.IOException from label5 to label8 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public org.json.JSONObject sendRequest(java.net.Socket, org.json.JSONObject) throws org.json.JSONException
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.net.Socket r1;
        org.json.JSONObject r2, $r9;
        boolean[][] $r3;
        boolean[] r4;
        java.io.IOException r5, $r10;
        be.ppareit.swiftp_free.MyLog $r6, $r11;
        null_type $n0;
        java.io.InputStream $r7;
        java.io.OutputStream $r8;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r15;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.net.Socket;
        r2 := @parameter1: org.json.JSONObject;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21878, 32805, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r3 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45935, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45935, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 11);
        r4 = $r3[11];

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        _sym_tmp_4 = null;
        if r1 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45936, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("null socket in ProxyConnector.sendRequest()");
        $n0 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 1);
        r4[1] = 1;

     label3:
        return $n0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45936, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3359, null);
        $r7 = virtualinvoke r1.<java.net.Socket: java.io.InputStream getInputStream()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3358, null);
        $r8 = virtualinvoke r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21892, null, null, null, null);
        $r9 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.io.InputStream,java.io.OutputStream,org.json.JSONObject)>($r7, $r8, r2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 2);
        r4[2] = 1;

     label6:
        return $r9;

     label7:
        $r10 := @caughtexception;
        r5 = $r10;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 617);
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException in proxy sendRequest wrapper: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r15);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 3);
        r4[3] = 1;
        return null;

        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public be.ppareit.swiftp_free.server.ProxyDataSocketInfo pasvListen()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket r3;
        org.json.JSONObject r4, r5;
        be.ppareit.swiftp_free.MyLog $r6, $r8, $r12;
        java.lang.String $r7;
        null_type $n0, $n1;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo $r9;
        org.json.JSONException $r10, r11;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21894, 32806, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45937, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45937, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 12);
        r2 = $r1[12];

     label2:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Sending data_pasv_listen to proxy");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 623);
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21876, null, null, null);
        r3 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket newAuthedSocket(java.lang.String,int)>($r7, 2222);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_6 = null;
        if r3 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45938, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("pasvListen got null socket");
        $n0 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label3:
        return $n0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45938, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21877, null, null);
        r4 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("data_pasv_listen");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21878, null, null, null);
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>(r3, r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_6 = null;
        if r5 != null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45939, 0);
        $n1 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label6:
        return $n1;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45939, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2702, null, null);
        i0 = virtualinvoke r5.<org.json.JSONObject: int getInt(java.lang.String)>("port");
        i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2702);
        $r9 = new be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21893, null, null, i0$sym);
        specialinvoke $r9.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: void <init>(java.net.Socket,int)>(r3, i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;

     label9:
        return $r9;

     label10:
        $r10 := @caughtexception;
        r11 = $r10;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 617);
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "JSONException in pasvListen");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        return null;

        catch org.json.JSONException from label2 to label3 with label10;
        catch org.json.JSONException from label5 to label6 with label10;
        catch org.json.JSONException from label8 to label9 with label10;
    }

    public java.net.Socket dataPortConnect(java.net.InetAddress, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.net.InetAddress r1;
        boolean[][] $r2;
        boolean[] r3;
        java.net.Socket r4;
        org.json.JSONObject r5, r6;
        be.ppareit.swiftp_free.MyLog $r7, $r9, $r16;
        java.lang.String $r8, $r10;
        null_type $n0, $n1;
        org.json.JSONException $r14, r15;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21896, 32807, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45940, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45940, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 13);
        r3 = $r2[13];

     label2:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Sending data_port_connect to proxy");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 623);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21876, null, null, null);
        r4 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket newAuthedSocket(java.lang.String,int)>($r8, 2222);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_6 = null;
        if r4 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45941, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("dataPortConnect got null socket");
        $n0 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label3:
        return $n0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45941, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21877, null, null);
        r5 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("data_port_connect");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(962, null);
        $r10 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21889, null, null, null);
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("address", $r10);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21895, null, null, i0$sym);
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("port", i0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21878, null, null, null);
        r6 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>(r4, r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_6 = null;
        if r6 != null goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45942, 0);
        $n1 = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label6:
        return $n1;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45942, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;

     label9:
        return r4;

     label10:
        $r14 := @caughtexception;
        r15 = $r14;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 617);
        $r16 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("JSONException in dataPortConnect");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        return null;

        catch org.json.JSONException from label2 to label3 with label10;
        catch org.json.JSONException from label5 to label6 with label10;
        catch org.json.JSONException from label8 to label9 with label10;
    }

    public boolean pasvAccept(java.net.Socket)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $z3$sym, $z2$sym, $z1$sym, $z0$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.net.Socket r1;
        boolean[][] $r2;
        boolean[] r3;
        org.json.JSONObject r4, r5;
        boolean $z0, $z1, $z2, $z3;
        be.ppareit.swiftp_free.MyLog $r6, $r7, $r10;
        org.json.JSONException $r8, r9;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.net.Socket;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21897, 32808, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45943, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45943, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 14);
        r3 = $r2[14];

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21877, null, null);
        r4 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("data_pasv_accept");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21878, null, null, null);
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>(r1, r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_5 = null;
        if r5 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45944, 0);
        $z0$sym = null;
        $z0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21897, $z0$sym);
        return $z0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45944, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21885, null, null);
        $z1 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: boolean checkAndPrintJsonError(org.json.JSONObject)>(r5);
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21885);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45945, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 617);
        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Error response to data_pasv_accept");
        $z2$sym = null;
        $z2 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21897, $z2$sym);
        return $z2;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45945, 1);
        goto label8;

     label8:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 617);
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Proxy data_pasv_accept successful");
        $z3$sym = null;
        $z3 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;

     label9:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21897, $z3$sym);
        return $z3;

     label10:
        $r8 := @caughtexception;
        r9 = $r8;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r11 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSONException in pasvAccept: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r14);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21897, null);
        return 0;

        catch org.json.JSONException from label2 to label3 with label10;
        catch org.json.JSONException from label5 to label6 with label10;
        catch org.json.JSONException from label8 to label9 with label10;
    }

    public java.net.InetAddress getProxyIp()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1;
        java.net.Socket $r3, $r4;
        java.net.InetAddress $r5;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21898, 32809, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45946, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45946, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 15);
        r2 = $r1[15];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3675, null);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: boolean isAlive()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(3675);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45947, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 621);
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4559, null);
        $z1 = virtualinvoke $r3.<java.net.Socket: boolean isConnected()>();
        $z1$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4559);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_4 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z1$sym, null, $z1, 0);
        if $z1 == 0 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45948, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int commandSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 621);
        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(15279, null);
        $r5 = virtualinvoke $r4.<java.net.Socket: java.net.InetAddress getInetAddress()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r5;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45947, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45948, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return null;
    }

    private org.json.JSONObject makeJsonRequest(java.lang.String) throws org.json.JSONException
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        org.json.JSONObject r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21877, 32810, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45949, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45949, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 16);
        r3 = $r2[16];
        $r5 = new org.json.JSONObject;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r5.<org.json.JSONObject: void <init>()>();
        r4 = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21889, null, null, null);
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("action", r1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return r4;
    }

    void persistProxyUsage()
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, $l2$sym, $b1$sym, $l0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor r4;
        long $l0, $l2;
        byte $b1;
        android.content.Context $r5;
        be.ppareit.swiftp_free.MyLog $r7;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21880, 32811, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45950, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45950, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 17);
        r2 = $r1[17];
        $l0$sym = r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 625);
        $l0 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        $b1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l0$sym, null, $l0, 0L);
        $b1 = $l0 cmp 0L;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_5 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b1$sym, null, $b1, 0);
        if $b1 != 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45951, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 45951, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r5 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r3 = virtualinvoke $r5.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("proxy_usage_data", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5321, null);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $l2$sym = r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym>;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 625);
        $l2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8331, null, null, $l2$sym);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("proxy_usage_data", $l2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(8350, null);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 617);
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Persisted proxy usage to preferences");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    long getPersistedProxyUsage()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $l0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.Context $r4;
        long $l0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21873, 32812, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45952, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45952, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 18);
        r2 = $r1[18];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r4 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(8539, null, null, null);
        r3 = virtualinvoke $r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("proxy_usage_data", 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(2333, null, null, null);
        $l0 = interfaceinvoke r3.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("proxy_usage_data", 0L);
        $l0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(2333);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21873, $l0$sym);
        return $l0;
    }

    long getProxyUsage()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $l0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        long $l0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21899, 32813, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45953, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45953, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 19);
        r2 = $r1[19];
        $l0$sym = r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 625);
        $l0 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21899, $l0$sym);
        return $l0;
    }

    void incrementProxyUsage(long)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $b7$sym, $l6$sym, $l5$sym, $l4$sym, $l3$sym, $l2$sym, l1$sym, r2$sym, l0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        long l0, l1, $l2, $l3, $l4, $l5, $l6;
        boolean[][] $r1;
        boolean[] r2;
        byte $b7;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        l0 := @parameter0: long;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21882, 32814, 2);
        l0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45954, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45954, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 20);
        r2 = $r1[20];
        l1$sym = r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 625);
        l1 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        $l2$sym = r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym>;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 625);
        $l2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        $l3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l2$sym, l0$sym, $l2, l0);
        $l3 = $l2 + l0;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym> = $l3$sym;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 625);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(625);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage> = $l3;
        $l4$sym = r0.<be.ppareit.swiftp_free.server.ProxyConnector: acteve.symbolic.integer.Expression proxyUsage$sym>;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyUsage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 625);
        $l4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        $l5$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l4$sym, null, $l4, 5000000L);
        $l5 = $l4 % 5000000L;
        $l6$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>(l1$sym, null, l1, 5000000L);
        $l6 = l1 % 5000000L;
        $b7$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,long,long)>($l5$sym, $l6$sym, $l5, $l6);
        $b7 = $l5 cmp $l6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_6 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b7$sym, null, $b7, 0);
        if $b7 >= 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45955, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21880, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45955, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;
    }

    public be.ppareit.swiftp_free.server.ProxyConnector$State getProxyState()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21900, 32815, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45956, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45956, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 21);
        r2 = $r1[21];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 626);
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    private void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        be.ppareit.swiftp_free.server.ProxyConnector$State r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        be.ppareit.swiftp_free.MyLog $r5;
        java.lang.String $r8;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: be.ppareit.swiftp_free.server.ProxyConnector$State;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21874, 32816, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45957, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45957, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 22);
        r3 = $r2[22];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 626);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyState$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(626);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState> = r1;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 617);
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r4 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy state changed to ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(147, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21804, null, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(3, $r8, 1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public static java.lang.String stateToString(be.ppareit.swiftp_free.server.ProxyConnector$State)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i1$sym, $i0$sym, $r4$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        be.ppareit.swiftp_free.server.ProxyConnector$State r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3;
        int[] $r4;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @parameter0: be.ppareit.swiftp_free.server.ProxyConnector$State;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21901, 32817, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45958, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45958, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 23);
        r2 = $r1[23];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        $r4$sym = <be.ppareit.swiftp_free.server.ProxyConnector$1: acteve.symbolic.integer.Expression $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$sym>;
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 607);
        $r4 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(444, null);
        $i0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(444);
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int[],int)>($r4$sym, $i0$sym, $r4, $i0);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, $i0);
        $i1 = $r4[$i0];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 1);
        if $i1 == 1 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45959, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 2);
        if $i1 == 2 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45960, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 3);
        if $i1 == 3 goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45961, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 4);
        if $i1 == 4 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45962, 0);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i1$sym, null, $i1, 5);
        if $i1 == 5 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45963, 0);
        goto label12;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45959, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r5 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034156);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return $r5;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45960, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r6 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034152);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r6;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45961, 1);
        goto label7;

     label7:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r7 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034153);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return $r7;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45962, 1);
        goto label9;

     label9:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r8 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034154);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return $r8;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45963, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r9 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034155);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        return $r9;

     label12:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r10 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034143);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        return $r10;
    }

    public java.lang.String getURL()
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r8, $r13, $r15, $r17;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11, $r12, $r14;
        android.content.Context $r16;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(456, 32818, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45964, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45964, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 24);
        r2 = $r1[24];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyState$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 626);
        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState>;
        _sym_tmp_3 = <be.ppareit.swiftp_free.server.ProxyConnector$State: int CONNECTED$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 610);
        $r5 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_6 = null;
        if $r4 != $r5 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45965, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(11550);
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: java.lang.String getUsername()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        _sym_tmp_6 = null;
        if r3 == null goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45966, 0);
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ftp://");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int prefix$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 629);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String prefix>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int hostname$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 623);
        $r13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r15;

        goto label4;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45965, 1);
        goto label4;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45966, 1);
        goto label4;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(1272);
        $r16 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(276, null, null);
        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.String getString(int)>(2131034143);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return $r17;
    }

    public java.lang.String getProxyMessage()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21902, 32819, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 616);
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45967, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45967, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 25);
        r2 = $r1[25];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: int proxyMessage$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 627);
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String proxyMessage>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32820, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 26);
        r1 = $r0[26];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r27$sym, $r26$sym, $r25$sym, $r24$sym, $r23$sym, $r22$sym, $r21$sym, $r20$sym, $r19$sym, $r18$sym, $r17$sym, $r16$sym, $r15$sym, $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32821, 0);
        $r0 = newmultiarray (boolean)[27][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 616);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyConnector: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(616);
        <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[33];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[12];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[10];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[10];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[39];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[8];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[4];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[6];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[6];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        $r15 = newarray (boolean)[6];
        $r15$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 14);
        $r0[14] = $r15;
        $r16 = newarray (boolean)[4];
        $r16$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 15);
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r17$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 16);
        $r0[16] = $r17;
        $r18 = newarray (boolean)[3];
        $r18$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 17);
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r19$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 18);
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r20$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 19);
        $r0[19] = $r20;
        $r21 = newarray (boolean)[3];
        $r21$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 20);
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r22$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 21);
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r23$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 22);
        $r0[22] = $r23;
        $r24 = newarray (boolean)[7];
        $r24$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 23);
        $r0[23] = $r24;
        $r25 = newarray (boolean)[4];
        $r25$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 24);
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r26$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 25);
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r27$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 26);
        $r0[26] = $r27;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyConnector", -7727939043208810966L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.ProxyDataSocketFactory extends be.ppareit.swiftp_free.server.DataSocketFactory
{
    private java.net.Socket socket;
    private int proxyListenPort;
    be.ppareit.swiftp_free.server.ProxyConnector proxyConnector;
    java.net.InetAddress clientAddress;
    int clientPort;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private int socket$a3tid;
    private acteve.symbolic.integer.Expression proxyListenPort$sym;
    private int proxyListenPort$a3tid;
    int proxyConnector$a3tid;
    int clientAddress$a3tid;
    acteve.symbolic.integer.Expression clientPort$sym;
    int clientPort$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(0, 32822, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 631);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45968, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45968, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.DataSocketFactory: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private void clearState()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r6;
        java.net.Socket $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21866, 32823, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 631);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45969, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45969, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 632);
        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = null;
        if $r4 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45970, 0);

     label2:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 632);
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r5.<java.net.Socket: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;
        r3 = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45970, 1);
        goto label6;

     label6:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 632);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(632);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket> = null;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 633);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(633);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientAddress$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 634);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientAddress$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(634);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.InetAddress clientAddress> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: acteve.symbolic.integer.Expression proxyListenPort$sym> = null;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 635);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(635);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort> = 0;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: acteve.symbolic.integer.Expression clientPort$sym> = null;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 636);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(636);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort> = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.net.InetAddress getPasvIp()
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector r3;
        java.net.InetAddress $r4;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21869, 32824, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 631);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45971, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45971, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21798);
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_2 = null;
        if r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45972, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return null;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45972, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21898, null);
        $r4 = virtualinvoke r3.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.InetAddress getProxyIp()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return $r4;
    }

    public int onPasv()
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $i1$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r3;
        be.ppareit.swiftp_free.server.ProxyConnector $r4, $r5, $r7;
        be.ppareit.swiftp_free.MyLog $r6, $r8;
        java.net.Socket $r9;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21855, 32825, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 631);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45973, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45973, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21798);
        $r4 = staticinvoke <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 633);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(633);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = $r4;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 633);
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_10 = null;
        if $r5 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45974, 0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 598);
        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Unexpected null proxyConnector in onPasv");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21855, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45974, 1);
        goto label3;

     label3:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 633);
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21894, null);
        r3 = virtualinvoke $r7.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyDataSocketInfo pasvListen()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_10 = null;
        if r3 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45975, 0);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 598);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Null ProxyDataSocketInfo");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21855, null);
        return 0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 45975, 1);
        goto label5;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21903, null);
        $r9 = virtualinvoke r3.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: java.net.Socket getSocket()>();
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 632);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(632);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket> = $r9;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21904, null);
        $i0 = virtualinvoke r3.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int getRemotePublicPort()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21904);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: acteve.symbolic.integer.Expression proxyListenPort$sym> = $i0$sym;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 635);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(635);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort> = $i0;
        $i1$sym = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: acteve.symbolic.integer.Expression proxyListenPort$sym>;
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 635);
        $i1 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21855, $i1$sym);
        return $i1;
    }

    public boolean onPort(java.net.InetAddress, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        java.net.InetAddress r1;
        boolean[][] $r2;
        boolean[] r3;
        be.ppareit.swiftp_free.server.ProxyConnector $r4;
        be.ppareit.swiftp_free.MyLog $r5;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        r1 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21857, 32826, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 631);
        $r2 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45976, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45976, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 4);
        r3 = $r2[4];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21866, null);
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21798);
        $r4 = staticinvoke <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 633);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(633);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = $r4;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientAddress$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 634);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientAddress$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(634);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.InetAddress clientAddress> = r1;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: acteve.symbolic.integer.Expression clientPort$sym> = i0$sym;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 636);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(636);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort> = i0;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 598);
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyDataSocketFactory client port settings stored");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21857, null);
        return 1;
    }

    public java.net.Socket onTransfer()
    {
        acteve.symbolic.integer.Expression _sym_tmp_16, $z0$sym, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector $r3, $r6, $r8, $r12;
        be.ppareit.swiftp_free.MyLog $r4, $r7, $r15;
        java.net.Socket $r5, $r10, $r11, $r13, $r14;
        java.net.InetAddress $r9;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21868, 32827, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 631);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_16 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45977, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45977, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 5);
        r2 = $r1[5];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 633);
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_16 = null;
        if $r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45978, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 598);
        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void w(java.lang.String)>("Unexpected null proxyConnector in onTransfer");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return null;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45978, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 632);
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_16 = null;
        if $r5 != null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45979, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 633);
        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_16 = null;
        if $r6 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45980, 0);
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 598);
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Unexpected null proxyConnector in onTransfer");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return null;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45980, 1);
        goto label5;

     label5:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 633);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientAddress$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 634);
        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.InetAddress clientAddress>;
        $i0$sym = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: acteve.symbolic.integer.Expression clientPort$sym>;
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 636);
        $i0 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21896, null, null, $i0$sym);
        $r10 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket dataPortConnect(java.net.InetAddress,int)>($r9, $i0);
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 632);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(632);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket> = $r10;
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 632);
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        return $r11;

        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45979, 1);
        goto label7;

     label7:
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyConnector$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 633);
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 632);
        $r13 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21897, null, null);
        $z0 = virtualinvoke $r12.<be.ppareit.swiftp_free.server.ProxyConnector: boolean pasvAccept(java.net.Socket)>($r13);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21897);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        _sym_tmp_16 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label8;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45981, 0);
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_14, 632);
        $r14 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return $r14;

        goto label9;

     label8:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_16, 45981, 1);
        goto label9;

     label9:
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_15, 598);
        $r15 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21805, null, null);
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void w(java.lang.String)>("proxyConnector pasvAccept failed");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;
        return null;
    }

    public void reportTraffic(long)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, l0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        long l0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector r3;
        be.ppareit.swiftp_free.MyLog $r4;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        l0 := @parameter0: long;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21870, 32828, 2);
        l0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 631);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45982, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45982, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21798);
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_3 = null;
        if r3 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45983, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.DataSocketFactory: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 598);
        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Can\'t report traffic, null ProxyConnector");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45983, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21882, null, l0$sym);
        virtualinvoke r3.<be.ppareit.swiftp_free.server.ProxyConnector: void incrementProxyUsage(long)>(l0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32829, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 7);
        r1 = $r0[7];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32830, 0);
        $r0 = newmultiarray (boolean)[8][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 631);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(631);
        <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[9];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyDataSocketFactory", 2357694806399183769L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.ProxyDataSocketInfo extends java.net.Socket
{
    private int remotePublicPort;
    private java.net.Socket socket;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    private acteve.symbolic.integer.Expression remotePublicPort$sym;
    private int remotePublicPort$a3tid;
    private int socket$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public java.net.Socket getSocket()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21903, 32831, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 637);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45984, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45984, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 0);
        r2 = $r1[0];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 638);
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: java.net.Socket socket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setSocket(java.net.Socket)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        java.net.Socket r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        r1 := @parameter0: java.net.Socket;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21905, 32832, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 637);
        $r2 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45985, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45985, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 638);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int socket$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(638);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: java.net.Socket socket> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public void <init>(java.net.Socket, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        java.net.Socket r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        r1 := @parameter0: java.net.Socket;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21893, 32833, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 637);
        $r2 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45986, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 45986, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.net.Socket: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: acteve.symbolic.integer.Expression remotePublicPort$sym> = i0$sym;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 639);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(639);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort> = i0;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int socket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 638);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int socket$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(638);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: java.net.Socket socket> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public int getRemotePublicPort()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21904, 32834, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 637);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45987, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45987, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 3);
        r2 = $r1[3];
        $i0$sym = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: acteve.symbolic.integer.Expression remotePublicPort$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 639);
        $i0 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21904, $i0$sym);
        return $i0;
    }

    public void setRemotePublicPort(int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        i0 := @parameter0: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21906, 32835, 2);
        i0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 637);
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45988, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45988, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: acteve.symbolic.integer.Expression remotePublicPort$sym> = i0$sym;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 639);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(639);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort> = i0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32836, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 5);
        r1 = $r0[5];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32837, 0);
        $r0 = newmultiarray (boolean)[6][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 637);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(637);
        <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyDataSocketInfo", -7216090755577772872L);
        return $r0;
    }
}
public final enum class be.ppareit.swiftp_free.server.SessionThread$Source extends java.lang.Enum
{
    public static final enum be.ppareit.swiftp_free.server.SessionThread$Source LOCAL;
    public static final enum be.ppareit.swiftp_free.server.SessionThread$Source PROXY;
    private static final be.ppareit.swiftp_free.server.SessionThread$Source[] $VALUES;
    private static final boolean[][] $VRc;
    public static final enum int LOCAL$a3tid;
    public static final enum int PROXY$a3tid;
    private static final int $VALUES$a3tid;
    private static final int $VRc$a3tid;

    public static be.ppareit.swiftp_free.server.SessionThread$Source[] values()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $r3$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.SessionThread$Source[] $r2, $r4;
        java.lang.Object $r3;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21907, 32838, 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread$Source: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 640);
        $r0 = <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r0 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45989, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 45989, 1);
        goto label1;

     label1:
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 0);
        r1 = $r0[0];
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.SessionThread$Source: int $VALUES$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 641);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source[] $VALUES>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(63, null);
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(63);
        $r4 = (be.ppareit.swiftp_free.server.SessionThread$Source[]) $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return $r4;
    }

    public static be.ppareit.swiftp_free.server.SessionThread$Source valueOf(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        be.ppareit.swiftp_free.server.SessionThread$Source $r4;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21908, 32839, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread$Source: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 640);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45990, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45990, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(509, null, null);
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "be/ppareit/swiftp_free/server/SessionThread$Source", r0);
        $r4 = (be.ppareit.swiftp_free.server.SessionThread$Source) $r3;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.SessionThread$Source r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread$Source;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(511, 32840, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread$Source: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 640);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45991, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45991, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, i0$sym);
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.SessionThread$Source $r2, $r3, $r5, $r6;
        be.ppareit.swiftp_free.server.SessionThread$Source[] $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32841, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        $r2 = new be.ppareit.swiftp_free.server.SessionThread$Source;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r2.<be.ppareit.swiftp_free.server.SessionThread$Source: void <init>(java.lang.String,int)>("LOCAL", 0);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread$Source: int LOCAL$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 642);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.SessionThread$Source: int LOCAL$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(642);
        <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source LOCAL> = $r2;
        $r3 = new be.ppareit.swiftp_free.server.SessionThread$Source;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(511, null, null, null);
        specialinvoke $r3.<be.ppareit.swiftp_free.server.SessionThread$Source: void <init>(java.lang.String,int)>("PROXY", 1);
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.SessionThread$Source: int PROXY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 630);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.SessionThread$Source: int PROXY$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(630);
        <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source PROXY> = $r3;
        $r4 = newarray (be.ppareit.swiftp_free.server.SessionThread$Source)[2];
        _sym_tmp_3 = <be.ppareit.swiftp_free.server.SessionThread$Source: int LOCAL$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 642);
        $r5 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source LOCAL>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r4, 0);
        $r4[0] = $r5;
        _sym_tmp_4 = <be.ppareit.swiftp_free.server.SessionThread$Source: int PROXY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 630);
        $r6 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source PROXY>;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r4, 1);
        $r4[1] = $r6;
        _sym_tmp_5 = <be.ppareit.swiftp_free.server.SessionThread$Source: int $VALUES$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 641);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.SessionThread$Source: int $VALUES$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(641);
        <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source[] $VALUES> = $r4;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32842, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread$Source: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 640);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.SessionThread$Source: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(640);
        <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/SessionThread$Source", 8394644511464601078L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.SessionThread extends java.lang.Thread
{
    protected boolean shouldExit;
    protected java.net.Socket cmdSocket;
    protected be.ppareit.swiftp_free.MyLog myLog;
    protected java.nio.ByteBuffer buffer;
    protected boolean pasvMode;
    protected boolean binaryMode;
    protected be.ppareit.swiftp_free.server.Account account;
    protected boolean authenticated;
    protected java.io.File workingDir;
    protected java.net.Socket dataSocket;
    protected java.io.File renameFrom;
    protected be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory;
    java.io.OutputStream dataOutputStream;
    private boolean sendWelcomeBanner;
    protected java.lang.String encoding;
    protected be.ppareit.swiftp_free.server.SessionThread$Source source;
    int authFails;
    public static int MAX_AUTH_FAILS;
    static int numNulls;
    private static final boolean[][] $VRc;
    protected acteve.symbolic.integer.Expression shouldExit$sym;
    protected int shouldExit$a3tid;
    protected int cmdSocket$a3tid;
    protected int myLog$a3tid;
    protected int buffer$a3tid;
    protected acteve.symbolic.integer.Expression pasvMode$sym;
    protected int pasvMode$a3tid;
    protected acteve.symbolic.integer.Expression binaryMode$sym;
    protected int binaryMode$a3tid;
    protected int account$a3tid;
    protected acteve.symbolic.integer.Expression authenticated$sym;
    protected int authenticated$a3tid;
    protected int workingDir$a3tid;
    protected int dataSocket$a3tid;
    protected int renameFrom$a3tid;
    protected int dataSocketFactory$a3tid;
    int dataOutputStream$a3tid;
    private acteve.symbolic.integer.Expression sendWelcomeBanner$sym;
    private int sendWelcomeBanner$a3tid;
    protected int encoding$a3tid;
    protected int source$a3tid;
    acteve.symbolic.integer.Expression authFails$sym;
    int authFails$a3tid;
    public static acteve.symbolic.integer.Expression MAX_AUTH_FAILS$sym;
    public static int MAX_AUTH_FAILS$a3tid;
    static acteve.symbolic.integer.Expression numNulls$sym;
    static int numNulls$a3tid;
    private static final int $VRc$a3tid;

    public boolean sendViaDataSocket(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $z0$sym, $i0$sym, r4$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.lang.String r1, $r5, $r9, $r11;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4;
        be.ppareit.swiftp_free.MyLog $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r10;
        boolean $z0;
        java.io.UnsupportedEncodingException $r12, r13;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21841, 32843, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45992, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 45992, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 0);
        r3 = $r2[0];

     label2:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 644);
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(134, null, null);
        r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r5);
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(134);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 645);
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r7 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using data connection encoding: ");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 644);
        $r9 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r11);
        $i0$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>(r4$sym);
        $i0 = lengthof r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21858, null, r4$sym, $i0$sym);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int)>(r4, $i0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21858);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21841, $z0$sym);
        return $z0;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 645);
        $r14 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Unsupported encoding for data socket send");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21841, null);
        return 0;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public boolean sendViaDataSocket(byte[], int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $z0$sym, r3$sym, i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.SessionThread r0;
        byte[] r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21858, 32844, 3);
        r1$sym = a3targs$symargs[1];
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45993, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 45993, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 1);
        r3 = $r2[1];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21859, null, r1$sym, null, i0$sym);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int,int)>(r1, 0, i0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21859);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21858, $z0$sym);
        return $z0;
    }

    public boolean sendViaDataSocket(byte[], int, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $l2$sym, r3$sym, i1$sym, i0$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, i1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        byte[] r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.IOException r4, $r8;
        java.io.OutputStream $r5, $r7;
        be.ppareit.swiftp_free.MyLog $r6, $r9, $r10;
        java.lang.String $r11;
        be.ppareit.swiftp_free.server.DataSocketFactory $r12;
        long $l2;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21859, 32845, 4);
        r1$sym = a3targs$symargs[1];
        i0$sym = a3targs$symargs[2];
        i1$sym = a3targs$symargs[3];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45994, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45994, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 2);
        r3 = $r2[2];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 646);
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_8 = null;
        if $r5 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45995, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 645);
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Can\'t send via null dataOutputStream");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21859, null);
        return 0;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45995, 1);
        goto label3;

     label3:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 0);
        if i1 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45996, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21859, null);
        return 1;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 45996, 1);
        goto label5;

     label5:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 646);
        $r7 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(293, null, r1$sym, i0$sym, i1$sym);
        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;
        r4 = $r8;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 645);
        $r9 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Couldn\'t write output stream for data socket");
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 645);
        $r10 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke r4.<java.io.IOException: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21859, null);
        return 0;

     label8:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocketFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 647);
        $r12 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $l2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>(i1$sym, 5);
        $l2 = (long) i1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21870, null, $l2$sym);
        virtualinvoke $r12.<be.ppareit.swiftp_free.server.DataSocketFactory: void reportTraffic(long)>($l2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21859, null);
        return 1;

        catch java.io.IOException from label5 to label6 with label7;
    }

    public int receiveFromDataSocket(byte[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, $l4$sym, $b3$sym, $i2$sym, $i1$sym, $z0$sym, i0$sym, r3$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, i0, $i1, $i2;
        be.ppareit.swiftp_free.server.SessionThread r0;
        byte[] r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.InputStream r4;
        java.io.IOException r5, $r11;
        java.net.Socket $r6, $r8, $r10;
        be.ppareit.swiftp_free.MyLog $r7, $r9, $r12;
        boolean $z0;
        byte $b3;
        be.ppareit.swiftp_free.server.DataSocketFactory $r13;
        long $l4;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: byte[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21846, 32846, 2);
        r1$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45997, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45997, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 3);
        r3 = $r2[3];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 648);
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        _sym_tmp_9 = null;
        if $r6 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45998, 0);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 645);
        $r7 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Can\'t receive from null dataSocket");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21846, null);
        return -2;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45998, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 648);
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(4559, null);
        $z0 = virtualinvoke $r8.<java.net.Socket: boolean isConnected()>();
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(4559);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 != 0 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45999, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 645);
        $r9 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Can\'t receive from unconnected socket");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21846, null);
        return -2;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 45999, 1);
        goto label5;

     label5:
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 648);
        $r10 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3359, null);
        r4 = virtualinvoke $r10.<java.net.Socket: java.io.InputStream getInputStream()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;

     label6:
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>(r1$sym);
        $i1 = lengthof r1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(226, null, r1$sym, null, $i1$sym);
        $i2 = virtualinvoke r4.<java.io.InputStream: int read(byte[],int,int)>(r1, 0, $i1);
        $i2$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(226);
        i0$sym = $i2$sym;
        i0 = $i2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i2$sym, null, $i2, 0);
        if $i2 != 0 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46000, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 6);
        r3[6] = 1;
        goto label6;

        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46000, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 7);
        r3[7] = 1;
        _sym_tmp_9 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i0$sym, null, i0, -1);
        if i0 != -1 goto label10;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46001, 0);
        $b3$sym = null;
        $b3 = -1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 8);
        r3[8] = 1;

     label9:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21846, $b3$sym);
        return $b3;

        goto label11;

     label10:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46001, 1);
        goto label11;

     label11:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 9);
        r3[9] = 1;
        goto label13;

     label12:
        $r11 := @caughtexception;
        r5 = $r11;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 645);
        $r12 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Error reading data socket");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 10, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 10);
        r3[10] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21846, null);
        return 0;

     label13:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocketFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 647);
        $r13 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $l4$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>(i0$sym, 5);
        $l4 = (long) i0;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21870, null, $l4$sym);
        virtualinvoke $r13.<be.ppareit.swiftp_free.server.DataSocketFactory: void reportTraffic(long)>($l4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 11, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 11);
        r3[11] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21846, i0$sym);
        return i0;

        catch java.io.IOException from label5 to label9 with label12;
    }

    public int onPasv()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $i0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.DataSocketFactory $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21855, 32847, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46002, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46002, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 4);
        r2 = $r1[4];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocketFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 647);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21855, null);
        $i0 = virtualinvoke $r3.<be.ppareit.swiftp_free.server.DataSocketFactory: int onPasv()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21855);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21855, $i0$sym);
        return $i0;
    }

    public boolean onPort(java.net.InetAddress, int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r3$sym, i0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1, i0;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.net.InetAddress r1;
        boolean[][] $r2;
        boolean[] r3;
        be.ppareit.swiftp_free.server.DataSocketFactory $r4;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21857, 32848, 3);
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46003, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46003, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 5);
        r3 = $r2[5];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocketFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 647);
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21857, null, null, i0$sym);
        $z0 = virtualinvoke $r4.<be.ppareit.swiftp_free.server.DataSocketFactory: boolean onPort(java.net.InetAddress,int)>(r1, i0);
        $z0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21857);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21857, $z0$sym);
        return $z0;
    }

    public java.net.InetAddress getDataSocketPasvIp()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;
        java.net.InetAddress $r4;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21856, 32849, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46004, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46004, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 6);
        r2 = $r1[6];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 649);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(961, null);
        $r4 = virtualinvoke $r3.<java.net.Socket: java.net.InetAddress getLocalAddress()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r4;
    }

    public boolean startUsingDataSocket()
    {
        acteve.symbolic.integer.Expression _sym_tmp_10, $z1$sym, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r10;
        be.ppareit.swiftp_free.server.DataSocketFactory $r4;
        java.net.Socket $r5, $r6, $r8;
        be.ppareit.swiftp_free.MyLog $r7, $r11;
        boolean $z0, $z1;
        java.io.OutputStream $r9;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21839, 32850, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_10 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46005, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46005, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 7);
        r2 = $r1[7];

     label2:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocketFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 647);
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21868, null);
        $r5 = virtualinvoke $r4.<be.ppareit.swiftp_free.server.DataSocketFactory: java.net.Socket onTransfer()>();
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 648);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(648);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = $r5;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 648);
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_10 = null;
        if $r6 != null goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46006, 0);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 645);
        $r7 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "dataSocketFactory.onTransfer() returned null");
        $z0$sym = null;
        $z0 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label3:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21839, $z0$sym);
        return $z0;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_10, 46006, 1);
        goto label5;

     label5:
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 648);
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3358, null);
        $r9 = virtualinvoke $r8.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 646);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(646);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream> = $r9;
        $z1$sym = null;
        $z1 = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label6:
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21839, $z1$sym);
        return $z1;

     label7:
        $r10 := @caughtexception;
        r3 = $r10;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 645);
        $r11 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "IOException getting OutputStream for data socket");
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 648);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(648);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21839, null);
        return 0;

        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public void quit()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2822, 32851, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46007, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46007, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 8);
        r2 = $r1[8];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 645);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21776, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("SessionThread told to quit");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3370, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public void closeDataSocket()
    {
        acteve.symbolic.integer.Expression _sym_tmp_9, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r7, $r10, r11;
        be.ppareit.swiftp_free.MyLog $r4;
        java.io.OutputStream $r5, $r6;
        java.net.Socket $r8, $r9;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21789, 32852, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_9 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46008, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46008, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 9);
        r2 = $r1[9];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 645);
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Closing data socket");
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 646);
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_9 = null;
        if $r5 == null goto label6;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46009, 0);

     label2:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 646);
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r6.<java.io.OutputStream: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r3 = $r7;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label5:
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 646);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(646);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label7;

     label6:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46009, 1);
        goto label7;

     label7:
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 648);
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        _sym_tmp_9 = null;
        if $r8 == null goto label11;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46010, 0);

     label8:
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 648);
        $r9 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r9.<java.net.Socket: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;

     label9:
        goto label12;

     label10:
        $r10 := @caughtexception;
        r11 = $r10;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label12;

     label11:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_9, 46010, 1);
        goto label12;

     label12:
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 648);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(648);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = null;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label8 to label9 with label10;
    }

    protected java.net.InetAddress getLocalAddress()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;
        java.net.InetAddress $r4;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(961, 32853, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46011, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46011, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 10);
        r2 = $r1[10];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 649);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(961, null);
        $r4 = virtualinvoke $r3.<java.net.Socket: java.net.InetAddress getLocalAddress()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r4;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_8, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.BufferedReader r3, $r12;
        java.lang.String r4, $r8, $r11, $r20;
        be.ppareit.swiftp_free.MyLog $r5, $r16, $r21, $r24;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r17, $r18, $r19;
        java.io.InputStreamReader $r13;
        java.net.Socket $r14;
        java.io.InputStream $r15;
        java.io.IOException $r22, r23;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32854, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_8 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46012, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46012, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 11);
        r2 = $r1[11];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 645);
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "SessionThread started");
        $z0$sym = r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression sendWelcomeBanner$sym>;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int sendWelcomeBanner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 650);
        $z0 = r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendWelcomeBanner>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_8 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($z0$sym, null, $z0, 0);
        if $z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46013, 0);
        $r6 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("220 SwiFTP ");
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(5976);
        $r8 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String getVersion()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ready\r\n");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1077, null, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>($r11);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46013, 1);
        goto label3;

     label3:
        $r12 = new java.io.BufferedReader;
        $r13 = new java.io.InputStreamReader;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 649);
        $r14 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3359, null);
        $r15 = virtualinvoke $r14.<java.net.Socket: java.io.InputStream getInputStream()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3360, null, null);
        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r15);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(3361, null, null, null);
        specialinvoke $r12.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r13, 8192);
        r3 = $r12;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3171, null);
        r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        _sym_tmp_8 = null;
        if r4 == null goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46014, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21796, null, null);
        staticinvoke <be.ppareit.swiftp_free.FTPServerService: void writeMonitor(boolean,java.lang.String)>(1, r4);
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 645);
        $r16 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r17 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received line from client: ");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r20);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21865, null, null);
        staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: void dispatchCommand(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r0, r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        goto label7;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_8, 46014, 1);
        goto label6;

     label6:
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 645);
        $r21 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r21.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("readLine gave null, quitting");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label4;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;

     label9:
        goto label11;

     label10:
        $r22 := @caughtexception;
        r23 = $r22;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_7, 645);
        $r24 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r24.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Connection was dropped");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 8, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 8);
        r2[8] = 1;

     label11:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3370, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 9, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 9);
        r2[9] = 1;
        return;

        catch java.io.IOException from label3 to label9 with label10;
    }

    public static boolean compareLen(byte[], byte[], int)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $b3$sym, $b2$sym, i1$sym, r3$sym, i0$sym, r1$sym, r0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1, i0, i1;
        byte[] r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        byte $b2, $b3;

        r0 := @parameter0: byte[];
        r1 := @parameter1: byte[];
        i0 := @parameter2: int;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21909, 32855, 3);
        r0$sym = a3targs$symargs[0];
        r1$sym = a3targs$symargs[1];
        i0$sym = a3targs$symargs[2];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46015, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46015, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 12);
        r3 = $r2[12];
        i1$sym = null;
        i1 = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label2:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, i0$sym, i1, i0);
        if i1 >= i0 goto label5;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46016, 0);
        $b2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int)>(r0$sym, i1$sym, r0, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r0, i1);
        $b2 = r0[i1];
        $b3$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,byte[],int)>(r1$sym, i1$sym, r1, i1);
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>(r1, i1);
        $b3 = r1[i1];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        _sym_tmp_2 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($b2$sym, $b3$sym, $b2, $b3);
        if $b2 == $b3 goto label3;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46017, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 3);
        r3[3] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21909, null);
        return 0;

        goto label4;

     label3:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46017, 1);
        goto label4;

     label4:
        i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(i1$sym, null, i1, 1);
        i1 = i1 + 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 4);
        r3[4] = 1;
        goto label2;

        goto label6;

     label5:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46016, 1);
        goto label6;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 5);
        r3[5] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21909, null);
        return 1;
    }

    public void closeSocket()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r6;
        java.net.Socket $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(3370, 32856, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46018, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46018, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 13);
        r2 = $r1[13];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 649);
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_4 = null;
        if $r4 != null goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46019, 0);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46019, 1);
        goto label3;

     label3:
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 649);
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r5.<java.net.Socket: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;
        r3 = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;

     label6:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public void writeBytes(byte[])
    {
        acteve.symbolic.integer.Expression _sym_tmp_6, $l2$sym, $i1$sym, $i0$sym, r3$sym, r1$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        byte[] r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.BufferedOutputStream r4, $r5;
        java.net.Socket $r6;
        java.io.OutputStream $r7;
        be.ppareit.swiftp_free.server.DataSocketFactory $r8;
        long $l2;
        java.io.IOException $r9, r10;
        be.ppareit.swiftp_free.MyLog $r11;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: byte[];
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21910, 32857, 2);
        r1$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_6 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46020, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_6, 46020, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 14);
        r3 = $r2[14];

     label2:
        $r5 = new java.io.BufferedOutputStream;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 649);
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3358, null);
        $r7 = virtualinvoke $r6.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        $i0$sym = <be.ppareit.swiftp_free.Defaults: acteve.symbolic.integer.Expression dataChunkSize$sym>;
        _sym_tmp_3 = <be.ppareit.swiftp_free.Defaults: int dataChunkSize$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 455);
        $i0 = <be.ppareit.swiftp_free.Defaults: int dataChunkSize>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(6199, null, null, $i0$sym);
        specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r7, $i0);
        r4 = $r5;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(142, null, r1$sym);
        virtualinvoke r4.<java.io.BufferedOutputStream: void write(byte[])>(r1);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2039, null);
        virtualinvoke r4.<java.io.BufferedOutputStream: void flush()>();
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocketFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 647);
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)>(r1$sym);
        $i1 = lengthof r1;
        $l2$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression,int)>($i1$sym, 5);
        $l2 = (long) $i1;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21870, null, $l2$sym);
        virtualinvoke $r8.<be.ppareit.swiftp_free.server.DataSocketFactory: void reportTraffic(long)>($l2);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;
        r10 = $r9;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 645);
        $r11 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Exception writing socket");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(3370, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;
        return;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void writeString(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r4$sym, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.lang.String r1, $r6, $r11, $r13;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4;
        java.io.UnsupportedEncodingException r5, $r7;
        be.ppareit.swiftp_free.MyLog $r8;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(1077, 32858, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46021, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46021, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 15);
        r3 = $r2[15];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21796, null, null);
        staticinvoke <be.ppareit.swiftp_free.FTPServerService: void writeMonitor(boolean,java.lang.String)>(0, r1);

     label2:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 644);
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(134, null, null);
        r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r6);
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(134);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r5 = $r7;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 645);
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r9 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported encoding: ");
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 644);
        $r11 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(15225, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void e(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(150, null);
        r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();
        r4$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(150);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21910, null, r4$sym);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeBytes(byte[])>(r4);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    protected java.net.Socket getSocket()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21903, 32859, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46022, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46022, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 16);
        r2 = $r1[16];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 649);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public be.ppareit.swiftp_free.server.Account getAccount()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.Account $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21911, 32860, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46023, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46023, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 17);
        r2 = $r1[17];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int account$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 573);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setAccount(be.ppareit.swiftp_free.server.Account)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        be.ppareit.swiftp_free.server.Account r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: be.ppareit.swiftp_free.server.Account;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21912, 32861, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46024, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46024, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 18);
        r3 = $r2[18];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int account$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 573);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int account$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(573);
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public boolean isPasvMode()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21913, 32862, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46025, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46025, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 19);
        r2 = $r1[19];
        $z0$sym = r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression pasvMode$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int pasvMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 651);
        $z0 = r0.<be.ppareit.swiftp_free.server.SessionThread: boolean pasvMode>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21913, $z0$sym);
        return $z0;
    }

    public void <init>(java.net.Socket, be.ppareit.swiftp_free.server.DataSocketFactory, be.ppareit.swiftp_free.server.SessionThread$Source)
    {
        acteve.symbolic.integer.Expression _sym_tmp_21, $i0$sym, r5$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_20, _sym_tmp_19, _sym_tmp_18, _sym_tmp_17, _sym_tmp_16, _sym_tmp_15, _sym_tmp_14, _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.net.Socket r1;
        be.ppareit.swiftp_free.server.DataSocketFactory r2;
        be.ppareit.swiftp_free.server.SessionThread$Source r3, $r12;
        boolean[][] $r4;
        boolean[] r5;
        be.ppareit.swiftp_free.MyLog $r6;
        java.lang.Class $r7;
        java.lang.String $r8;
        java.nio.ByteBuffer $r9;
        be.ppareit.swiftp_free.server.Account $r10;
        java.io.File $r11;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.net.Socket;
        r2 := @parameter1: be.ppareit.swiftp_free.server.DataSocketFactory;
        r3 := @parameter2: be.ppareit.swiftp_free.server.SessionThread$Source;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21887, 32863, 4);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r4 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_21 = null;
        if $r4 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 46026, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r4 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 46026, 1);
        goto label1;

     label1:
        r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r4, 20);
        r5 = $r4[20];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression shouldExit$sym> = null;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int shouldExit$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 652);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int shouldExit$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(652);
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean shouldExit> = 0;
        $r6 = new be.ppareit.swiftp_free.MyLog;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r6.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r8);
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 645);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(645);
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog> = $r6;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21751);
        $i0 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getInputBufferSize()>();
        $i0$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(21751);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2904, $i0$sym);
        $r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int buffer$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 653);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int buffer$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(653);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.nio.ByteBuffer buffer> = $r9;
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression pasvMode$sym> = null;
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.SessionThread: int pasvMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_5, 651);
        _sym_tmp_5 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int pasvMode$a3tid> = _sym_tmp_5;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(651);
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean pasvMode> = 0;
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression binaryMode$sym> = null;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.SessionThread: int binaryMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_6, 654);
        _sym_tmp_6 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int binaryMode$a3tid> = _sym_tmp_6;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(654);
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean binaryMode> = 0;
        $r10 = new be.ppareit.swiftp_free.server.Account;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r10.<be.ppareit.swiftp_free.server.Account: void <init>()>();
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.SessionThread: int account$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 573);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int account$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(573);
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account> = $r10;
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression authenticated$sym> = null;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authenticated$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_8, 655);
        _sym_tmp_8 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int authenticated$a3tid> = _sym_tmp_8;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(655);
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean authenticated> = 0;
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21801);
        $r11 = staticinvoke <be.ppareit.swiftp_free.Globals: java.io.File getChrootDir()>();
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.SessionThread: int workingDir$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_9, 656);
        _sym_tmp_9 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int workingDir$a3tid> = _sym_tmp_9;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(656);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File workingDir> = $r11;
        _sym_tmp_10 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_10, 648);
        _sym_tmp_10 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid> = _sym_tmp_10;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(648);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = null;
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.SessionThread: int renameFrom$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_11, 657);
        _sym_tmp_11 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int renameFrom$a3tid> = _sym_tmp_11;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(657);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File renameFrom> = null;
        _sym_tmp_12 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_12, 646);
        _sym_tmp_12 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataOutputStream$a3tid> = _sym_tmp_12;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(646);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream> = null;
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_13, 644);
        _sym_tmp_13 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid> = _sym_tmp_13;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(644);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding> = "UTF-8";
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression authFails$sym> = null;
        _sym_tmp_14 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_14, 658);
        _sym_tmp_14 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails$a3tid> = _sym_tmp_14;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(658);
        r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails> = 0;
        _sym_tmp_15 = r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_15, 649);
        _sym_tmp_15 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int cmdSocket$a3tid> = _sym_tmp_15;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(649);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket> = r1;
        _sym_tmp_16 = r0.<be.ppareit.swiftp_free.server.SessionThread: int source$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_16, 659);
        _sym_tmp_16 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int source$a3tid> = _sym_tmp_16;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(659);
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.SessionThread$Source source> = r3;
        _sym_tmp_17 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocketFactory$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_17, 647);
        _sym_tmp_17 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocketFactory$a3tid> = _sym_tmp_17;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(647);
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory> = r2;
        _sym_tmp_18 = <be.ppareit.swiftp_free.server.SessionThread$Source: int LOCAL$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_18, 642);
        $r12 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source LOCAL>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 0);
        r5[0] = 1;
        _sym_tmp_21 = null;
        if r3 != $r12 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 46027, 0);
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression sendWelcomeBanner$sym> = null;
        _sym_tmp_19 = r0.<be.ppareit.swiftp_free.server.SessionThread: int sendWelcomeBanner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_19, 650);
        _sym_tmp_19 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int sendWelcomeBanner$a3tid> = _sym_tmp_19;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(650);
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendWelcomeBanner> = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 1);
        r5[1] = 1;
        goto label4;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_21, 46027, 1);
        goto label3;

     label3:
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression sendWelcomeBanner$sym> = null;
        _sym_tmp_20 = r0.<be.ppareit.swiftp_free.server.SessionThread: int sendWelcomeBanner$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_20, 650);
        _sym_tmp_20 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int sendWelcomeBanner$a3tid> = _sym_tmp_20;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(650);
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendWelcomeBanner> = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 2);
        r5[2] = 1;

     label4:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r5$sym, null, null, r5, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r5, 3);
        r5[3] = 1;
        return;
    }

    public static java.nio.ByteBuffer stringToBB(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_2, $r3$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        byte[] $r3;
        java.nio.ByteBuffer $r4;

        r0 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21914, 32864, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_2 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46028, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_2, 46028, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 21);
        r2 = $r1[21];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(150, null);
        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();
        $r3$sym = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression retpop(int)>(150);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(14203, $r3$sym);
        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r3);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r4;
    }

    public boolean isBinaryMode()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21840, 32865, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46029, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46029, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 22);
        r2 = $r1[22];
        $z0$sym = r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression binaryMode$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int binaryMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 654);
        $z0 = r0.<be.ppareit.swiftp_free.server.SessionThread: boolean binaryMode>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21840, $z0$sym);
        return $z0;
    }

    public void setBinaryMode(boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21863, 32866, 2);
        z0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46030, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46030, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 23);
        r2 = $r1[23];
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression binaryMode$sym> = z0$sym;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int binaryMode$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 654);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int binaryMode$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(654);
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean binaryMode> = z0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return;
    }

    public boolean isAuthenticated()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, $z0$sym, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21864, 32867, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46031, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46031, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 24);
        r2 = $r1[24];
        $z0$sym = r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression authenticated$sym>;
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authenticated$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 655);
        $z0 = r0.<be.ppareit.swiftp_free.server.SessionThread: boolean authenticated>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        staticinvoke <acteve.symbolic.Util: void retpush(int,acteve.symbolic.integer.Expression)>(21864, $z0$sym);
        return $z0;
    }

    public void authAttempt(boolean)
    {
        acteve.symbolic.integer.Expression _sym_tmp_14, $i5$sym, $i4$sym, $i3$sym, $i2$sym, $i1$sym, $i0$sym, r2$sym, z0$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_13, _sym_tmp_12, _sym_tmp_11, _sym_tmp_10, _sym_tmp_9, _sym_tmp_8, _sym_tmp_7, _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1, $i0, $i1, $i2, $i3, $i4, $i5;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3, $r7, $r14;
        be.ppareit.swiftp_free.server.SessionThread$Source $r4, $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        z0 := @parameter0: boolean;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21854, 32868, 2);
        z0$sym = a3targs$symargs[1];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_14 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46032, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46032, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 25);
        r2 = $r1[25];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>(z0$sym, null, z0, 0);
        if z0 == 0 goto label2;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46033, 0);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 645);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Authentication complete");
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression authenticated$sym> = null;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authenticated$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 655);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int authenticated$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(655);
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean authenticated> = 1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        goto label8;

        goto label3;

     label2:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46033, 1);
        goto label3;

     label3:
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int source$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 659);
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.SessionThread$Source source>;
        _sym_tmp_5 = <be.ppareit.swiftp_free.server.SessionThread$Source: int PROXY$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 630);
        $r5 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source PROXY>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        _sym_tmp_14 = null;
        if $r4 != $r5 goto label4;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46034, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2822, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void quit()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 3, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 3);
        r2[3] = 1;
        goto label6;

        goto label5;

     label4:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46034, 1);
        goto label5;

     label5:
        $i0$sym = r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression authFails$sym>;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 658);
        $i0 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails>;
        $i1$sym = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i0$sym, null, $i0, 1);
        $i1 = $i0 + 1;
        r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression authFails$sym> = $i1$sym;
        _sym_tmp_7 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_7, 658);
        _sym_tmp_7 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails$a3tid> = _sym_tmp_7;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(658);
        r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails> = $i1;
        _sym_tmp_8 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_8, 645);
        $r7 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r8 = new java.lang.StringBuilder;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Auth failed: ");
        $i2$sym = r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression authFails$sym>;
        _sym_tmp_9 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_9, 658);
        $i2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i2$sym);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(146, null, null);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $i3$sym = <be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression MAX_AUTH_FAILS$sym>;
        _sym_tmp_10 = <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_10, 660);
        $i3 = <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(204, null, $i3$sym);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(148, null);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r13);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 4, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 4);
        r2[4] = 1;

     label6:
        $i4$sym = r0.<be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression authFails$sym>;
        _sym_tmp_11 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_11, 658);
        $i4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails>;
        $i5$sym = <be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression MAX_AUTH_FAILS$sym>;
        _sym_tmp_12 = <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_12, 660);
        $i5 = <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 5, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 5);
        r2[5] = 1;
        _sym_tmp_14 = staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,int,int)>($i4$sym, $i5$sym, $i4, $i5);
        if $i4 <= $i5 goto label7;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46035, 0);
        _sym_tmp_13 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_13, 645);
        $r14 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21788, null, null);
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Too many auth fails, quitting session");
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(2822, null);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void quit()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 6, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 6);
        r2[6] = 1;
        goto label8;

     label7:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_14, 46035, 1);
        goto label8;

     label8:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 7, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 7);
        r2[7] = 1;
        return;
    }

    public java.io.File getWorkingDir()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21843, 32869, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46036, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46036, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 26);
        r2 = $r1[26];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int workingDir$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 656);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File workingDir>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setWorkingDir(java.io.File)
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.io.File r1, $r5, $r6;
        boolean[][] $r2;
        boolean[] r3;
        java.io.IOException r4, $r7;
        be.ppareit.swiftp_free.MyLog $r8;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21848, 32870, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46037, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46037, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 27);
        r3 = $r2[27];

     label2:
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(21847, null);
        $r5 = virtualinvoke r1.<java.io.File: java.io.File getCanonicalFile()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(9287, null);
        $r6 = virtualinvoke $r5.<java.io.File: java.io.File getAbsoluteFile()>();
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int workingDir$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 656);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int workingDir$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(656);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File workingDir> = $r6;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r4 = $r7;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.SessionThread: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 645);
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "SessionThread canonical error");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 1);
        r3[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 2);
        r3[2] = 1;
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public java.net.Socket getDataSocket()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21915, 32871, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46038, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46038, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 28);
        r2 = $r1[28];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 648);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setDataSocket(java.net.Socket)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.net.Socket r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.net.Socket;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21916, 32872, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46039, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46039, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 29);
        r3 = $r2[29];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 648);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int dataSocket$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(648);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public java.io.File getRenameFrom()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21862, 32873, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46040, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46040, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 30);
        r2 = $r1[30];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int renameFrom$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 657);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File renameFrom>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setRenameFrom(java.io.File)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.io.File r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.io.File;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21861, 32874, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46041, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46041, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 31);
        r3 = $r2[31];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int renameFrom$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 657);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int renameFrom$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(657);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File renameFrom> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    public java.lang.String getEncoding()
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11351, 32875, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46042, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46042, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 32);
        r2 = $r1[32];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 644);
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        return $r3;
    }

    public void setEncoding(java.lang.String)
    {
        acteve.symbolic.integer.Expression _sym_tmp_3, r3$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.lang.String;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(11353, 32876, 2);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 643);
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        _sym_tmp_3 = null;
        if $r2 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46043, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_3, 46043, 1);
        goto label1;

     label1:
        r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r2, 33);
        r3 = $r2[33];
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 644);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: int encoding$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(644);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding> = r1;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r3$sym, null, null, r3, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r3, 0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_2, _sym_tmp_1;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32877, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 34);
        r1 = $r0[34];
        <be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression MAX_AUTH_FAILS$sym> = null;
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 660);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(660);
        <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS> = 3;
        <be.ppareit.swiftp_free.server.SessionThread: acteve.symbolic.integer.Expression numNulls$sym> = null;
        _sym_tmp_2 = <be.ppareit.swiftp_free.server.SessionThread: int numNulls$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 661);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.SessionThread: int numNulls$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(661);
        <be.ppareit.swiftp_free.server.SessionThread: int numNulls> = 0;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r35$sym, $r34$sym, $r33$sym, $r32$sym, $r31$sym, $r30$sym, $r29$sym, $r28$sym, $r27$sym, $r26$sym, $r25$sym, $r24$sym, $r23$sym, $r22$sym, $r21$sym, $r20$sym, $r19$sym, $r18$sym, $r17$sym, $r16$sym, $r15$sym, $r14$sym, $r13$sym, $r12$sym, $r11$sym, $r10$sym, $r9$sym, $r8$sym, $r7$sym, $r6$sym, $r5$sym, $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32878, 0);
        $r0 = newmultiarray (boolean)[35][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 643);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.SessionThread: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(643);
        <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[2];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[12];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r5$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 4);
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r6$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 5);
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r7$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 6);
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r8$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 7);
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r9$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 8);
        $r0[8] = $r9;
        $r10 = newarray (boolean)[8];
        $r10$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 9);
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r11$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 10);
        $r0[10] = $r11;
        $r12 = newarray (boolean)[10];
        $r12$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 11);
        $r0[11] = $r12;
        $r13 = newarray (boolean)[6];
        $r13$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 12);
        $r0[12] = $r13;
        $r14 = newarray (boolean)[5];
        $r14$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 13);
        $r0[13] = $r14;
        $r15 = newarray (boolean)[3];
        $r15$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 14);
        $r0[14] = $r15;
        $r16 = newarray (boolean)[3];
        $r16$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 15);
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r17$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 16);
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r18$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 17);
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r19$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 18);
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r20$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 19);
        $r0[19] = $r20;
        $r21 = newarray (boolean)[4];
        $r21$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 20);
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r22$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 21);
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r23$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 22);
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r24$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 23);
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r25$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 24);
        $r0[24] = $r25;
        $r26 = newarray (boolean)[8];
        $r26$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 25);
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r27$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 26);
        $r0[26] = $r27;
        $r28 = newarray (boolean)[3];
        $r28$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 27);
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r29$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 28);
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r30$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 29);
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r31$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 30);
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r32$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 31);
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r33$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 32);
        $r0[32] = $r33;
        $r34 = newarray (boolean)[1];
        $r34$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 33);
        $r0[33] = $r34;
        $r35 = newarray (boolean)[1];
        $r35$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 34);
        $r0[34] = $r35;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/SessionThread", 2689561697625779971L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.TcpListener extends java.lang.Thread
{
    java.net.ServerSocket listenSocket;
    be.ppareit.swiftp_free.FTPServerService ftpServerService;
    be.ppareit.swiftp_free.MyLog myLog;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;
    int listenSocket$a3tid;
    int ftpServerService$a3tid;
    int myLog$a3tid;
    private static final int $VRc$a3tid;
    private static final acteve.symbolic.integer.Expression serialVersionUID$sym;
    private static final int serialVersionUID$a3tid;

    public void <init>(java.net.ServerSocket, be.ppareit.swiftp_free.FTPServerService)
    {
        acteve.symbolic.integer.Expression _sym_tmp_5, r4$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.TcpListener r0;
        java.net.ServerSocket r1;
        be.ppareit.swiftp_free.FTPServerService r2;
        boolean[][] $r3;
        boolean[] r4;
        be.ppareit.swiftp_free.MyLog $r5;
        java.lang.Class $r6;
        java.lang.String $r7;

        r0 := @this: be.ppareit.swiftp_free.server.TcpListener;
        r1 := @parameter0: java.net.ServerSocket;
        r2 := @parameter1: be.ppareit.swiftp_free.FTPServerService;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21785, 32879, 3);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.TcpListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 662);
        $r3 = <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRc>;
        _sym_tmp_5 = null;
        if $r3 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46044, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_5, 46044, 1);
        goto label1;

     label1:
        r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r3, 0);
        r4 = $r3[0];
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        $r5 = new be.ppareit.swiftp_free.MyLog;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(1386, null);
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(993, null);
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(1, null, null);
        specialinvoke $r5.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r7);
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.TcpListener: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_2, 663);
        _sym_tmp_2 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.TcpListener: int myLog$a3tid> = _sym_tmp_2;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(663);
        r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.MyLog myLog> = $r5;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.TcpListener: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_3, 664);
        _sym_tmp_3 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.TcpListener: int listenSocket$a3tid> = _sym_tmp_3;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(664);
        r0.<be.ppareit.swiftp_free.server.TcpListener: java.net.ServerSocket listenSocket> = r1;
        _sym_tmp_4 = r0.<be.ppareit.swiftp_free.server.TcpListener: int ftpServerService$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_4, 665);
        _sym_tmp_4 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        r0.<be.ppareit.swiftp_free.server.TcpListener: int ftpServerService$a3tid> = _sym_tmp_4;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(665);
        r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.FTPServerService ftpServerService> = r2;
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r4$sym, null, null, r4, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r4, 0);
        r4[0] = 1;
        return;
    }

    public void quit()
    {
        acteve.symbolic.integer.Expression _sym_tmp_4, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.TcpListener r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r5;
        java.net.ServerSocket $r4;
        be.ppareit.swiftp_free.MyLog $r6;

        r0 := @this: be.ppareit.swiftp_free.server.TcpListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(2822, 32880, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.TcpListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 662);
        $r1 = <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRc>;
        _sym_tmp_4 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46045, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_4, 46045, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 1);
        r2 = $r1[1];

     label2:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.TcpListener: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 664);
        $r4 = r0.<be.ppareit.swiftp_free.server.TcpListener: java.net.ServerSocket listenSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(289, null);
        virtualinvoke $r4.<java.net.ServerSocket: void close()>();
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;
        r3 = $r5;
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.TcpListener: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 663);
        $r6 = r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Exception closing TcpListener listenSocket");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;

     label5:
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 2, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 2);
        r2[2] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void run()
    {
        acteve.symbolic.integer.Expression _sym_tmp_7, r2$sym;
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_6, _sym_tmp_5, _sym_tmp_4, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
        be.ppareit.swiftp_free.server.TcpListener r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket r3;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory $r4;
        be.ppareit.swiftp_free.server.SessionThread r5, $r8;
        java.net.ServerSocket $r6;
        be.ppareit.swiftp_free.MyLog $r7, $r13;
        be.ppareit.swiftp_free.server.SessionThread$Source $r9;
        be.ppareit.swiftp_free.FTPServerService $r10;
        java.lang.Exception $r11, r12;

        r0 := @this: be.ppareit.swiftp_free.server.TcpListener;
        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(533, 32881, 1);
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.TcpListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_1, 662);
        $r1 = <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRc>;
        _sym_tmp_7 = null;
        if $r1 != null goto label0;

        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46046, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r1 = staticinvoke <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRi()>();
        goto label1;

     label0:
        staticinvoke <acteve.symbolic.Util: void assume(acteve.symbolic.integer.Expression,int,boolean)>(_sym_tmp_7, 46046, 1);
        goto label1;

     label1:
        r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r1, 2);
        r2 = $r1[2];

     label2:
        _sym_tmp_2 = r0.<be.ppareit.swiftp_free.server.TcpListener: int listenSocket$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_2, 664);
        $r6 = r0.<be.ppareit.swiftp_free.server.TcpListener: java.net.ServerSocket listenSocket>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(5002, null);
        r3 = virtualinvoke $r6.<java.net.ServerSocket: java.net.Socket accept()>();
        _sym_tmp_3 = r0.<be.ppareit.swiftp_free.server.TcpListener: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_3, 663);
        $r7 = r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "New connection, spawned thread");
        $r8 = new be.ppareit.swiftp_free.server.SessionThread;
        $r4 = new be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(0, null);
        specialinvoke $r4.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void <init>()>();
        _sym_tmp_4 = <be.ppareit.swiftp_free.server.SessionThread$Source: int LOCAL$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_4, 642);
        $r9 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source LOCAL>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21887, null, null, null, null);
        specialinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: void <init>(java.net.Socket,be.ppareit.swiftp_free.server.DataSocketFactory,be.ppareit.swiftp_free.server.SessionThread$Source)>(r3, $r4, $r9);
        r5 = $r8;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression)>(535, null);
        virtualinvoke r5.<be.ppareit.swiftp_free.server.SessionThread: void start()>();
        _sym_tmp_5 = r0.<be.ppareit.swiftp_free.server.TcpListener: int ftpServerService$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_5, 665);
        $r10 = r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.FTPServerService ftpServerService>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21797, null, null);
        virtualinvoke $r10.<be.ppareit.swiftp_free.FTPServerService: void registerSessionThread(be.ppareit.swiftp_free.server.SessionThread)>(r5);
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 0);
        r2[0] = 1;
        goto label2;

     label3:
        $r11 := @caughtexception;
        r12 = $r11;
        _sym_tmp_6 = r0.<be.ppareit.swiftp_free.server.TcpListener: int myLog$a3tid>;
        staticinvoke <acteve.symbolic.Util: void rw(int,int)>(_sym_tmp_6, 663);
        $r13 = r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.MyLog myLog>;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21773, null, null, null);
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Exception in TcpListener");
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r2$sym, null, null, r2, 1, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r2, 1);
        r2[1] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label3;
    }

    private static void <clinit>()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        acteve.symbolic.integer.Expression r1$sym;
        boolean[][] $r0;
        boolean[] r1;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(27, 32882, 0);
        staticinvoke <acteve.symbolic.Util: void argpush(int)>(21741);
        $r0 = staticinvoke <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRi()>();
        r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void readArray(java.lang.Object,int)>($r0, 3);
        r1 = $r0[3];
        staticinvoke <acteve.symbolic.SymbolicOperations: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,boolean[],int,boolean)>(r1$sym, null, null, r1, 0, 1);
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>(r1, 0);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        acteve.symbolic.integer.Expression[] a3targs$symargs;
        int _sym_tmp_1;
        acteve.symbolic.integer.Expression $r4$sym, $r3$sym, $r2$sym, $r1$sym;
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        a3targs$symargs = staticinvoke <acteve.symbolic.Util: acteve.symbolic.integer.Expression[] argpop(int,int,int)>(21741, 32883, 0);
        $r0 = newmultiarray (boolean)[4][];
        _sym_tmp_1 = <be.ppareit.swiftp_free.server.TcpListener: int $VRc$a3tid>;
        staticinvoke <acteve.symbolic.Util: void ww(int,int)>(_sym_tmp_1, 662);
        _sym_tmp_1 = staticinvoke <acteve.symbolic.Util: int eventId()>();
        <be.ppareit.swiftp_free.server.TcpListener: int $VRc$a3tid> = _sym_tmp_1;
        staticinvoke <acteve.symbolic.Util: void only_write(int)>(662);
        <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r1$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 0);
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r2$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 1);
        $r0[1] = $r2;
        $r3 = newarray (boolean)[2];
        $r3$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 2);
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r4$sym = null;
        staticinvoke <acteve.symbolic.Util: void writeArray(java.lang.Object,int)>($r0, 3);
        $r0[3] = $r4;
        staticinvoke <acteve.symbolic.Util: void argpush(int,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(21761, null, null, null);
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/TcpListener", 5864127120643295426L);
        return $r0;
    }
}
