public final class be.ppareit.swiftp_free.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;

    public void <init>()
    {
        be.ppareit.swiftp_free.BuildConfig r0;

        r0 := @this: be.ppareit.swiftp_free.BuildConfig;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class be.ppareit.swiftp_free.Defaults extends java.lang.Object
{
    protected static int inputBufferSize;
    public static int dataChunkSize;
    protected static int sessionMonitorScrollBack;
    protected static int serverLogScrollBack;
    protected static int uiLogLevel;
    protected static int consoleLogLevel;
    protected static java.lang.String settingsName;
    protected static int portNumber;
    public static final int tcpConnectionBacklog;
    public static final java.lang.String chrootDir;
    public static final boolean acceptWifi;
    public static final boolean acceptNet;
    public static final boolean stayAwake;
    public static final int REMOTE_PROXY_PORT;
    public static final java.lang.String STRING_ENCODING;
    public static final int SO_TIMEOUT_MS;
    public static final java.lang.String SESSION_ENCODING;
    public static final boolean release;
    public static final boolean do_mediascanner_notify;
    protected static int settingsMode;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.Defaults r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.Defaults;
        $r1 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static int getPortNumber()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        $i0 = <be.ppareit.swiftp_free.Defaults: int portNumber>;
        r1[0] = 1;
        return $i0;
    }

    public static void setPortNumber(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        <be.ppareit.swiftp_free.Defaults: int portNumber> = i0;
        r1[0] = 1;
        return;
    }

    public static java.lang.String getSettingsName()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $r2 = <be.ppareit.swiftp_free.Defaults: java.lang.String settingsName>;
        r1[0] = 1;
        return $r2;
    }

    public static void setSettingsName(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        <be.ppareit.swiftp_free.Defaults: java.lang.String settingsName> = r0;
        r2[0] = 1;
        return;
    }

    public static int getSettingsMode()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        $i0 = <be.ppareit.swiftp_free.Defaults: int settingsMode>;
        r1[0] = 1;
        return $i0;
    }

    public static void setSettingsMode(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        <be.ppareit.swiftp_free.Defaults: int settingsMode> = i0;
        r1[0] = 1;
        return;
    }

    public static void setServerLogScrollBack(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack> = i0;
        r1[0] = 1;
        return;
    }

    public static int getUiLogLevel()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[8];
        $i0 = <be.ppareit.swiftp_free.Defaults: int uiLogLevel>;
        r1[0] = 1;
        return $i0;
    }

    public static void setUiLogLevel(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[9];
        <be.ppareit.swiftp_free.Defaults: int uiLogLevel> = i0;
        r1[0] = 1;
        return;
    }

    public static int getInputBufferSize()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[10];
        $i0 = <be.ppareit.swiftp_free.Defaults: int inputBufferSize>;
        r1[0] = 1;
        return $i0;
    }

    public static void setInputBufferSize(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[11];
        <be.ppareit.swiftp_free.Defaults: int inputBufferSize> = i0;
        r1[0] = 1;
        return;
    }

    public static int getDataChunkSize()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[12];
        $i0 = <be.ppareit.swiftp_free.Defaults: int dataChunkSize>;
        r1[0] = 1;
        return $i0;
    }

    public static void setDataChunkSize(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[13];
        <be.ppareit.swiftp_free.Defaults: int dataChunkSize> = i0;
        r1[0] = 1;
        return;
    }

    public static int getSessionMonitorScrollBack()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[14];
        $i0 = <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack>;
        r1[0] = 1;
        return $i0;
    }

    public static void setSessionMonitorScrollBack(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[15];
        <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack> = i0;
        r1[0] = 1;
        return;
    }

    public static int getServerLogScrollBack()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[16];
        $i0 = <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack>;
        r1[0] = 1;
        return $i0;
    }

    public static void setLogScrollBack(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[17];
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack> = i0;
        r1[0] = 1;
        return;
    }

    public static int getConsoleLogLevel()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[18];
        $i0 = <be.ppareit.swiftp_free.Defaults: int consoleLogLevel>;
        r1[0] = 1;
        return $i0;
    }

    public static void setConsoleLogLevel(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();

     label0:
        r1 = $r0[19];
        <be.ppareit.swiftp_free.Defaults: int consoleLogLevel> = i0;
        r1[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Defaults: boolean[][] $VRi()>();
        r1 = $r0[20];
        <be.ppareit.swiftp_free.Defaults: int inputBufferSize> = 256;
        <be.ppareit.swiftp_free.Defaults: int dataChunkSize> = 65536;
        <be.ppareit.swiftp_free.Defaults: int sessionMonitorScrollBack> = 10;
        <be.ppareit.swiftp_free.Defaults: int serverLogScrollBack> = 10;
        <be.ppareit.swiftp_free.Defaults: int uiLogLevel> = 4;
        <be.ppareit.swiftp_free.Defaults: int consoleLogLevel> = 4;
        <be.ppareit.swiftp_free.Defaults: java.lang.String settingsName> = "SwiFTP";
        <be.ppareit.swiftp_free.Defaults: int portNumber> = 2121;
        <be.ppareit.swiftp_free.Defaults: int settingsMode> = 2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        $r0 = newmultiarray (boolean)[21][];
        <be.ppareit.swiftp_free.Defaults: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Defaults", 9041753046014221510L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements be.ppareit.swiftp_free.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        r3[0] = 1;
        if r1 == null goto label1;

        $z0 = specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        r3[1] = 1;

     label1:
        $r11 = new android.content.Intent;
        $r12 = virtualinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "be/ppareit/swiftp_free/EmmaInstrument/InstrumentedActivity");
        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        $r13 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        virtualinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void start()>();
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <android.os.Looper: void prepare()>();
        $r5 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        $r6 = virtualinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity) $r6;
        virtualinvoke r3.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: void setFinishListener(be.ppareit.swiftp_free.EmmaInstrument.FinishListener)>(r0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        r4[0] = 1;
        if r5 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        r4[1] = 1;
        if $z0 == 0 goto label1;

        $z1 = 1;
        r4[2] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return $z1;
    }

    private void generateCoverageReport()
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r6 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        $r8 = specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label1:
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[2] = $r12;
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        $r13[0] = r3;
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r13[1] = $r14;
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $r13[2] = $r15;
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        r2[0] = 1;

     label2:
        goto label9;

     label3:
        $r17 := @caughtexception;
        r18 = $r17;
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        r2[1] = 1;
        goto label9;

     label4:
        $r19 := @caughtexception;
        r20 = $r19;
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        r2[2] = 1;
        goto label9;

     label5:
        $r21 := @caughtexception;
        r22 = $r21;
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        r2[3] = 1;
        goto label9;

     label6:
        $r23 := @caughtexception;
        r24 = $r23;
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        r2[4] = 1;
        goto label9;

     label7:
        $r25 := @caughtexception;
        r26 = $r25;
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        r2[5] = 1;
        goto label9;

     label8:
        $r27 := @caughtexception;
        r28 = $r27;
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        r2[6] = 1;

     label9:
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
    }

    private java.lang.String getCoverageFilePath()
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[0] = 1;
        if $r3 != null goto label1;

        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

     label1:
        $r4 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if $i0 <= 0 goto label1;

        r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        r3[2] = 1;
        return 1;

     label1:
        r3[3] = 1;
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        $r10 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        r2[1] = 1;

     label1:
        $r4 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        virtualinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r4 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0 = r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        r3[1] = 1;
        if $z1 != 0 goto label1;

        $r9 = <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        r3[2] = 1;

     label1:
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        specialinvoke r0.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1 = $r0[11];
        <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  be.ppareit.swiftp_free.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity)
    {
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity $r10, $r18;
        be.ppareit.swiftp_free.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        int $i0;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r10 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity this$0>;
        $r11 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener access$000(be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity)>($r10);
        r4[0] = 1;
        if $r11 == null goto label2;

        r4[1] = 1;
        if r5 == null goto label2;

        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0 = lengthof r6;
        r4[2] = 1;
        if $i0 <= 0 goto label2;

        $r14 = r6[0];
        $r15 = (byte[]) $r14;
        $r16 = (byte[]) $r15;
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        r4[3] = 1;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        r4[4] = 1;
        if $z1 == 0 goto label2;

     label1:
        $r18 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity this$0>;
        $r19 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener access$000(be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity)>($r18);
        interfaceinvoke $r19.<be.ppareit.swiftp_free.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        r4[5] = 1;

     label2:
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity extends be.ppareit.swiftp_free.gui.ServerPreferenceActivity
{
    public static java.lang.String TAG;
    private be.ppareit.swiftp_free.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void setFinishListener(be.ppareit.swiftp_free.EmmaInstrument.FinishListener)
    {
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r0;
        be.ppareit.swiftp_free.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: be.ppareit.swiftp_free.EmmaInstrument.FinishListener;
        $r2 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        be.ppareit.swiftp_free.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void finish()>();
        $r8 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        if $r8 == null goto label1;

        $r9 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener mListener>;
        interfaceinvoke $r9.<be.ppareit.swiftp_free.EmmaInstrument.FinishListener: void onActivityFinished()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    static be.ppareit.swiftp_free.EmmaInstrument.FinishListener access$000(be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity)
    {
        be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: be.ppareit.swiftp_free.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1 = $r0[4];
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <be.ppareit.swiftp_free.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver;
        $r1 = <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation;
        specialinvoke $r7.<be.ppareit.swiftp_free.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        r4[0] = 1;
        if r6 == null goto label1;

        interfaceinvoke r6.<be.ppareit.swiftp_free.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1 = $r0[2];
        <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.FTPServerService extends android.app.Service implements java.lang.Runnable
{
    public static final java.lang.String ACTION_STARTED;
    public static final java.lang.String ACTION_STOPPED;
    public static final java.lang.String ACTION_FAILEDTOSTART;
    protected static java.lang.Thread serverThread;
    protected boolean shouldExit;
    protected be.ppareit.swiftp_free.MyLog myLog;
    protected static be.ppareit.swiftp_free.MyLog staticLog;
    public static final int BACKLOG;
    public static final int MAX_SESSIONS;
    public static final java.lang.String WAKE_LOCK_TAG;
    protected java.net.ServerSocket listenSocket;
    protected static android.net.wifi.WifiManager$WifiLock wifiLock;
    protected static java.util.List sessionMonitor;
    protected static java.util.List serverLog;
    protected static int uiLogLevel;
    public static final int WAKE_INTERVAL_MS;
    protected static int port;
    protected static boolean acceptWifi;
    protected static boolean acceptNet;
    protected static boolean fullWake;
    private be.ppareit.swiftp_free.server.TcpListener wifiListener;
    private be.ppareit.swiftp_free.server.ProxyConnector proxyConnector;
    private final java.util.List sessionThreads;
    private static android.content.SharedPreferences settings;
    android.app.NotificationManager notificationMgr;
    android.os.PowerManager$WakeLock wakeLock;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        java.util.ArrayList $r6;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Service: void <init>()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit> = 0;
        $r3 = new be.ppareit.swiftp_free.MyLog;
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r5);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog> = $r3;
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener> = null;
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads> = $r6;
        r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr> = null;
        r2[0] = 1;
        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        r1 := @parameter0: android.content.Intent;
        $r2 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return null;
    }

    public void onCreate()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3, r5;
        be.ppareit.swiftp_free.MyLog $r4;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "SwiFTP server created");
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r2[0] = 1;
        if r3 != null goto label1;

        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: android.content.Context getApplicationContext()>();
        r2[1] = 1;
        if r5 == null goto label1;

        staticinvoke <be.ppareit.swiftp_free.Globals: void setContext(android.content.Context)>(r5);
        r2[2] = 1;

     label1:
        r2[3] = 1;
        return;
    }

    public void onStart(android.content.Intent, int)
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        android.content.Intent r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Thread $r4, $r8, $r9;
        be.ppareit.swiftp_free.MyLog $r5, $r6, $r7;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        r1 := @parameter0: android.content.Intent;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        specialinvoke r0.<android.app.Service: void onStart(android.content.Intent,int)>(r1, i0);
        r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit> = 0;
        i1 = 10;
        r3[0] = 1;

     label1:
        $r4 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        r3[1] = 1;
        if $r4 == null goto label3;

        $r5 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(5, "Won\'t start, server thread exists");
        r3[2] = 1;
        if i1 <= 0 goto label2;

        i1 = i1 + -1;
        staticinvoke <be.ppareit.swiftp_free.Util: void sleepIgnoreInterupt(long)>(1000L);
        r3[3] = 1;
        goto label1;

     label2:
        $r6 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Server thread already exists");
        r3[4] = 1;
        return;

     label3:
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Creating server thread");
        $r8 = new java.lang.Thread;
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);
        <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread> = $r8;
        $r9 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        r3[5] = 1;
        return;
    }

    public static boolean isRunning()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Thread $r2, $r4;
        be.ppareit.swiftp_free.MyLog $r3, $r5, $r6;
        boolean $z0;

        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        $r2 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        r1[0] = 1;
        if $r2 != null goto label1;

        $r3 = <be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Server is not running (null serverThread)");
        r1[1] = 1;
        return 0;

     label1:
        $r4 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        $z0 = virtualinvoke $r4.<java.lang.Thread: boolean isAlive()>();
        r1[2] = 1;
        if $z0 != 0 goto label2;

        $r5 = <be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "serverThread non-null but !isAlive()");
        r1[3] = 1;
        goto label3;

     label2:
        $r6 = <be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Server is alive");
        r1[4] = 1;

     label3:
        r1[5] = 1;
        return 1;
    }

    public void onDestroy()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.InterruptedException r3, $r9;
        be.ppareit.swiftp_free.MyLog $r4, $r6, $r11, $r12, $r14, $r20;
        java.lang.Thread $r5, $r7, $r8, $r10;
        boolean $z0;
        java.net.ServerSocket $r13, $r15;
        java.io.IOException $r16, r17;
        android.net.wifi.WifiManager$WifiLock $r18, $r19;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "onDestroy() Stopping server");
        r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit> = 1;
        $r5 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        r2[0] = 1;
        if $r5 != null goto label1;

        $r6 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(5, "Stopping with null serverThread");
        r2[1] = 1;
        return;

     label1:
        $r7 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

     label2:
        $r8 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        virtualinvoke $r8.<java.lang.Thread: void join(long)>(10000L);
        r2[2] = 1;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;
        r3 = $r9;
        r2[3] = 1;

     label5:
        $r10 = <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread>;
        $z0 = virtualinvoke $r10.<java.lang.Thread: boolean isAlive()>();
        r2[4] = 1;
        if $z0 == 0 goto label6;

        $r11 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(5, "Server thread failed to exit");
        r2[5] = 1;
        goto label7;

     label6:
        $r12 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("serverThread join()ed ok");
        <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread> = null;
        r2[6] = 1;

     label7:
        $r13 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        r2[7] = 1;
        if $r13 == null goto label8;

        $r14 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Closing listenSocket");
        $r15 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        virtualinvoke $r15.<java.net.ServerSocket: void close()>();
        r2[8] = 1;

     label8:
        r2[9] = 1;

     label9:
        goto label11;

     label10:
        $r16 := @caughtexception;
        r17 = $r16;
        r2[10] = 1;

     label11:
        $r18 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        r2[11] = 1;
        if $r18 == null goto label12;

        $r19 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        virtualinvoke $r19.<android.net.wifi.WifiManager$WifiLock: void release()>();
        <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock> = null;
        r2[12] = 1;

     label12:
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void clearNotification()>();
        $r20 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("FTPServerService.onDestroy() finished");
        r2[13] = 1;
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.io.IOException from label7 to label9 with label10;
    }

    private boolean loadSettings()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r5, $r10, $r16;
        java.io.File r6, $r24;
        be.ppareit.swiftp_free.MyLog $r7, $r12, $r23, $r25;
        android.content.SharedPreferences $r8, $r9, $r17, $r18, $r19, $r20, $r21, $r22;
        java.lang.Integer $r11;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Loading settings");
        $r8 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings> = $r8;
        $r9 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        $r10 = interfaceinvoke $r9.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("portNum", "2121");
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r10);
        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
        <be.ppareit.swiftp_free.FTPServerService: int port> = $i0;
        $i1 = <be.ppareit.swiftp_free.FTPServerService: int port>;
        r2[0] = 1;
        if $i1 != 0 goto label1;

        $i2 = <be.ppareit.swiftp_free.Defaults: int portNumber>;
        <be.ppareit.swiftp_free.FTPServerService: int port> = $i2;
        r2[1] = 1;

     label1:
        $r12 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using port ");
        $i3 = <be.ppareit.swiftp_free.FTPServerService: int port>;
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r16);
        $r17 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        $z0 = interfaceinvoke $r17.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("allowNet", 0);
        <be.ppareit.swiftp_free.FTPServerService: boolean acceptNet> = $z0;
        $r18 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        $z1 = interfaceinvoke $r18.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("allowWifi", 1);
        <be.ppareit.swiftp_free.FTPServerService: boolean acceptWifi> = $z1;
        $r19 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        $z2 = interfaceinvoke $r19.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("stayAwake", 0);
        <be.ppareit.swiftp_free.FTPServerService: boolean fullWake> = $z2;
        $r20 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        r3 = interfaceinvoke $r20.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("username", null);
        $r21 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        r4 = interfaceinvoke $r21.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", null);
        $r22 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        r5 = interfaceinvoke $r22.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("chrootDir", "/");
        r2[2] = 1;
        if r3 == null goto label2;

        r2[3] = 1;
        if r4 != null goto label3;

     label2:
        $r23 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r23.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Username or password is invalid");
        r2[4] = 1;
        goto label5;

     label3:
        $r24 = new java.io.File;
        specialinvoke $r24.<java.io.File: void <init>(java.lang.String)>(r5);
        r6 = $r24;
        $z3 = virtualinvoke r6.<java.io.File: boolean isDirectory()>();
        r2[5] = 1;
        if $z3 != 0 goto label4;

        $r25 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r25.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Chroot dir is invalid");
        r2[6] = 1;
        goto label5;

     label4:
        staticinvoke <be.ppareit.swiftp_free.Globals: void setChrootDir(java.io.File)>(r6);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setUsername(java.lang.String)>(r3);
        r2[7] = 1;
        return 1;

     label5:
        r2[8] = 1;
        return 0;
    }

    void setupListener() throws java.io.IOException
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        java.net.ServerSocket $r3, $r4, $r5;
        java.net.InetSocketAddress $r6;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = new java.net.ServerSocket;
        specialinvoke $r3.<java.net.ServerSocket: void <init>()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket> = $r3;
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        virtualinvoke $r4.<java.net.ServerSocket: void setReuseAddress(boolean)>(1);
        $r5 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        $r6 = new java.net.InetSocketAddress;
        $i0 = <be.ppareit.swiftp_free.FTPServerService: int port>;
        specialinvoke $r6.<java.net.InetSocketAddress: void <init>(int)>($i0);
        virtualinvoke $r5.<java.net.ServerSocket: void bind(java.net.SocketAddress)>($r6);
        r2[0] = 1;
        return;
    }

    private void setupNotification()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r6, r7;
        int i0, $i2, $i3;
        long l1;
        android.app.Notification r5, $r12;
        android.content.Intent r8, $r13;
        android.app.PendingIntent r9;
        java.lang.Object $r10;
        android.app.NotificationManager $r11, $r16;
        android.content.Context $r14;
        be.ppareit.swiftp_free.MyLog $r17;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r3 = "notification";
        $r10 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.Object getSystemService(java.lang.String)>(r3);
        $r11 = (android.app.NotificationManager) $r10;
        r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr> = $r11;
        i0 = 2130837506;
        r4 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.String getString(int)>(2131034149);
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r12 = new android.app.Notification;
        specialinvoke $r12.<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>(i0, r4, l1);
        r5 = $r12;
        r6 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.String getString(int)>(2131034150);
        r7 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.String getString(int)>(2131034151);
        $r13 = new android.content.Intent;
        specialinvoke $r13.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "be/ppareit/swiftp_free/gui/ServerPreferenceActivity");
        r8 = $r13;
        r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, r8, 0);
        $r14 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: android.content.Context getApplicationContext()>();
        virtualinvoke r5.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>($r14, r6, r7, r9);
        $i2 = r5.<android.app.Notification: int flags>;
        $i3 = $i2 | 2;
        r5.<android.app.Notification: int flags> = $i3;
        $r16 = r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr>;
        virtualinvoke $r16.<android.app.NotificationManager: void notify(int,android.app.Notification)>(0, r5);
        $r17 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r17.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Notication setup done");
        r2[0] = 1;
        return;
    }

    private void clearNotification()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3;
        android.app.NotificationManager $r4, $r6, $r7;
        java.lang.Object $r5;
        be.ppareit.swiftp_free.MyLog $r8;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr>;
        r2[0] = 1;
        if $r4 != null goto label1;

        r3 = "notification";
        $r5 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.Object getSystemService(java.lang.String)>(r3);
        $r6 = (android.app.NotificationManager) $r5;
        r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr> = $r6;
        r2[1] = 1;

     label1:
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: android.app.NotificationManager notificationMgr>;
        virtualinvoke $r7.<android.app.NotificationManager: void cancelAll()>();
        $r8 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Cleared notification");
        r2[2] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0;
        long l1, l2, $l3, l5, $l6, $l8;
        java.io.IOException r3, $r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        be.ppareit.swiftp_free.MyLog $r4, $r8, $r9, $r13, $r23, $r28, $r29, $r32, $r37, $r42;
        android.content.Intent $r5, $r6, $r10;
        be.ppareit.swiftp_free.server.TcpListener $r11, $r12, $r14, $r17, $r18, $r20, $r40, $r41;
        java.lang.InterruptedException $r15, r16, $r25, r26, $r35, r36;
        java.net.ServerSocket $r19;
        be.ppareit.swiftp_free.server.ProxyConnector $r21, $r22, $r24, $r30, $r33, $r34, $r38, $r39;
        java.util.Date $r27, $r31;
        byte $b4, $b7, $b9;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        i0 = 0;
        l1 = 0L;
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Server thread running");
        $z1 = specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: boolean loadSettings()>();
        r2[0] = 1;
        if $z1 != 0 goto label1;

        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        $r5 = new android.content.Intent;
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("org.swiftp.FTPServerService.FAILEDTOSTART");
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void sendBroadcast(android.content.Intent)>($r5);
        r2[1] = 1;
        return;

     label1:
        $z2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isWifiEnabled()>();
        r2[2] = 1;
        if $z2 != 0 goto label2;

        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        $r6 = new android.content.Intent;
        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("org.swiftp.FTPServerService.FAILEDTOSTART");
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void sendBroadcast(android.content.Intent)>($r6);
        r2[3] = 1;
        return;

     label2:
        $z3 = <be.ppareit.swiftp_free.FTPServerService: boolean acceptWifi>;
        r2[4] = 1;
        if $z3 == 0 goto label7;

     label3:
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void setupListener()>();
        r2[5] = 1;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(5, "Error opening port, check your network connection.");
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        r2[6] = 1;
        return;

     label6:
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void takeWifiLock()>();
        r2[7] = 1;

     label7:
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void takeWakeLock()>();
        $r9 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "SwiFTP server ready");
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void setupNotification()>();
        $r10 = new android.content.Intent;
        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("org.swiftp.FTPServerService.STARTED");
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void sendBroadcast(android.content.Intent)>($r10);
        r2[8] = 1;

     label8:
        $z4 = r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit>;
        r2[9] = 1;
        if $z4 != 0 goto label26;

        $z5 = <be.ppareit.swiftp_free.FTPServerService: boolean acceptWifi>;
        r2[10] = 1;
        if $z5 == 0 goto label14;

        $r11 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        r2[11] = 1;
        if $r11 == null goto label13;

        $r12 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        $z6 = virtualinvoke $r12.<be.ppareit.swiftp_free.server.TcpListener: boolean isAlive()>();
        r2[12] = 1;
        if $z6 != 0 goto label13;

        $r13 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Joining crashed wifiListener thread");

     label9:
        $r14 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.TcpListener: void join()>();
        r2[13] = 1;

     label10:
        goto label12;

     label11:
        $r15 := @caughtexception;
        r16 = $r15;
        r2[14] = 1;

     label12:
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener> = null;
        r2[15] = 1;

     label13:
        $r17 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        r2[16] = 1;
        if $r17 != null goto label14;

        $r18 = new be.ppareit.swiftp_free.server.TcpListener;
        $r19 = r0.<be.ppareit.swiftp_free.FTPServerService: java.net.ServerSocket listenSocket>;
        specialinvoke $r18.<be.ppareit.swiftp_free.server.TcpListener: void <init>(java.net.ServerSocket,be.ppareit.swiftp_free.FTPServerService)>($r19, r0);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener> = $r18;
        $r20 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        virtualinvoke $r20.<be.ppareit.swiftp_free.server.TcpListener: void start()>();
        r2[17] = 1;

     label14:
        $z7 = <be.ppareit.swiftp_free.FTPServerService: boolean acceptNet>;
        r2[18] = 1;
        if $z7 == 0 goto label23;

        $r21 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r2[19] = 1;
        if $r21 == null goto label20;

        $r22 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        $z8 = virtualinvoke $r22.<be.ppareit.swiftp_free.server.ProxyConnector: boolean isAlive()>();
        r2[20] = 1;
        if $z8 != 0 goto label20;

        $r23 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r23.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Joining crashed proxy connector");

     label15:
        $r24 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        virtualinvoke $r24.<be.ppareit.swiftp_free.server.ProxyConnector: void join()>();
        r2[21] = 1;

     label16:
        goto label18;

     label17:
        $r25 := @caughtexception;
        r26 = $r25;
        r2[22] = 1;

     label18:
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        $r27 = new java.util.Date;
        specialinvoke $r27.<java.util.Date: void <init>()>();
        l2 = virtualinvoke $r27.<java.util.Date: long getTime()>();
        $l3 = l2 - l1;
        $b4 = $l3 cmp 3000L;
        r2[23] = 1;
        if $b4 >= 0 goto label19;

        $r28 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r28.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Incrementing proxy start failures");
        i0 = i0 + 1;
        r2[24] = 1;
        goto label20;

     label19:
        $r29 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r29.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Resetting proxy start failures");
        i0 = 0;
        r2[25] = 1;

     label20:
        $r30 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r2[26] = 1;
        if $r30 != null goto label23;

        $r31 = new java.util.Date;
        specialinvoke $r31.<java.util.Date: void <init>()>();
        l5 = virtualinvoke $r31.<java.util.Date: long getTime()>();
        z0 = 0;
        r2[27] = 1;
        if i0 >= 3 goto label21;

        $l6 = l5 - l1;
        $b7 = $l6 cmp 5000L;
        r2[28] = 1;
        if $b7 <= 0 goto label21;

        z0 = 1;
        r2[29] = 1;
        goto label22;

     label21:
        $l8 = l5 - l1;
        $b9 = $l8 cmp 30000L;
        r2[30] = 1;
        if $b9 <= 0 goto label22;

        z0 = 1;
        r2[31] = 1;

     label22:
        r2[32] = 1;
        if z0 == 0 goto label23;

        $r32 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r32.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Spawning ProxyConnector");
        $r33 = new be.ppareit.swiftp_free.server.ProxyConnector;
        specialinvoke $r33.<be.ppareit.swiftp_free.server.ProxyConnector: void <init>(be.ppareit.swiftp_free.FTPServerService)>(r0);
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = $r33;
        $r34 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        virtualinvoke $r34.<be.ppareit.swiftp_free.server.ProxyConnector: void start()>();
        l1 = l5;
        r2[33] = 1;

     label23:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
        r2[34] = 1;

     label24:
        goto label8;

     label25:
        $r35 := @caughtexception;
        r36 = $r35;
        $r37 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r37.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Thread interrupted");
        r2[35] = 1;
        goto label8;

     label26:
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void terminateAllSessions()>();
        $r38 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r2[36] = 1;
        if $r38 == null goto label27;

        $r39 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        virtualinvoke $r39.<be.ppareit.swiftp_free.server.ProxyConnector: void quit()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        r2[37] = 1;

     label27:
        $r40 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        r2[38] = 1;
        if $r40 == null goto label28;

        $r41 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener>;
        virtualinvoke $r41.<be.ppareit.swiftp_free.server.TcpListener: void quit()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.TcpListener wifiListener> = null;
        r2[39] = 1;

     label28:
        r0.<be.ppareit.swiftp_free.FTPServerService: boolean shouldExit> = 0;
        $r42 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r42.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Exiting cleanly, returning from run()");
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        r2[40] = 1;
        return;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.InterruptedException from label9 to label10 with label11;
        catch java.lang.InterruptedException from label15 to label16 with label17;
        catch java.lang.InterruptedException from label23 to label24 with label25;
    }

    private void terminateAllSessions()
    {
        be.ppareit.swiftp_free.FTPServerService r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r4;
        be.ppareit.swiftp_free.server.SessionThread r5;
        java.lang.Throwable r6, $r17;
        be.ppareit.swiftp_free.MyLog $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;
        java.util.List $r10, $r15;
        int $i0;
        java.lang.String $r13;
        boolean $z0;
        java.lang.Object $r16;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Terminating ");
        $r10 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" session thread(s)");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r13);
        r3 = r0;
        entermonitor r0;

     label1:
        $r15 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        r4 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();
        r2[0] = 1;

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label4;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (be.ppareit.swiftp_free.server.SessionThread) $r16;
        r2[2] = 1;
        if r5 == null goto label3;

        virtualinvoke r5.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        virtualinvoke r5.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        r2[3] = 1;

     label3:
        r2[4] = 1;
        goto label2;

     label4:
        exitmonitor r3;
        r2[5] = 1;

     label5:
        goto label9;

     label6:
        $r17 := @caughtexception;

     label7:
        r6 = $r17;
        exitmonitor r3;

     label8:
        r2[6] = 1;
        throw r6;

     label9:
        r2[7] = 1;
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void cleanupAndStopService()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Intent $r3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void stopSelf()>();
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void releaseWifiLock()>();
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void releaseWakeLock()>();
        specialinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void clearNotification()>();
        $r3 = new android.content.Intent;
        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("org.swiftp.FTPServerService.STOPPED");
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void sendBroadcast(android.content.Intent)>($r3);
        r2[0] = 1;
        return;
    }

    private void takeWakeLock()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.PowerManager r3;
        android.os.PowerManager$WakeLock $r4, $r6, $r7, $r8, $r10;
        java.lang.Object $r5;
        boolean $z0;
        be.ppareit.swiftp_free.MyLog $r9;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        r2[0] = 1;
        if $r4 != null goto label3;

        $r5 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.Object getSystemService(java.lang.String)>("power");
        r3 = (android.os.PowerManager) $r5;
        $z0 = <be.ppareit.swiftp_free.FTPServerService: boolean fullWake>;
        r2[1] = 1;
        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(26, "SwiFTP");
        r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock> = $r6;
        r2[2] = 1;
        goto label2;

     label1:
        $r7 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "SwiFTP");
        r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock> = $r7;
        r2[3] = 1;

     label2:
        $r8 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        virtualinvoke $r8.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);
        r2[4] = 1;

     label3:
        $r9 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Acquiring wake lock");
        $r10 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void acquire()>();
        r2[5] = 1;
        return;
    }

    private void releaseWakeLock()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3, $r6, $r7;
        android.os.PowerManager$WakeLock $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Releasing wake lock");
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        r2[0] = 1;
        if $r4 == null goto label1;

        $r5 = r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock>;
        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void release()>();
        r0.<be.ppareit.swiftp_free.FTPServerService: android.os.PowerManager$WakeLock wakeLock> = null;
        $r6 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Finished releasing wake lock");
        r2[1] = 1;
        goto label2;

     label1:
        $r7 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Couldn\'t release null wake lock");
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return;
    }

    private void takeWifiLock()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.net.wifi.WifiManager r3;
        be.ppareit.swiftp_free.MyLog $r4;
        android.net.wifi.WifiManager$WifiLock $r5, $r7, $r8, $r9;
        java.lang.Object $r6;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r4 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Taking wifi lock");
        $r5 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        r2[0] = 1;
        if $r5 != null goto label1;

        $r6 = virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: java.lang.Object getSystemService(java.lang.String)>("wifi");
        r3 = (android.net.wifi.WifiManager) $r6;
        $r7 = virtualinvoke r3.<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)>("SwiFTP");
        <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock> = $r7;
        $r8 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        virtualinvoke $r8.<android.net.wifi.WifiManager$WifiLock: void setReferenceCounted(boolean)>(0);
        r2[1] = 1;

     label1:
        $r9 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        virtualinvoke $r9.<android.net.wifi.WifiManager$WifiLock: void acquire()>();
        r2[2] = 1;
        return;
    }

    private void releaseWifiLock()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;
        android.net.wifi.WifiManager$WifiLock $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Releasing wifi lock");
        $r4 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        r2[0] = 1;
        if $r4 == null goto label1;

        $r5 = <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock>;
        virtualinvoke $r5.<android.net.wifi.WifiManager$WifiLock: void release()>();
        <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock> = null;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public void errorShutdown()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r3 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Service errorShutdown() called");
        virtualinvoke r0.<be.ppareit.swiftp_free.FTPServerService: void cleanupAndStopService()>();
        r2[0] = 1;
        return;
    }

    public static java.net.InetAddress getWifiIp()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context r2;
        android.net.wifi.WifiManager r3;
        int i0;
        java.lang.NullPointerException $r4;
        java.lang.Object $r5;
        boolean $z0;
        android.net.wifi.WifiInfo $r6;
        java.net.InetAddress $r7;

        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[18];
        r2 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r1[0] = 1;
        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Global context is null");
        r1[1] = 1;
        throw $r4;

     label1:
        $r5 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");
        r3 = (android.net.wifi.WifiManager) $r5;
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isWifiEnabled()>();
        r1[2] = 1;
        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r3.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();
        i0 = virtualinvoke $r6.<android.net.wifi.WifiInfo: int getIpAddress()>();
        r1[3] = 1;
        if i0 != 0 goto label2;

        r1[4] = 1;
        return null;

     label2:
        $r7 = staticinvoke <be.ppareit.swiftp_free.Util: java.net.InetAddress intToInet(int)>(i0);
        r1[5] = 1;
        return $r7;

     label3:
        r1[6] = 1;
        return null;
    }

    public static boolean isWifiEnabled()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context r2;
        android.net.wifi.WifiManager r3;
        java.lang.NullPointerException $r4;
        java.lang.Object $r5;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[19];
        r2 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r1[0] = 1;
        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Global context is null");
        r1[1] = 1;
        throw $r4;

     label1:
        $r5 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");
        r3 = (android.net.wifi.WifiManager) $r5;
        $i0 = virtualinvoke r3.<android.net.wifi.WifiManager: int getWifiState()>();
        r1[2] = 1;
        if $i0 != 3 goto label2;

        r1[3] = 1;
        return 1;

     label2:
        r1[4] = 1;
        return 0;
    }

    public static java.util.List getSessionMonitorContents()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[20];
        $r3 = new java.util.ArrayList;
        $r2 = <be.ppareit.swiftp_free.FTPServerService: java.util.List sessionMonitor>;
        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
        r1[0] = 1;
        return $r3;
    }

    public static java.util.List getServerLogContents()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[21];
        $r3 = new java.util.ArrayList;
        $r2 = <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog>;
        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
        r1[0] = 1;
        return $r3;
    }

    public static void log(int, java.lang.String)
    {
        int i0, i1, $i2;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3, $r4, $r5;

        i0 := @parameter0: int;
        r0 := @parameter1: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $r3 = <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog>;
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);
        i1 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getServerLogScrollBack()>();
        r2[0] = 1;

     label1:
        $r4 = <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog>;
        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();
        r2[1] = 1;
        if $i2 <= i1 goto label2;

        $r5 = <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog>;
        interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(0);
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return;
    }

    public static void writeMonitor(boolean, java.lang.String)
    {
        boolean z0;
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;

        z0 := @parameter0: boolean;
        r0 := @parameter1: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        r2[0] = 1;
        return;
    }

    public static int getPort()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[24];
        $i0 = <be.ppareit.swiftp_free.FTPServerService: int port>;
        r1[0] = 1;
        return $i0;
    }

    public static void setPort(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[25];
        <be.ppareit.swiftp_free.FTPServerService: int port> = i0;
        r1[0] = 1;
        return;
    }

    public void registerSessionThread(be.ppareit.swiftp_free.server.SessionThread)
    {
        be.ppareit.swiftp_free.FTPServerService r0, r4;
        be.ppareit.swiftp_free.server.SessionThread r1, r7, r20;
        boolean[][] $r2;
        boolean[] r3;
        java.util.ArrayList r5, $r11;
        java.util.Iterator r6, r18;
        java.lang.InterruptedException r8, $r16;
        java.lang.Throwable r9, $r23;
        java.util.List $r12, $r21, $r22;
        boolean $z0, $z1, $z3;
        java.lang.Object $r13, $r19;
        be.ppareit.swiftp_free.MyLog $r14, $r15, $r17, $r24;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        $r2 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r3 = $r2[26];
        r4 = r0;
        entermonitor r0;

     label1:
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r5 = $r11;
        $r12 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        r6 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();
        r3[0] = 1;

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label7;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (be.ppareit.swiftp_free.server.SessionThread) $r13;
        $z1 = virtualinvoke r7.<be.ppareit.swiftp_free.server.SessionThread: boolean isAlive()>();
        r3[2] = 1;
        if $z1 != 0 goto label6;

        $r14 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Cleaning up finished session...");

     label3:
        virtualinvoke r7.<be.ppareit.swiftp_free.server.SessionThread: void join()>();
        $r15 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Thread joined");
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7);
        virtualinvoke r7.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        r3[3] = 1;

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;
        r8 = $r16;
        $r17 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r17.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Interrupted while joining");
        r3[4] = 1;

     label6:
        r3[5] = 1;
        goto label2;

     label7:
        r18 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
        r3[6] = 1;

     label8:
        $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        r3[7] = 1;
        if $z3 == 0 goto label9;

        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        r20 = (be.ppareit.swiftp_free.server.SessionThread) $r19;
        $r21 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        interfaceinvoke $r21.<java.util.List: boolean remove(java.lang.Object)>(r20);
        r3[8] = 1;
        goto label8;

     label9:
        $r22 = r0.<be.ppareit.swiftp_free.FTPServerService: java.util.List sessionThreads>;
        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>(r1);
        exitmonitor r4;
        r3[9] = 1;

     label10:
        goto label14;

     label11:
        $r23 := @caughtexception;

     label12:
        r9 = $r23;
        exitmonitor r4;

     label13:
        r3[10] = 1;
        throw r9;

     label14:
        $r24 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r24.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Registered session thread");
        r3[11] = 1;
        return;

        catch java.lang.InterruptedException from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()
    {
        be.ppareit.swiftp_free.FTPServerService r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector $r3;

        r0 := @this: be.ppareit.swiftp_free.FTPServerService;
        $r1 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[27];
        $r3 = r0.<be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r2[0] = 1;
        return $r3;
    }

    public static android.content.SharedPreferences getSettings()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.content.SharedPreferences $r2;

        $r0 = <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[28];
        $r2 = <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings>;
        r1[0] = 1;
        return $r2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.String $r4;
        java.util.ArrayList $r5, $r6;
        int $i0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRi()>();
        r1 = $r0[29];
        <be.ppareit.swiftp_free.FTPServerService: java.lang.Thread serverThread> = null;
        $r3 = new be.ppareit.swiftp_free.MyLog;
        $r2 = class "be/ppareit/swiftp_free/FTPServerService";
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r4);
        <be.ppareit.swiftp_free.FTPServerService: be.ppareit.swiftp_free.MyLog staticLog> = $r3;
        <be.ppareit.swiftp_free.FTPServerService: android.net.wifi.WifiManager$WifiLock wifiLock> = null;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        <be.ppareit.swiftp_free.FTPServerService: java.util.List sessionMonitor> = $r5;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        <be.ppareit.swiftp_free.FTPServerService: java.util.List serverLog> = $r6;
        $i0 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getUiLogLevel()>();
        <be.ppareit.swiftp_free.FTPServerService: int uiLogLevel> = $i0;
        <be.ppareit.swiftp_free.FTPServerService: android.content.SharedPreferences settings> = null;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        $r0 = newmultiarray (boolean)[30][];
        <be.ppareit.swiftp_free.FTPServerService: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[6];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[14];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[9];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[41];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[8];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[6];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[4];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[3];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[3];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[7];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[5];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[4];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[12];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/FTPServerService", 2346350861671177131L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.Globals extends java.lang.Object
{
    private static android.content.Context context;
    private static java.lang.String lastError;
    private static java.io.File chrootDir;
    private static be.ppareit.swiftp_free.server.ProxyConnector proxyConnector;
    private static java.lang.String username;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.Globals r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.Globals;
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()
    {
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.ProxyConnector $r2, $r3, $r4;
        boolean $z0;

        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        $r2 = <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r1[0] = 1;
        if $r2 == null goto label1;

        $r3 = <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        $z0 = virtualinvoke $r3.<be.ppareit.swiftp_free.server.ProxyConnector: boolean isAlive()>();
        r1[1] = 1;
        if $z0 != 0 goto label1;

        r1[2] = 1;
        return null;

     label1:
        $r4 = <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r1[3] = 1;
        return $r4;
    }

    public static void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = r0;
        r2[0] = 1;
        return;
    }

    public static java.io.File getChrootDir()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.io.File $r2;

        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $r2 = <be.ppareit.swiftp_free.Globals: java.io.File chrootDir>;
        r1[0] = 1;
        return $r2;
    }

    public static void setChrootDir(java.io.File)
    {
        java.io.File r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: java.io.File;
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        <be.ppareit.swiftp_free.Globals: java.io.File chrootDir> = r0;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public static java.lang.String getLastError()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        $r2 = <be.ppareit.swiftp_free.Globals: java.lang.String lastError>;
        r1[0] = 1;
        return $r2;
    }

    public static void setLastError(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        <be.ppareit.swiftp_free.Globals: java.lang.String lastError> = r0;
        r2[0] = 1;
        return;
    }

    public static android.content.Context getContext()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context $r2;

        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];
        $r2 = <be.ppareit.swiftp_free.Globals: android.content.Context context>;
        r1[0] = 1;
        return $r2;
    }

    public static void setContext(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: android.content.Context;
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r2[0] = 1;
        if r0 == null goto label1;

        <be.ppareit.swiftp_free.Globals: android.content.Context context> = r0;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public static java.lang.String getUsername()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        $r0 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r1 = $r0[9];
        $r2 = <be.ppareit.swiftp_free.Globals: java.lang.String username>;
        r1[0] = 1;
        return $r2;
    }

    public static void setUsername(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.Globals: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        <be.ppareit.swiftp_free.Globals: java.lang.String username> = r0;
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Globals: boolean[][] $VRi()>();
        r1 = $r0[11];
        <be.ppareit.swiftp_free.Globals: java.io.File chrootDir> = null;
        <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        <be.ppareit.swiftp_free.Globals: java.lang.String username> = null;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <be.ppareit.swiftp_free.Globals: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[3];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Globals", 3497577037437912937L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.MyLog extends java.lang.Object
{
    protected java.lang.String tag;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.lang.String)
    {
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<be.ppareit.swiftp_free.MyLog: java.lang.String tag> = r1;
        r3[0] = 1;
        return;
    }

    public void l(int, java.lang.String, boolean)
    {
        be.ppareit.swiftp_free.MyLog r0;
        int i0, $i1, $i3;
        java.lang.String r1, r7, $r8;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Class r4, $r6;
        java.lang.Throwable r5, $r9;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r6 = class "be/ppareit/swiftp_free/MyLog";
        r4 = $r6;
        entermonitor $r6;

     label1:
        r7 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        r3[0] = 1;
        if i0 == 6 goto label2;

        r3[1] = 1;
        if i0 != 5 goto label3;

     label2:
        staticinvoke <be.ppareit.swiftp_free.Globals: void setLastError(java.lang.String)>(r7);
        r3[2] = 1;

     label3:
        $i1 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getConsoleLogLevel()>();
        r3[3] = 1;
        if i0 < $i1 goto label4;

        $r8 = r0.<be.ppareit.swiftp_free.MyLog: java.lang.String tag>;
        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(i0, $r8, r7);
        r3[4] = 1;

     label4:
        r3[5] = 1;
        if z0 != 0 goto label5;

        $i3 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getUiLogLevel()>();
        r3[6] = 1;
        if i0 < $i3 goto label5;

        staticinvoke <be.ppareit.swiftp_free.FTPServerService: void log(int,java.lang.String)>(i0, r7);
        r3[7] = 1;

     label5:
        exitmonitor r4;
        r3[8] = 1;

     label6:
        goto label10;

     label7:
        $r9 := @caughtexception;

     label8:
        r5 = $r9;
        exitmonitor r4;

     label9:
        r3[9] = 1;
        throw r5;

     label10:
        r3[10] = 1;
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void l(int, java.lang.String)
    {
        be.ppareit.swiftp_free.MyLog r0;
        int i0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(i0, r1, 0);
        r3[0] = 1;
        return;
    }

    public void e(java.lang.String)
    {
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(6, r1, 0);
        r3[0] = 1;
        return;
    }

    public void w(java.lang.String)
    {
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(5, r1, 0);
        r3[0] = 1;
        return;
    }

    public void i(java.lang.String)
    {
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(4, r1, 0);
        r3[0] = 1;
        return;
    }

    public void d(java.lang.String)
    {
        be.ppareit.swiftp_free.MyLog r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.MyLog;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        virtualinvoke r0.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(3, r1, 0);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.MyLog: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <be.ppareit.swiftp_free.MyLog: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[11];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/MyLog", 3902846006891928904L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.QuotaStats extends java.lang.Object
{
    private int quota;
    private int used;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(int, int)
    {
        be.ppareit.swiftp_free.QuotaStats r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.QuotaStats;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<be.ppareit.swiftp_free.QuotaStats: int quota> = i1;
        r0.<be.ppareit.swiftp_free.QuotaStats: int used> = i0;
        r2[0] = 1;
        return;
    }

    public int getQuota()
    {
        be.ppareit.swiftp_free.QuotaStats r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: be.ppareit.swiftp_free.QuotaStats;
        $r1 = <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $i0 = r0.<be.ppareit.swiftp_free.QuotaStats: int quota>;
        r2[0] = 1;
        return $i0;
    }

    public int getUsed()
    {
        be.ppareit.swiftp_free.QuotaStats r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: be.ppareit.swiftp_free.QuotaStats;
        $r1 = <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<be.ppareit.swiftp_free.QuotaStats: int used>;
        r2[0] = 1;
        return $i0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.QuotaStats: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/QuotaStats", -3108993348983726658L);
        return $r0;
    }
}
public final class be.ppareit.swiftp_free.R$attr extends java.lang.Object
{

    public void <init>()
    {
        be.ppareit.swiftp_free.R$attr r0;

        r0 := @this: be.ppareit.swiftp_free.R$attr;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$drawable extends java.lang.Object
{
    public static final int icon;
    public static final int logo;
    public static final int notification;
    public static final int widget_off;
    public static final int widget_on;

    public void <init>()
    {
        be.ppareit.swiftp_free.R$drawable r0;

        r0 := @this: be.ppareit.swiftp_free.R$drawable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$id extends java.lang.Object
{
    public static final int widget_button_off;
    public static final int widget_button_on;

    public void <init>()
    {
        be.ppareit.swiftp_free.R$id r0;

        r0 := @this: be.ppareit.swiftp_free.R$id;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$layout extends java.lang.Object
{
    public static final int widget;

    public void <init>()
    {
        be.ppareit.swiftp_free.R$layout r0;

        r0 := @this: be.ppareit.swiftp_free.R$layout;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$string extends java.lang.Object
{
    public static final int about_dlg_message;
    public static final int about_dlg_title;
    public static final int about_label;
    public static final int acceptproxy_default;
    public static final int acceptproxy_label;
    public static final int acceptwifi_default;
    public static final int acceptwifi_label;
    public static final int advancedsettings_label;
    public static final int cant_get_url;
    public static final int chroot_default;
    public static final int chroot_label;
    public static final int extra_label;
    public static final int help_dlg_message;
    public static final int help_dlg_title;
    public static final int help_label;
    public static final int notif_server_starting;
    public static final int notif_text;
    public static final int notif_title;
    public static final int ok;
    public static final int password_default;
    public static final int password_label;
    public static final int password_validation_error;
    public static final int port_validation_error;
    public static final int portnumber_default;
    public static final int portnumber_label;
    public static final int pst_connected;
    public static final int pst_connecting;
    public static final int pst_disconnected;
    public static final int pst_failed;
    public static final int pst_unreachable;
    public static final int running_label;
    public static final int running_summary_failed;
    public static final int running_summary_started;
    public static final int running_summary_stopped;
    public static final int settings_label;
    public static final int show_password_default;
    public static final int show_password_label;
    public static final int storage_warning;
    public static final int swiftp_name;
    public static final int 'unknown';
    public static final int username_default;
    public static final int username_label;
    public static final int username_validation_error;
    public static final int wakelock_default;
    public static final int wakelock_label;
    public static final int widget_name;
    public static final int wifi_state_receiver_label;

    public void <init>()
    {
        be.ppareit.swiftp_free.R$string r0;

        r0 := @this: be.ppareit.swiftp_free.R$string;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R$xml extends java.lang.Object
{
    public static final int preferences;
    public static final int widget_provider;

    public void <init>()
    {
        be.ppareit.swiftp_free.R$xml r0;

        r0 := @this: be.ppareit.swiftp_free.R$xml;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class be.ppareit.swiftp_free.R extends java.lang.Object
{

    public void <init>()
    {
        be.ppareit.swiftp_free.R r0;

        r0 := @this: be.ppareit.swiftp_free.R;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class be.ppareit.swiftp_free.Settings extends java.lang.Object
{
    protected static int inputBufferSize;
    protected static boolean allowOverwrite;
    protected static int dataChunkSize;
    protected static int sessionMonitorScrollBack;
    protected static int serverLogScrollBack;
    protected static int uiLogLevel;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.Settings r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.Settings;
        $r1 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static int getUiLogLevel()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        $i0 = <be.ppareit.swiftp_free.Settings: int uiLogLevel>;
        r1[0] = 1;
        return $i0;
    }

    public static void setUiLogLevel(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        <be.ppareit.swiftp_free.Settings: int uiLogLevel> = i0;
        r1[0] = 1;
        return;
    }

    public static int getInputBufferSize()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $i0 = <be.ppareit.swiftp_free.Settings: int inputBufferSize>;
        r1[0] = 1;
        return $i0;
    }

    public static void setInputBufferSize(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        <be.ppareit.swiftp_free.Settings: int inputBufferSize> = i0;
        r1[0] = 1;
        return;
    }

    public static boolean isAllowOverwrite()
    {
        boolean[][] $r0;
        boolean[] r1;
        boolean $z0;

        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        $z0 = <be.ppareit.swiftp_free.Settings: boolean allowOverwrite>;
        r1[0] = 1;
        return $z0;
    }

    public static void setAllowOverwrite(boolean)
    {
        boolean z0;
        boolean[][] $r0;
        boolean[] r1;

        z0 := @parameter0: boolean;
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        <be.ppareit.swiftp_free.Settings: boolean allowOverwrite> = z0;
        r1[0] = 1;
        return;
    }

    public static int getDataChunkSize()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];
        $i0 = <be.ppareit.swiftp_free.Settings: int dataChunkSize>;
        r1[0] = 1;
        return $i0;
    }

    public static void setDataChunkSize(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[8];
        <be.ppareit.swiftp_free.Settings: int dataChunkSize> = i0;
        r1[0] = 1;
        return;
    }

    public static int getSessionMonitorScrollBack()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[9];
        $i0 = <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack>;
        r1[0] = 1;
        return $i0;
    }

    public static void setSessionMonitorScrollBack(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[10];
        <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack> = i0;
        r1[0] = 1;
        return;
    }

    public static int getServerLogScrollBack()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[11];
        $i0 = <be.ppareit.swiftp_free.Settings: int serverLogScrollBack>;
        r1[0] = 1;
        return $i0;
    }

    public static void setLogScrollBack(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Settings: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();

     label0:
        r1 = $r0[12];
        <be.ppareit.swiftp_free.Settings: int serverLogScrollBack> = i0;
        r1[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Settings: boolean[][] $VRi()>();
        r1 = $r0[13];
        <be.ppareit.swiftp_free.Settings: int inputBufferSize> = 256;
        <be.ppareit.swiftp_free.Settings: boolean allowOverwrite> = 0;
        <be.ppareit.swiftp_free.Settings: int dataChunkSize> = 8192;
        <be.ppareit.swiftp_free.Settings: int sessionMonitorScrollBack> = 10;
        <be.ppareit.swiftp_free.Settings: int serverLogScrollBack> = 10;
        <be.ppareit.swiftp_free.Settings: int uiLogLevel> = 4;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = newmultiarray (boolean)[14][];
        <be.ppareit.swiftp_free.Settings: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Settings", 717338994651870716L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.Util$MediaScannerNotifier extends java.lang.Object implements android.media.MediaScannerConnection$MediaScannerConnectionClient
{
    private final android.media.MediaScannerConnection connection;
    private final java.lang.String path;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, java.lang.String)
    {
        be.ppareit.swiftp_free.Util$MediaScannerNotifier r0;
        android.content.Context r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        android.media.MediaScannerConnection $r5, $r6;

        r0 := @this: be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: java.lang.String path> = r2;
        $r5 = new android.media.MediaScannerConnection;
        specialinvoke $r5.<android.media.MediaScannerConnection: void <init>(android.content.Context,android.media.MediaScannerConnection$MediaScannerConnectionClient)>(r1, r0);
        r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: android.media.MediaScannerConnection connection> = $r5;
        $r6 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: android.media.MediaScannerConnection connection>;
        virtualinvoke $r6.<android.media.MediaScannerConnection: void connect()>();
        r4[0] = 1;
        return;
    }

    public void onMediaScannerConnected()
    {
        be.ppareit.swiftp_free.Util$MediaScannerNotifier r0;
        boolean[][] $r1;
        boolean[] r2;
        android.media.MediaScannerConnection $r3;
        java.lang.String $r4;

        r0 := @this: be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        $r1 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: android.media.MediaScannerConnection connection>;
        $r4 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: java.lang.String path>;
        virtualinvoke $r3.<android.media.MediaScannerConnection: void scanFile(java.lang.String,java.lang.String)>($r4, null);
        r2[0] = 1;
        return;
    }

    public void onScanCompleted(java.lang.String, android.net.Uri)
    {
        be.ppareit.swiftp_free.Util$MediaScannerNotifier r0;
        java.lang.String r1;
        android.net.Uri r2;
        boolean[][] $r3;
        boolean[] r4;
        android.media.MediaScannerConnection $r5;

        r0 := @this: be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: android.net.Uri;
        $r3 = <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $r5 = r0.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: android.media.MediaScannerConnection connection>;
        virtualinvoke $r5.<android.media.MediaScannerConnection: void disconnect()>();
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.Util$MediaScannerNotifier: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Util$MediaScannerNotifier", 1277027055199244056L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.Util extends java.lang.Object
{
    static be.ppareit.swiftp_free.MyLog myLog;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.Util r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.Util;
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static java.lang.String getAndroidId()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.content.ContentResolver r2;
        android.content.Context $r3;
        java.lang.String $r4;

        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        $r3 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r2 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();
        $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r2, "android_id");
        r1[0] = 1;
        return $r4;
    }

    public static java.lang.String getVersion()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String r2, $r8;
        android.content.pm.PackageManager$NameNotFoundException r3, $r9;
        android.content.Context $r4, $r5;
        android.content.pm.PackageManager $r6;
        android.content.pm.PackageInfo $r7;
        be.ppareit.swiftp_free.MyLog $r10;

        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        $r4 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r2 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        $r5 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();
        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r2, 0);
        $r8 = $r7.<android.content.pm.PackageInfo: java.lang.String versionName>;
        r1[0] = 1;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;
        r3 = $r9;
        $r10 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "NameNotFoundException looking up SwiFTP version");
        r1[1] = 1;
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static byte byteOfInt(int, int)
    {
        int i0, i1, i2, $i3;
        boolean[][] $r0;
        boolean[] r1;
        byte $b4;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        i2 = i1 * 8;
        $i3 = i0 >> i2;
        $b4 = (byte) $i3;
        r1[0] = 1;
        return $b4;
    }

    public static java.lang.String ipToString(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r15, $r17, $r18;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuffer r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b1, $b2, $b3, $b4;
        be.ppareit.swiftp_free.MyLog $r12;
        java.lang.StringBuilder $r13, $r14, $r16;

        i0 := @parameter0: int;
        r0 := @parameter1: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r2[0] = 1;
        if i0 <= 0 goto label1;

        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        r3 = $r4;
        $b1 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, 0);
        $r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);
        $b2 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, 1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b2);
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);
        $b3 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, 2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);
        $b4 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, 3);
        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($b4);
        $r12 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ipToString returning: ");
        $r15 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r17);
        $r18 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();
        r2[1] = 1;
        return $r18;

     label1:
        r2[2] = 1;
        return null;
    }

    public static java.net.InetAddress intToInet(int)
    {
        int i0, i1;
        boolean[][] $r0;
        boolean[] r1;
        byte[] r2;
        byte $b2;
        java.net.InetAddress $r3;
        java.net.UnknownHostException $r4, r5;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        r2 = newarray (byte)[4];
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= 4 goto label2;

        $b2 = staticinvoke <be.ppareit.swiftp_free.Util: byte byteOfInt(int,int)>(i0, i1);
        r2[i1] = $b2;
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r2);
        r1[3] = 1;

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;
        r5 = $r4;
        r1[4] = 1;
        return null;

        catch java.net.UnknownHostException from label2 to label3 with label4;
    }

    public static java.lang.String ipToString(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.MyLog $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        r1[0] = 1;
        if i0 != 0 goto label1;

        $r2 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r2.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "ipToString won\'t convert value 0");
        r1[1] = 1;
        return null;

     label1:
        $r3 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String ipToString(int,java.lang.String)>(i0, ".");
        r1[2] = 1;
        return $r3;
    }

    public static byte[] jsonToByteArray(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.UnsupportedEncodingException r3, $r6;
        java.lang.String $r4;
        byte[] $r5;

        r0 := @parameter0: org.json.JSONObject;
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];

     label1:
        $r4 = virtualinvoke r0.<org.json.JSONObject: java.lang.String toString()>();
        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");
        r2[0] = 1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        r2[1] = 1;
        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static org.json.JSONObject byteArrayToJson(byte[]) throws org.json.JSONException
    {
        byte[] r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        java.io.UnsupportedEncodingException r4, $r6;
        org.json.JSONObject $r5;

        r0 := @parameter0: byte[];
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];

     label1:
        $r5 = new org.json.JSONObject;
        $r3 = new java.lang.String;
        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, "UTF-8");
        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>($r3);
        r2[0] = 1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r4 = $r6;
        r2[1] = 1;
        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static void newFileNotify(java.lang.String)
    {
        java.lang.String r0, $r7;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        be.ppareit.swiftp_free.MyLog $r4;
        be.ppareit.swiftp_free.Util$MediaScannerNotifier $r8;
        android.content.Context $r9;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r4 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying others about new file: ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r7);
        $r8 = new be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        $r9 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        specialinvoke $r8.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: void <init>(android.content.Context,java.lang.String)>($r9, r0);
        r2[0] = 1;
        return;
    }

    public static void deletedFileNotify(java.lang.String)
    {
        java.lang.String r0, $r7;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        be.ppareit.swiftp_free.MyLog $r4;
        be.ppareit.swiftp_free.Util$MediaScannerNotifier $r8;
        android.content.Context $r9;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r4 = <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying others about deleted file: ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r7);
        $r8 = new be.ppareit.swiftp_free.Util$MediaScannerNotifier;
        $r9 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        specialinvoke $r8.<be.ppareit.swiftp_free.Util$MediaScannerNotifier: void <init>(android.content.Context,java.lang.String)>($r9, r0);
        r2[0] = 1;
        return;
    }

    public static java.lang.String[] concatStrArrays(java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r0, r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.lang.String[];
        r1 := @parameter1: java.lang.String[];
        $r2 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        $i0 = lengthof r0;
        $i1 = lengthof r1;
        $i2 = $i0 + $i1;
        r4 = newarray (java.lang.String)[$i2];
        $i3 = lengthof r0;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r4, 0, $i3);
        $i4 = lengthof r0;
        $i5 = lengthof r1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r4, $i4, $i5);
        r3[0] = 1;
        return r4;
    }

    public static void sleepIgnoreInterupt(long)
    {
        long l0;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.InterruptedException r2, $r3;

        l0 := @parameter0: long;
        $r0 = <be.ppareit.swiftp_free.Util: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();

     label0:
        r1 = $r0[12];

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(l0);
        r1[0] = 1;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;
        r2 = $r3;
        r1[1] = 1;

     label4:
        r1[2] = 1;
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.String $r4;

        $r0 = staticinvoke <be.ppareit.swiftp_free.Util: boolean[][] $VRi()>();
        r1 = $r0[13];
        $r3 = new be.ppareit.swiftp_free.MyLog;
        $r2 = class "be/ppareit/swiftp_free/Util";
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r4);
        <be.ppareit.swiftp_free.Util: be.ppareit.swiftp_free.MyLog myLog> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = newmultiarray (boolean)[14][];
        <be.ppareit.swiftp_free.Util: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[2];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[5];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[2];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[2];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[3];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/Util", -194078992301101743L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.WidgetProvider extends android.appwidget.AppWidgetProvider
{
    public static java.lang.String ACTION_WIDGET_BUTTON;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.WidgetProvider r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        $r1 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])
    {
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        android.appwidget.AppWidgetManager r2;
        int[] r3;
        boolean[][] $r4;
        boolean[] r5;
        android.widget.RemoteViews r6, $r9;
        android.content.Intent r7, $r11;
        android.app.PendingIntent r8;
        java.lang.String $r10, $r12;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.appwidget.AppWidgetManager;
        r3 := @parameter2: int[];
        $r4 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();

     label0:
        r5 = $r4[1];
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void registerWidgets(int[],android.content.Context,android.appwidget.AppWidgetManager)>(r3, r1, r2);
        $r9 = new android.widget.RemoteViews;
        $r10 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();
        specialinvoke $r9.<android.widget.RemoteViews: void <init>(java.lang.String,int)>($r10, 2130903040);
        r6 = $r9;
        $r11 = new android.content.Intent;
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "be/ppareit/swiftp_free/WidgetProvider");
        r7 = $r11;
        $r12 = <be.ppareit.swiftp_free.WidgetProvider: java.lang.String ACTION_WIDGET_BUTTON>;
        virtualinvoke r7.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r12);
        r8 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r1, 0, r7, 0);
        virtualinvoke r6.<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>(2131099649, r8);
        virtualinvoke r6.<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>(2131099648, r8);
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        r5[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r6.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099648, 0);
        virtualinvoke r6.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099649, 8);
        r5[1] = 1;
        goto label2;

     label1:
        virtualinvoke r6.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099648, 8);
        virtualinvoke r6.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099649, 0);
        r5[2] = 1;

     label2:
        virtualinvoke r2.<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>(r3, r6);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>(r1, r2, r3);
        r5[3] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        android.content.Intent r2, r5, $r8;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $r7 = <be.ppareit.swiftp_free.WidgetProvider: java.lang.String ACTION_WIDGET_BUTTON>;
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        r4[0] = 1;
        if $z0 == 0 goto label2;

        $r8 = new android.content.Intent;
        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "be/ppareit/swiftp_free/FTPServerService");
        r5 = $r8;
        $z1 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        r4[1] = 1;
        if $z1 != 0 goto label1;

        virtualinvoke r1.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r5);
        r4[2] = 1;
        goto label2;

     label1:
        virtualinvoke r1.<android.content.Context: boolean stopService(android.content.Intent)>(r5);
        r4[3] = 1;

     label2:
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>(r1, r2);
        r4[4] = 1;
        return;
    }

    public void onDeleted(android.content.Context, int[])
    {
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        int[] r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: int[];
        $r3 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void unregisterWidgets(int[])>(r2);
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>(r1, r2);
        r4[0] = 1;
        return;
    }

    public void onEnabled(android.content.Context)
    {
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        $r2 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void registerAtUiUpdater()>();
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>(r1);
        r3[0] = 1;
        return;
    }

    public void onDisabled(android.content.Context)
    {
        be.ppareit.swiftp_free.WidgetProvider r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.WidgetProvider;
        r1 := @parameter0: android.content.Context;
        $r2 = <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void unregisterAtUiUpdater()>();
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void unregisterAllWidgets()>();
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>(r1);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRi()>();
        r1 = $r0[6];
        <be.ppareit.swiftp_free.WidgetProvider: java.lang.String ACTION_WIDGET_BUTTON> = "actionWidgetButton";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[7][];
        <be.ppareit.swiftp_free.WidgetProvider: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/WidgetProvider", -677173304999326279L);
        return $r0;
    }
}
final class be.ppareit.swiftp_free.WidgetUiUpdater$1 extends android.os.Handler
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        be.ppareit.swiftp_free.WidgetUiUpdater$1 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.WidgetUiUpdater$1;
        $r1 = <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        be.ppareit.swiftp_free.WidgetUiUpdater$1 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @this: be.ppareit.swiftp_free.WidgetUiUpdater$1;
        r1 := @parameter0: android.os.Message;
        $r2 = <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $i0 = r1.<android.os.Message: int what>;
        r3[0] = 1;
        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke r0.<be.ppareit.swiftp_free.WidgetUiUpdater$1: void removeMessages(int)>(0);
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void access$000()>();
        r3[1] = 1;
        goto label3;

     label2:
        virtualinvoke r0.<be.ppareit.swiftp_free.WidgetUiUpdater$1: void removeMessages(int)>(1);
        r3[2] = 1;

     label3:
        r3[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.WidgetUiUpdater$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/WidgetUiUpdater$1", 19550811991544352L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.WidgetUiUpdater extends java.lang.Object
{
    private static java.util.HashSet widgetIds;
    private static android.content.Context context;
    private static android.appwidget.AppWidgetManager appWidgetManager;
    private static android.os.Handler handler;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.WidgetUiUpdater r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.WidgetUiUpdater;
        $r1 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    protected static void registerWidgets(int[], android.content.Context, android.appwidget.AppWidgetManager)
    {
        int[] r0, r5;
        android.content.Context r1;
        android.appwidget.AppWidgetManager r2;
        boolean[][] $r3;
        boolean[] r4;
        int i0, i1, i2;
        java.util.HashSet $r6;
        java.lang.Integer $r7;

        r0 := @parameter0: int[];
        r1 := @parameter1: android.content.Context;
        r2 := @parameter2: android.appwidget.AppWidgetManager;
        $r3 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        <be.ppareit.swiftp_free.WidgetUiUpdater: android.content.Context context> = r1;
        <be.ppareit.swiftp_free.WidgetUiUpdater: android.appwidget.AppWidgetManager appWidgetManager> = r2;
        r5 = r0;
        i0 = lengthof r5;
        i1 = 0;
        r4[0] = 1;

     label1:
        r4[1] = 1;
        if i1 >= i0 goto label2;

        i2 = r5[i1];
        $r6 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        $r7 = new java.lang.Integer;
        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i2);
        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>($r7);
        i1 = i1 + 1;
        r4[2] = 1;
        goto label1;

     label2:
        r4[3] = 1;
        return;
    }

    protected static void unregisterWidgets(int[])
    {
        int[] r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, i2;
        java.util.HashSet $r4, $r5;
        boolean $z0;
        java.lang.Integer $r6;

        r0 := @parameter0: int[];
        $r1 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        $z0 = virtualinvoke $r4.<java.util.HashSet: boolean isEmpty()>();
        r2[0] = 1;
        if $z0 != 0 goto label2;

        r3 = r0;
        i0 = lengthof r3;
        i1 = 0;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        if i1 >= i0 goto label2;

        i2 = r3[i1];
        $r5 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        $r6 = new java.lang.Integer;
        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2);
        virtualinvoke $r5.<java.util.HashSet: boolean remove(java.lang.Object)>($r6);
        i1 = i1 + 1;
        r2[3] = 1;
        goto label1;

     label2:
        r2[4] = 1;
        return;
    }

    protected static void unregisterAllWidgets()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.HashSet $r2;

        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $r2 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        virtualinvoke $r2.<java.util.HashSet: void clear()>();
        r1[0] = 1;
        return;
    }

    protected static void registerAtUiUpdater()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    protected static void unregisterAtUiUpdater()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static void updateWidgetUi()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context $r2;
        android.widget.RemoteViews r3, $r6;
        java.util.Iterator r4;
        java.lang.Integer r5;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.util.HashSet $r8;
        java.lang.Object $r9;
        android.appwidget.AppWidgetManager $r10;
        int $i0;

        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        $r6 = new android.widget.RemoteViews;
        $r2 = <be.ppareit.swiftp_free.WidgetUiUpdater: android.content.Context context>;
        $r7 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();
        specialinvoke $r6.<android.widget.RemoteViews: void <init>(java.lang.String,int)>($r7, 2130903040);
        r3 = $r6;
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        r1[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r3.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099648, 0);
        virtualinvoke r3.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099649, 8);
        r1[1] = 1;
        goto label2;

     label1:
        virtualinvoke r3.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099648, 8);
        virtualinvoke r3.<android.widget.RemoteViews: void setViewVisibility(int,int)>(2131099649, 0);
        r1[2] = 1;

     label2:
        $r8 = <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds>;
        r4 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();
        r1[3] = 1;

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r1[4] = 1;
        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.Integer) $r9;
        $r10 = <be.ppareit.swiftp_free.WidgetUiUpdater: android.appwidget.AppWidgetManager appWidgetManager>;
        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();
        virtualinvoke $r10.<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>($i0, r3);
        r1[5] = 1;
        goto label3;

     label4:
        r1[6] = 1;
        return;
    }

    static void access$000()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];
        staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: void updateWidgetUi()>();
        r1[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.HashSet $r2;
        be.ppareit.swiftp_free.WidgetUiUpdater$1 $r3;

        $r0 = staticinvoke <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRi()>();
        r1 = $r0[8];
        $r2 = new java.util.HashSet;
        specialinvoke $r2.<java.util.HashSet: void <init>()>();
        <be.ppareit.swiftp_free.WidgetUiUpdater: java.util.HashSet widgetIds> = $r2;
        $r3 = new be.ppareit.swiftp_free.WidgetUiUpdater$1;
        specialinvoke $r3.<be.ppareit.swiftp_free.WidgetUiUpdater$1: void <init>()>();
        <be.ppareit.swiftp_free.WidgetUiUpdater: android.os.Handler handler> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <be.ppareit.swiftp_free.WidgetUiUpdater: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[7];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/WidgetUiUpdater", 1805043575595913939L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Boolean $r5;
        boolean $z0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r6, $r7;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = (java.lang.Boolean) r2;
        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $r6 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$000(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r6);
        r4[1] = 1;
        goto label2;

     label1:
        $r7 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r7);
        r4[2] = 1;

     label2:
        r4[3] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$1", 6304573652989947447L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5;
        java.lang.CharSequence $r6;
        boolean $z0, $z1;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r7, $r9;
        android.widget.Toast $r8;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = (java.lang.String) r2;
        $r6 = virtualinvoke r1.<android.preference.Preference: java.lang.CharSequence getSummary()>();
        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        r4[0] = 1;
        if $z0 == 0 goto label1;

        r4[1] = 1;
        return 0;

     label1:
        $z1 = virtualinvoke r5.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z0-9]+");
        r4[2] = 1;
        if $z1 != 0 goto label2;

        $r7 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        $r8 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r7, 2131034145, 1);
        virtualinvoke $r8.<android.widget.Toast: void show()>();
        r4[3] = 1;
        return 0;

     label2:
        virtualinvoke r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>(r5);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r9);
        r4[4] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$2", 3093550946908485374L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5, $r8;
        boolean $z0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r6, $r9;
        android.widget.Toast $r7;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = (java.lang.String) r2;
        $z0 = virtualinvoke r5.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z0-9]+");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        $r6 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r6, 2131034146, 1);
        virtualinvoke $r7.<android.widget.Toast: void show()>();
        r4[1] = 1;
        return 0;

     label1:
        $r8 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String access$200(java.lang.String)>(r5);
        virtualinvoke r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r8);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r9);
        r4[2] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$3", -2721668518369241344L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5;
        int i0;
        java.lang.Exception r6, $r8;
        java.lang.CharSequence $r7;
        boolean $z0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r9, $r11;
        android.widget.Toast $r10;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = (java.lang.String) r2;
        $r7 = virtualinvoke r1.<android.preference.Preference: java.lang.CharSequence getSummary()>();
        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        r4[0] = 1;
        if $z0 == 0 goto label1;

        r4[1] = 1;
        return 0;

     label1:
        i0 = 0;

     label2:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);
        r4[2] = 1;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r6 = $r8;
        r4[3] = 1;

     label5:
        r4[4] = 1;
        if i0 <= 0 goto label6;

        r4[5] = 1;
        if 65535 >= i0 goto label7;

     label6:
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        $r10 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r9, 2131034147, 1);
        virtualinvoke $r10.<android.widget.Toast: void show()>();
        r4[6] = 1;
        return 0;

     label7:
        virtualinvoke r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>(r5);
        $r11 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r11);
        r4[7] = 1;
        return 1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$4", -3647057260410593710L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5;
        java.io.File r6, $r8;
        java.lang.CharSequence $r7;
        boolean $z0, $z1, $z2;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = (java.lang.String) r2;
        $r7 = virtualinvoke r1.<android.preference.Preference: java.lang.CharSequence getSummary()>();
        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        r4[0] = 1;
        if $z0 == 0 goto label1;

        r4[1] = 1;
        return 0;

     label1:
        $r8 = new java.io.File;
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r5);
        r6 = $r8;
        $z1 = virtualinvoke r6.<java.io.File: boolean isDirectory()>();
        r4[2] = 1;
        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r6.<java.io.File: boolean canRead()>();
        r4[3] = 1;
        if $z2 != 0 goto label3;

     label2:
        r4[4] = 1;
        return 0;

     label3:
        virtualinvoke r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>(r5);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r9);
        r4[5] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$5", -2967324834895439275L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6 extends java.lang.Object implements android.preference.Preference$OnPreferenceChangeListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6 r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r5;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6;
        r1 := @parameter0: android.preference.Preference;
        r2 := @parameter1: java.lang.Object;
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>($r5);
        r4[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$6", 4320153509232217768L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7 extends java.lang.Object implements android.preference.Preference$OnPreferenceClickListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceClick(android.preference.Preference)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7 r0;
        android.preference.Preference r1;
        boolean[][] $r2;
        boolean[] r3;
        android.app.AlertDialog$Builder $r4, $r6, $r7, $r10;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r5, $r8;
        java.lang.CharSequence $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7;
        r1 := @parameter0: android.preference.Preference;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = new android.app.AlertDialog$Builder;
        $r5 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        specialinvoke $r4.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r5);
        $r6 = virtualinvoke $r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034138);
        $r7 = virtualinvoke $r6.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131034139);
        $r8 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.CharSequence getText(int)>(2131034144);
        $r10 = virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r9, null);
        virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$7", 4320153517837474319L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8 extends java.lang.Object implements android.preference.Preference$OnPreferenceClickListener
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onPreferenceClick(android.preference.Preference)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8 r0;
        android.preference.Preference r1;
        boolean[][] $r2;
        boolean[] r3;
        android.app.AlertDialog$Builder $r4, $r6, $r7, $r10;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r5, $r8;
        java.lang.CharSequence $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8;
        r1 := @parameter0: android.preference.Preference;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = new android.app.AlertDialog$Builder;
        $r5 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        specialinvoke $r4.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r5);
        $r6 = virtualinvoke $r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034140);
        $r7 = virtualinvoke $r6.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131034141);
        $r8 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.CharSequence getText(int)>(2131034144);
        $r10 = virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r9, null);
        virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$8", 4320153517837474319L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9 extends android.content.BroadcastReceiver
{
    final be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9 r0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9;
        r1 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9 r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.preference.CheckBoxPreference r5;
        java.net.InetAddress r6;
        java.lang.String r7, r9, $r10, $r13, $r15, $r18, $r19, $r22, $r29, $r30;
        android.content.res.Resources r8;
        java.lang.StringBuilder $r11, $r12, $r14, $r20, $r21, $r23, $r24, $r25, $r26;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity $r16, $r27;
        android.preference.Preference $r17;
        boolean $z0, $z1, $z2;
        int $i2;
        java.lang.Object[] $r28;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r10 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String access$300()>();
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FTPServerService action received: ");
        $r13 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r10, $r15);
        $r16 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        $r17 = virtualinvoke $r16.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("running_state");
        r5 = (android.preference.CheckBoxPreference) $r17;
        $r18 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("org.swiftp.FTPServerService.STARTED");
        r4[0] = 1;
        if $z0 == 0 goto label2;

        virtualinvoke r5.<android.preference.CheckBoxPreference: void setChecked(boolean)>(1);
        r6 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: java.net.InetAddress getWifiIp()>();
        r4[1] = 1;
        if r6 != null goto label1;

        $r19 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String access$300()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r19, "Unable to retreive wifi ip address");
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setSummary(int)>(2131034142);
        r4[2] = 1;
        return;

     label1:
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ftp://");
        $r22 = virtualinvoke r6.<java.net.InetAddress: java.lang.String getHostAddress()>();
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $i2 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: int getPort()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        r7 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: be.ppareit.swiftp_free.gui.ServerPreferenceActivity this$0>;
        r8 = virtualinvoke $r27.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.res.Resources getResources()>();
        $r28 = newarray (java.lang.Object)[1];
        $r28[0] = r7;
        r9 = virtualinvoke r8.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131034115, $r28);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setSummary(java.lang.CharSequence)>(r9);
        r4[3] = 1;
        goto label4;

     label2:
        $r29 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z1 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("org.swiftp.FTPServerService.STOPPED");
        r4[4] = 1;
        if $z1 == 0 goto label3;

        virtualinvoke r5.<android.preference.CheckBoxPreference: void setChecked(boolean)>(0);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setSummary(int)>(2131034114);
        r4[5] = 1;
        goto label4;

     label3:
        $r30 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z2 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("org.swiftp.FTPServerService.FAILEDTOSTART");
        r4[6] = 1;
        if $z2 == 0 goto label4;

        virtualinvoke r5.<android.preference.CheckBoxPreference: void setChecked(boolean)>(0);
        virtualinvoke r5.<android.preference.CheckBoxPreference: void setSummary(int)>(2131034116);
        r4[7] = 1;

     label4:
        r4[8] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[9];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity$9", -2172901231569244558L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.gui.ServerPreferenceActivity extends android.preference.PreferenceActivity implements android.content.SharedPreferences$OnSharedPreferenceChangeListener
{
    private static java.lang.String TAG;
    android.preference.EditTextPreference mPassWordPref;
    android.content.BroadcastReceiver ftpServerReceiver;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9 $r3;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.preference.PreferenceActivity: void <init>()>();
        $r3 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9;
        specialinvoke $r3.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$9: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.BroadcastReceiver ftpServerReceiver> = $r3;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        android.content.res.Resources r5;
        android.preference.CheckBoxPreference r6, r11;
        android.preference.EditTextPreference r7, r9, r10, $r22, $r24, $r26;
        java.lang.String r8, $r18, $r19, r23, $r25, $r29, $r30, $r33, $r34;
        android.preference.Preference r12, r13, $r15, $r17, $r21, $r28, $r32, $r36;
        android.content.Context $r14;
        boolean $z0;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1 $r16;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2 $r20;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3 $r27;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4 $r31;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5 $r35;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6 $r37;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7 $r38;
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8 $r39;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void addPreferencesFromResource(int)>(2130968576);
        $r14 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.Context getApplicationContext()>();
        staticinvoke <be.ppareit.swiftp_free.Globals: void setContext(android.content.Context)>($r14);
        r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.res.Resources getResources()>();
        $r15 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("running_state");
        r6 = (android.preference.CheckBoxPreference) $r15;
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        virtualinvoke r6.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);
        $r16 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1;
        specialinvoke $r16.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$1: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        virtualinvoke r6.<android.preference.CheckBoxPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r16);
        $r17 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("username");
        r7 = (android.preference.EditTextPreference) $r17;
        $r18 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034119);
        $r19 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("username", $r18);
        virtualinvoke r7.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r19);
        $r20 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2;
        specialinvoke $r20.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$2: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        virtualinvoke r7.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r20);
        $r21 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("password");
        $r22 = (android.preference.EditTextPreference) $r21;
        r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.EditTextPreference mPassWordPref> = $r22;
        r8 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034121);
        r23 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", r8);
        $r24 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.EditTextPreference mPassWordPref>;
        $r25 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String transformPassword(java.lang.String)>(r23);
        virtualinvoke $r24.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r25);
        $r26 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.EditTextPreference mPassWordPref>;
        $r27 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3;
        specialinvoke $r27.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$3: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        virtualinvoke $r26.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r27);
        $r28 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("portNum");
        r9 = (android.preference.EditTextPreference) $r28;
        $r29 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034126);
        $r30 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("portNum", $r29);
        virtualinvoke r9.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r30);
        $r31 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4;
        specialinvoke $r31.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$4: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        virtualinvoke r9.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r31);
        $r32 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("chrootDir");
        r10 = (android.preference.EditTextPreference) $r32;
        $r33 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034128);
        $r34 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("chrootDir", $r33);
        virtualinvoke r10.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r34);
        $r35 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5;
        specialinvoke $r35.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$5: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        virtualinvoke r10.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r35);
        $r36 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("stayAwake");
        r11 = (android.preference.CheckBoxPreference) $r36;
        $r37 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6;
        specialinvoke $r37.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$6: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        virtualinvoke r11.<android.preference.CheckBoxPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r37);
        r12 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("help");
        $r38 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7;
        specialinvoke $r38.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$7: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        virtualinvoke r12.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r38);
        r13 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("about");
        $r39 = new be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8;
        specialinvoke $r39.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity$8: void <init>(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)>(r0);
        virtualinvoke r13.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r39);
        r3[0] = 1;
        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, r6, r8, $r10;
        boolean[][] $r3;
        boolean[] r4;
        android.content.res.Resources r5;
        boolean $z0;
        android.content.Context $r7;
        android.preference.EditTextPreference $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        r1 := @parameter0: android.content.SharedPreferences;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("show_password");
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $r7 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r5 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();
        r6 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(2131034121);
        r8 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", r6);
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.EditTextPreference mPassWordPref>;
        $r10 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String transformPassword(java.lang.String)>(r8);
        virtualinvoke $r9.<android.preference.EditTextPreference: void setSummary(java.lang.CharSequence)>($r10);
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return;
    }

    private void startServer()
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3;
        android.content.Intent r4, $r5;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.Context getApplicationContext()>();
        $r5 = new android.content.Intent;
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r3, class "be/ppareit/swiftp_free/FTPServerService");
        r4 = $r5;
        $z0 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: boolean isRunning()>();
        r2[0] = 1;
        if $z0 != 0 goto label1;

        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void warnIfNoExternalStorage()>();
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.ComponentName startService(android.content.Intent)>(r4);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    private void stopServer()
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3;
        android.content.Intent r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r3 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.Context getApplicationContext()>();
        $r5 = new android.content.Intent;
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r3, class "be/ppareit/swiftp_free/FTPServerService");
        r4 = $r5;
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean stopService(android.content.Intent)>(r4);
        r2[0] = 1;
        return;
    }

    protected void onResume()
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.IntentFilter r3, $r8;
        java.lang.String $r4, $r7;
        android.preference.PreferenceScreen $r5;
        android.content.SharedPreferences $r6;
        android.content.BroadcastReceiver $r9;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r4 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r4, "onResume");
        specialinvoke r0.<android.preference.PreferenceActivity: void onResume()>();
        $r5 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>();
        $r6 = virtualinvoke $r5.<android.preference.PreferenceScreen: android.content.SharedPreferences getSharedPreferences()>();
        interfaceinvoke $r6.<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);
        $r7 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r7, "Registering the FTP server actions");
        $r8 = new android.content.IntentFilter;
        specialinvoke $r8.<android.content.IntentFilter: void <init>()>();
        r3 = $r8;
        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("org.swiftp.FTPServerService.STARTED");
        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("org.swiftp.FTPServerService.STOPPED");
        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("org.swiftp.FTPServerService.FAILEDTOSTART");
        $r9 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.BroadcastReceiver ftpServerReceiver>;
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, r3);
        r2[0] = 1;
        return;
    }

    protected void onPause()
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;
        android.content.BroadcastReceiver $r5;
        android.preference.PreferenceScreen $r6;
        android.content.SharedPreferences $r7;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r3, "onPause");
        specialinvoke r0.<android.preference.PreferenceActivity: void onPause()>();
        $r4 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r4, "Unregistering the FTPServer actions");
        $r5 = r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.content.BroadcastReceiver ftpServerReceiver>;
        virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void unregisterReceiver(android.content.BroadcastReceiver)>($r5);
        $r6 = virtualinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>();
        $r7 = virtualinvoke $r6.<android.preference.PreferenceScreen: android.content.SharedPreferences getSharedPreferences()>();
        interfaceinvoke $r7.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);
        r2[0] = 1;
        return;
    }

    private void warnIfNoExternalStorage()
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r5, $r9;
        android.widget.Toast r4;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r3 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("mounted");
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r5 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning due to storage state ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r5, $r9);
        r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r0, 2131034157, 1);
        virtualinvoke r4.<android.widget.Toast: void setGravity(int,int,int)>(17, 0, 0);
        virtualinvoke r4.<android.widget.Toast: void show()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    private static java.lang.String transformPassword(java.lang.String)
    {
        java.lang.String r0, $r8, $r11;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.res.Resources r4;
        boolean z0, $z1, $z2, z3;
        java.lang.StringBuilder r5, $r9;
        int i0, $i1, $i2;
        android.content.Context $r6, $r7;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r6 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r6);
        $r7 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r4 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();
        $r8 = virtualinvoke r4.<android.content.res.Resources: java.lang.String getString(int)>(2131034123);
        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("true");
        r2[0] = 1;
        if $z1 == 0 goto label1;

        $z2 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z2 = 0;
        r2[2] = 1;

     label2:
        z0 = $z2;
        z3 = interfaceinvoke r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("show_password", z0);
        r2[3] = 1;
        if z3 != 1 goto label3;

        r2[4] = 1;
        return r0;

     label3:
        $r9 = new java.lang.StringBuilder;
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i1);
        r5 = $r9;
        i0 = 0;
        r2[5] = 1;

     label4:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        r2[6] = 1;
        if i0 >= $i2 goto label5;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42);
        i0 = i0 + 1;
        r2[7] = 1;
        goto label4;

     label5:
        $r11 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[8] = 1;
        return $r11;
    }

    static void access$000(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void startServer()>();
        r2[0] = 1;
        return;
    }

    static void access$100(be.ppareit.swiftp_free.gui.ServerPreferenceActivity)
    {
        be.ppareit.swiftp_free.gui.ServerPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: be.ppareit.swiftp_free.gui.ServerPreferenceActivity;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        specialinvoke r0.<be.ppareit.swiftp_free.gui.ServerPreferenceActivity: void stopServer()>();
        r2[0] = 1;
        return;
    }

    static java.lang.String access$200(java.lang.String)
    {
        java.lang.String r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String transformPassword(java.lang.String)>(r0);
        r2[0] = 1;
        return $r3;
    }

    static java.lang.String access$300()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        $r0 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r1 = $r0[12];
        $r2 = <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG>;
        r1[0] = 1;
        return $r2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 = staticinvoke <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRi()>();
        r1 = $r0[13];
        $r2 = class "be/ppareit/swiftp_free/gui/ServerPreferenceActivity";
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: java.lang.String TAG> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = newmultiarray (boolean)[14][];
        <be.ppareit.swiftp_free.gui.ServerPreferenceActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[9];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/gui/ServerPreferenceActivity", 5490363918352845512L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.Account extends java.lang.Object
{
    protected java.lang.String username;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        be.ppareit.swiftp_free.server.Account r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.Account;
        $r1 = <be.ppareit.swiftp_free.server.Account: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.Account: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.Account: java.lang.String username> = null;
        r2[0] = 1;
        return;
    }

    public java.lang.String getUsername()
    {
        be.ppareit.swiftp_free.server.Account r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: be.ppareit.swiftp_free.server.Account;
        $r1 = <be.ppareit.swiftp_free.server.Account: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.Account: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.Account: java.lang.String username>;
        r2[0] = 1;
        return $r3;
    }

    public void setUsername(java.lang.String)
    {
        be.ppareit.swiftp_free.server.Account r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.Account;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.Account: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.Account: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r0.<be.ppareit.swiftp_free.server.Account: java.lang.String username> = r1;
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.Account: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.server.Account: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/Account", 7932310856815346666L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdAPPE extends be.ppareit.swiftp_free.server.CmdAbstractStore implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdAPPE r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAPPE;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdAPPE";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdAPPE: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdAPPE r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAPPE;
        $r1 = <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdAPPE: java.lang.String input>;
        $r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdAPPE: java.lang.String getParameter(java.lang.String)>($r3);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdAPPE: void doStorOrAppe(java.lang.String,boolean)>($r4, 1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdAPPE: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdAPPE", 4859542773776183139L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.server.CmdAbstractListing extends be.ppareit.swiftp_free.server.FtpCmd
{
    protected static be.ppareit.swiftp_free.MyLog staticLog;
    private static final boolean[][] $VRc;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdAbstractListing r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractListing;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdAbstractListing";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    abstract java.lang.String makeLsString(java.io.File);

    public java.lang.String listDirectory(java.lang.StringBuilder, java.io.File)
    {
        be.ppareit.swiftp_free.server.CmdAbstractListing r0;
        java.lang.StringBuilder r1, $r10, $r11, $r13, $r16, $r17, $r18;
        java.io.File r2, r7;
        boolean[][] $r3;
        boolean[] r4;
        java.io.File[] r5, r6;
        int i0, i1, $i2;
        java.lang.String r8, $r12, $r14, $r19;
        boolean $z0;
        be.ppareit.swiftp_free.MyLog $r9, $r15;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractListing;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 := @parameter1: java.io.File;
        $r3 = <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return "500 Internal error, listDirectory on non-directory\r\n";

     label1:
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listing directory: ");
        $r12 = virtualinvoke r2.<java.io.File: java.lang.String toString()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r14);
        r5 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();
        r4[2] = 1;
        if r5 != null goto label2;

        r4[3] = 1;
        return "500 Couldn\'t list directory. Check config and mount status.\r\n";

     label2:
        $r15 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dir len ");
        $i2 = lengthof r5;
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r19);
        r6 = r5;
        i0 = lengthof r6;
        i1 = 0;
        r4[4] = 1;

     label3:
        r4[5] = 1;
        if i1 >= i0 goto label5;

        r7 = r6[i1];
        r8 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: java.lang.String makeLsString(java.io.File)>(r7);
        r4[6] = 1;
        if r8 == null goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        r4[7] = 1;

     label4:
        i1 = i1 + 1;
        r4[8] = 1;
        goto label3;

     label5:
        r4[9] = 1;
        return null;
    }

    protected java.lang.String sendListing(java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdAbstractListing r0;
        java.lang.String r1, r4, $r9, $r15;
        boolean[][] $r2;
        boolean[] r3;
        be.ppareit.swiftp_free.server.SessionThread $r5, $r7, $r8, $r10, $r17, $r19, $r20, $r22;
        boolean $z0, $z1, $z2;
        be.ppareit.swiftp_free.MyLog $r6, $r16, $r18, $r21;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractListing;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z0 = virtualinvoke $r5.<be.ppareit.swiftp_free.server.SessionThread: boolean startUsingDataSocket()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r6 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "LIST/NLST done making socket");
        r3[1] = 1;
        goto label2;

     label1:
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        r3[2] = 1;
        return "425 Error opening data socket\r\n";

     label2:
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z1 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: boolean isBinaryMode()>();
        r3[3] = 1;
        if $z1 == 0 goto label3;

        $r9 = "BINARY";
        r3[4] = 1;
        goto label4;

     label3:
        $r9 = "ASCII";
        r3[5] = 1;

     label4:
        r4 = $r9;
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("150 Opening ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode data connection for file list\r\n");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>($r15);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Sent code 150, sending listing string now");
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z2 = virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(java.lang.String)>(r1);
        r3[6] = 1;
        if $z2 != 0 goto label5;

        $r18 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r18.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "sendViaDataSocket failure");
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r19.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        r3[7] = 1;
        return "426 Data socket or network error\r\n";

     label5:
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r20.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r21.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Listing sendViaDataSocket success");
        $r22 = r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r22.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("226 Data transmission OK\r\n");
        r3[8] = 1;
        return null;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.String $r4;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r3 = new be.ppareit.swiftp_free.MyLog;
        $r2 = class "be/ppareit/swiftp_free/server/CmdLIST";
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r4);
        <be.ppareit.swiftp_free.server.CmdAbstractListing: be.ppareit.swiftp_free.MyLog staticLog> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[5][];
        <be.ppareit.swiftp_free.server.CmdAbstractListing: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[2] = $r2;
        $r3 = newarray (boolean)[9];
        $r0[3] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[4] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdAbstractListing", 4275241123269594348L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.server.CmdAbstractStore extends be.ppareit.swiftp_free.server.FtpCmd
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdAbstractStore r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractStore;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdAbstractStore";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void doStorOrAppe(java.lang.String, boolean)
    {
        be.ppareit.swiftp_free.server.CmdAbstractStore r0;
        java.lang.String r1, r6, $r15, $r18, $r25, $r45, $r49, $r51, $r55, $r61, $r63, $r66;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r13, $r14, $r21, $r22, $r23, $r24, $r26, $r27, $r42, $r43, $r44, $r47, $r48, $r50, $r59, $r60, $r62;
        java.io.File r5, $r17;
        java.io.FileOutputStream r7, $r19;
        java.io.FileNotFoundException r8, $r20;
        java.io.IOException r9, $r28, $r39, r40, $r56, r57;
        int i0, i1, i2, i3, $i4, $i5, i6, $i8, $i9;
        java.lang.StackTraceElement[] r10, r53;
        java.lang.StackTraceElement r11;
        be.ppareit.swiftp_free.MyLog $r12, $r30, $r34, $r35, $r37, $r41, $r46, $r52, $r54, $r58, $r68;
        be.ppareit.swiftp_free.server.SessionThread $r16, $r29, $r31, $r33, $r36, $r38, $r64, $r65, $r67;
        byte[] r32;
        byte $b7;

        r0 := @this: be.ppareit.swiftp_free.server.CmdAbstractStore;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STOR/APPE executing with append=");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r15);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r17 = virtualinvoke $r16.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r5 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractStore: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r17, r1);
        r6 = null;
        r7 = null;
        $z1 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: boolean violatesChroot(java.io.File)>(r5);
        r3[0] = 1;
        if $z1 == 0 goto label1;

        r6 = "550 Invalid name or chroot violation\r\n";
        r3[1] = 1;
        goto label29;

     label1:
        $z2 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();
        r3[2] = 1;
        if $z2 == 0 goto label2;

        r6 = "451 Can\'t overwrite a directory\r\n";
        r3[3] = 1;
        goto label29;

     label2:
        $z3 = virtualinvoke r5.<java.io.File: boolean exists()>();
        r3[4] = 1;
        if $z3 == 0 goto label5;

        r3[5] = 1;
        if z0 != 0 goto label5;

        $z4 = virtualinvoke r5.<java.io.File: boolean delete()>();
        r3[6] = 1;
        if $z4 != 0 goto label4;

        r6 = "451 Couldn\'t truncate file\r\n";
        r3[7] = 1;

     label3:
        goto label29;

     label4:
        $r18 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();
        staticinvoke <be.ppareit.swiftp_free.Util: void deletedFileNotify(java.lang.String)>($r18);
        r3[8] = 1;

     label5:
        $r19 = new java.io.FileOutputStream;
        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r5, z0);
        r7 = $r19;
        r3[9] = 1;

     label6:
        goto label12;

     label7:
        $r20 := @caughtexception;
        r8 = $r20;

     label8:
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("451 Couldn\'t open file \"");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" aka \"");
        $r25 = virtualinvoke r5.<java.io.File: java.lang.String getCanonicalPath()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" for writing\r\n");
        r6 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[10] = 1;

     label9:
        goto label11;

     label10:
        $r28 := @caughtexception;
        r9 = $r28;
        r6 = "451 Couldn\'t open file, nested exception\r\n";
        r3[11] = 1;

     label11:
        r3[12] = 1;
        goto label29;

     label12:
        $r29 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z5 = virtualinvoke $r29.<be.ppareit.swiftp_free.server.SessionThread: boolean startUsingDataSocket()>();
        r3[13] = 1;
        if $z5 != 0 goto label13;

        r6 = "425 Couldn\'t open data socket\r\n";
        r3[14] = 1;
        goto label29;

     label13:
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r30.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Data socket ready");
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r31.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("150 Data socket ready\r\n");
        $i4 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getDataChunkSize()>();
        r32 = newarray (byte)[$i4];
        $r33 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z6 = virtualinvoke $r33.<be.ppareit.swiftp_free.server.SessionThread: boolean isBinaryMode()>();
        r3[15] = 1;
        if $z6 == 0 goto label14;

        $r34 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r34.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Mode is binary");
        r3[16] = 1;
        goto label15;

     label14:
        $r35 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r35.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Mode is ascii");
        r3[17] = 1;

     label15:
        $r36 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $i5 = virtualinvoke $r36.<be.ppareit.swiftp_free.server.SessionThread: int receiveFromDataSocket(byte[])>(r32);
        i6 = $i5;
        r3[18] = 1;
        tableswitch($i5)
        {
            case -2: goto label18;
            case -1: goto label16;
            case 0: goto label17;
            default: goto label19;
        };

     label16:
        $r37 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r37.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Returned from final read");
        r3[19] = 1;
        goto label29;

     label17:
        r6 = "426 Couldn\'t receive data\r\n";
        r3[20] = 1;
        goto label29;

     label18:
        r6 = "425 Could not connect data socket\r\n";
        r3[21] = 1;
        goto label29;

     label19:
        $r38 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z7 = virtualinvoke $r38.<be.ppareit.swiftp_free.server.SessionThread: boolean isBinaryMode()>();
        r3[22] = 1;
        if $z7 == 0 goto label20;

        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[],int,int)>(r32, 0, i6);
        r3[23] = 1;
        goto label24;

     label20:
        i0 = 0;
        i1 = 0;
        r3[24] = 1;

     label21:
        r3[25] = 1;
        if i1 >= i6 goto label23;

        $b7 = r32[i1];
        r3[26] = 1;
        if $b7 != 13 goto label22;

        $i8 = i1 - i0;
        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[],int,int)>(r32, i0, $i8);
        i0 = i1 + 1;
        r3[27] = 1;

     label22:
        i1 = i1 + 1;
        r3[28] = 1;
        goto label21;

     label23:
        r3[29] = 1;
        if i0 >= i6 goto label24;

        $i9 = i1 - i0;
        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[],int,int)>(r32, i0, $i9);
        r3[30] = 1;

     label24:
        virtualinvoke r7.<java.io.FileOutputStream: void flush()>();
        r3[31] = 1;

     label25:
        goto label15;

     label26:
        $r39 := @caughtexception;
        r40 = $r39;
        r6 = "451 File IO problem. Device might be full.\r\n";
        $r41 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r42 = new java.lang.StringBuilder;
        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while storing: ");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r41.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r45);
        $r46 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r47 = new java.lang.StringBuilder;
        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message: ");
        $r49 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();
        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r46.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r51);
        $r52 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r52.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Stack trace: ");
        r53 = virtualinvoke r40.<java.io.IOException: java.lang.StackTraceElement[] getStackTrace()>();
        r10 = r53;
        i2 = lengthof r10;
        i3 = 0;
        r3[32] = 1;

     label27:
        r3[33] = 1;
        if i3 >= i2 goto label28;

        r11 = r10[i3];
        $r54 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r55 = virtualinvoke r11.<java.lang.StackTraceElement: java.lang.String toString()>();
        virtualinvoke $r54.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r55);
        i3 = i3 + 1;
        r3[34] = 1;
        goto label27;

     label28:
        r3[35] = 1;
        goto label29;

     label29:
        r3[36] = 1;
        if r7 == null goto label30;

        virtualinvoke r7.<java.io.FileOutputStream: void close()>();
        r3[37] = 1;

     label30:
        r3[38] = 1;
        goto label32;

     label31:
        $r56 := @caughtexception;
        r57 = $r56;
        r3[39] = 1;

     label32:
        r3[40] = 1;
        if r6 == null goto label33;

        $r58 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STOR error: ");
        $r61 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();
        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r58.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r63);
        $r64 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r64.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r6);
        r3[41] = 1;
        goto label34;

     label33:
        $r65 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r65.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("226 Transmission complete\r\n");
        $r66 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();
        staticinvoke <be.ppareit.swiftp_free.Util: void newFileNotify(java.lang.String)>($r66);
        r3[42] = 1;

     label34:
        $r67 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r67.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        $r68 = r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r68.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "STOR finished");
        r3[43] = 1;
        return;

        catch java.io.FileNotFoundException from label2 to label3 with label7;
        catch java.io.FileNotFoundException from label4 to label6 with label7;
        catch java.io.IOException from label8 to label9 with label10;
        catch java.io.IOException from label19 to label25 with label26;
        catch java.io.IOException from label29 to label30 with label31;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdAbstractStore: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[44];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdAbstractStore", -6231712829433261676L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdCDUP extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdCDUP r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdCDUP;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdCDUP";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdCDUP r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r17;
        java.io.File r4, r5, r9;
        java.io.IOException r6, $r11;
        be.ppareit.swiftp_free.MyLog $r7, $r13, $r19;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r10, $r12, $r18;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r14, $r15, $r16;

        r0 := @this: be.ppareit.swiftp_free.server.CmdCDUP;
        $r1 = <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "CDUP executing");
        r3 = null;
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        r4 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r5 = virtualinvoke r4.<java.io.File: java.io.File getParentFile()>();
        r2[0] = 1;
        if r5 != null goto label1;

        r3 = "550 Current dir cannot find parent\r\n";
        r2[1] = 1;
        goto label9;

     label1:
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdCDUP: boolean violatesChroot(java.io.File)>(r5);
        r2[2] = 1;
        if $z0 == 0 goto label2;

        r3 = "550 Invalid name or chroot violation\r\n";
        r2[3] = 1;
        goto label9;

     label2:
        r9 = virtualinvoke r5.<java.io.File: java.io.File getCanonicalFile()>();
        $z1 = virtualinvoke r9.<java.io.File: boolean isDirectory()>();
        r2[4] = 1;
        if $z1 != 0 goto label4;

        r3 = "550 Can\'t CWD to invalid directory\r\n";
        r2[5] = 1;

     label3:
        goto label9;

     label4:
        $z2 = virtualinvoke r9.<java.io.File: boolean canRead()>();
        r2[6] = 1;
        if $z2 == 0 goto label5;

        $r10 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void setWorkingDir(java.io.File)>(r9);
        r2[7] = 1;
        goto label7;

     label5:
        r3 = "550 That path is inaccessible\r\n";
        r2[8] = 1;

     label6:
        goto label9;

     label7:
        r2[9] = 1;
        goto label9;

     label8:
        $r11 := @caughtexception;
        r6 = $r11;
        r3 = "550 Invalid path\r\n";
        r2[10] = 1;
        goto label9;

     label9:
        r2[11] = 1;
        if r3 == null goto label10;

        $r12 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r12.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.MyLog myLog>;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDUP error: ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r17);
        r2[12] = 1;
        goto label11;

     label10:
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r18.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("200 CDUP successful\r\n");
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdCDUP: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "CDUP success");
        r2[13] = 1;

     label11:
        r2[14] = 1;
        return;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label6 with label8;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdCDUP: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[15];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdCDUP", 8517991199116176101L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdCWD extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdCWD r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdCWD;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdCWD";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdCWD: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdCWD r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r7, r10;
        null_type n0;
        java.io.File r4, $r9, r13;
        java.io.IOException r5, $r18;
        be.ppareit.swiftp_free.MyLog $r6, $r12, $r20;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r11, $r14, $r15, $r16, $r17, $r19;
        boolean $z0, $z1, $z2;

        r0 := @this: be.ppareit.swiftp_free.server.CmdCWD;
        $r1 = <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "CWD executing");
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdCWD: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: java.lang.String getParameter(java.lang.String)>($r7);
        n0 = null;
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r9, r3);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdCWD: boolean violatesChroot(java.io.File)>(r4);
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r10 = "550 Invalid name or chroot violation\r\n";
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r10);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, r10);
        r2[1] = 1;
        goto label6;

     label1:
        r13 = virtualinvoke r4.<java.io.File: java.io.File getCanonicalFile()>();
        $z1 = virtualinvoke r13.<java.io.File: boolean isDirectory()>();
        r2[2] = 1;
        if $z1 != 0 goto label2;

        $r14 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("550 Can\'t CWD to invalid directory\r\n");
        r2[3] = 1;
        goto label4;

     label2:
        $z2 = virtualinvoke r13.<java.io.File: boolean canRead()>();
        r2[4] = 1;
        if $z2 == 0 goto label3;

        $r15 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r15.<be.ppareit.swiftp_free.server.SessionThread: void setWorkingDir(java.io.File)>(r13);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r16.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 CWD successful\r\n");
        r2[5] = 1;
        goto label4;

     label3:
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("550 That path is inaccessible\r\n");
        r2[6] = 1;

     label4:
        r2[7] = 1;
        goto label6;

     label5:
        $r18 := @caughtexception;
        r5 = $r18;
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r19.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("550 Invalid path\r\n");
        r2[8] = 1;
        goto label6;

     label6:
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdCWD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "CWD complete");
        r2[9] = 1;
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdCWD: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdCWD", 4463277163715737937L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdDELE extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdDELE r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdDELE;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdDELE";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdDELE: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdDELE r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r5, $r7, $r14, $r16, $r18;
        java.io.File r4, $r9;
        be.ppareit.swiftp_free.MyLog $r6, $r11, $r19;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r10, $r17;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r13, $r15;

        r0 := @this: be.ppareit.swiftp_free.server.CmdDELE;
        $r1 = <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "DELE executing");
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdDELE: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: java.lang.String getParameter(java.lang.String)>($r7);
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r9, r3);
        r5 = null;
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdDELE: boolean violatesChroot(java.io.File)>(r4);
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r5 = "550 Invalid name or chroot violation\r\n";
        r2[1] = 1;
        goto label3;

     label1:
        $z1 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();
        r2[2] = 1;
        if $z1 == 0 goto label2;

        r5 = "550 Can\'t DELE a directory\r\n";
        r2[3] = 1;
        goto label3;

     label2:
        $z2 = virtualinvoke r4.<java.io.File: boolean delete()>();
        r2[4] = 1;
        if $z2 != 0 goto label3;

        r5 = "450 Error deleting file\r\n";
        r2[5] = 1;

     label3:
        r2[6] = 1;
        if r5 == null goto label4;

        $r10 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r5);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DELE failed: ");
        $r14 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r16);
        r2[7] = 1;
        goto label5;

     label4:
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 File successfully deleted\r\n");
        $r18 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();
        staticinvoke <be.ppareit.swiftp_free.Util: void deletedFileNotify(java.lang.String)>($r18);
        r2[8] = 1;

     label5:
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdDELE: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "DELE finished");
        r2[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdDELE: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdDELE", -7725524324035103077L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdFEAT extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdFEAT r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdFEAT;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdFEAT";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdFEAT r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.SessionThread $r3, $r4, $r5;
        be.ppareit.swiftp_free.MyLog $r6;

        r0 := @this: be.ppareit.swiftp_free.server.CmdFEAT;
        $r1 = <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdFEAT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("211-Features supported\r\n");
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdFEAT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(" UTF8\r\n");
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdFEAT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("211 End\r\n");
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdFEAT: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Gave FEAT response");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdFEAT: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdFEAT", 4474264735406184959L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdLIST extends be.ppareit.swiftp_free.server.CmdAbstractListing implements java.lang.Runnable
{
    public static final long MS_IN_SIX_MONTHS;
    private final java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdLIST r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdLIST;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, r2);
        r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdLIST r0;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0, n1;
        java.lang.String r3, r5, $r6, $r11, $r16, r19, $r29;
        java.lang.StringBuilder r4, $r8, $r9, $r10, $r13, $r14, $r15, $r23, $r26, $r27, $r28;
        be.ppareit.swiftp_free.MyLog $r7, $r12, $r25, $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        be.ppareit.swiftp_free.server.SessionThread $r17, $r21, $r24;
        java.io.File r18, $r20, $r22;

        r0 := @this: be.ppareit.swiftp_free.server.CmdLIST;
        $r1 = <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        n0 = null;
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: java.lang.String getParameter(java.lang.String)>($r6);
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog myLog>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST parameter: ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r11);
        r2[0] = 1;

     label1:
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("-");
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r12 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST is skipping dashed arg ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r16);
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: java.lang.String getParameter(java.lang.String)>(r3);
        r2[2] = 1;
        goto label1;

     label2:
        n1 = null;
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        r2[3] = 1;
        if $z1 == 0 goto label3;

        $r17 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        r18 = virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r2[4] = 1;
        goto label5;

     label3:
        $z2 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
        r2[5] = 1;
        if $z2 == 0 goto label4;

        r19 = "550 LIST does not support wildcards\r\n";
        r2[6] = 1;
        goto label9;

     label4:
        $r20 = new java.io.File;
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r22 = virtualinvoke $r21.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, r3);
        r18 = $r20;
        $z3 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdLIST: boolean violatesChroot(java.io.File)>(r18);
        r2[7] = 1;
        if $z3 == 0 goto label5;

        r19 = "450 Listing target violates chroot\r\n";
        r2[8] = 1;
        goto label9;

     label5:
        $z4 = virtualinvoke r18.<java.io.File: boolean isDirectory()>();
        r2[9] = 1;
        if $z4 == 0 goto label7;

        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        r4 = $r23;
        r19 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String listDirectory(java.lang.StringBuilder,java.io.File)>(r4, r18);
        r2[10] = 1;
        if r19 == null goto label6;

        r2[11] = 1;
        goto label9;

     label6:
        r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[12] = 1;
        goto label8;

     label7:
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String makeLsString(java.io.File)>(r18);
        r2[13] = 1;
        if r5 != null goto label8;

        r19 = "450 Couldn\'t list that file\r\n";
        r2[14] = 1;
        goto label9;

     label8:
        r19 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdLIST: java.lang.String sendListing(java.lang.String)>(r5);
        r2[15] = 1;
        if r19 == null goto label9;

        r2[16] = 1;
        goto label9;

     label9:
        r2[17] = 1;
        if r19 == null goto label10;

        $r24 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r24.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r19);
        $r25 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog myLog>;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST failed with: ");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r25.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r29);
        r2[18] = 1;
        goto label11;

     label10:
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r30.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "LIST completed OK");
        r2[19] = 1;

     label11:
        r2[20] = 1;
        return;
    }

    protected java.lang.String makeLsString(java.io.File)
    {
        be.ppareit.swiftp_free.server.CmdLIST r0;
        java.io.File r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder r4, $r8;
        java.lang.String r5, r6, $r21, $r25;
        long l0, l2, $l5, $l6, $l8;
        int i1, $i3, $i4;
        java.text.SimpleDateFormat r7, $r16, $r18;
        boolean $z0, $z1, $z2, $z3;
        be.ppareit.swiftp_free.MyLog $r9, $r10;
        java.lang.Long $r13;
        byte $b7;
        java.util.Locale $r17, $r19;
        java.util.Date $r20;

        r0 := @this: be.ppareit.swiftp_free.server.CmdLIST;
        r1 := @parameter0: java.io.File;
        $r2 = <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        r4 = $r8;
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $r9 = <be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "makeLsString had nonexistent file");
        r3[1] = 1;
        return null;

     label1:
        r5 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();
        $z1 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
        r3[2] = 1;
        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");
        r3[3] = 1;
        if $z2 == 0 goto label3;

     label2:
        $r10 = <be.ppareit.swiftp_free.server.CmdLIST: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Filename omitted due to disallowed character");
        r3[4] = 1;
        return null;

     label3:
        $z3 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
        r3[5] = 1;
        if $z3 == 0 goto label4;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drwxr-xr-x 1 owner group");
        r3[6] = 1;
        goto label5;

     label4:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-rw-r--r-- 1 owner group");
        r3[7] = 1;

     label5:
        l0 = virtualinvoke r1.<java.io.File: long length()>();
        $r13 = new java.lang.Long;
        specialinvoke $r13.<java.lang.Long: void <init>(long)>(l0);
        r6 = virtualinvoke $r13.<java.lang.Long: java.lang.String toString()>();
        $i3 = virtualinvoke r6.<java.lang.String: int length()>();
        i1 = 13 - $i3;
        r3[8] = 1;

     label6:
        $i4 = i1;
        i1 = i1 + -1;
        r3[9] = 1;
        if $i4 <= 0 goto label7;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        r3[10] = 1;
        goto label6;

     label7:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        l2 = virtualinvoke r1.<java.io.File: long lastModified()>();
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l6 = $l5 - l2;
        $b7 = $l6 cmp -1627869184L;
        r3[11] = 1;
        if $b7 <= 0 goto label8;

        $r16 = new java.text.SimpleDateFormat;
        $r17 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r16.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(" MMM dd HH:mm ", $r17);
        r7 = $r16;
        r3[12] = 1;
        goto label9;

     label8:
        $r18 = new java.text.SimpleDateFormat;
        $r19 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r18.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(" MMM dd  yyyy ", $r19);
        r7 = $r18;
        r3[13] = 1;

     label9:
        $r20 = new java.util.Date;
        $l8 = virtualinvoke r1.<java.io.File: long lastModified()>();
        specialinvoke $r20.<java.util.Date: void <init>(long)>($l8);
        $r21 = virtualinvoke r7.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r20);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r25 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[14] = 1;
        return $r25;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.server.CmdLIST: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[21];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[15];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdLIST", -7954665349173526861L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdMKD extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdMKD r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMKD;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdMKD";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdMKD: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdMKD r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r7, $r14, $r16;
        java.io.File r5, $r9;
        be.ppareit.swiftp_free.MyLog $r6, $r11, $r18;
        int $i0;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r10, $r17;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r13, $r15;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMKD;
        $r1 = <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "MKD executing");
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdMKD: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: java.lang.String getParameter(java.lang.String)>($r7);
        r4 = null;
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        r2[0] = 1;
        if $i0 >= 1 goto label1;

        r4 = "550 Invalid name\r\n";
        r2[1] = 1;
        goto label4;

     label1:
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r5 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r9, r3);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdMKD: boolean violatesChroot(java.io.File)>(r5);
        r2[2] = 1;
        if $z0 == 0 goto label2;

        r4 = "550 Invalid name or chroot violation\r\n";
        r2[3] = 1;
        goto label4;

     label2:
        $z1 = virtualinvoke r5.<java.io.File: boolean exists()>();
        r2[4] = 1;
        if $z1 == 0 goto label3;

        r4 = "550 Already exists\r\n";
        r2[5] = 1;
        goto label4;

     label3:
        $z2 = virtualinvoke r5.<java.io.File: boolean mkdir()>();
        r2[6] = 1;
        if $z2 != 0 goto label4;

        r4 = "550 Error making directory (permissions?)\r\n";
        r2[7] = 1;

     label4:
        r2[8] = 1;
        if r4 == null goto label5;

        $r10 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MKD error: ");
        $r14 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r16);
        r2[9] = 1;
        goto label6;

     label5:
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 Directory created\r\n");
        r2[10] = 1;

     label6:
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdMKD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r18.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "MKD complete");
        r2[11] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdMKD: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[12];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdMKD", -2292088862297336769L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdMap extends java.lang.Object
{
    protected java.lang.Class cmdClass;
    java.lang.String name;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.Class)
    {
        be.ppareit.swiftp_free.server.CmdMap r0;
        java.lang.String r1;
        java.lang.Class r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        $r3 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.String name> = r1;
        r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.Class cmdClass> = r2;
        r4[0] = 1;
        return;
    }

    public java.lang.Class getCommand()
    {
        be.ppareit.swiftp_free.server.CmdMap r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Class $r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        $r1 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.Class cmdClass>;
        r2[0] = 1;
        return $r3;
    }

    public void setCommand(java.lang.Class)
    {
        be.ppareit.swiftp_free.server.CmdMap r0;
        java.lang.Class r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        r1 := @parameter0: java.lang.Class;
        $r2 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.Class cmdClass> = r1;
        r3[0] = 1;
        return;
    }

    public java.lang.String getName()
    {
        be.ppareit.swiftp_free.server.CmdMap r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        $r1 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.String name>;
        r2[0] = 1;
        return $r3;
    }

    public void setName(java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdMap r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdMap;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r0.<be.ppareit.swiftp_free.server.CmdMap: java.lang.String name> = r1;
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <be.ppareit.swiftp_free.server.CmdMap: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdMap", -296480080569900512L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdNLST extends be.ppareit.swiftp_free.server.CmdAbstractListing implements java.lang.Runnable
{
    public static final long MS_IN_SIX_MONTHS;
    private final java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdNLST r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNLST;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractListing: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, r2);
        r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdNLST r0;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0, n1;
        java.lang.String r3, r5, $r6, r9, $r19;
        java.lang.StringBuilder r4, $r13, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        be.ppareit.swiftp_free.server.SessionThread $r7, $r11, $r14;
        java.io.File r8, $r10, $r12;
        be.ppareit.swiftp_free.MyLog $r15, $r20;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNLST;
        $r1 = <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        n0 = null;
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: java.lang.String getParameter(java.lang.String)>($r6);
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("-");
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r3 = "";
        r2[1] = 1;

     label1:
        n1 = null;
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        r2[2] = 1;
        if $z1 == 0 goto label2;

        $r7 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        r8 = virtualinvoke $r7.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r2[3] = 1;
        goto label5;

     label2:
        $z2 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
        r2[4] = 1;
        if $z2 == 0 goto label3;

        r9 = "550 NLST does not support wildcards\r\n";
        r2[5] = 1;
        goto label9;

     label3:
        $r10 = new java.io.File;
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r12 = virtualinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, r3);
        r8 = $r10;
        $z3 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdNLST: boolean violatesChroot(java.io.File)>(r8);
        r2[6] = 1;
        if $z3 == 0 goto label4;

        r9 = "450 Listing target violates chroot\r\n";
        r2[7] = 1;
        goto label9;

     label4:
        $z4 = virtualinvoke r8.<java.io.File: boolean isFile()>();
        r2[8] = 1;
        if $z4 == 0 goto label5;

        r9 = "550 NLST for regular files is unsupported\r\n";
        r2[9] = 1;
        goto label9;

     label5:
        $z5 = virtualinvoke r8.<java.io.File: boolean isDirectory()>();
        r2[10] = 1;
        if $z5 == 0 goto label7;

        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        r4 = $r13;
        r9 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String listDirectory(java.lang.StringBuilder,java.io.File)>(r4, r8);
        r2[11] = 1;
        if r9 == null goto label6;

        r2[12] = 1;
        goto label9;

     label6:
        r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[13] = 1;
        goto label8;

     label7:
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String makeLsString(java.io.File)>(r8);
        r2[14] = 1;
        if r5 != null goto label8;

        r9 = "450 Couldn\'t list that file\r\n";
        r2[15] = 1;
        goto label9;

     label8:
        r9 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdNLST: java.lang.String sendListing(java.lang.String)>(r5);
        r2[16] = 1;
        if r9 == null goto label9;

        r2[17] = 1;
        goto label9;

     label9:
        r2[18] = 1;
        if r9 == null goto label10;

        $r14 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r9);
        $r15 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog myLog>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NLST failed with: ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r19);
        r2[19] = 1;
        goto label11;

     label10:
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "NLST completed OK");
        r2[20] = 1;

     label11:
        r2[21] = 1;
        return;
    }

    protected java.lang.String makeLsString(java.io.File)
    {
        be.ppareit.swiftp_free.server.CmdNLST r0;
        java.io.File r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r11, $r15;
        boolean $z0, $z1, $z2;
        be.ppareit.swiftp_free.MyLog $r5, $r6, $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r14;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNLST;
        r1 := @parameter0: java.io.File;
        $r2 = <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $r5 = <be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "makeLsString had nonexistent file");
        r3[1] = 1;
        return null;

     label1:
        r4 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();
        $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
        r3[2] = 1;
        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");
        r3[3] = 1;
        if $z2 == 0 goto label3;

     label2:
        $r6 = <be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Filename omitted due to disallowed character");
        r3[4] = 1;
        return null;

     label3:
        $r7 = <be.ppareit.swiftp_free.server.CmdNLST: be.ppareit.swiftp_free.MyLog staticLog>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filename: ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r11);
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[5] = 1;
        return $r15;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.server.CmdNLST: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[22];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdNLST", -7786808087596388709L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdNOOP extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdNOOP r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNOOP;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdNOOP";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdNOOP r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.SessionThread $r3;

        r0 := @this: be.ppareit.swiftp_free.server.CmdNOOP;
        $r1 = <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdNOOP: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("200 NOOP ok\r\n");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdNOOP: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdNOOP", 4474264727633695171L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdOPTS extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private final java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdOPTS r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdOPTS;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdOPTS";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdOPTS: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdOPTS r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r6, r7, $r8, $r11, $r12, $r20;
        java.lang.String[] r5;
        be.ppareit.swiftp_free.MyLog $r9, $r10, $r13, $r15, $r16, $r22, $r24;
        int $i0;
        boolean $z0, $z1;
        be.ppareit.swiftp_free.server.SessionThread $r14, $r21, $r23;
        java.lang.StringBuilder $r17, $r18, $r19;

        r0 := @this: be.ppareit.swiftp_free.server.CmdOPTS;
        $r1 = <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdOPTS: java.lang.String getParameter(java.lang.String)>($r8);
        r4 = null;
        r2[0] = 1;
        if r3 != null goto label1;

        r4 = "550 Need argument to OPTS\r\n";
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void w(java.lang.String)>("Couldn\'t understand empty OPTS command");
        r2[1] = 1;
        goto label5;

     label1:
        r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        $i0 = lengthof r5;
        r2[2] = 1;
        if $i0 == 2 goto label2;

        r4 = "550 Malformed OPTS command\r\n";
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void w(java.lang.String)>("Couldn\'t parse OPTS command");
        r2[3] = 1;
        goto label5;

     label2:
        $r11 = r5[0];
        r6 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase()>();
        $r12 = r5[1];
        r7 = virtualinvoke $r12.<java.lang.String: java.lang.String toUpperCase()>();
        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("UTF8");
        r2[4] = 1;
        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("ON");
        r2[5] = 1;
        if $z1 == 0 goto label3;

        $r13 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Got OPTS UTF8 ON");
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: void setEncoding(java.lang.String)>("UTF-8");
        r2[6] = 1;
        goto label5;

     label3:
        $r15 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Ignoring OPTS UTF8 for something besides ON");
        r2[7] = 1;
        goto label5;

     label4:
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized OPTS option: ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r20);
        r4 = "502 Unrecognized option\r\n";
        r2[8] = 1;
        goto label5;

     label5:
        r2[9] = 1;
        if r4 == null goto label6;

        $r21 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r21.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        $r22 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r22.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Template log message");
        r2[10] = 1;
        goto label7;

     label6:
        $r23 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r23.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("200 OPTS accepted\r\n");
        $r24 = r0.<be.ppareit.swiftp_free.server.CmdOPTS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r24.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Handled OPTS ok");
        r2[11] = 1;

     label7:
        r2[12] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdOPTS: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[13];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdOPTS", -3666739412344079468L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdPASS extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdPASS r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPASS;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdPASS";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdPASS: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdPASS r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r7, r8, $r11, $r24;
        android.content.Context r5;
        android.content.SharedPreferences r6;
        java.lang.InterruptedException r9, $r26;
        be.ppareit.swiftp_free.MyLog $r10, $r15, $r16, $r19, $r27;
        be.ppareit.swiftp_free.server.SessionThread $r12, $r14, $r17, $r18, $r25, $r28, $r29;
        be.ppareit.swiftp_free.server.Account $r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r20, $r21, $r22, $r23;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPASS;
        $r1 = <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Executing PASS");
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdPASS: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASS: java.lang.String getParameter(java.lang.String,boolean)>($r11, 1);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r13 = $r12.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account>;
        r4 = virtualinvoke $r13.<be.ppareit.swiftp_free.server.Account: java.lang.String getUsername()>();
        r2[0] = 1;
        if r4 != null goto label1;

        $r14 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("503 Must send USER first\r\n");
        r2[1] = 1;
        return;

     label1:
        r5 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r2[2] = 1;
        if r5 != null goto label2;

        $r15 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "No global context in PASS\r\n");
        r2[3] = 1;

     label2:
        r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r5);
        r7 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("username", null);
        r8 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", null);
        r2[4] = 1;
        if r7 == null goto label3;

        r2[5] = 1;
        if r8 != null goto label4;

     label3:
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Username or password misconfigured");
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("500 Internal error during authentication");
        r2[6] = 1;
        goto label9;

     label4:
        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        r2[7] = 1;
        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        r2[8] = 1;
        if $z1 == 0 goto label5;

        $r18 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r18.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("230 Access granted\r\n");
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" password verified");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r24);
        $r25 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r25.<be.ppareit.swiftp_free.server.SessionThread: void authAttempt(boolean)>(1);
        r2[9] = 1;
        goto label9;

     label5:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
        r2[10] = 1;

     label6:
        goto label8;

     label7:
        $r26 := @caughtexception;
        r9 = $r26;
        r2[11] = 1;

     label8:
        $r27 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Failed authentication");
        $r28 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r28.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("530 Login incorrect.\r\n");
        $r29 = r0.<be.ppareit.swiftp_free.server.CmdPASS: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r29.<be.ppareit.swiftp_free.server.SessionThread: void authAttempt(boolean)>(0);
        r2[12] = 1;

     label9:
        r2[13] = 1;
        return;

        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdPASS: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[14];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdPASS", 4632107627296153889L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdPASV extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdPASV r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPASV;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdPASV";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdPASV r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r6, $r17, $r19, $r23, $r24, $r36;
        int i0, $i1, $i2, $i3;
        java.net.InetAddress r4;
        java.lang.StringBuilder r5, $r15, $r16, $r18, $r22, $r33, $r34, $r35;
        be.ppareit.swiftp_free.MyLog $r7, $r9, $r12, $r14, $r20, $r32;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r10, $r11, $r13, $r21, $r31;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPASV;
        $r1 = <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r3 = "502 Couldn\'t open a port\r\n";
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PASV running");
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $i1 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: int onPasv()>();
        i0 = $i1;
        r2[0] = 1;
        if $i1 != 0 goto label1;

        $r9 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Couldn\'t open a port for PASV");
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        r2[1] = 1;
        return;

     label1:
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        r4 = virtualinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: java.net.InetAddress getDataSocketPasvIp()>();
        r2[2] = 1;
        if r4 != null goto label2;

        $r12 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "PASV IP string invalid");
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r13.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        r2[3] = 1;
        return;

     label2:
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PASV sending IP: ");
        $r17 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r19);
        r2[4] = 1;
        if i0 >= 1 goto label3;

        $r20 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "PASV port number invalid");
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r21.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        r2[5] = 1;
        return;

     label3:
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("227 Entering Passive Mode (");
        r5 = $r22;
        $r23 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();
        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String replace(char,char)>(46, 44);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $i2 = i0 / 256;
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $i3 = i0 % 256;
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").\r\n");
        r6 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r31.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r6);
        $r32 = r0.<be.ppareit.swiftp_free.server.CmdPASV: be.ppareit.swiftp_free.MyLog myLog>;
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PASV completed, sent: ");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r32.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r36);
        r2[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdPASV: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdPASV", 4512002127777399289L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdPORT extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdPORT r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPORT;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdPORT";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdPORT: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdPORT r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r7, $r8, $r9, $r12, $r16, $r21, $r27, $r28, $r36;
        java.lang.String[] r5;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, i10;
        be.ppareit.swiftp_free.MyLog $r6, $r31, $r32;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r19, $r20, $r22, $r23, $r33, $r34, $r35;
        byte[] r15;
        byte $b6;
        java.lang.Exception $r17, r18;
        java.net.InetAddress r24;
        java.net.UnknownHostException $r25, r26;
        be.ppareit.swiftp_free.server.SessionThread $r29, $r30, $r37;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPORT;
        $r1 = <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PORT running");
        r3 = null;
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdPORT: java.lang.String input>;
        r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdPORT: java.lang.String getParameter(java.lang.String)>($r7);
        $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("|");
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("::");
        r2[1] = 1;
        if $z1 == 0 goto label1;

        r3 = "550 No IPv6 support, reconfigure your client\r\n";
        r2[2] = 1;
        goto label17;

     label1:
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");
        $i3 = lengthof r5;
        r2[3] = 1;
        if $i3 == 6 goto label2;

        r3 = "550 Malformed PORT argument\r\n";
        r2[4] = 1;
        goto label17;

     label2:
        i0 = 0;
        r2[5] = 1;

     label3:
        $i4 = lengthof r5;
        r2[6] = 1;
        if i0 >= $i4 goto label6;

        $r8 = r5[i0];
        $z2 = virtualinvoke $r8.<java.lang.String: boolean matches(java.lang.String)>("[0-9]+");
        r2[7] = 1;
        if $z2 == 0 goto label4;

        $r9 = r5[i0];
        $i5 = virtualinvoke $r9.<java.lang.String: int length()>();
        r2[8] = 1;
        if $i5 <= 3 goto label5;

     label4:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("550 Invalid PORT argument: ");
        $r12 = r5[i0];
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[9] = 1;
        goto label17;

     label5:
        i0 = i0 + 1;
        r2[10] = 1;
        goto label3;

     label6:
        r15 = newarray (byte)[4];
        i1 = 0;
        r2[11] = 1;

     label7:
        r2[12] = 1;
        if i1 >= 4 goto label13;

     label8:
        $r16 = r5[i1];
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);
        r2[13] = 1;
        if i2 < 128 goto label9;

        i2 = i2 + -256;
        r2[14] = 1;

     label9:
        $b6 = (byte) i2;
        r15[i1] = $b6;
        r2[15] = 1;

     label10:
        goto label12;

     label11:
        $r17 := @caughtexception;
        r18 = $r17;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("550 Invalid PORT format: ");
        $r21 = r5[i1];
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[16] = 1;
        goto label17;

     label12:
        i1 = i1 + 1;
        r2[17] = 1;
        goto label7;

     label13:
        r24 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r15);
        r2[18] = 1;

     label14:
        goto label16;

     label15:
        $r25 := @caughtexception;
        r26 = $r25;
        r3 = "550 Unknown host\r\n";
        r2[19] = 1;
        goto label17;

     label16:
        $r27 = r5[4];
        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);
        $i8 = $i7 * 256;
        $r28 = r5[5];
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);
        i10 = $i8 + $i9;
        $r29 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r29.<be.ppareit.swiftp_free.server.SessionThread: boolean onPort(java.net.InetAddress,int)>(r24, i10);
        r2[20] = 1;

     label17:
        r2[21] = 1;
        if r3 != null goto label18;

        $r30 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r30.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("200 PORT OK\r\n");
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r31.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PORT completed");
        r2[22] = 1;
        goto label19;

     label18:
        $r32 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.MyLog myLog>;
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PORT error: ");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r32.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r36);
        $r37 = r0.<be.ppareit.swiftp_free.server.CmdPORT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r37.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        r2[23] = 1;

     label19:
        r2[24] = 1;
        return;

        catch java.lang.Exception from label8 to label10 with label11;
        catch java.net.UnknownHostException from label13 to label14 with label15;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdPORT: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[25];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdPORT", 666320873687305126L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdPWD extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdPWD r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPWD;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdPWD";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdPWD r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r8, r9, $r15;
        be.ppareit.swiftp_free.MyLog $r4, $r18, $r20;
        be.ppareit.swiftp_free.server.SessionThread $r5, $r10, $r19;
        java.io.File $r6, $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        java.io.IOException $r16, r17;

        r0 := @this: be.ppareit.swiftp_free.server.CmdPWD;
        $r1 = <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PWD executing");

     label1:
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r6 = virtualinvoke $r5.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r3 = virtualinvoke $r6.<java.io.File: java.lang.String getCanonicalPath()>();
        $r7 = staticinvoke <be.ppareit.swiftp_free.Globals: java.io.File getChrootDir()>();
        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getCanonicalPath()>();
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        r9 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i0);
        $i1 = virtualinvoke r9.<java.lang.String: int length()>();
        r2[0] = 1;
        if $i1 != 0 goto label2;

        r9 = "/";
        r2[1] = 1;

     label2:
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("257 \"");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>($r15);
        r2[2] = 1;

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r18.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "PWD canonicalize");
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r19.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        r2[3] = 1;

     label5:
        $r20 = r0.<be.ppareit.swiftp_free.server.CmdPWD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "PWD complete");
        r2[4] = 1;
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdPWD: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdPWD", 6576146208568307850L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdQUIT extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdQUIT r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdQUIT;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdQUIT";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdQUIT r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;
        be.ppareit.swiftp_free.server.SessionThread $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdQUIT;
        $r1 = <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdQUIT: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "QUITting");
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdQUIT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("221 Goodbye\r\n");
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdQUIT: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdQUIT: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdQUIT", 4474264732352706828L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdRETR extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdRETR r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRETR;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdRETR";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdRETR: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdRETR r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r13, $r20, $r22;
        java.io.File r5, $r15;
        java.io.FileInputStream r6, $r24;
        byte[] r7, r9, $r37;
        java.io.IOException r8, r11, $r28, $r34, r35, $r42, r43, $r46, r47, $r48, r49, $r50, r51, $r53;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i8, $i9, $i11, $i12;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        java.lang.Throwable r10, $r52;
        be.ppareit.swiftp_free.MyLog $r12, $r16, $r17, $r23, $r26, $r27, $r31, $r33, $r36, $r57;
        be.ppareit.swiftp_free.server.SessionThread $r14, $r25, $r29, $r30, $r32, $r38, $r39, $r40, $r41, $r54, $r55, $r56;
        java.lang.StringBuilder $r18, $r19, $r21;
        byte $b7, $b10, $b13;
        java.io.FileNotFoundException $r44, r45;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRETR;
        $r1 = <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RETR executing");
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdRETR: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: java.lang.String getParameter(java.lang.String)>($r13);
        r4 = null;
        $r14 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r15 = virtualinvoke $r14.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r5 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r15, r3);
        $z1 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRETR: boolean violatesChroot(java.io.File)>(r5);
        r2[0] = 1;
        if $z1 == 0 goto label1;

        r4 = "550 Invalid name or chroot violation\r\n";
        r2[1] = 1;
        goto label46;

     label1:
        $z2 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();
        r2[2] = 1;
        if $z2 == 0 goto label2;

        $r16 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Ignoring RETR for directory");
        r4 = "550 Can\'t RETR a directory\r\n";
        r2[3] = 1;
        goto label46;

     label2:
        $z3 = virtualinvoke r5.<java.io.File: boolean exists()>();
        r2[4] = 1;
        if $z3 != 0 goto label3;

        $r17 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t RETR nonexistent file: ");
        $r20 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r17.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r22);
        r4 = "550 File does not exist\r\n";
        r2[5] = 1;
        goto label46;

     label3:
        $z4 = virtualinvoke r5.<java.io.File: boolean canRead()>();
        r2[6] = 1;
        if $z4 != 0 goto label4;

        $r23 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r23.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Failed RETR permission (canRead() is false)");
        r4 = "550 No read permissions\r\n";
        r2[7] = 1;
        goto label46;

     label4:
        r6 = null;

     label5:
        $r24 = new java.io.FileInputStream;
        specialinvoke $r24.<java.io.FileInputStream: void <init>(java.io.File)>(r5);
        r6 = $r24;
        $i2 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getDataChunkSize()>();
        r7 = newarray (byte)[$i2];
        $r25 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z5 = virtualinvoke $r25.<be.ppareit.swiftp_free.server.SessionThread: boolean startUsingDataSocket()>();
        r2[8] = 1;
        if $z5 == 0 goto label6;

        $r26 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r26.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RETR opened data socket");
        r2[9] = 1;
        goto label10;

     label6:
        r4 = "425 Error opening socket\r\n";
        $r27 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Error in initDataSocket()");

     label7:
        r2[10] = 1;
        if r6 == null goto label8;

        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        r2[11] = 1;

     label8:
        r2[12] = 1;
        goto label46;

     label9:
        $r28 := @caughtexception;
        r8 = $r28;
        r2[13] = 1;
        goto label46;

     label10:
        $r29 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r29.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("150 Sending file\r\n");
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z6 = virtualinvoke $r30.<be.ppareit.swiftp_free.server.SessionThread: boolean isBinaryMode()>();
        r2[14] = 1;
        if $z6 == 0 goto label16;

        $r31 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r31.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Transferring in binary mode");
        r2[15] = 1;

     label11:
        $i3 = virtualinvoke r6.<java.io.FileInputStream: int read(byte[])>(r7);
        i0 = $i3;
        r2[16] = 1;
        if $i3 == -1 goto label25;

        $r32 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $z7 = virtualinvoke $r32.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int)>(r7, i0);
        r2[17] = 1;
        if $z7 != 0 goto label11;

        r4 = "426 Data socket error\r\n";
        $r33 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r33.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Data socket error");

     label12:
        r2[18] = 1;
        if r6 == null goto label13;

        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        r2[19] = 1;

     label13:
        r2[20] = 1;

     label14:
        goto label46;

     label15:
        $r34 := @caughtexception;
        r35 = $r34;
        r2[21] = 1;
        goto label46;

     label16:
        $r36 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r36.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Transferring in ASCII mode");
        z8 = 0;
        r2[22] = 1;

     label17:
        $i4 = virtualinvoke r6.<java.io.FileInputStream: int read(byte[])>(r7);
        i5 = $i4;
        r2[23] = 1;
        if $i4 == -1 goto label25;

        i1 = 0;
        z0 = 0;
        $r37 = newarray (byte)[2];
        $r37[0] = 13;
        $r37[1] = 10;
        r9 = $r37;
        i6 = 0;
        r2[24] = 1;

     label18:
        r2[25] = 1;
        if i6 >= i5 goto label22;

        $b7 = r7[i6];
        r2[26] = 1;
        if $b7 != 10 goto label21;

        $r38 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $i8 = i6 - i1;
        virtualinvoke $r38.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int,int)>(r7, i1, $i8);
        r2[27] = 1;
        if i6 != 0 goto label19;

        r2[28] = 1;
        if z8 != 0 goto label20;

        $r39 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r39.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int)>(r9, 1);
        r2[29] = 1;
        goto label20;

     label19:
        $i9 = i6 - 1;
        $b10 = r7[$i9];
        r2[30] = 1;
        if $b10 == 13 goto label20;

        $r40 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r40.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int)>(r9, 1);
        r2[31] = 1;

     label20:
        i1 = i6;
        r2[32] = 1;

     label21:
        i6 = i6 + 1;
        r2[33] = 1;
        goto label18;

     label22:
        $r41 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $i11 = i6 - i1;
        virtualinvoke $r41.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int,int)>(r7, i1, $i11);
        $i12 = i5 - 1;
        $b13 = r7[$i12];
        r2[34] = 1;
        if $b13 != 13 goto label23;

        z8 = 1;
        r2[35] = 1;
        goto label24;

     label23:
        z8 = 0;
        r2[36] = 1;

     label24:
        r2[37] = 1;
        goto label17;

     label25:
        r2[38] = 1;
        if r6 == null goto label26;

        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        r2[39] = 1;

     label26:
        r2[40] = 1;
        goto label46;

     label27:
        $r42 := @caughtexception;
        r43 = $r42;
        r2[41] = 1;
        goto label46;

     label28:
        $r44 := @caughtexception;

     label29:
        r45 = $r44;
        r4 = "550 File not found\r\n";

     label30:
        r2[42] = 1;
        if r6 == null goto label31;

        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        r2[43] = 1;

     label31:
        r2[44] = 1;
        goto label46;

     label32:
        $r46 := @caughtexception;
        r47 = $r46;
        r2[45] = 1;
        goto label46;

     label33:
        $r48 := @caughtexception;

     label34:
        r49 = $r48;
        r4 = "425 Network error\r\n";

     label35:
        r2[46] = 1;
        if r6 == null goto label36;

        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        r2[47] = 1;

     label36:
        r2[48] = 1;

     label37:
        goto label46;

     label38:
        $r50 := @caughtexception;
        r51 = $r50;
        r2[49] = 1;
        goto label46;

     label39:
        $r52 := @caughtexception;

     label40:
        r10 = $r52;

     label41:
        r2[50] = 1;
        if r6 == null goto label42;

        virtualinvoke r6.<java.io.FileInputStream: void close()>();
        r2[51] = 1;

     label42:
        r2[52] = 1;

     label43:
        goto label45;

     label44:
        $r53 := @caughtexception;
        r11 = $r53;
        r2[53] = 1;

     label45:
        r2[54] = 1;
        throw r10;

     label46:
        $r54 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r54.<be.ppareit.swiftp_free.server.SessionThread: void closeDataSocket()>();
        r2[55] = 1;
        if r4 == null goto label47;

        $r55 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r55.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        r2[56] = 1;
        goto label48;

     label47:
        $r56 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r56.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("226 Transmission finished\r\n");
        r2[57] = 1;

     label48:
        $r57 = r0.<be.ppareit.swiftp_free.server.CmdRETR: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r57.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RETR done");
        r2[58] = 1;
        return;

        catch java.io.IOException from label7 to label8 with label9;
        catch java.io.IOException from label12 to label14 with label15;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.io.FileNotFoundException from label5 to label7 with label28;
        catch java.io.FileNotFoundException from label10 to label12 with label28;
        catch java.io.FileNotFoundException from label16 to label25 with label28;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label5 to label7 with label33;
        catch java.io.IOException from label10 to label12 with label33;
        catch java.io.IOException from label16 to label25 with label33;
        catch java.io.IOException from label35 to label37 with label38;
        catch java.lang.Throwable from label5 to label7 with label39;
        catch java.lang.Throwable from label10 to label12 with label39;
        catch java.lang.Throwable from label16 to label25 with label39;
        catch java.lang.Throwable from label29 to label30 with label39;
        catch java.lang.Throwable from label34 to label35 with label39;
        catch java.io.IOException from label41 to label43 with label44;
        catch java.lang.Throwable from label40 to label41 with label39;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdRETR: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[59];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdRETR", -4157216162400516749L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdRMD extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdRMD r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRMD;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdRMD";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdRMD: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdRMD r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r7, $r15, $r17;
        java.io.File r5, $r9, $r10;
        be.ppareit.swiftp_free.MyLog $r6, $r12, $r19;
        int $i0;
        be.ppareit.swiftp_free.server.SessionThread $r8, $r11, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRMD;
        $r1 = <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "RMD executing");
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdRMD: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: java.lang.String getParameter(java.lang.String)>($r7);
        r4 = null;
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        r2[0] = 1;
        if $i0 >= 1 goto label1;

        r4 = "550 Invalid argument\r\n";
        r2[1] = 1;
        goto label5;

     label1:
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r9 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r5 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r9, r3);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRMD: boolean violatesChroot(java.io.File)>(r5);
        r2[2] = 1;
        if $z0 == 0 goto label2;

        r4 = "550 Invalid name or chroot violation\r\n";
        r2[3] = 1;
        goto label5;

     label2:
        $z1 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();
        r2[4] = 1;
        if $z1 != 0 goto label3;

        r4 = "550 Can\'t RMD a non-directory\r\n";
        r2[5] = 1;
        goto label5;

     label3:
        $r10 = new java.io.File;
        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>("/");
        $z2 = virtualinvoke r5.<java.io.File: boolean equals(java.lang.Object)>($r10);
        r2[6] = 1;
        if $z2 == 0 goto label4;

        r4 = "550 Won\'t RMD the root directory\r\n";
        r2[7] = 1;
        goto label5;

     label4:
        $z3 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRMD: boolean recursiveDelete(java.io.File)>(r5);
        r2[8] = 1;
        if $z3 != 0 goto label5;

        r4 = "550 Deletion error, possibly incomplete\r\n";
        r2[9] = 1;

     label5:
        r2[10] = 1;
        if r4 == null goto label6;

        $r11 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        $r12 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RMD failed: ");
        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r17);
        r2[11] = 1;
        goto label7;

     label6:
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r18.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 Removed directory\r\n");
        r2[12] = 1;

     label7:
        $r19 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RMD finished");
        r2[13] = 1;
        return;
    }

    protected boolean recursiveDelete(java.io.File)
    {
        be.ppareit.swiftp_free.server.CmdRMD r0;
        java.io.File r1, r5;
        boolean[][] $r2;
        boolean[] r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.File[] r4;
        int i0, i1;
        be.ppareit.swiftp_free.MyLog $r6, $r11;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r14;
        java.lang.String $r10, $r15;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRMD;
        r1 := @parameter0: java.io.File;
        $r2 = <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();
        r3[0] = 1;
        if $z1 != 0 goto label1;

        r3[1] = 1;
        return 0;

     label1:
        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
        r3[2] = 1;
        if $z2 == 0 goto label6;

        z0 = 1;
        r4 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();
        i0 = lengthof r4;
        i1 = 0;
        r3[3] = 1;

     label2:
        r3[4] = 1;
        if i1 >= i0 goto label3;

        r5 = r4[i1];
        $z3 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRMD: boolean recursiveDelete(java.io.File)>(r5);
        z0 = z0 & $z3;
        i1 = i1 + 1;
        r3[5] = 1;
        goto label2;

     label3:
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recursively deleted: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r10);
        r3[6] = 1;
        if z0 == 0 goto label4;

        $z4 = virtualinvoke r1.<java.io.File: boolean delete()>();
        r3[7] = 1;
        if $z4 == 0 goto label4;

        $z5 = 1;
        r3[8] = 1;
        goto label5;

     label4:
        $z5 = 0;
        r3[9] = 1;

     label5:
        r3[10] = 1;
        return $z5;

     label6:
        $r11 = r0.<be.ppareit.swiftp_free.server.CmdRMD: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RMD deleting file: ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r15);
        $z6 = virtualinvoke r1.<java.io.File: boolean delete()>();
        r3[11] = 1;
        return $z6;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.server.CmdRMD: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[14];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[12];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdRMD", -3278855719986047275L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdRNFR extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdRNFR r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRNFR;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdRNFR";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdRNFR: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdRNFR r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r5, $r13, $r15;
        null_type n0;
        be.ppareit.swiftp_free.server.SessionThread $r6, $r9, $r16, $r17, $r18;
        java.io.File $r7, r8;
        boolean $z0, $z1;
        be.ppareit.swiftp_free.MyLog $r10;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRNFR;
        $r1 = <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: java.lang.String getParameter(java.lang.String)>($r5);
        r4 = null;
        n0 = null;
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r7 = virtualinvoke $r6.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r8 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r7, r3);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRNFR: boolean violatesChroot(java.io.File)>(r8);
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r4 = "550 Invalid name or chroot violation\r\n";
        r2[1] = 1;
        goto label2;

     label1:
        $z1 = virtualinvoke r8.<java.io.File: boolean exists()>();
        r2[2] = 1;
        if $z1 != 0 goto label2;

        r4 = "450 Cannot rename nonexistent file\r\n";
        r2[3] = 1;

     label2:
        r2[4] = 1;
        if r4 == null goto label3;

        $r9 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.MyLog myLog>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RNFR failed: ");
        $r13 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r15);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r16.<be.ppareit.swiftp_free.server.SessionThread: void setRenameFrom(java.io.File)>(null);
        r2[5] = 1;
        goto label4;

     label3:
        $r17 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r17.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("350 Filename noted, now send RNTO\r\n");
        $r18 = r0.<be.ppareit.swiftp_free.server.CmdRNFR: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r18.<be.ppareit.swiftp_free.server.SessionThread: void setRenameFrom(java.io.File)>(r8);
        r2[6] = 1;

     label4:
        r2[7] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdRNFR: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdRNFR", 5148588878987567013L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdRNTO extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdRNTO r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRNTO;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdRNTO";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdRNTO: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdRNTO r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r6, $r12, $r19, $r21, $r27, $r29;
        null_type n0;
        java.io.File r5, $r14, r15;
        be.ppareit.swiftp_free.MyLog $r7, $r8, $r16, $r24, $r32;
        java.lang.StringBuilder $r9, $r10, $r11, $r17, $r18, $r20, $r25, $r26, $r28;
        be.ppareit.swiftp_free.server.SessionThread $r13, $r22, $r23, $r30, $r31;
        boolean $z0, $z1;

        r0 := @this: be.ppareit.swiftp_free.server.CmdRNTO;
        $r1 = <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: java.lang.String getParameter(java.lang.String)>($r6);
        r4 = null;
        n0 = null;
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RNTO executing\r\n");
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("param: ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r12);
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r14 = virtualinvoke $r13.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        r15 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: java.io.File inputPathToChrootedFile(java.io.File,java.lang.String)>($r14, r3);
        $r16 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RNTO parsed: ");
        $r19 = virtualinvoke r15.<java.io.File: java.lang.String getPath()>();
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r21);
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdRNTO: boolean violatesChroot(java.io.File)>(r15);
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r4 = "550 Invalid name or chroot violation\r\n";
        r2[1] = 1;
        goto label3;

     label1:
        $r22 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        r5 = virtualinvoke $r22.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getRenameFrom()>();
        r2[2] = 1;
        if r5 != null goto label2;

        r4 = "550 Rename error, maybe RNFR not sent\r\n";
        r2[3] = 1;
        goto label3;

     label2:
        $z1 = virtualinvoke r5.<java.io.File: boolean renameTo(java.io.File)>(r15);
        r2[4] = 1;
        if $z1 != 0 goto label3;

        r4 = "550 Error during rename operation\r\n";
        r2[5] = 1;
        goto label3;

     label3:
        r2[6] = 1;
        if r4 == null goto label4;

        $r23 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r23.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        $r24 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RNFR failed: ");
        $r27 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r29);
        r2[7] = 1;
        goto label5;

     label4:
        $r30 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r30.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("250 rename successful\r\n");
        r2[8] = 1;

     label5:
        $r31 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r31.<be.ppareit.swiftp_free.server.SessionThread: void setRenameFrom(java.io.File)>(null);
        $r32 = r0.<be.ppareit.swiftp_free.server.CmdRNTO: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r32.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "RNTO finished");
        r2[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdRNTO: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdRNTO", -5809472191647511010L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdSIZE extends be.ppareit.swiftp_free.server.FtpCmd
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdSIZE r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSIZE;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdSIZE";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdSIZE: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdSIZE r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r9, $r11, $r16, $r18, $r26;
        long l0;
        java.io.File r5, r6, $r12;
        java.io.IOException r7, $r19;
        be.ppareit.swiftp_free.MyLog $r8, $r13, $r27;
        be.ppareit.swiftp_free.server.SessionThread $r10, $r20, $r21;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r14, $r15, $r17, $r22, $r23, $r24, $r25;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSIZE;
        $r1 = <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("SIZE executing");
        r3 = null;
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: java.lang.String input>;
        r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdSIZE: java.lang.String getParameter(java.lang.String)>($r9);
        l0 = 0L;
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        r5 = virtualinvoke $r10.<be.ppareit.swiftp_free.server.SessionThread: java.io.File getWorkingDir()>();
        $r11 = <java.io.File: java.lang.String separator>;
        $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r11);
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r3 = "550 No directory traversal allowed in SIZE param\r\n";
        r2[1] = 1;
        goto label8;

     label1:
        $r12 = new java.io.File;
        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, r4);
        r6 = $r12;
        $z1 = virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdSIZE: boolean violatesChroot(java.io.File)>(r6);
        r2[2] = 1;
        if $z1 == 0 goto label2;

        r3 = "550 SIZE target violates chroot\r\n";
        r2[3] = 1;
        goto label8;

     label2:
        $z2 = virtualinvoke r6.<java.io.File: boolean exists()>();
        r2[4] = 1;
        if $z2 != 0 goto label6;

        r3 = "550 Cannot get the SIZE of nonexistent object\r\n";

     label3:
        $r13 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.MyLog myLog>;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed getting size of: ");
        $r16 = virtualinvoke r6.<java.io.File: java.lang.String getCanonicalPath()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r18);
        r2[5] = 1;

     label4:
        goto label8;

     label5:
        $r19 := @caughtexception;
        r7 = $r19;
        r2[6] = 1;
        goto label8;

     label6:
        $z3 = virtualinvoke r6.<java.io.File: boolean isFile()>();
        r2[7] = 1;
        if $z3 != 0 goto label7;

        r3 = "550 Cannot get the size of a non-file\r\n";
        r2[8] = 1;
        goto label8;

     label7:
        l0 = virtualinvoke r6.<java.io.File: long length()>();
        r2[9] = 1;

     label8:
        r2[10] = 1;
        if r3 == null goto label9;

        $r20 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r20.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r3);
        r2[11] = 1;
        goto label10;

     label9:
        $r21 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("213 ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r21.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>($r26);
        r2[12] = 1;

     label10:
        $r27 = r0.<be.ppareit.swiftp_free.server.CmdSIZE: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("SIZE complete");
        r2[13] = 1;
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdSIZE: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[14];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdSIZE", 2440754377541445343L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdSTOR extends be.ppareit.swiftp_free.server.CmdAbstractStore implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdSTOR r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSTOR;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdSTOR";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.CmdAbstractStore: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdSTOR: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdSTOR r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSTOR;
        $r1 = <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdSTOR: java.lang.String input>;
        $r4 = staticinvoke <be.ppareit.swiftp_free.server.CmdSTOR: java.lang.String getParameter(java.lang.String)>($r3);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.CmdSTOR: void doStorOrAppe(java.lang.String,boolean)>($r4, 0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdSTOR: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdSTOR", 4859542773776183139L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdSYST extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String response;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdSYST r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSYST;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdSYST";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdSYST r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3, $r5;
        be.ppareit.swiftp_free.server.SessionThread $r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdSYST;
        $r1 = <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdSYST: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "SYST executing");
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdSYST: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("215 UNIX Type: L8\r\n");
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdSYST: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "SYST finished");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdSYST: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdSYST", 4474264733185473591L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdTYPE extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdTYPE r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdTYPE;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdTYPE";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdTYPE: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdTYPE r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r6;
        be.ppareit.swiftp_free.MyLog $r5, $r10;
        boolean $z0, $z1, $z2, $z3;
        be.ppareit.swiftp_free.server.SessionThread $r7, $r8, $r9;

        r0 := @this: be.ppareit.swiftp_free.server.CmdTYPE;
        $r1 = <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "TYPE executing");
        $r6 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdTYPE: java.lang.String getParameter(java.lang.String)>($r6);
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("I");
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("L 8");
        r2[1] = 1;
        if $z1 == 0 goto label2;

     label1:
        r4 = "200 Binary type set\r\n";
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.server.SessionThread: void setBinaryMode(boolean)>(1);
        r2[2] = 1;
        goto label5;

     label2:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("A");
        r2[3] = 1;
        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("A N");
        r2[4] = 1;
        if $z3 == 0 goto label4;

     label3:
        r4 = "200 ASCII type set\r\n";
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: void setBinaryMode(boolean)>(0);
        r2[5] = 1;
        goto label5;

     label4:
        r4 = "503 Malformed TYPE command\r\n";
        r2[6] = 1;

     label5:
        $r9 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r4);
        $r10 = r0.<be.ppareit.swiftp_free.server.CmdTYPE: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "TYPE complete");
        r2[7] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdTYPE: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdTYPE", 4480491538288722487L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdTemplate extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    public static final java.lang.String message;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdTemplate r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdTemplate;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdTemplate";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdTemplate r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.SessionThread $r3;
        be.ppareit.swiftp_free.MyLog $r4;

        r0 := @this: be.ppareit.swiftp_free.server.CmdTemplate;
        $r1 = <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<be.ppareit.swiftp_free.server.CmdTemplate: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("TEMPLATE!!");
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdTemplate: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Template log message");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdTemplate: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdTemplate", 4474264730409584381L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.CmdUSER extends be.ppareit.swiftp_free.server.FtpCmd implements java.lang.Runnable
{
    protected java.lang.String input;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.CmdUSER r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class $r5;

        r0 := @this: be.ppareit.swiftp_free.server.CmdUSER;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        $r5 = class "be/ppareit/swiftp_free/server/CmdUSER";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.FtpCmd: void <init>(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r1, $r6);
        r0.<be.ppareit.swiftp_free.server.CmdUSER: java.lang.String input> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.CmdUSER r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r5;
        be.ppareit.swiftp_free.MyLog $r4;
        boolean $z0;
        be.ppareit.swiftp_free.server.SessionThread $r6, $r7, $r8;
        be.ppareit.swiftp_free.server.Account $r9;

        r0 := @this: be.ppareit.swiftp_free.server.CmdUSER;
        $r1 = <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r4 = r0.<be.ppareit.swiftp_free.server.CmdUSER: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "USER executing");
        $r5 = r0.<be.ppareit.swiftp_free.server.CmdUSER: java.lang.String input>;
        r3 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: java.lang.String getParameter(java.lang.String)>($r5);
        $z0 = virtualinvoke r3.<java.lang.String: boolean matches(java.lang.String)>("[A-Za-z0-9]+");
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r6 = r0.<be.ppareit.swiftp_free.server.CmdUSER: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("530 Invalid username\r\n");
        r2[1] = 1;
        return;

     label1:
        $r7 = r0.<be.ppareit.swiftp_free.server.CmdUSER: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("331 Send password\r\n");
        $r8 = r0.<be.ppareit.swiftp_free.server.CmdUSER: be.ppareit.swiftp_free.server.SessionThread sessionThread>;
        $r9 = $r8.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.server.Account: void setUsername(java.lang.String)>(r3);
        r2[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <be.ppareit.swiftp_free.server.CmdUSER: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/CmdUSER", 4958358402760586864L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.server.DataSocketFactory extends java.lang.Object
{
    protected be.ppareit.swiftp_free.MyLog myLog;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        be.ppareit.swiftp_free.server.DataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        r0 := @this: be.ppareit.swiftp_free.server.DataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.DataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.DataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new be.ppareit.swiftp_free.MyLog;
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r3.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r5);
        r0.<be.ppareit.swiftp_free.server.DataSocketFactory: be.ppareit.swiftp_free.MyLog myLog> = $r3;
        r2[0] = 1;
        return;
    }

    public abstract boolean onPort(java.net.InetAddress, int);

    public abstract int onPasv();

    public abstract java.net.Socket onTransfer();

    public abstract java.net.InetAddress getPasvIp();

    public abstract void reportTraffic(long);

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.DataSocketFactory: boolean[][] $VRi()>();
        r1 = $r0[6];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[7][];
        <be.ppareit.swiftp_free.server.DataSocketFactory: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[6] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/DataSocketFactory", 9256202804000L);
        return $r0;
    }
}
public abstract class be.ppareit.swiftp_free.server.FtpCmd extends java.lang.Object implements java.lang.Runnable
{
    protected be.ppareit.swiftp_free.server.SessionThread sessionThread;
    protected be.ppareit.swiftp_free.MyLog myLog;
    protected static be.ppareit.swiftp_free.MyLog staticLog;
    protected static be.ppareit.swiftp_free.server.CmdMap[] cmdClasses;
    private static final boolean[][] $VRc;

    public void <init>(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.FtpCmd r0;
        be.ppareit.swiftp_free.server.SessionThread r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        be.ppareit.swiftp_free.MyLog $r5;

        r0 := @this: be.ppareit.swiftp_free.server.FtpCmd;
        r1 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r2 := @parameter1: java.lang.String;
        $r3 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.SessionThread sessionThread> = r1;
        $r5 = new be.ppareit.swiftp_free.MyLog;
        specialinvoke $r5.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>(r2);
        r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog> = $r5;
        r4[0] = 1;
        return;
    }

    public abstract void run();

    protected static void dispatchCommand(be.ppareit.swiftp_free.server.SessionThread, java.lang.String)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.lang.String r1, r5, r6, r12, r14, r15, $r19, $r35;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4;
        be.ppareit.swiftp_free.server.FtpCmd r7;
        int i0, $i1, $i2, $i3;
        java.lang.reflect.Constructor r8;
        java.lang.NoSuchMethodException r9, $r24;
        be.ppareit.swiftp_free.MyLog $r10, $r11, $r13, $r25, $r30, $r31;
        be.ppareit.swiftp_free.server.CmdMap[] $r16, $r17, $r20;
        be.ppareit.swiftp_free.server.CmdMap $r18, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r22, $r36, $r37, $r38;
        java.lang.Class[] $r23;
        java.lang.Object[] $r26;
        java.lang.Object $r27;
        java.lang.Exception $r28, r29;
        java.lang.StringBuilder $r32, $r33, $r34;

        r0 := @parameter0: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter1: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r4 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        r5 = "502 Command not recognized\r\n";
        r3[0] = 1;
        if r4 != null goto label1;

        r6 = "502 Command parse error\r\n";
        $r10 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, r6);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r6);
        r3[1] = 1;
        return;

     label1:
        $i1 = lengthof r4;
        r3[2] = 1;
        if $i1 >= 1 goto label2;

        $r11 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "No strings parsed");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r5);
        r3[3] = 1;
        return;

     label2:
        r12 = r4[0];
        $i2 = virtualinvoke r12.<java.lang.String: int length()>();
        r3[4] = 1;
        if $i2 >= 1 goto label3;

        $r13 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Invalid command verb");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r5);
        r3[5] = 1;
        return;

     label3:
        r7 = null;
        r14 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>();
        r15 = virtualinvoke r14.<java.lang.String: java.lang.String toUpperCase()>();
        i0 = 0;
        r3[6] = 1;

     label4:
        $r16 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.CmdMap[] cmdClasses>;
        $i3 = lengthof $r16;
        r3[7] = 1;
        if i0 >= $i3 goto label12;

        $r17 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.CmdMap[] cmdClasses>;
        $r18 = $r17[i0];
        $r19 = virtualinvoke $r18.<be.ppareit.swiftp_free.server.CmdMap: java.lang.String getName()>();
        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r15);
        r3[8] = 1;
        if $z0 == 0 goto label11;

     label5:
        $r20 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.CmdMap[] cmdClasses>;
        $r21 = $r20[i0];
        $r22 = virtualinvoke $r21.<be.ppareit.swiftp_free.server.CmdMap: java.lang.Class getCommand()>();
        $r23 = newarray (java.lang.Class)[2];
        $r23[0] = class "be/ppareit/swiftp_free/server/SessionThread";
        $r23[1] = class "java/lang/String";
        r8 = virtualinvoke $r22.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r23);
        r3[9] = 1;

     label6:
        goto label8;

     label7:
        $r24 := @caughtexception;
        r9 = $r24;
        $r25 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r25.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "FtpCmd subclass lacks expected constructor ");
        r3[10] = 1;
        return;

     label8:
        $r26 = newarray (java.lang.Object)[2];
        $r26[0] = r0;
        $r26[1] = r1;
        $r27 = virtualinvoke r8.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r26);
        r7 = (be.ppareit.swiftp_free.server.FtpCmd) $r27;
        r3[11] = 1;

     label9:
        goto label11;

     label10:
        $r28 := @caughtexception;
        r29 = $r28;
        $r30 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        virtualinvoke $r30.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Instance creation error on FtpCmd");
        r3[12] = 1;
        return;

     label11:
        i0 = i0 + 1;
        r3[13] = 1;
        goto label4;

     label12:
        r3[14] = 1;
        if r7 != null goto label13;

        $r31 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unrecognized FTP verb: ");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r31.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r35);
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>(r5);
        r3[15] = 1;
        return;

     label13:
        $z1 = virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: boolean isAuthenticated()>();
        r3[16] = 1;
        if $z1 != 0 goto label14;

        $r36 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        $z2 = virtualinvoke $r36.<java.lang.Object: boolean equals(java.lang.Object)>(class "be/ppareit/swiftp_free/server/CmdUSER");
        r3[17] = 1;
        if $z2 != 0 goto label14;

        $r37 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        $z3 = virtualinvoke $r37.<java.lang.Object: boolean equals(java.lang.Object)>(class "be/ppareit/swiftp_free/server/CmdPASS");
        r3[18] = 1;
        if $z3 != 0 goto label14;

        $r38 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        $z4 = virtualinvoke $r38.<java.lang.Object: boolean equals(java.lang.Object)>(class "be/ppareit/swiftp_free/server/CmdUSER");
        r3[19] = 1;
        if $z4 == 0 goto label15;

     label14:
        virtualinvoke r7.<be.ppareit.swiftp_free.server.FtpCmd: void run()>();
        r3[20] = 1;
        goto label16;

     label15:
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>("530 Login first with USER and PASS\r\n");
        r3[21] = 1;

     label16:
        r3[22] = 1;
        return;

        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
        catch java.lang.Exception from label8 to label9 with label10;
    }

    public static java.lang.String getParameter(java.lang.String, boolean)
    {
        java.lang.String r0, r3, r4, $r9;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1;
        be.ppareit.swiftp_free.MyLog $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r1 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return "";

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(32);
        r2[2] = 1;
        if i0 != -1 goto label2;

        r2[3] = 1;
        return "";

     label2:
        $i1 = i0 + 1;
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s+$", "");
        r2[4] = 1;
        if z0 != 0 goto label3;

        $r5 = <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsed argument: ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r9);
        r2[5] = 1;

     label3:
        r2[6] = 1;
        return r4;
    }

    public static java.lang.String getParameter(java.lang.String)
    {
        java.lang.String r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: java.lang.String getParameter(java.lang.String,boolean)>(r0, 0);
        r2[0] = 1;
        return $r3;
    }

    public static java.io.File inputPathToChrootedFile(java.io.File, java.lang.String)
    {
        java.io.File r0, r4, $r5, $r8;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        char $c0;
        java.lang.Exception $r6, r7;

        r0 := @parameter0: java.io.File;
        r1 := @parameter1: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];

     label1:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        r3[0] = 1;
        if $c0 != 47 goto label3;

        r4 = staticinvoke <be.ppareit.swiftp_free.Globals: java.io.File getChrootDir()>();
        $r5 = new java.io.File;
        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, r1);
        r3[1] = 1;

     label2:
        return $r5;

     label3:
        r3[2] = 1;
        goto label5;

     label4:
        $r6 := @caughtexception;
        r7 = $r6;
        r3[3] = 1;

     label5:
        $r8 = new java.io.File;
        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, r1);
        r3[4] = 1;
        return $r8;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public boolean violatesChroot(java.io.File)
    {
        be.ppareit.swiftp_free.server.FtpCmd r0;
        java.io.File r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r5, $r6, $r12, $r16, $r18, $r24, $r26, $r30, $r32;
        boolean $z0, $z1, $z2;
        be.ppareit.swiftp_free.MyLog $r7, $r8, $r13, $r21, $r27;
        java.lang.StringBuilder $r9, $r10, $r11, $r14, $r15, $r17, $r22, $r23, $r25, $r28, $r29, $r31;
        java.lang.Exception $r19, r20;

        r0 := @this: be.ppareit.swiftp_free.server.FtpCmd;
        r1 := @parameter0: java.io.File;
        $r2 = <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r4 = staticinvoke <be.ppareit.swiftp_free.Globals: java.io.File getChrootDir()>();

     label1:
        r5 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();
        $r6 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();
        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>($r6);
        r3[0] = 1;
        if $z0 != 0 goto label3;

        $r7 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Path violated folder restriction, denying");
        $r8 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("path: ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r12);
        $r13 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chroot: ");
        $r16 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r18);
        $z1 = 1;
        r3[1] = 1;

     label2:
        return $z1;

     label3:
        $z2 = 0;
        r3[2] = 1;

     label4:
        return $z2;

     label5:
        $r19 := @caughtexception;
        r20 = $r19;
        $r21 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Path canonicalization problem: ");
        $r24 = virtualinvoke r20.<java.lang.Exception: java.lang.String toString()>();
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r21.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r26);
        $r27 = r0.<be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog myLog>;
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("When checking file: ");
        $r30 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();
        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r32);
        r3[3] = 1;
        return 1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        be.ppareit.swiftp_free.server.CmdMap $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        be.ppareit.swiftp_free.MyLog $r4;
        java.lang.String $r5;
        be.ppareit.swiftp_free.server.CmdMap[] $r6;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRi()>();
        r1 = $r0[7];
        $r4 = new be.ppareit.swiftp_free.MyLog;
        $r2 = class "be/ppareit/swiftp_free/server/FtpCmd";
        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();
        specialinvoke $r4.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r5);
        <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.MyLog staticLog> = $r4;
        $r6 = newarray (be.ppareit.swiftp_free.server.CmdMap)[28];
        $r3 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r3.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("SYST", class "be/ppareit/swiftp_free/server/CmdSYST");
        $r6[0] = $r3;
        $r7 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r7.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("USER", class "be/ppareit/swiftp_free/server/CmdUSER");
        $r6[1] = $r7;
        $r8 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r8.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("PASS", class "be/ppareit/swiftp_free/server/CmdPASS");
        $r6[2] = $r8;
        $r9 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r9.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("TYPE", class "be/ppareit/swiftp_free/server/CmdTYPE");
        $r6[3] = $r9;
        $r10 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r10.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("CWD", class "be/ppareit/swiftp_free/server/CmdCWD");
        $r6[4] = $r10;
        $r11 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r11.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("PWD", class "be/ppareit/swiftp_free/server/CmdPWD");
        $r6[5] = $r11;
        $r12 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r12.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("LIST", class "be/ppareit/swiftp_free/server/CmdLIST");
        $r6[6] = $r12;
        $r13 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r13.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("PASV", class "be/ppareit/swiftp_free/server/CmdPASV");
        $r6[7] = $r13;
        $r14 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r14.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("RETR", class "be/ppareit/swiftp_free/server/CmdRETR");
        $r6[8] = $r14;
        $r15 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r15.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("NLST", class "be/ppareit/swiftp_free/server/CmdNLST");
        $r6[9] = $r15;
        $r16 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r16.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("NOOP", class "be/ppareit/swiftp_free/server/CmdNOOP");
        $r6[10] = $r16;
        $r17 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r17.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("STOR", class "be/ppareit/swiftp_free/server/CmdSTOR");
        $r6[11] = $r17;
        $r18 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r18.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("DELE", class "be/ppareit/swiftp_free/server/CmdDELE");
        $r6[12] = $r18;
        $r19 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r19.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("RNFR", class "be/ppareit/swiftp_free/server/CmdRNFR");
        $r6[13] = $r19;
        $r20 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r20.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("RNTO", class "be/ppareit/swiftp_free/server/CmdRNTO");
        $r6[14] = $r20;
        $r21 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r21.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("RMD", class "be/ppareit/swiftp_free/server/CmdRMD");
        $r6[15] = $r21;
        $r22 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r22.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("MKD", class "be/ppareit/swiftp_free/server/CmdMKD");
        $r6[16] = $r22;
        $r23 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r23.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("OPTS", class "be/ppareit/swiftp_free/server/CmdOPTS");
        $r6[17] = $r23;
        $r24 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r24.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("PORT", class "be/ppareit/swiftp_free/server/CmdPORT");
        $r6[18] = $r24;
        $r25 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r25.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("QUIT", class "be/ppareit/swiftp_free/server/CmdQUIT");
        $r6[19] = $r25;
        $r26 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r26.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("FEAT", class "be/ppareit/swiftp_free/server/CmdFEAT");
        $r6[20] = $r26;
        $r27 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r27.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("SIZE", class "be/ppareit/swiftp_free/server/CmdSIZE");
        $r6[21] = $r27;
        $r28 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r28.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("CDUP", class "be/ppareit/swiftp_free/server/CmdCDUP");
        $r6[22] = $r28;
        $r29 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r29.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("APPE", class "be/ppareit/swiftp_free/server/CmdAPPE");
        $r6[23] = $r29;
        $r30 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r30.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("XCUP", class "be/ppareit/swiftp_free/server/CmdCDUP");
        $r6[24] = $r30;
        $r31 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r31.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("XPWD", class "be/ppareit/swiftp_free/server/CmdPWD");
        $r6[25] = $r31;
        $r32 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r32.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("XMKD", class "be/ppareit/swiftp_free/server/CmdMKD");
        $r6[26] = $r32;
        $r33 = new be.ppareit.swiftp_free.server.CmdMap;
        specialinvoke $r33.<be.ppareit.swiftp_free.server.CmdMap: void <init>(java.lang.String,java.lang.Class)>("XRMD", class "be/ppareit/swiftp_free/server/CmdRMD");
        $r6[27] = $r33;
        <be.ppareit.swiftp_free.server.FtpCmd: be.ppareit.swiftp_free.server.CmdMap[] cmdClasses> = $r6;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[8][];
        <be.ppareit.swiftp_free.server.FtpCmd: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[23];
        $r0[2] = $r2;
        $r3 = newarray (boolean)[7];
        $r0[3] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[4] = $r4;
        $r5 = newarray (boolean)[5];
        $r0[5] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[6] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[7] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/FtpCmd", -2590017180382441304L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.NormalDataSocketFactory extends be.ppareit.swiftp_free.server.DataSocketFactory
{
    java.net.ServerSocket server;
    java.net.InetAddress remoteAddr;
    int remotePort;
    boolean isPasvMode;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<be.ppareit.swiftp_free.server.DataSocketFactory: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server> = null;
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean isPasvMode> = 1;
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        r2[0] = 1;
        return;
    }

    private void clearState()
    {
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r6;
        java.net.ServerSocket $r4, $r5;
        be.ppareit.swiftp_free.MyLog $r7;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r4 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        r2[0] = 1;
        if $r4 == null goto label4;

     label1:
        $r5 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        virtualinvoke $r5.<java.net.ServerSocket: void close()>();
        r2[1] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        r2[2] = 1;

     label4:
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server> = null;
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr> = null;
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort> = 0;
        $r7 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "NormalDataSocketFactory state cleared");
        r2[3] = 1;
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int onPasv()
    {
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r7;
        java.net.ServerSocket $r4, $r6;
        be.ppareit.swiftp_free.MyLog $r5, $r8;
        int $i0;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();

     label1:
        $r4 = new java.net.ServerSocket;
        specialinvoke $r4.<java.net.ServerSocket: void <init>(int,int)>(0, 5);
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server> = $r4;
        $r5 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Data socket pasv() listen successful");
        $r6 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        $i0 = virtualinvoke $r6.<java.net.ServerSocket: int getLocalPort()>();
        r2[0] = 1;

     label2:
        return $i0;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Data socket creation error");
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        r2[1] = 1;
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean onPort(java.net.InetAddress, int)
    {
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        java.net.InetAddress r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        r1 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr> = r1;
        r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort> = i0;
        r3[0] = 1;
        return 1;
    }

    public java.net.Socket onTransfer()
    {
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket r3, $r8, r24;
        java.io.IOException r4, $r10;
        java.net.ServerSocket $r5, $r23;
        java.net.InetAddress $r6, $r9, $r14;
        int $i0, $i1, $i2;
        be.ppareit.swiftp_free.MyLog $r7, $r11, $r22, $r25, $r28;
        java.lang.StringBuilder $r12, $r13, $r16, $r17, $r18;
        java.lang.String $r15, $r19;
        java.lang.Exception $r20, r21, $r26, r27;
        null_type n0;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r5 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        r2[0] = 1;
        if $r5 != null goto label9;

        $r6 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr>;
        r2[1] = 1;
        if $r6 == null goto label1;

        $i0 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort>;
        r2[2] = 1;
        if $i0 != 0 goto label2;

     label1:
        $r7 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "PORT mode but not initialized correctly");
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        r2[3] = 1;
        return null;

     label2:
        $r8 = new java.net.Socket;
        $r9 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr>;
        $i1 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort>;
        specialinvoke $r8.<java.net.Socket: void <init>(java.net.InetAddress,int)>($r9, $i1);
        r3 = $r8;
        r2[4] = 1;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;
        r4 = $r10;
        $r11 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t open PORT data socket to: ");
        $r14 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.InetAddress remoteAddr>;
        $r15 = virtualinvoke $r14.<java.net.InetAddress: java.lang.String toString()>();
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $i2 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: int remotePort>;
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r19);
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        r2[5] = 1;
        return null;

     label5:
        virtualinvoke r3.<java.net.Socket: void setSoTimeout(int)>(30000);
        r2[6] = 1;

     label6:
        goto label8;

     label7:
        $r20 := @caughtexception;
        r21 = $r20;
        $r22 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r22.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Couldn\'t set SO_TIMEOUT");
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        r2[7] = 1;
        return null;

     label8:
        r2[8] = 1;
        return r3;

     label9:
        n0 = null;

     label10:
        $r23 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        r24 = virtualinvoke $r23.<java.net.ServerSocket: java.net.Socket accept()>();
        $r25 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r25.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "onTransfer pasv accept successful");
        r2[9] = 1;

     label11:
        goto label13;

     label12:
        $r26 := @caughtexception;
        r27 = $r26;
        $r28 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r28.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Exception accepting PASV socket");
        r24 = null;
        r2[10] = 1;

     label13:
        specialinvoke r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void clearState()>();
        r2[11] = 1;
        return r24;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Exception from label5 to label6 with label7;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public int getPortNumber()
    {
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.ServerSocket $r3, $r4;
        int $i0;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = r0.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: java.net.ServerSocket server>;
        $i0 = virtualinvoke $r4.<java.net.ServerSocket: int getLocalPort()>();
        r2[1] = 1;
        return $i0;

     label1:
        r2[2] = 1;
        return -1;
    }

    public java.net.InetAddress getPasvIp()
    {
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.InetAddress $r3;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = staticinvoke <be.ppareit.swiftp_free.FTPServerService: java.net.InetAddress getWifiIp()>();
        r2[0] = 1;
        return $r3;
    }

    public void reportTraffic(long)
    {
        be.ppareit.swiftp_free.server.NormalDataSocketFactory r0;
        long l0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        l0 := @parameter0: long;
        $r1 = <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRi()>();
        r1 = $r0[8];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <be.ppareit.swiftp_free.server.NormalDataSocketFactory: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[2];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[12];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/NormalDataSocketFactory", 8739433956279906494L);
        return $r0;
    }
}
class be.ppareit.swiftp_free.server.ProxyConnector$1 extends java.lang.Object
{
    static final int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State;
    private static final boolean[][] $VRc;

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.NoSuchFieldError r2, $r7, $r10, r11, $r14, r15, $r18, r19, $r22, r23;
        be.ppareit.swiftp_free.server.ProxyConnector$State[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r4, $r5, $r8, $r12, $r16, $r20;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r6, $r9, $r13, $r17, $r21;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$1: boolean[][] $VRi()>();
        r1 = $r0[0];
        $r3 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State[] values()>();
        $i0 = lengthof $r3;
        $r4 = newarray (int)[$i0];
        <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State> = $r4;

     label0:
        $r5 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        $r6 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        $i1 = virtualinvoke $r6.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $r5[$i1] = 1;
        r1[0] = 1;

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r2 = $r7;
        r1[1] = 1;

     label3:
        $r8 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        $r9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING>;
        $i2 = virtualinvoke $r9.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $r8[$i2] = 2;
        r1[2] = 1;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;
        r11 = $r10;
        r1[3] = 1;

     label6:
        $r12 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        $r13 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED>;
        $i3 = virtualinvoke $r13.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $r12[$i3] = 3;
        r1[4] = 1;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;
        r15 = $r14;
        r1[5] = 1;

     label9:
        $r16 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        $r17 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        $i4 = virtualinvoke $r17.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $r16[$i4] = 4;
        r1[6] = 1;

     label10:
        goto label12;

     label11:
        $r18 := @caughtexception;
        r19 = $r18;
        r1[7] = 1;

     label12:
        $r20 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        $r21 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE>;
        $i5 = virtualinvoke $r21.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $r20[$i5] = 5;
        r1[8] = 1;

     label13:
        goto label15;

     label14:
        $r22 := @caughtexception;
        r23 = $r22;
        r1[9] = 1;

     label15:
        r1[10] = 1;
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1;

        $r0 = newmultiarray (boolean)[1][];
        <be.ppareit.swiftp_free.server.ProxyConnector$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[11];
        $r0[0] = $r1;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyConnector$1", -5295455100792825272L);
        return $r0;
    }
}
public final enum class be.ppareit.swiftp_free.server.ProxyConnector$State extends java.lang.Enum
{
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING;
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED;
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State FAILED;
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE;
    public static final enum be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED;
    private static final be.ppareit.swiftp_free.server.ProxyConnector$State[] $VALUES;
    private static final boolean[][] $VRc;

    public static be.ppareit.swiftp_free.server.ProxyConnector$State[] values()
    {
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.ProxyConnector$State[] $r2, $r4;
        java.lang.Object $r3;

        $r0 = <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State[] $VALUES>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (be.ppareit.swiftp_free.server.ProxyConnector$State[]) $r3;
        r1[0] = 1;
        return $r4;
    }

    public static be.ppareit.swiftp_free.server.ProxyConnector$State valueOf(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "be/ppareit/swiftp_free/server/ProxyConnector$State", r0);
        $r4 = (be.ppareit.swiftp_free.server.ProxyConnector$State) $r3;
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int)
    {
        be.ppareit.swiftp_free.server.ProxyConnector$State r0;
        java.lang.String r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector$State;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12;
        be.ppareit.swiftp_free.server.ProxyConnector$State[] $r7;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRi()>();
        r1 = $r0[3];
        $r2 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        specialinvoke $r2.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("CONNECTING", 0);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING> = $r2;
        $r3 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        specialinvoke $r3.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("CONNECTED", 1);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED> = $r3;
        $r4 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        specialinvoke $r4.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("FAILED", 2);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED> = $r4;
        $r5 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        specialinvoke $r5.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("UNREACHABLE", 3);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE> = $r5;
        $r6 = new be.ppareit.swiftp_free.server.ProxyConnector$State;
        specialinvoke $r6.<be.ppareit.swiftp_free.server.ProxyConnector$State: void <init>(java.lang.String,int)>("DISCONNECTED", 4);
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED> = $r6;
        $r7 = newarray (be.ppareit.swiftp_free.server.ProxyConnector$State)[5];
        $r8 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING>;
        $r7[0] = $r8;
        $r9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED>;
        $r7[1] = $r9;
        $r10 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        $r7[2] = $r10;
        $r11 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE>;
        $r7[3] = $r11;
        $r12 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        $r7[4] = $r12;
        <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State[] $VALUES> = $r7;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.server.ProxyConnector$State: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyConnector$State", 8394644511464601135L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.ProxyConnector extends java.lang.Thread
{
    public static final int IN_BUF_SIZE;
    public static final java.lang.String ENCODING;
    public static final int RESPONSE_WAIT_MS;
    public static final int QUEUE_WAIT_MS;
    public static final long UPDATE_USAGE_BYTES;
    public static final java.lang.String PREFERRED_SERVER;
    public static final int CONNECT_TIMEOUT;
    private final be.ppareit.swiftp_free.FTPServerService ftpServerService;
    private final be.ppareit.swiftp_free.MyLog myLog;
    private org.json.JSONObject response;
    private java.lang.Thread responseWaiter;
    private final java.util.Queue queuedRequestThreads;
    private java.net.Socket commandSocket;
    private java.io.OutputStream out;
    private java.lang.String hostname;
    private java.io.InputStream inputStream;
    private long proxyUsage;
    private be.ppareit.swiftp_free.server.ProxyConnector$State proxyState;
    private java.lang.String prefix;
    private java.lang.String proxyMessage;
    static final java.lang.String USAGE_PREFS_NAME;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(be.ppareit.swiftp_free.FTPServerService)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        be.ppareit.swiftp_free.FTPServerService r1;
        boolean[][] $r2;
        boolean[] r3;
        be.ppareit.swiftp_free.MyLog $r4;
        java.lang.Class $r5;
        java.lang.String $r6;
        java.util.LinkedList $r7;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r8, $r9;
        long $l0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: be.ppareit.swiftp_free.FTPServerService;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        $r4 = new be.ppareit.swiftp_free.MyLog;
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r4.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r6);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog> = $r4;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter> = null;
        $r7 = new java.util.LinkedList;
        specialinvoke $r7.<java.util.LinkedList: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads> = $r7;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.OutputStream out> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage> = 0L;
        $r8 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState> = $r8;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String proxyMessage> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.FTPServerService ftpServerService> = r1;
        $l0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: long getPersistedProxyUsage()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage> = $l0;
        $r9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r9);
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(r0);
        r3[0] = 1;
        return;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] r3, r4;
        int i0, i1, i2;
        java.lang.String r5, $r10, $r21, $r25, $r27, $r33, $r42, r43, $r64, $r73, $r82;
        org.json.JSONObject r6, $r15, $r16, $r18, $r20, $r44, r45, $r47;
        java.lang.Throwable r7, $r85;
        be.ppareit.swiftp_free.MyLog $r8, $r17, $r19, $r22, $r29, $r31, $r39, $r41, $r48, $r50, $r51, $r52, $r56, $r57, $r60, $r66, $r69, $r75, $r78, $r84, $r86;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r9, $r30, $r32, $r53, $r54, $r55, $r65, $r74, $r83;
        java.net.Socket $r11, $r12, $r13, $r14, $r28, $r34, $r36;
        boolean $z0, $z1;
        java.lang.StringBuilder $r23, $r24, $r26, $r61, $r62, $r63, $r70, $r71, $r72, $r79, $r80, $r81;
        java.io.InputStream $r35, $r40;
        java.io.OutputStream $r37;
        byte[] r38;
        long $l3;
        null_type n0;
        java.lang.Thread $r46, $r49;
        java.io.IOException $r58, r59;
        org.json.JSONException $r67, r68;
        java.lang.Exception $r76, r77;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("In ProxyConnector.run()");
        $r9 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTING>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r9);

     label1:
        r3 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String[] getProxyList()>();
        r4 = r3;
        i0 = lengthof r4;
        i1 = 0;
        r2[0] = 1;

     label2:
        r2[1] = 1;
        if i1 >= i0 goto label7;

        r5 = r4[i1];
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = r5;
        $r10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        $r11 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket newAuthedSocket(java.lang.String,int)>($r10, 2222);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket> = $r11;
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        r2[2] = 1;
        if $r12 != null goto label3;

        r2[3] = 1;
        goto label6;

     label3:
        $r13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        virtualinvoke $r13.<java.net.Socket: void setSoTimeout(int)>(0);
        r6 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("start_command_session");
        $r14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        $r15 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>($r14, r6);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response> = $r15;
        $r16 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        r2[4] = 1;
        if $r16 != null goto label4;

        $r17 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r17.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Couldn\'t create proxy command session");
        r2[5] = 1;
        goto label6;

     label4:
        $r18 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        $z0 = virtualinvoke $r18.<org.json.JSONObject: boolean has(java.lang.String)>("prefix");
        r2[6] = 1;
        if $z0 != 0 goto label5;

        $r19 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "start_command_session didn\'t receive a prefix in response");
        r2[7] = 1;
        goto label6;

     label5:
        $r20 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        $r21 = virtualinvoke $r20.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("prefix");
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String prefix> = $r21;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response> = null;
        $r22 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got prefix of: ");
        $r25 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String prefix>;
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r22.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r27);
        r2[8] = 1;
        goto label7;

     label6:
        i1 = i1 + 1;
        r2[9] = 1;
        goto label2;

     label7:
        $r28 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        r2[10] = 1;
        if $r28 != null goto label9;

        $r29 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r29.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "No proxies accepted connection, failing.");
        $r30 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State UNREACHABLE>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r30);

     label8:
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        $r31 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r31.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        r2[11] = 1;
        return;

     label9:
        $r32 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r32);
        $r33 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void preferServer(java.lang.String)>($r33);
        $r34 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        $r35 = virtualinvoke $r34.<java.net.Socket: java.io.InputStream getInputStream()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream> = $r35;
        $r36 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        $r37 = virtualinvoke $r36.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.OutputStream out> = $r37;
        r38 = newarray (byte)[2048];
        r2[12] = 1;

     label10:
        $r39 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r39.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("to proxy read()");
        $r40 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream>;
        i2 = virtualinvoke $r40.<java.io.InputStream: int read(byte[])>(r38);
        $l3 = (long) i2;
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void incrementProxyUsage(long)>($l3);
        $r41 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r41.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("from proxy read()");
        n0 = null;
        r2[13] = 1;
        if i2 <= 0 goto label15;

        $r42 = new java.lang.String;
        specialinvoke $r42.<java.lang.String: void <init>(byte[],java.lang.String)>(r38, "UTF-8");
        r43 = $r42;
        $r44 = new org.json.JSONObject;
        specialinvoke $r44.<org.json.JSONObject: void <init>(java.lang.String)>(r43);
        r45 = $r44;
        $z1 = virtualinvoke r45.<org.json.JSONObject: boolean has(java.lang.String)>("action");
        r2[14] = 1;
        if $z1 == 0 goto label11;

        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void incomingCommand(org.json.JSONObject)>(r45);
        r2[15] = 1;
        goto label14;

     label11:
        $r46 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter>;
        r2[16] = 1;
        if $r46 == null goto label13;

        $r47 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        r2[17] = 1;
        if $r47 == null goto label12;

        $r48 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r48.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Overwriting existing cmd session response");
        r2[18] = 1;

     label12:
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response> = r45;
        $r49 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter>;
        virtualinvoke $r49.<java.lang.Thread: void interrupt()>();
        r2[19] = 1;
        goto label14;

     label13:
        $r50 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r50.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Response received but no responseWaiter");
        r2[20] = 1;

     label14:
        r2[21] = 1;
        goto label17;

     label15:
        r2[22] = 1;
        if i2 != 0 goto label16;

        $r51 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r51.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Command socket read 0 bytes, looping");
        r2[23] = 1;
        goto label17;

     label16:
        $r52 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r52.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Command socket end of stream, exiting");
        $r53 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState>;
        $r54 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        r2[24] = 1;
        if $r53 == $r54 goto label18;

        $r55 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r55);
        r2[25] = 1;
        goto label18;

     label17:
        r2[26] = 1;
        goto label10;

     label18:
        $r56 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r56.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "ProxyConnector thread quitting cleanly");

     label19:
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        $r57 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r57.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        r2[27] = 1;
        goto label32;

     label20:
        $r58 := @caughtexception;

     label21:
        r59 = $r58;
        $r60 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r61 = new java.lang.StringBuilder;
        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException in command session: ");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r60.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r64);
        $r65 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r65);

     label22:
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        $r66 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r66.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        r2[28] = 1;
        goto label32;

     label23:
        $r67 := @caughtexception;

     label24:
        r68 = $r67;
        $r69 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r70 = new java.lang.StringBuilder;
        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commmand socket JSONException: ");
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r69.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r73);
        $r74 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r74);

     label25:
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        $r75 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r75.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        r2[29] = 1;
        goto label32;

     label26:
        $r76 := @caughtexception;

     label27:
        r77 = $r76;
        $r78 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r79 = new java.lang.StringBuilder;
        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Other exception in ProxyConnector: ");
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r77);
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r78.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r82);
        $r83 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State FAILED>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r83);

     label28:
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        $r84 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r84.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        r2[30] = 1;
        goto label32;

     label29:
        $r85 := @caughtexception;

     label30:
        r7 = $r85;

     label31:
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname> = null;
        $r86 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r86.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyConnector.run() returning");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        r2[31] = 1;
        throw r7;

     label32:
        r2[32] = 1;
        return;

        catch java.io.IOException from label1 to label8 with label20;
        catch java.io.IOException from label9 to label19 with label20;
        catch org.json.JSONException from label1 to label8 with label23;
        catch org.json.JSONException from label9 to label19 with label23;
        catch java.lang.Exception from label1 to label8 with label26;
        catch java.lang.Exception from label9 to label19 with label26;
        catch java.lang.Throwable from label1 to label8 with label29;
        catch java.lang.Throwable from label9 to label19 with label29;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
    }

    private void preferServer(java.lang.String)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        android.content.SharedPreferences$Editor r5;
        android.content.Context $r6;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r6 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r4 = virtualinvoke $r6.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("preferred_server", 0);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("preferred_server", r1);
        interfaceinvoke r5.<android.content.SharedPreferences$Editor: boolean commit()>();
        r3[0] = 1;
        return;
    }

    private java.lang.String[] getProxyList()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4;
        java.lang.String[] r5, $r8, $r9, r11, $r12, $r13;
        java.util.List r6;
        android.content.Context $r7;
        java.lang.Object[] $r10;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r7 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r3 = virtualinvoke $r7.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("preferred_server", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferred_server", null);
        $r8 = newarray (java.lang.String)[9];
        $r8[0] = "c1.swiftp.org";
        $r8[1] = "c2.swiftp.org";
        $r8[2] = "c3.swiftp.org";
        $r8[3] = "c4.swiftp.org";
        $r8[4] = "c5.swiftp.org";
        $r8[5] = "c6.swiftp.org";
        $r8[6] = "c7.swiftp.org";
        $r8[7] = "c8.swiftp.org";
        $r8[8] = "c9.swiftp.org";
        r5 = $r8;
        r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);
        staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r6);
        $r9 = newarray (java.lang.String)[0];
        $r10 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);
        r11 = (java.lang.String[]) $r10;
        r2[0] = 1;
        if r4 != null goto label1;

        r2[1] = 1;
        return r11;

     label1:
        $r12 = newarray (java.lang.String)[1];
        $r12[0] = r4;
        $r13 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String[] concatStrArrays(java.lang.String[],java.lang.String[])>($r12, r11);
        r2[2] = 1;
        return $r13;
    }

    private boolean checkAndPrintJsonError(org.json.JSONObject) throws org.json.JSONException
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        org.json.JSONObject r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder r4, $r5;
        boolean $z0, $z1;
        java.lang.String $r6, $r9, $r12;
        be.ppareit.swiftp_free.MyLog $r11;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: org.json.JSONObject;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $z0 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("error_code");
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error in JSON response, code: ");
        r4 = $r5;
        $r6 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("error_code");
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $z1 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("error_string");
        r3[1] = 1;
        if $z1 == 0 goto label1;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", string: ");
        $r9 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("error_string");
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        r3[2] = 1;

     label1:
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r12);
        r3[3] = 1;
        return 1;

     label2:
        r3[4] = 1;
        return 0;
    }

    private void incomingCommand(org.json.JSONObject)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        org.json.JSONObject r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, r5, $r10, $r11, $r15, $r18, $r24;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        be.ppareit.swiftp_free.MyLog $r6, $r12, $r19, $r20, $r27;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r16, $r17, $r21, $r22, $r23;
        org.json.JSONException $r25, r26;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: org.json.JSONObject;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];

     label1:
        r4 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("action");
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("control_connection_waiting");
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r1.<org.json.JSONObject: int getInt(java.lang.String)>("port");
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void startControlSession(int)>($i0);
        r3[1] = 1;
        goto label6;

     label2:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("prefer_server");
        r3[2] = 1;
        if $z1 == 0 goto label3;

        r5 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("host");
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void preferServer(java.lang.String)>(r5);
        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New preferred server: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r10);
        r3[3] = 1;
        goto label6;

     label3:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("message");
        r3[4] = 1;
        if $z2 == 0 goto label4;

        $r11 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("text");
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String proxyMessage> = $r11;
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got news from proxy server: \"");
        $r15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String proxyMessage>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r18);
        r3[5] = 1;
        goto label6;

     label4:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("noop");
        r3[6] = 1;
        if $z3 == 0 goto label5;

        $r19 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r19.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Proxy noop");
        r3[7] = 1;
        goto label6;

     label5:
        $r20 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported incoming action: ");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r20.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r24);
        r3[8] = 1;

     label6:
        r3[9] = 1;

     label7:
        goto label9;

     label8:
        $r25 := @caughtexception;
        r26 = $r25;
        $r27 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "JSONException in proxy incomingCommand");
        r3[10] = 1;

     label9:
        r3[11] = 1;
        return;

        catch org.json.JSONException from label1 to label7 with label8;
    }

    private void startControlSession(int)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket r3;
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r4, $r10;
        be.ppareit.swiftp_free.server.SessionThread$Source $r5;
        be.ppareit.swiftp_free.server.SessionThread r6, $r11;
        be.ppareit.swiftp_free.MyLog $r7, $r9;
        java.lang.String $r8;
        be.ppareit.swiftp_free.FTPServerService $r12;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        i0 := @parameter0: int;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Starting new proxy FTP control session");
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        r3 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket newAuthedSocket(java.lang.String,int)>($r8, i0);
        r2[0] = 1;
        if r3 != null goto label1;

        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("startControlSession got null authed socket");
        r2[1] = 1;
        return;

     label1:
        $r10 = new be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        specialinvoke $r10.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void <init>()>();
        r4 = $r10;
        $r11 = new be.ppareit.swiftp_free.server.SessionThread;
        $r5 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source PROXY>;
        specialinvoke $r11.<be.ppareit.swiftp_free.server.SessionThread: void <init>(java.net.Socket,be.ppareit.swiftp_free.server.DataSocketFactory,be.ppareit.swiftp_free.server.SessionThread$Source)>(r3, r4, $r5);
        r6 = $r11;
        virtualinvoke r6.<be.ppareit.swiftp_free.server.SessionThread: void start()>();
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.FTPServerService ftpServerService>;
        virtualinvoke $r12.<be.ppareit.swiftp_free.FTPServerService: void registerSessionThread(be.ppareit.swiftp_free.server.SessionThread)>(r6);
        r2[2] = 1;
        return;
    }

    private java.net.Socket newAuthedSocket(java.lang.String, int)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.lang.String r1, $r15, $r18, $r20, $r25, $r31, $r41;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        org.json.JSONObject r4, $r8, $r30, r32;
        null_type n0, n1, $n2, $n3, $n4;
        java.net.Socket r5, $r16;
        byte[] r6, $r26;
        be.ppareit.swiftp_free.MyLog $r7, $r9, $r27, $r28, $r29, $r33, $r37;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r38, $r39, $r40;
        java.net.InetSocketAddress $r17;
        java.io.OutputStream r23;
        java.io.InputStream r24;
        boolean $z0;
        java.lang.Exception $r35, r36;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r3[0] = 1;
        if r1 != null goto label1;

        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("newAuthedSocket can\'t connect to null host");
        r3[1] = 1;
        return null;

     label1:
        $r8 = new org.json.JSONObject;
        specialinvoke $r8.<org.json.JSONObject: void <init>()>();
        r4 = $r8;
        n0 = null;
        n1 = null;

     label2:
        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening proxy connection to ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r15);
        $r16 = new java.net.Socket;
        specialinvoke $r16.<java.net.Socket: void <init>()>();
        r5 = $r16;
        $r17 = new java.net.InetSocketAddress;
        specialinvoke $r17.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r1, i0);
        virtualinvoke r5.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r17, 5000);
        $r18 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String getAndroidId()>();
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("android_id", $r18);
        $r20 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String getVersion()>();
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("swiftp_version", $r20);
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("action", "login");
        r23 = virtualinvoke r5.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        r24 = virtualinvoke r5.<java.net.Socket: java.io.InputStream getInputStream()>();
        $r25 = virtualinvoke r4.<org.json.JSONObject: java.lang.String toString()>();
        $r26 = virtualinvoke $r25.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");
        virtualinvoke r23.<java.io.OutputStream: void write(byte[])>($r26);
        $r27 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r27.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Sent login request");
        r6 = newarray (byte)[2048];
        i1 = virtualinvoke r24.<java.io.InputStream: int read(byte[])>(r6);
        r3[2] = 1;
        if i1 != -1 goto label4;

        $r28 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r28.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Proxy socket closed while waiting for auth response");
        $n2 = null;
        r3[3] = 1;

     label3:
        return $n2;

     label4:
        r3[4] = 1;
        if i1 != 0 goto label6;

        $r29 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r29.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Short network read waiting for auth, quitting");
        $n3 = null;
        r3[5] = 1;

     label5:
        return $n3;

     label6:
        $r30 = new org.json.JSONObject;
        $r31 = new java.lang.String;
        specialinvoke $r31.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r6, 0, i1, "UTF-8");
        specialinvoke $r30.<org.json.JSONObject: void <init>(java.lang.String)>($r31);
        r32 = $r30;
        $z0 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: boolean checkAndPrintJsonError(org.json.JSONObject)>(r32);
        r3[6] = 1;
        if $z0 == 0 goto label8;

        $n4 = null;
        r3[7] = 1;

     label7:
        return $n4;

     label8:
        $r33 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r33.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("newAuthedSocket successful");
        r3[8] = 1;

     label9:
        return r5;

     label10:
        $r35 := @caughtexception;
        r36 = $r35;
        $r37 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during proxy connection or authentication: ");
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r37.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r41);
        r3[9] = 1;
        return null;

        catch java.lang.Exception from label2 to label3 with label10;
        catch java.lang.Exception from label4 to label5 with label10;
        catch java.lang.Exception from label6 to label7 with label10;
        catch java.lang.Exception from label8 to label9 with label10;
    }

    public void quit()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r16;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r4;
        java.net.Socket $r5, $r12, $r14;
        org.json.JSONObject $r6;
        java.io.InputStream $r8, $r10;
        be.ppareit.swiftp_free.MyLog $r9, $r11, $r13, $r15;
        org.json.JSONException $r17, r18;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r4 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State DISCONNECTED>;
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)>($r4);

     label1:
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        $r6 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("finished");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>($r5, $r6);
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream>;
        r2[0] = 1;
        if $r8 == null goto label2;

        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("quit() closing proxy inputStream");
        $r10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.InputStream inputStream>;
        virtualinvoke $r10.<java.io.InputStream: void close()>();
        r2[1] = 1;
        goto label3;

     label2:
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("quit() won\'t close null inputStream");
        r2[2] = 1;

     label3:
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        r2[3] = 1;
        if $r12 == null goto label4;

        $r13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("quit() closing proxy socket");
        $r14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        virtualinvoke $r14.<java.net.Socket: void close()>();
        r2[4] = 1;
        goto label5;

     label4:
        $r15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("quit() won\'t close null socket");
        r2[5] = 1;

     label5:
        r2[6] = 1;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;
        r3 = $r16;
        r2[7] = 1;
        goto label9;

     label8:
        $r17 := @caughtexception;
        r18 = $r17;
        r2[8] = 1;

     label9:
        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        staticinvoke <be.ppareit.swiftp_free.Globals: void setProxyConnector(be.ppareit.swiftp_free.server.ProxyConnector)>(null);
        r2[9] = 1;
        return;

        catch java.io.IOException from label1 to label6 with label7;
        catch org.json.JSONException from label1 to label6 with label8;
    }

    private org.json.JSONObject sendCmdSocketRequest(org.json.JSONObject)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0, r4, r6, r11, r53, r67;
        org.json.JSONObject r1, $r62, r65;
        boolean[][] $r2;
        boolean[] r3;
        boolean z0, $z1, z4, z5;
        java.lang.Throwable r5, r7, r8, r9, r10, r12, $r29, $r46, $r58, $r72, $r73, $r79;
        null_type n0, $n1, n2;
        java.lang.Thread $r14, $r15, $r17, $r20, $r22, $r25, $r28, $r35, $r45, $r57, $r71, $r78;
        be.ppareit.swiftp_free.MyLog $r16, $r18, $r26, $r30, $r33, $r34, $r40, $r47, $r50, $r51, $r59, $r82;
        java.util.Queue $r19, $r21, $r23, $r27, $r42, $r43, $r54, $r55, $r68, $r69, $r75, $r76;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r24, $r44, $r56, $r70, $r77;
        java.lang.InterruptedException $r31, r32, $r48, r49;
        byte[] r36;
        java.io.OutputStream $r37;
        java.io.IOException $r38, r39;
        java.lang.StringBuilder $r60, $r61, $r63, $r83, $r84, $r85;
        java.lang.String $r64, $r86;
        org.json.JSONException $r80, r81;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: org.json.JSONObject;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];

     label1:
        r4 = r0;
        entermonitor r0;

     label2:
        $r14 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter>;
        r3[0] = 1;
        if $r14 != null goto label3;

        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter> = $r15;
        z0 = 0;
        $r16 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("sendCmdSocketRequest proceeding without queue");
        r3[1] = 1;
        goto label6;

     label3:
        $r17 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter>;
        $z1 = virtualinvoke $r17.<java.lang.Thread: boolean isAlive()>();
        r3[2] = 1;
        if $z1 != 0 goto label5;

        $r18 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r18.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Won\'t wait on dead responseWaiter");
        $r19 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $i0 = interfaceinvoke $r19.<java.util.Queue: int size()>();
        r3[3] = 1;
        if $i0 != 0 goto label4;

        $r20 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter> = $r20;
        z0 = 0;
        r3[4] = 1;
        goto label6;

     label4:
        $r21 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $r22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        interfaceinvoke $r21.<java.util.Queue: boolean add(java.lang.Object)>($r22);
        $r23 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $r24 = interfaceinvoke $r23.<java.util.Queue: java.lang.Object remove()>();
        $r25 = (java.lang.Thread) $r24;
        virtualinvoke $r25.<java.lang.Thread: void interrupt()>();
        z0 = 1;
        r3[5] = 1;
        goto label6;

     label5:
        $r26 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r26.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("sendCmdSocketRequest queueing thread");
        $r27 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $r28 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        interfaceinvoke $r27.<java.util.Queue: boolean add(java.lang.Object)>($r28);
        z0 = 1;
        r3[6] = 1;

     label6:
        exitmonitor r4;
        r3[7] = 1;

     label7:
        goto label11;

     label8:
        $r29 := @caughtexception;

     label9:
        r5 = $r29;
        exitmonitor r4;

     label10:
        r3[8] = 1;
        throw r5;

     label11:
        r3[9] = 1;
        if z0 == 0 goto label17;

        z4 = 0;

     label12:
        $r30 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r30.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Queued cmd session request thread sleeping...");
        staticinvoke <java.lang.Thread: void sleep(long)>(20000L);
        r3[10] = 1;

     label13:
        goto label15;

     label14:
        $r31 := @caughtexception;
        r32 = $r31;
        $r33 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r33.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Proxy request popped and ready");
        z4 = 1;
        r3[11] = 1;

     label15:
        r3[12] = 1;
        if z4 != 0 goto label17;

        $r34 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r34.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Timed out waiting on proxy queue");
        $n1 = null;
        r3[13] = 1;

     label16:
        return $n1;

     label17:
        $r35 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.Thread responseWaiter> = $r35;
        r36 = staticinvoke <be.ppareit.swiftp_free.Util: byte[] jsonToByteArray(org.json.JSONObject)>(r1);

     label18:
        $r37 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.io.OutputStream out>;
        virtualinvoke $r37.<java.io.OutputStream: void write(byte[])>(r36);
        r3[14] = 1;

     label19:
        goto label29;

     label20:
        $r38 := @caughtexception;
        r39 = $r38;
        $r40 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r40.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "IOException sending proxy request");
        n0 = null;

     label21:
        r6 = r0;
        entermonitor r0;

     label22:
        $r42 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $i1 = interfaceinvoke $r42.<java.util.Queue: int size()>();
        r3[15] = 1;
        if $i1 == 0 goto label23;

        $r43 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $r44 = interfaceinvoke $r43.<java.util.Queue: java.lang.Object remove()>();
        $r45 = (java.lang.Thread) $r44;
        virtualinvoke $r45.<java.lang.Thread: void interrupt()>();
        r3[16] = 1;

     label23:
        exitmonitor r6;
        r3[17] = 1;

     label24:
        goto label28;

     label25:
        $r46 := @caughtexception;

     label26:
        r7 = $r46;
        exitmonitor r6;

     label27:
        r3[18] = 1;
        throw r7;

     label28:
        r3[19] = 1;
        return n0;

     label29:
        z5 = 0;

     label30:
        $r47 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r47.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Cmd session request sleeping until response");
        staticinvoke <java.lang.Thread: void sleep(long)>(10000L);
        r3[20] = 1;

     label31:
        goto label33;

     label32:
        $r48 := @caughtexception;
        r49 = $r48;
        $r50 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r50.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Cmd session response received");
        z5 = 1;
        r3[21] = 1;

     label33:
        r3[22] = 1;
        if z5 != 0 goto label42;

        $r51 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r51.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Proxy request timed out");
        n2 = null;

     label34:
        r53 = r0;
        entermonitor r0;

     label35:
        $r54 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $i2 = interfaceinvoke $r54.<java.util.Queue: int size()>();
        r3[23] = 1;
        if $i2 == 0 goto label36;

        $r55 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $r56 = interfaceinvoke $r55.<java.util.Queue: java.lang.Object remove()>();
        $r57 = (java.lang.Thread) $r56;
        virtualinvoke $r57.<java.lang.Thread: void interrupt()>();
        r3[24] = 1;

     label36:
        exitmonitor r53;
        r3[25] = 1;

     label37:
        goto label41;

     label38:
        $r58 := @caughtexception;

     label39:
        r8 = $r58;
        exitmonitor r53;

     label40:
        r3[26] = 1;
        throw r8;

     label41:
        r3[27] = 1;
        return n2;

     label42:
        $r59 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r60 = new java.lang.StringBuilder;
        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cmd session response was: ");
        $r62 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;
        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r59.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r64);
        r65 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject response>;

     label43:
        r67 = r0;
        entermonitor r0;

     label44:
        $r68 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $i3 = interfaceinvoke $r68.<java.util.Queue: int size()>();
        r3[28] = 1;
        if $i3 == 0 goto label45;

        $r69 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $r70 = interfaceinvoke $r69.<java.util.Queue: java.lang.Object remove()>();
        $r71 = (java.lang.Thread) $r70;
        virtualinvoke $r71.<java.lang.Thread: void interrupt()>();
        r3[29] = 1;

     label45:
        exitmonitor r67;
        r3[30] = 1;

     label46:
        goto label50;

     label47:
        $r72 := @caughtexception;

     label48:
        r9 = $r72;
        exitmonitor r67;

     label49:
        r3[31] = 1;
        throw r9;

     label50:
        r3[32] = 1;
        return r65;

     label51:
        $r73 := @caughtexception;

     label52:
        r10 = $r73;

     label53:
        r11 = r0;
        entermonitor r0;

     label54:
        $r75 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $i4 = interfaceinvoke $r75.<java.util.Queue: int size()>();
        r3[33] = 1;
        if $i4 == 0 goto label55;

        $r76 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.util.Queue queuedRequestThreads>;
        $r77 = interfaceinvoke $r76.<java.util.Queue: java.lang.Object remove()>();
        $r78 = (java.lang.Thread) $r77;
        virtualinvoke $r78.<java.lang.Thread: void interrupt()>();
        r3[34] = 1;

     label55:
        exitmonitor r11;
        r3[35] = 1;

     label56:
        goto label60;

     label57:
        $r79 := @caughtexception;

     label58:
        r12 = $r79;
        exitmonitor r11;

     label59:
        r3[36] = 1;
        throw r12;

     label60:
        r3[37] = 1;
        throw r10;

     label61:
        $r80 := @caughtexception;
        r81 = $r80;
        $r82 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r83 = new java.lang.StringBuilder;
        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSONException in sendRequest: ");
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r81);
        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r82.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r86);
        r3[38] = 1;
        return null;

        catch java.lang.Throwable from label2 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
        catch java.lang.InterruptedException from label12 to label13 with label14;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label22 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.InterruptedException from label30 to label31 with label32;
        catch java.lang.Throwable from label35 to label37 with label38;
        catch java.lang.Throwable from label39 to label40 with label38;
        catch java.lang.Throwable from label44 to label46 with label47;
        catch java.lang.Throwable from label48 to label49 with label47;
        catch java.lang.Throwable from label17 to label21 with label51;
        catch java.lang.Throwable from label29 to label34 with label51;
        catch java.lang.Throwable from label42 to label43 with label51;
        catch java.lang.Throwable from label54 to label56 with label57;
        catch java.lang.Throwable from label58 to label59 with label57;
        catch java.lang.Throwable from label52 to label53 with label51;
        catch org.json.JSONException from label1 to label16 with label61;
        catch org.json.JSONException from label17 to label28 with label61;
        catch org.json.JSONException from label29 to label41 with label61;
        catch org.json.JSONException from label42 to label50 with label61;
        catch org.json.JSONException from label52 to label61 with label61;
    }

    public org.json.JSONObject sendRequest(java.io.InputStream, java.io.OutputStream, org.json.JSONObject) throws org.json.JSONException
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;
        org.json.JSONObject r3, r7;
        boolean[][] $r4;
        boolean[] r5;
        byte[] r6, $r8;
        int i0;
        be.ppareit.swiftp_free.MyLog $r9, $r10, $r11, $r15;
        null_type $n0, $n1;
        boolean $z0;
        java.io.IOException $r13, r14;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.lang.String $r19;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.io.OutputStream;
        r3 := @parameter2: org.json.JSONObject;
        $r4 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r5 = $r4[10];

     label1:
        $r8 = staticinvoke <be.ppareit.swiftp_free.Util: byte[] jsonToByteArray(org.json.JSONObject)>(r3);
        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r8);
        r6 = newarray (byte)[2048];
        i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r6);
        r5[0] = 1;
        if i0 >= 1 goto label3;

        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Proxy sendRequest short read on response");
        $n0 = null;
        r5[1] = 1;

     label2:
        return $n0;

     label3:
        r7 = staticinvoke <be.ppareit.swiftp_free.Util: org.json.JSONObject byteArrayToJson(byte[])>(r6);
        r5[2] = 1;
        if r7 != null goto label4;

        $r10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Null response to sendRequest");
        r5[3] = 1;

     label4:
        $z0 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: boolean checkAndPrintJsonError(org.json.JSONObject)>(r7);
        r5[4] = 1;
        if $z0 == 0 goto label6;

        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Error response to sendRequest");
        $n1 = null;
        r5[5] = 1;

     label5:
        return $n1;

     label6:
        r5[6] = 1;

     label7:
        return r7;

     label8:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException in proxy sendRequest: ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r19);
        r5[7] = 1;
        return null;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public org.json.JSONObject sendRequest(java.net.Socket, org.json.JSONObject) throws org.json.JSONException
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.net.Socket r1;
        org.json.JSONObject r2, $r9;
        boolean[][] $r3;
        boolean[] r4;
        java.io.IOException r5, $r10;
        be.ppareit.swiftp_free.MyLog $r6, $r11;
        null_type $n0;
        java.io.InputStream $r7;
        java.io.OutputStream $r8;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r15;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.net.Socket;
        r2 := @parameter1: org.json.JSONObject;
        $r3 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[11];

     label1:
        r4[0] = 1;
        if r1 != null goto label3;

        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("null socket in ProxyConnector.sendRequest()");
        $n0 = null;
        r4[1] = 1;

     label2:
        return $n0;

     label3:
        $r7 = virtualinvoke r1.<java.net.Socket: java.io.InputStream getInputStream()>();
        $r8 = virtualinvoke r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        $r9 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.io.InputStream,java.io.OutputStream,org.json.JSONObject)>($r7, $r8, r2);
        r4[2] = 1;

     label4:
        return $r9;

     label5:
        $r10 := @caughtexception;
        r5 = $r10;
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException in proxy sendRequest wrapper: ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r15);
        r4[3] = 1;
        return null;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public be.ppareit.swiftp_free.server.ProxyDataSocketInfo pasvListen()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket r3;
        org.json.JSONObject r4, r5;
        int i0;
        be.ppareit.swiftp_free.MyLog $r6, $r8, $r12;
        java.lang.String $r7;
        null_type $n0, $n1;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo $r9;
        org.json.JSONException $r10, r11;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];

     label1:
        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Sending data_pasv_listen to proxy");
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        r3 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket newAuthedSocket(java.lang.String,int)>($r7, 2222);
        r2[0] = 1;
        if r3 != null goto label3;

        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("pasvListen got null socket");
        $n0 = null;
        r2[1] = 1;

     label2:
        return $n0;

     label3:
        r4 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("data_pasv_listen");
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>(r3, r4);
        r2[2] = 1;
        if r5 != null goto label5;

        $n1 = null;
        r2[3] = 1;

     label4:
        return $n1;

     label5:
        i0 = virtualinvoke r5.<org.json.JSONObject: int getInt(java.lang.String)>("port");
        $r9 = new be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        specialinvoke $r9.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: void <init>(java.net.Socket,int)>(r3, i0);
        r2[4] = 1;

     label6:
        return $r9;

     label7:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "JSONException in pasvListen");
        r2[5] = 1;
        return null;

        catch org.json.JSONException from label1 to label2 with label7;
        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
    }

    public java.net.Socket dataPortConnect(java.net.InetAddress, int)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.net.InetAddress r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        java.net.Socket r4;
        org.json.JSONObject r5, r6;
        be.ppareit.swiftp_free.MyLog $r7, $r9, $r16;
        java.lang.String $r8, $r10;
        null_type $n0, $n1;
        org.json.JSONException $r14, r15;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];

     label1:
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Sending data_port_connect to proxy");
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        r4 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket newAuthedSocket(java.lang.String,int)>($r8, 2222);
        r3[0] = 1;
        if r4 != null goto label3;

        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("dataPortConnect got null socket");
        $n0 = null;
        r3[1] = 1;

     label2:
        return $n0;

     label3:
        r5 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("data_port_connect");
        $r10 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("address", $r10);
        virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("port", i0);
        r6 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>(r4, r5);
        r3[2] = 1;
        if r6 != null goto label5;

        $n1 = null;
        r3[3] = 1;

     label4:
        return $n1;

     label5:
        r3[4] = 1;

     label6:
        return r4;

     label7:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("JSONException in dataPortConnect");
        r3[5] = 1;
        return null;

        catch org.json.JSONException from label1 to label2 with label7;
        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
    }

    public boolean pasvAccept(java.net.Socket)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.net.Socket r1;
        boolean[][] $r2;
        boolean[] r3;
        org.json.JSONObject r4, r5;
        boolean $z0, $z1, $z2, $z3;
        be.ppareit.swiftp_free.MyLog $r6, $r7, $r10;
        org.json.JSONException $r8, r9;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.net.Socket;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];

     label1:
        r4 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject makeJsonRequest(java.lang.String)>("data_pasv_accept");
        r5 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: org.json.JSONObject sendRequest(java.net.Socket,org.json.JSONObject)>(r1, r4);
        r3[0] = 1;
        if r5 != null goto label3;

        $z0 = 0;
        r3[1] = 1;

     label2:
        return $z0;

     label3:
        $z1 = specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: boolean checkAndPrintJsonError(org.json.JSONObject)>(r5);
        r3[2] = 1;
        if $z1 == 0 goto label5;

        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Error response to data_pasv_accept");
        $z2 = 0;
        r3[3] = 1;

     label4:
        return $z2;

     label5:
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Proxy data_pasv_accept successful");
        $z3 = 1;
        r3[4] = 1;

     label6:
        return $z3;

     label7:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSONException in pasvAccept: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r14);
        r3[5] = 1;
        return 0;

        catch org.json.JSONException from label1 to label2 with label7;
        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
    }

    public java.net.InetAddress getProxyIp()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1;
        java.net.Socket $r3, $r4;
        java.net.InetAddress $r5;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: boolean isAlive()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        $z1 = virtualinvoke $r3.<java.net.Socket: boolean isConnected()>();
        r2[1] = 1;
        if $z1 == 0 goto label1;

        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket commandSocket>;
        $r5 = virtualinvoke $r4.<java.net.Socket: java.net.InetAddress getInetAddress()>();
        r2[2] = 1;
        return $r5;

     label1:
        r2[3] = 1;
        return null;
    }

    private org.json.JSONObject makeJsonRequest(java.lang.String) throws org.json.JSONException
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        org.json.JSONObject r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        $r5 = new org.json.JSONObject;
        specialinvoke $r5.<org.json.JSONObject: void <init>()>();
        r4 = $r5;
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("action", r1);
        r3[0] = 1;
        return r4;
    }

    void persistProxyUsage()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor r4;
        long $l0, $l2;
        byte $b1;
        android.content.Context $r5;
        be.ppareit.swiftp_free.MyLog $r7;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $l0 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        $b1 = $l0 cmp 0L;
        r2[0] = 1;
        if $b1 != 0 goto label1;

        r2[1] = 1;
        return;

     label1:
        $r5 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r3 = virtualinvoke $r5.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("proxy_usage_data", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $l2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("proxy_usage_data", $l2);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Persisted proxy usage to preferences");
        r2[2] = 1;
        return;
    }

    long getPersistedProxyUsage()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.Context $r4;
        long $l0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $r4 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        r3 = virtualinvoke $r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("proxy_usage_data", 0);
        $l0 = interfaceinvoke r3.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("proxy_usage_data", 0L);
        r2[0] = 1;
        return $l0;
    }

    long getProxyUsage()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        long $l0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $l0 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        r2[0] = 1;
        return $l0;
    }

    void incrementProxyUsage(long)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        long l0, l1, $l2, $l3, $l4, $l5, $l6;
        boolean[][] $r1;
        boolean[] r2;
        byte $b7;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        l0 := @parameter0: long;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        l1 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        $l2 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        $l3 = $l2 + l0;
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage> = $l3;
        $l4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: long proxyUsage>;
        $l5 = $l4 % 5000000L;
        $l6 = l1 % 5000000L;
        $b7 = $l5 cmp $l6;
        r2[0] = 1;
        if $b7 >= 0 goto label1;

        virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector: void persistProxyUsage()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public be.ppareit.swiftp_free.server.ProxyConnector$State getProxyState()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState>;
        r2[0] = 1;
        return $r3;
    }

    private void setProxyState(be.ppareit.swiftp_free.server.ProxyConnector$State)
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        be.ppareit.swiftp_free.server.ProxyConnector$State r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        be.ppareit.swiftp_free.MyLog $r5;
        java.lang.String $r8;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        r1 := @parameter0: be.ppareit.swiftp_free.server.ProxyConnector$State;
        $r2 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[22];
        r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState> = r1;
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.MyLog myLog>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy state changed to ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String,boolean)>(3, $r8, 1);
        r3[0] = 1;
        return;
    }

    public static java.lang.String stateToString(be.ppareit.swiftp_free.server.ProxyConnector$State)
    {
        be.ppareit.swiftp_free.server.ProxyConnector$State r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3;
        int[] $r4;
        int $i0, $i1;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @parameter0: be.ppareit.swiftp_free.server.ProxyConnector$State;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        $r4 = <be.ppareit.swiftp_free.server.ProxyConnector$1: int[] $SwitchMap$be$ppareit$swiftp_free$server$ProxyConnector$State>;
        $i0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.ProxyConnector$State: int ordinal()>();
        $i1 = $r4[$i0];
        r2[0] = 1;
        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r5 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034156);
        r2[1] = 1;
        return $r5;

     label2:
        $r6 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034152);
        r2[2] = 1;
        return $r6;

     label3:
        $r7 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034153);
        r2[3] = 1;
        return $r7;

     label4:
        $r8 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034154);
        r2[4] = 1;
        return $r8;

     label5:
        $r9 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034155);
        r2[5] = 1;
        return $r9;

     label6:
        $r10 = virtualinvoke r3.<android.content.Context: java.lang.String getString(int)>(2131034143);
        r2[6] = 1;
        return $r10;
    }

    public java.lang.String getURL()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r8, $r13, $r15, $r17;
        be.ppareit.swiftp_free.server.ProxyConnector$State $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11, $r12, $r14;
        android.content.Context $r16;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyConnector$State proxyState>;
        $r5 = <be.ppareit.swiftp_free.server.ProxyConnector$State: be.ppareit.swiftp_free.server.ProxyConnector$State CONNECTED>;
        r2[0] = 1;
        if $r4 != $r5 goto label1;

        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: java.lang.String getUsername()>();
        r2[1] = 1;
        if r3 == null goto label1;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ftp://");
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String prefix>;
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");
        $r13 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String hostname>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[2] = 1;
        return $r15;

     label1:
        $r16 = staticinvoke <be.ppareit.swiftp_free.Globals: android.content.Context getContext()>();
        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.String getString(int)>(2131034143);
        r2[3] = 1;
        return $r17;
    }

    public java.lang.String getProxyMessage()
    {
        be.ppareit.swiftp_free.server.ProxyConnector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyConnector;
        $r1 = <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyConnector: java.lang.String proxyMessage>;
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRi()>();
        r1 = $r0[26];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;

        $r0 = newmultiarray (boolean)[27][];
        <be.ppareit.swiftp_free.server.ProxyConnector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[33];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[12];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[10];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[10];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[39];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[8];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[4];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[6];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[6];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[6];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[4];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[3];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[3];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[7];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[4];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyConnector", -7727939043208810966L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.ProxyDataSocketFactory extends be.ppareit.swiftp_free.server.DataSocketFactory
{
    private java.net.Socket socket;
    private int proxyListenPort;
    be.ppareit.swiftp_free.server.ProxyConnector proxyConnector;
    java.net.InetAddress clientAddress;
    int clientPort;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<be.ppareit.swiftp_free.server.DataSocketFactory: void <init>()>();
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        r2[0] = 1;
        return;
    }

    private void clearState()
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r6;
        java.net.Socket $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        r2[0] = 1;
        if $r4 == null goto label4;

     label1:
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        virtualinvoke $r5.<java.net.Socket: void close()>();
        r2[1] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        r2[2] = 1;

     label4:
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.InetAddress clientAddress> = null;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort> = 0;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort> = 0;
        r2[3] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.net.InetAddress getPasvIp()
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector r3;
        java.net.InetAddress $r4;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()>();
        r2[0] = 1;
        if r3 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r4 = virtualinvoke r3.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.InetAddress getProxyIp()>();
        r2[2] = 1;
        return $r4;
    }

    public int onPasv()
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r3;
        be.ppareit.swiftp_free.server.ProxyConnector $r4, $r5, $r7;
        be.ppareit.swiftp_free.MyLog $r6, $r8;
        java.net.Socket $r9;
        int $i0, $i1;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        $r4 = staticinvoke <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = $r4;
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r2[0] = 1;
        if $r5 != null goto label1;

        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Unexpected null proxyConnector in onPasv");
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        r2[1] = 1;
        return 0;

     label1:
        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r3 = virtualinvoke $r7.<be.ppareit.swiftp_free.server.ProxyConnector: be.ppareit.swiftp_free.server.ProxyDataSocketInfo pasvListen()>();
        r2[2] = 1;
        if r3 != null goto label2;

        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Null ProxyDataSocketInfo");
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        r2[3] = 1;
        return 0;

     label2:
        $r9 = virtualinvoke r3.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: java.net.Socket getSocket()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket> = $r9;
        $i0 = virtualinvoke r3.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int getRemotePublicPort()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort> = $i0;
        $i1 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int proxyListenPort>;
        r2[4] = 1;
        return $i1;
    }

    public boolean onPort(java.net.InetAddress, int)
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        java.net.InetAddress r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        be.ppareit.swiftp_free.server.ProxyConnector $r4;
        be.ppareit.swiftp_free.MyLog $r5;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        r1 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        specialinvoke r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: void clearState()>();
        $r4 = staticinvoke <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector> = $r4;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.InetAddress clientAddress> = r1;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort> = i0;
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("ProxyDataSocketFactory client port settings stored");
        r3[0] = 1;
        return 1;
    }

    public java.net.Socket onTransfer()
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector $r3, $r6, $r8, $r12;
        be.ppareit.swiftp_free.MyLog $r4, $r7, $r15;
        java.net.Socket $r5, $r10, $r11, $r13, $r14;
        java.net.InetAddress $r9;
        int $i0;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void w(java.lang.String)>("Unexpected null proxyConnector in onTransfer");
        r2[1] = 1;
        return null;

     label1:
        $r5 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        r2[2] = 1;
        if $r5 != null goto label3;

        $r6 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        r2[3] = 1;
        if $r6 != null goto label2;

        $r7 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Unexpected null proxyConnector in onTransfer");
        r2[4] = 1;
        return null;

     label2:
        $r8 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        $r9 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.InetAddress clientAddress>;
        $i0 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: int clientPort>;
        $r10 = virtualinvoke $r8.<be.ppareit.swiftp_free.server.ProxyConnector: java.net.Socket dataPortConnect(java.net.InetAddress,int)>($r9, $i0);
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket> = $r10;
        $r11 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        r2[5] = 1;
        return $r11;

     label3:
        $r12 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.server.ProxyConnector proxyConnector>;
        $r13 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        $z0 = virtualinvoke $r12.<be.ppareit.swiftp_free.server.ProxyConnector: boolean pasvAccept(java.net.Socket)>($r13);
        r2[6] = 1;
        if $z0 == 0 goto label4;

        $r14 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: java.net.Socket socket>;
        r2[7] = 1;
        return $r14;

     label4:
        $r15 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r15.<be.ppareit.swiftp_free.MyLog: void w(java.lang.String)>("proxyConnector pasvAccept failed");
        r2[8] = 1;
        return null;
    }

    public void reportTraffic(long)
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketFactory r0;
        long l0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.ProxyConnector r3;
        be.ppareit.swiftp_free.MyLog $r4;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketFactory;
        l0 := @parameter0: long;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r3 = staticinvoke <be.ppareit.swiftp_free.Globals: be.ppareit.swiftp_free.server.ProxyConnector getProxyConnector()>();
        r2[0] = 1;
        if r3 != null goto label1;

        $r4 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketFactory: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("Can\'t report traffic, null ProxyConnector");
        r2[1] = 1;
        goto label2;

     label1:
        virtualinvoke r3.<be.ppareit.swiftp_free.server.ProxyConnector: void incrementProxyUsage(long)>(l0);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <be.ppareit.swiftp_free.server.ProxyDataSocketFactory: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[9];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyDataSocketFactory", 2357694806399183769L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.ProxyDataSocketInfo extends java.net.Socket
{
    private int remotePublicPort;
    private java.net.Socket socket;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public java.net.Socket getSocket()
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        $r3 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: java.net.Socket socket>;
        r2[0] = 1;
        return $r3;
    }

    public void setSocket(java.net.Socket)
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        java.net.Socket r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        r1 := @parameter0: java.net.Socket;
        $r2 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: java.net.Socket socket> = r1;
        r3[0] = 1;
        return;
    }

    public void <init>(java.net.Socket, int)
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        java.net.Socket r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        r1 := @parameter0: java.net.Socket;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.net.Socket: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort> = i0;
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: java.net.Socket socket> = r1;
        r3[0] = 1;
        return;
    }

    public int getRemotePublicPort()
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort>;
        r2[0] = 1;
        return $i0;
    }

    public void setRemotePublicPort(int)
    {
        be.ppareit.swiftp_free.server.ProxyDataSocketInfo r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.ProxyDataSocketInfo;
        i0 := @parameter0: int;
        $r1 = <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r0.<be.ppareit.swiftp_free.server.ProxyDataSocketInfo: int remotePublicPort> = i0;
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <be.ppareit.swiftp_free.server.ProxyDataSocketInfo: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/ProxyDataSocketInfo", -7216090755577772872L);
        return $r0;
    }
}
public final enum class be.ppareit.swiftp_free.server.SessionThread$Source extends java.lang.Enum
{
    public static final enum be.ppareit.swiftp_free.server.SessionThread$Source LOCAL;
    public static final enum be.ppareit.swiftp_free.server.SessionThread$Source PROXY;
    private static final be.ppareit.swiftp_free.server.SessionThread$Source[] $VALUES;
    private static final boolean[][] $VRc;

    public static be.ppareit.swiftp_free.server.SessionThread$Source[] values()
    {
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.SessionThread$Source[] $r2, $r4;
        java.lang.Object $r3;

        $r0 = <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $r2 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source[] $VALUES>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (be.ppareit.swiftp_free.server.SessionThread$Source[]) $r3;
        r1[0] = 1;
        return $r4;
    }

    public static be.ppareit.swiftp_free.server.SessionThread$Source valueOf(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        be.ppareit.swiftp_free.server.SessionThread$Source $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "be/ppareit/swiftp_free/server/SessionThread$Source", r0);
        $r4 = (be.ppareit.swiftp_free.server.SessionThread$Source) $r3;
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int)
    {
        be.ppareit.swiftp_free.server.SessionThread$Source r0;
        java.lang.String r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread$Source;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        be.ppareit.swiftp_free.server.SessionThread$Source $r2, $r3, $r5, $r6;
        be.ppareit.swiftp_free.server.SessionThread$Source[] $r4;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRi()>();
        r1 = $r0[3];
        $r2 = new be.ppareit.swiftp_free.server.SessionThread$Source;
        specialinvoke $r2.<be.ppareit.swiftp_free.server.SessionThread$Source: void <init>(java.lang.String,int)>("LOCAL", 0);
        <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source LOCAL> = $r2;
        $r3 = new be.ppareit.swiftp_free.server.SessionThread$Source;
        specialinvoke $r3.<be.ppareit.swiftp_free.server.SessionThread$Source: void <init>(java.lang.String,int)>("PROXY", 1);
        <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source PROXY> = $r3;
        $r4 = newarray (be.ppareit.swiftp_free.server.SessionThread$Source)[2];
        $r5 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source LOCAL>;
        $r4[0] = $r5;
        $r6 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source PROXY>;
        $r4[1] = $r6;
        <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source[] $VALUES> = $r4;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.server.SessionThread$Source: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/SessionThread$Source", 8394644511464601078L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.SessionThread extends java.lang.Thread
{
    protected boolean shouldExit;
    protected java.net.Socket cmdSocket;
    protected be.ppareit.swiftp_free.MyLog myLog;
    protected java.nio.ByteBuffer buffer;
    protected boolean pasvMode;
    protected boolean binaryMode;
    protected be.ppareit.swiftp_free.server.Account account;
    protected boolean authenticated;
    protected java.io.File workingDir;
    protected java.net.Socket dataSocket;
    protected java.io.File renameFrom;
    protected be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory;
    java.io.OutputStream dataOutputStream;
    private boolean sendWelcomeBanner;
    protected java.lang.String encoding;
    protected be.ppareit.swiftp_free.server.SessionThread$Source source;
    int authFails;
    public static int MAX_AUTH_FAILS;
    static int numNulls;
    private static final boolean[][] $VRc;

    public boolean sendViaDataSocket(java.lang.String)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.lang.String r1, $r5, $r9, $r11;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4;
        be.ppareit.swiftp_free.MyLog $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r10;
        int $i0;
        boolean $z0;
        java.io.UnsupportedEncodingException $r12, r13;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];

     label1:
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r5);
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using data connection encoding: ");
        $r9 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>($r11);
        $i0 = lengthof r4;
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int)>(r4, $i0);
        r3[0] = 1;

     label2:
        return $z0;

     label3:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(6, "Unsupported encoding for data socket send");
        r3[1] = 1;
        return 0;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public boolean sendViaDataSocket(byte[], int)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        byte[] r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $z0 = virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendViaDataSocket(byte[],int,int)>(r1, 0, i0);
        r3[0] = 1;
        return $z0;
    }

    public boolean sendViaDataSocket(byte[], int, int)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        byte[] r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.IOException r4, $r8;
        java.io.OutputStream $r5, $r7;
        be.ppareit.swiftp_free.MyLog $r6, $r9, $r10;
        java.lang.String $r11;
        be.ppareit.swiftp_free.server.DataSocketFactory $r12;
        long $l2;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream>;
        r3[0] = 1;
        if $r5 != null goto label1;

        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Can\'t send via null dataOutputStream");
        r3[1] = 1;
        return 0;

     label1:
        r3[2] = 1;
        if i1 != 0 goto label2;

        r3[3] = 1;
        return 1;

     label2:
        $r7 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream>;
        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);
        r3[4] = 1;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r4 = $r8;
        $r9 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Couldn\'t write output stream for data socket");
        $r10 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r11 = virtualinvoke r4.<java.io.IOException: java.lang.String toString()>();
        virtualinvoke $r10.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, $r11);
        r3[5] = 1;
        return 0;

     label5:
        $r12 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $l2 = (long) i1;
        virtualinvoke $r12.<be.ppareit.swiftp_free.server.DataSocketFactory: void reportTraffic(long)>($l2);
        r3[6] = 1;
        return 1;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public int receiveFromDataSocket(byte[])
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        byte[] r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.InputStream r4;
        int i0, $i1, $i2;
        java.io.IOException r5, $r11;
        java.net.Socket $r6, $r8, $r10;
        be.ppareit.swiftp_free.MyLog $r7, $r9, $r12;
        boolean $z0;
        byte $b3;
        be.ppareit.swiftp_free.server.DataSocketFactory $r13;
        long $l4;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: byte[];
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        r3[0] = 1;
        if $r6 != null goto label1;

        $r7 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Can\'t receive from null dataSocket");
        r3[1] = 1;
        return -2;

     label1:
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        $z0 = virtualinvoke $r8.<java.net.Socket: boolean isConnected()>();
        r3[2] = 1;
        if $z0 != 0 goto label2;

        $r9 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r9.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Can\'t receive from unconnected socket");
        r3[3] = 1;
        return -2;

     label2:
        $r10 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        r4 = virtualinvoke $r10.<java.net.Socket: java.io.InputStream getInputStream()>();
        r3[4] = 1;

     label3:
        $i1 = lengthof r1;
        $i2 = virtualinvoke r4.<java.io.InputStream: int read(byte[],int,int)>(r1, 0, $i1);
        i0 = $i2;
        r3[5] = 1;
        if $i2 != 0 goto label4;

        r3[6] = 1;
        goto label3;

     label4:
        r3[7] = 1;
        if i0 != -1 goto label6;

        $b3 = -1;
        r3[8] = 1;

     label5:
        return $b3;

     label6:
        r3[9] = 1;
        goto label8;

     label7:
        $r11 := @caughtexception;
        r5 = $r11;
        $r12 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r12.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Error reading data socket");
        r3[10] = 1;
        return 0;

     label8:
        $r13 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $l4 = (long) i0;
        virtualinvoke $r13.<be.ppareit.swiftp_free.server.DataSocketFactory: void reportTraffic(long)>($l4);
        r3[11] = 1;
        return i0;

        catch java.io.IOException from label2 to label5 with label7;
    }

    public int onPasv()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.DataSocketFactory $r3;
        int $i0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $i0 = virtualinvoke $r3.<be.ppareit.swiftp_free.server.DataSocketFactory: int onPasv()>();
        r2[0] = 1;
        return $i0;
    }

    public boolean onPort(java.net.InetAddress, int)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.net.InetAddress r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        be.ppareit.swiftp_free.server.DataSocketFactory $r4;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $z0 = virtualinvoke $r4.<be.ppareit.swiftp_free.server.DataSocketFactory: boolean onPort(java.net.InetAddress,int)>(r1, i0);
        r3[0] = 1;
        return $z0;
    }

    public java.net.InetAddress getDataSocketPasvIp()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;
        java.net.InetAddress $r4;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        $r4 = virtualinvoke $r3.<java.net.Socket: java.net.InetAddress getLocalAddress()>();
        r2[0] = 1;
        return $r4;
    }

    public boolean startUsingDataSocket()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r10;
        be.ppareit.swiftp_free.server.DataSocketFactory $r4;
        java.net.Socket $r5, $r6, $r8;
        be.ppareit.swiftp_free.MyLog $r7, $r11;
        boolean $z0, $z1;
        java.io.OutputStream $r9;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];

     label1:
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $r5 = virtualinvoke $r4.<be.ppareit.swiftp_free.server.DataSocketFactory: java.net.Socket onTransfer()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = $r5;
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        r2[0] = 1;
        if $r6 != null goto label3;

        $r7 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "dataSocketFactory.onTransfer() returned null");
        $z0 = 0;
        r2[1] = 1;

     label2:
        return $z0;

     label3:
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        $r9 = virtualinvoke $r8.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream> = $r9;
        $z1 = 1;
        r2[2] = 1;

     label4:
        return $z1;

     label5:
        $r10 := @caughtexception;
        r3 = $r10;
        $r11 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "IOException getting OutputStream for data socket");
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = null;
        r2[3] = 1;
        return 0;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public void quit()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void d(java.lang.String)>("SessionThread told to quit");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        r2[0] = 1;
        return;
    }

    public void closeDataSocket()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r7, $r10, r11;
        be.ppareit.swiftp_free.MyLog $r4;
        java.io.OutputStream $r5, $r6;
        java.net.Socket $r8, $r9;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r4.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Closing data socket");
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream>;
        r2[0] = 1;
        if $r5 == null goto label5;

     label1:
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream>;
        virtualinvoke $r6.<java.io.OutputStream: void close()>();
        r2[1] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        r2[2] = 1;

     label4:
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream> = null;
        r2[3] = 1;

     label5:
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        r2[4] = 1;
        if $r8 == null goto label9;

     label6:
        $r9 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        virtualinvoke $r9.<java.net.Socket: void close()>();
        r2[5] = 1;

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;
        r11 = $r10;
        r2[6] = 1;

     label9:
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = null;
        r2[7] = 1;
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label8;
    }

    protected java.net.InetAddress getLocalAddress()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;
        java.net.InetAddress $r4;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        $r4 = virtualinvoke $r3.<java.net.Socket: java.net.InetAddress getLocalAddress()>();
        r2[0] = 1;
        return $r4;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.BufferedReader r3, $r12;
        java.lang.String r4, $r8, $r11, $r20;
        be.ppareit.swiftp_free.MyLog $r5, $r16, $r21, $r24;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r17, $r18, $r19;
        java.io.InputStreamReader $r13;
        java.net.Socket $r14;
        java.io.InputStream $r15;
        java.io.IOException $r22, r23;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r5.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "SessionThread started");
        $z0 = r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendWelcomeBanner>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("220 SwiFTP ");
        $r8 = staticinvoke <be.ppareit.swiftp_free.Util: java.lang.String getVersion()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ready\r\n");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeString(java.lang.String)>($r11);
        r2[1] = 1;

     label1:
        $r12 = new java.io.BufferedReader;
        $r13 = new java.io.InputStreamReader;
        $r14 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        $r15 = virtualinvoke $r14.<java.net.Socket: java.io.InputStream getInputStream()>();
        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r15);
        specialinvoke $r12.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r13, 8192);
        r3 = $r12;
        r2[2] = 1;

     label2:
        r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();
        r2[3] = 1;
        if r4 == null goto label3;

        staticinvoke <be.ppareit.swiftp_free.FTPServerService: void writeMonitor(boolean,java.lang.String)>(1, r4);
        $r16 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received line from client: ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, $r20);
        staticinvoke <be.ppareit.swiftp_free.server.FtpCmd: void dispatchCommand(be.ppareit.swiftp_free.server.SessionThread,java.lang.String)>(r0, r4);
        r2[4] = 1;
        goto label4;

     label3:
        $r21 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r21.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("readLine gave null, quitting");
        r2[5] = 1;
        goto label5;

     label4:
        r2[6] = 1;
        goto label2;

     label5:
        r2[7] = 1;

     label6:
        goto label8;

     label7:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r24.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Connection was dropped");
        r2[8] = 1;

     label8:
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        r2[9] = 1;
        return;

        catch java.io.IOException from label1 to label6 with label7;
    }

    public static boolean compareLen(byte[], byte[], int)
    {
        byte[] r0, r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        byte $b2, $b3;

        r0 := @parameter0: byte[];
        r1 := @parameter1: byte[];
        i0 := @parameter2: int;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        i1 = 0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i1 >= i0 goto label3;

        $b2 = r0[i1];
        $b3 = r1[i1];
        r3[2] = 1;
        if $b2 == $b3 goto label2;

        r3[3] = 1;
        return 0;

     label2:
        i1 = i1 + 1;
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return 1;
    }

    public void closeSocket()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r6;
        java.net.Socket $r4, $r5;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        r2[0] = 1;
        if $r4 != null goto label1;

        r2[1] = 1;
        return;

     label1:
        $r5 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        virtualinvoke $r5.<java.net.Socket: void close()>();
        r2[2] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        r2[3] = 1;

     label4:
        r2[4] = 1;
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeBytes(byte[])
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        byte[] r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1;
        java.io.BufferedOutputStream r4, $r5;
        java.net.Socket $r6;
        java.io.OutputStream $r7;
        be.ppareit.swiftp_free.server.DataSocketFactory $r8;
        long $l2;
        java.io.IOException $r9, r10;
        be.ppareit.swiftp_free.MyLog $r11;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: byte[];
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];

     label1:
        $r5 = new java.io.BufferedOutputStream;
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        $r7 = virtualinvoke $r6.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        $i0 = <be.ppareit.swiftp_free.Defaults: int dataChunkSize>;
        specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r7, $i0);
        r4 = $r5;
        virtualinvoke r4.<java.io.BufferedOutputStream: void write(byte[])>(r1);
        virtualinvoke r4.<java.io.BufferedOutputStream: void flush()>();
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory>;
        $i1 = lengthof r1;
        $l2 = (long) $i1;
        virtualinvoke $r8.<be.ppareit.swiftp_free.server.DataSocketFactory: void reportTraffic(long)>($l2);
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r11.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Exception writing socket");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void closeSocket()>();
        r3[1] = 1;
        return;

     label4:
        r3[2] = 1;
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeString(java.lang.String)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.lang.String r1, $r6, $r11, $r13;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4;
        java.io.UnsupportedEncodingException r5, $r7;
        be.ppareit.swiftp_free.MyLog $r8;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[15];
        staticinvoke <be.ppareit.swiftp_free.FTPServerService: void writeMonitor(boolean,java.lang.String)>(0, r1);

     label1:
        $r6 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r6);
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r5 = $r7;
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported encoding: ");
        $r11 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void e(java.lang.String)>($r13);
        r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();
        r3[1] = 1;

     label4:
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void writeBytes(byte[])>(r4);
        r3[2] = 1;
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    protected java.net.Socket getSocket()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket>;
        r2[0] = 1;
        return $r3;
    }

    public be.ppareit.swiftp_free.server.Account getAccount()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.server.Account $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account>;
        r2[0] = 1;
        return $r3;
    }

    public void setAccount(be.ppareit.swiftp_free.server.Account)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        be.ppareit.swiftp_free.server.Account r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: be.ppareit.swiftp_free.server.Account;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account> = r1;
        r3[0] = 1;
        return;
    }

    public boolean isPasvMode()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $z0 = r0.<be.ppareit.swiftp_free.server.SessionThread: boolean pasvMode>;
        r2[0] = 1;
        return $z0;
    }

    public void <init>(java.net.Socket, be.ppareit.swiftp_free.server.DataSocketFactory, be.ppareit.swiftp_free.server.SessionThread$Source)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.net.Socket r1;
        be.ppareit.swiftp_free.server.DataSocketFactory r2;
        be.ppareit.swiftp_free.server.SessionThread$Source r3, $r12;
        boolean[][] $r4;
        boolean[] r5;
        be.ppareit.swiftp_free.MyLog $r6;
        java.lang.Class $r7;
        java.lang.String $r8;
        int $i0;
        java.nio.ByteBuffer $r9;
        be.ppareit.swiftp_free.server.Account $r10;
        java.io.File $r11;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.net.Socket;
        r2 := @parameter1: be.ppareit.swiftp_free.server.DataSocketFactory;
        r3 := @parameter2: be.ppareit.swiftp_free.server.SessionThread$Source;
        $r4 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r5 = $r4[20];
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean shouldExit> = 0;
        $r6 = new be.ppareit.swiftp_free.MyLog;
        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r6.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r8);
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog> = $r6;
        $i0 = staticinvoke <be.ppareit.swiftp_free.Defaults: int getInputBufferSize()>();
        $r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.nio.ByteBuffer buffer> = $r9;
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean pasvMode> = 0;
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean binaryMode> = 0;
        $r10 = new be.ppareit.swiftp_free.server.Account;
        specialinvoke $r10.<be.ppareit.swiftp_free.server.Account: void <init>()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.Account account> = $r10;
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean authenticated> = 0;
        $r11 = staticinvoke <be.ppareit.swiftp_free.Globals: java.io.File getChrootDir()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File workingDir> = $r11;
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = null;
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File renameFrom> = null;
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.OutputStream dataOutputStream> = null;
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding> = "UTF-8";
        r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails> = 0;
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket cmdSocket> = r1;
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.SessionThread$Source source> = r3;
        r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.DataSocketFactory dataSocketFactory> = r2;
        $r12 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source LOCAL>;
        r5[0] = 1;
        if r3 != $r12 goto label1;

        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendWelcomeBanner> = 1;
        r5[1] = 1;
        goto label2;

     label1:
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean sendWelcomeBanner> = 0;
        r5[2] = 1;

     label2:
        r5[3] = 1;
        return;
    }

    public static java.nio.ByteBuffer stringToBB(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        byte[] $r3;
        java.nio.ByteBuffer $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();
        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r3);
        r2[0] = 1;
        return $r4;
    }

    public boolean isBinaryMode()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $z0 = r0.<be.ppareit.swiftp_free.server.SessionThread: boolean binaryMode>;
        r2[0] = 1;
        return $z0;
    }

    public void setBinaryMode(boolean)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        z0 := @parameter0: boolean;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean binaryMode> = z0;
        r2[0] = 1;
        return;
    }

    public boolean isAuthenticated()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $z0 = r0.<be.ppareit.swiftp_free.server.SessionThread: boolean authenticated>;
        r2[0] = 1;
        return $z0;
    }

    public void authAttempt(boolean)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        be.ppareit.swiftp_free.MyLog $r3, $r7, $r14;
        be.ppareit.swiftp_free.server.SessionThread$Source $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        z0 := @parameter0: boolean;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        r2[0] = 1;
        if z0 == 0 goto label1;

        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r3.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "Authentication complete");
        r0.<be.ppareit.swiftp_free.server.SessionThread: boolean authenticated> = 1;
        r2[1] = 1;
        goto label4;

     label1:
        $r4 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.server.SessionThread$Source source>;
        $r5 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source PROXY>;
        r2[2] = 1;
        if $r4 != $r5 goto label2;

        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void quit()>();
        r2[3] = 1;
        goto label3;

     label2:
        $i0 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails>;
        $i1 = $i0 + 1;
        r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails> = $i1;
        $r7 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Auth failed: ");
        $i2 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $i3 = <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS>;
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>($r13);
        r2[4] = 1;

     label3:
        $i4 = r0.<be.ppareit.swiftp_free.server.SessionThread: int authFails>;
        $i5 = <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS>;
        r2[5] = 1;
        if $i4 <= $i5 goto label4;

        $r14 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r14.<be.ppareit.swiftp_free.MyLog: void i(java.lang.String)>("Too many auth fails, quitting session");
        virtualinvoke r0.<be.ppareit.swiftp_free.server.SessionThread: void quit()>();
        r2[6] = 1;

     label4:
        r2[7] = 1;
        return;
    }

    public java.io.File getWorkingDir()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[26];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File workingDir>;
        r2[0] = 1;
        return $r3;
    }

    public void setWorkingDir(java.io.File)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.io.File r1, $r5, $r6;
        boolean[][] $r2;
        boolean[] r3;
        java.io.IOException r4, $r7;
        be.ppareit.swiftp_free.MyLog $r8;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.io.File;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[27];

     label1:
        $r5 = virtualinvoke r1.<java.io.File: java.io.File getCanonicalFile()>();
        $r6 = virtualinvoke $r5.<java.io.File: java.io.File getAbsoluteFile()>();
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File workingDir> = $r6;
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r4 = $r7;
        $r8 = r0.<be.ppareit.swiftp_free.server.SessionThread: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r8.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "SessionThread canonical error");
        r3[1] = 1;

     label4:
        r3[2] = 1;
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.net.Socket getDataSocket()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket>;
        r2[0] = 1;
        return $r3;
    }

    public void setDataSocket(java.net.Socket)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.net.Socket r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.net.Socket;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[29];
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.net.Socket dataSocket> = r1;
        r3[0] = 1;
        return;
    }

    public java.io.File getRenameFrom()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File renameFrom>;
        r2[0] = 1;
        return $r3;
    }

    public void setRenameFrom(java.io.File)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.io.File r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.io.File;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[31];
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.io.File renameFrom> = r1;
        r3[0] = 1;
        return;
    }

    public java.lang.String getEncoding()
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        $r1 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        $r3 = r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding>;
        r2[0] = 1;
        return $r3;
    }

    public void setEncoding(java.lang.String)
    {
        be.ppareit.swiftp_free.server.SessionThread r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: be.ppareit.swiftp_free.server.SessionThread;
        r1 := @parameter0: java.lang.String;
        $r2 = <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();

     label0:
        r3 = $r2[33];
        r0.<be.ppareit.swiftp_free.server.SessionThread: java.lang.String encoding> = r1;
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRi()>();
        r1 = $r0[34];
        <be.ppareit.swiftp_free.server.SessionThread: int MAX_AUTH_FAILS> = 3;
        <be.ppareit.swiftp_free.server.SessionThread: int numNulls> = 0;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;

        $r0 = newmultiarray (boolean)[35][];
        <be.ppareit.swiftp_free.server.SessionThread: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[2];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[12];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[8];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[10];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[6];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[5];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[3];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[3];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[4];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[8];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[3];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[1];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[1];
        $r0[34] = $r35;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/SessionThread", 2689561697625779971L);
        return $r0;
    }
}
public class be.ppareit.swiftp_free.server.TcpListener extends java.lang.Thread
{
    java.net.ServerSocket listenSocket;
    be.ppareit.swiftp_free.FTPServerService ftpServerService;
    be.ppareit.swiftp_free.MyLog myLog;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.net.ServerSocket, be.ppareit.swiftp_free.FTPServerService)
    {
        be.ppareit.swiftp_free.server.TcpListener r0;
        java.net.ServerSocket r1;
        be.ppareit.swiftp_free.FTPServerService r2;
        boolean[][] $r3;
        boolean[] r4;
        be.ppareit.swiftp_free.MyLog $r5;
        java.lang.Class $r6;
        java.lang.String $r7;

        r0 := @this: be.ppareit.swiftp_free.server.TcpListener;
        r1 := @parameter0: java.net.ServerSocket;
        r2 := @parameter1: be.ppareit.swiftp_free.FTPServerService;
        $r3 = <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        $r5 = new be.ppareit.swiftp_free.MyLog;
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r5.<be.ppareit.swiftp_free.MyLog: void <init>(java.lang.String)>($r7);
        r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.MyLog myLog> = $r5;
        r0.<be.ppareit.swiftp_free.server.TcpListener: java.net.ServerSocket listenSocket> = r1;
        r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.FTPServerService ftpServerService> = r2;
        r4[0] = 1;
        return;
    }

    public void quit()
    {
        be.ppareit.swiftp_free.server.TcpListener r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r5;
        java.net.ServerSocket $r4;
        be.ppareit.swiftp_free.MyLog $r6;

        r0 := @this: be.ppareit.swiftp_free.server.TcpListener;
        $r1 = <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];

     label1:
        $r4 = r0.<be.ppareit.swiftp_free.server.TcpListener: java.net.ServerSocket listenSocket>;
        virtualinvoke $r4.<java.net.ServerSocket: void close()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r6.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Exception closing TcpListener listenSocket");
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void run()
    {
        be.ppareit.swiftp_free.server.TcpListener r0;
        boolean[][] $r1;
        boolean[] r2;
        java.net.Socket r3;
        be.ppareit.swiftp_free.server.NormalDataSocketFactory $r4;
        be.ppareit.swiftp_free.server.SessionThread r5, $r8;
        java.net.ServerSocket $r6;
        be.ppareit.swiftp_free.MyLog $r7, $r13;
        be.ppareit.swiftp_free.server.SessionThread$Source $r9;
        be.ppareit.swiftp_free.FTPServerService $r10;
        java.lang.Exception $r11, r12;

        r0 := @this: be.ppareit.swiftp_free.server.TcpListener;
        $r1 = <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];

     label1:
        $r6 = r0.<be.ppareit.swiftp_free.server.TcpListener: java.net.ServerSocket listenSocket>;
        r3 = virtualinvoke $r6.<java.net.ServerSocket: java.net.Socket accept()>();
        $r7 = r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r7.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(4, "New connection, spawned thread");
        $r8 = new be.ppareit.swiftp_free.server.SessionThread;
        $r4 = new be.ppareit.swiftp_free.server.NormalDataSocketFactory;
        specialinvoke $r4.<be.ppareit.swiftp_free.server.NormalDataSocketFactory: void <init>()>();
        $r9 = <be.ppareit.swiftp_free.server.SessionThread$Source: be.ppareit.swiftp_free.server.SessionThread$Source LOCAL>;
        specialinvoke $r8.<be.ppareit.swiftp_free.server.SessionThread: void <init>(java.net.Socket,be.ppareit.swiftp_free.server.DataSocketFactory,be.ppareit.swiftp_free.server.SessionThread$Source)>(r3, $r4, $r9);
        r5 = $r8;
        virtualinvoke r5.<be.ppareit.swiftp_free.server.SessionThread: void start()>();
        $r10 = r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.FTPServerService ftpServerService>;
        virtualinvoke $r10.<be.ppareit.swiftp_free.FTPServerService: void registerSessionThread(be.ppareit.swiftp_free.server.SessionThread)>(r5);
        r2[0] = 1;
        goto label1;

     label2:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = r0.<be.ppareit.swiftp_free.server.TcpListener: be.ppareit.swiftp_free.MyLog myLog>;
        virtualinvoke $r13.<be.ppareit.swiftp_free.MyLog: void l(int,java.lang.String)>(3, "Exception in TcpListener");
        r2[1] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <be.ppareit.swiftp_free.server.TcpListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[2];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "be/ppareit/swiftp_free/server/TcpListener", 5864127120643295426L);
        return $r0;
    }
}
