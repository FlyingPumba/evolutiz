Benchmarks

Applied concurrency fixes
=========================
@ revno 120 of branch trunk/

Real device ADP1 on Android 1.5 ~55 notes
cold average: 5050ms
hot average:  5350ms
responsiveness: ui refreshes but scrolling / opening notes is slow until parsing is over

Real device ADP1 on Android 1.1 ~55 notes
cold average: 5300ms
hot average:  4545ms
responsiveness: ui refreshes but scrolling / opening notes is slow until parsing is over

Emulator 1.1 on linux 55 demo notes
cold average: 7600ms
hot average:  7700ms

Emulator 1.5 on linux 55 demo notes
cold average: 9150ms
hot average:  8900ms


Disabled date parsing on last-change-date (joda time xml timeformat)
====================================================================
@ revno 117 of branch trunk/

Real device ADP1 on Android 1.1 ~55 notes
cold average: 5100ms
hot average:  4600ms
responsiveness: ui refreshes but scrolling / opening notes is slow until parsing is over

Emulator 1.1 on linux 55 demo notes
cold average: 8100ms
hot average:  8000ms

Emulator 1.5 on linux 55 demo notes
cold average: 9100ms
hot average:  8700ms


Hard-coded 8k buffer in AsyncNoteLoaderAndParser's BufferedReader
=================================================================
@ revno 114 of branch trunk/
applying patch benchmark-r101.patch

Fixed Thread Pool (pool size 1)
real device ADP1 on Android 1.1 ~55 notes
cold average: 11000ms
hot average:   5000ms
responsiveness: ui refreshes but scrolling / opening notes is slow

Fixed Thread Pool (pool size 1)
emulator 1.1 on linux 55 demo notes
cold average: 12800ms
hot average:   8200ms

Fixed Thread Pool (pool size 1)
emulator 1.5 on linux 55 demo notes
cold average: 14000ms
hot average:   9500ms

Fixes to concurrency, is there any performance regression?
==========================================================
Not really but the fixes were not merged anyways, waiting for confirmation.

== SDK 1.5r2 ==
@ revno 107 of branch trunk/
applying patch benchmark-r101.patch

Fixed Thread Pool (pool size 1)
real device ADP1 on Android 1.1 ~55 notes
cold average: 13000ms
hot average:   8000ms
responsiveness: ui refreshes but scrolling / opening notes is slow

Executor service launching worker threads (AsyncNoteLoaderAndParser)
====================================================================
@ revno 95 of branch threading-improvements
applying patch benchmark-r84.patch

== SDK 1.0r1 ==

Fixed Thread Pool (pool size 3)
4 demo notes (emulator on Windows)
cold average: 4400ms
hot average:   750ms

50 demo notes (emulator on Windows)
cold average: 9000ms
hot average:  6400ms

Fixed Thread Pool (pool size 5)
4 demo notes (emulator on Windows)
cold average: 3500ms
hot average:   600ms

50 demo notes (emulator on Windows)
cold average: 10000ms
hot average:   6400ms

Cached Thread Pool (reusable threads)
4 demo notes (emulator on Windows)
cold average: 4200ms
hot average:   600ms

50 demo notes (emulator on Windows)
cold average: 10048ms
hot average:   6300ms

Looking at the traceview traces, the usage pattern of the fixed thread is 
better than the cached thread pool (which spawns almost 50 threads anyways)  

== SDK 1.1r1 ==

Fixed Thread Pool (pool size 1)
real device ADP1 ~52 notes
cold average: 16000ms
hot average:   8150ms
responsiveness: ui refreshes but scrolling / opening notes is too slow

Fixed Thread Pool (pool size 2)
real device ADP1 ~52 notes
cold average: 13000ms
hot average:   7250ms
responsiveness: ui refreshes but scrolling / opening notes is too slow

Before here, ui was completely blacked out while loading the notes due to too many threads being launched 

Runnable NoteBuilder instead of a DAO
=====================================
@ revno 91 of branch threading-improvements
applying patch benchmark-r84.patch

4 demo notes (emulator on Windows)
cold average: 3400ms
hot average:   550ms

50 demo notes (emulator on Windows)
cold average: 13000ms
hot average:   6800ms

No temporary string, read file from XML parser
==============================================
@ revno 88 of branch threading-improvements
applying patch benchmark-r84.patch

4 demo notes (emulator on Windows)
cold average: 3936ms
hot average:   800ms

50 demo notes (emulator on Windows)
cold average: 9300ms
hot average:  6400ms

IO and parsing done in one thread per file
==========================================
@ revno 86 of branch threading-improvements
applying patch benchmark-r84.patch

4 demo notes (emulator on Windows)
cold average: 3541ms
hot average:   700ms

50 demo notes (emulator on Windows)
cold average: 10093ms
hot average:   6320ms

As of 0.1.0 release
===================
@ revno 84 of branch threading-improvements
applying patch benchmark-r84.patch

4 demo notes (emulator on Windows)
cold average: 4150ms
hot average:   800ms

50 demo notes (emulator on Windows)
cold average: 10880ms
hot average:   6800ms
