Buildfile: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/build_acteve.xml

emma:

-set-mode-check:

-set-debug-files:

-check-env:
 [checkenv] Android SDK Tools Revision 23.0.2
 [checkenv] Installed at /home/vagrant/android-sdk-linux

-setup:
     [echo] Project Name: main
  [gettype] Project Type: Self-Tested Application

-set-debug-mode:

-debug-obfuscation-check:

-pre-build:

-build-setup:
[getbuildtools] Using latest Build Tools: 20.0.0
     [echo] Resolving Build Target for main...
[gettarget] Project Target:   Android 2.3.3
[gettarget] API level:        10
     [echo] ----------
     [echo] Creating output directories if needed...
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/rsObj
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/rsLibs
     [echo] ----------
     [echo] Resolving Dependencies for main...
[dependency] Library dependencies:
[dependency] No Libraries
[dependency] 
[dependency] ------------------
[dependency] API<=15: Adding annotations.jar to the classpath.
     [echo] ----------
     [echo] Building Libraries with 'instrument'...
   [subant] No sub-builds to iterate on

-code-gen:
[mergemanifest] No changes in the AndroidManifest files.
     [echo] Handling aidl files...
     [aidl] Found 2 AIDL files.
     [aidl] No AIDL files to compile.
     [echo] ----------
     [echo] Handling RenderScript files...
     [echo] ----------
     [echo] Handling Resources...
     [aapt] Found new input file
     [aapt] Generating resource IDs...
     [echo] ----------
     [echo] Handling BuildConfig class...
[buildconfig] No need to generate new BuildConfig.

-pre-compile:

-compile:
    [javac] Compiling 1 source file to /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/classes
     [echo] Instrumenting classes from /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/classes...

-post-compile:
   [delete] Deleting: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/original.jar
   [delete] Deleting: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/instrumented.jar
      [jar] Building jar: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/original.jar

instrument:
     [java] a3t.in.jars=/vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/original.jar
     [java] a3t.out.jar=/vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/instrumented.jar
     [java] a3t.lib.jars=/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar
     [java] a3t.inputmeths.file=null
     [java] a3t.modelmeths.file=null
     [java] a3t.out.dir=/vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t
     [java] a3t.sdk.dir=/home/vagrant/tools/acteve/a3t_sdk (SDK if null)
     [java] a3t.rw.kind=ID_FIELD_WRITE
     [java] a3t.whiteflds.file=null
     [java] a3t.blackflds.file=null
     [java] a3t.whitemeths.file=null
     [java] a3t.instrflds.all=false
     [java] SHAUVIK config.inJars=/vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/original.jar
     [java] SHAUVIK config.libJars=/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _neg(acteve.symbolic.integer.Expression)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_3;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_2, _sym_tmp_1;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_3 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         _sym_tmp_2 = interfaceinvoke _sym_tmp_3.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _neg()>();
     [java]         return _sym_tmp_2;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_4;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_3, _sym_tmp_1;
     [java]         int _sym_tmp_2;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_4 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         _sym_tmp_3 = interfaceinvoke _sym_tmp_4.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _cast(int)>(_sym_tmp_2);
     [java]         return _sym_tmp_3;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, java.lang.Object, java.lang.Object)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         java.lang.Object _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: java.lang.Object;
     [java]         _sym_tmp_4 := @parameter3: java.lang.Object;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, java.lang.Object, java.lang.Object)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         java.lang.Object _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: java.lang.Object;
     [java]         _sym_tmp_4 := @parameter3: java.lang.Object;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.LongExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.LongExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.LongExpression: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int[], int, int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_6, _sym_tmp_5;
     [java]         int[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: int[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.IntegerArrayConstant: acteve.symbolic.array.IntegerArrayConstant get(int[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         int[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.IntegerArrayConstant: acteve.symbolic.array.IntegerArrayConstant get(int[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, short[], int, short)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         short _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         short[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: short[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: short;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.ShortArrayConstant: acteve.symbolic.array.ShortArrayConstant get(short[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, short[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         short[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: short[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.ShortArrayConstant: acteve.symbolic.array.ShortArrayConstant get(short[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, char[], int, char)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         char _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         char[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: char[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: char;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.CharArrayConstant: acteve.symbolic.array.CharArrayConstant get(char[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, char[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         char[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: char[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.CharArrayConstant: acteve.symbolic.array.CharArrayConstant get(char[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, byte[], int, byte)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         byte _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         byte[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: byte[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: byte;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.ByteArrayConstant: acteve.symbolic.array.ByteArrayConstant get(byte[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, byte[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         byte[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: byte[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.ByteArrayConstant: acteve.symbolic.array.ByteArrayConstant get(byte[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, boolean[], int, boolean)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         boolean _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         boolean[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: boolean[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: boolean;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.BooleanArrayConstant: acteve.symbolic.array.BooleanArrayConstant get(boolean[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, boolean[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         boolean[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: boolean[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.BooleanArrayConstant: acteve.symbolic.array.BooleanArrayConstant get(boolean[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long[], int, long)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         long[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: long[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.LongArrayConstant: acteve.symbolic.array.LongArrayConstant get(long[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.LongArrayConstant: acteve.symbolic.array.LongArrayConstant get(long[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float[], int, float)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         float[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: float[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.FloatArrayConstant: acteve.symbolic.array.FloatArrayConstant get(float[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         float[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.FloatArrayConstant: acteve.symbolic.array.FloatArrayConstant get(float[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double[], int, double)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         double[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: double[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.DoubleArrayConstant: acteve.symbolic.array.DoubleArrayConstant get(double[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         double[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.DoubleArrayConstant: acteve.symbolic.array.DoubleArrayConstant get(double[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_3;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_2, _sym_tmp_1;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_3 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         _sym_tmp_2 = virtualinvoke _sym_tmp_3.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _alen()>();
     [java]         return _sym_tmp_2;
     [java]     }
     [java] SHAUVIK: Soot args-w -p cg off -keep-line-number -keep-bytecode-offset -dynamic-class acteve.symbolic.Util -soot-classpath /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/original.jar:/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar -dynamic-package acteve.symbolic.integer. -dynamic-package models. -outjar -d /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/instrumented.jar -O -validate acteve.symbolic.DummyMain
     [java] Soot started on Sun Nov 09 05:58:09 UTC 2014
     [java] a2dp.Vol.ALauncher
     [java] a2dp.Vol.AppChooser$1
     [java] a2dp.Vol.AppChooser$2
     [java] a2dp.Vol.AppChooser$3
     [java] a2dp.Vol.AppChooser$4
     [java] a2dp.Vol.AppChooser$5
     [java] a2dp.Vol.AppChooser$6
     [java] a2dp.Vol.AppChooser$7
     [java] a2dp.Vol.AppChooser$AlphaComparator
     [java] a2dp.Vol.AppChooser$AppInfoCache
     [java] a2dp.Vol.AppChooser$PackageListAdapter
     [java] a2dp.Vol.AppChooser
     [java] a2dp.Vol.BuildConfig
     [java] a2dp.Vol.CustomIntentMaker$1
     [java] a2dp.Vol.CustomIntentMaker$2
     [java] a2dp.Vol.CustomIntentMaker$3
     [java] a2dp.Vol.CustomIntentMaker
     [java] a2dp.Vol.DataXmlExporter$XmlBuilder
     [java] a2dp.Vol.DataXmlExporter
     [java] a2dp.Vol.DeviceDB$OpenHelper
     [java] a2dp.Vol.DeviceDB
     [java] a2dp.Vol.EditDevice$1
     [java] a2dp.Vol.EditDevice$10
     [java] a2dp.Vol.EditDevice$11
     [java] a2dp.Vol.EditDevice$12
     [java] a2dp.Vol.EditDevice$13
     [java] a2dp.Vol.EditDevice$2
     [java] a2dp.Vol.EditDevice$3
     [java] a2dp.Vol.EditDevice$4
     [java] a2dp.Vol.EditDevice$5
     [java] a2dp.Vol.EditDevice$6$1
     [java] a2dp.Vol.EditDevice$6
     [java] a2dp.Vol.EditDevice$7
     [java] a2dp.Vol.EditDevice$8$1
     [java] a2dp.Vol.EditDevice$8
     [java] a2dp.Vol.EditDevice$9
     [java] a2dp.Vol.EditDevice
     [java] a2dp.Vol.EmmaInstrument.EmmaInstrumentation
     [java] a2dp.Vol.EmmaInstrument.FinishListener
     [java] a2dp.Vol.EmmaInstrument.InstrumentedActivity$CoverageCollector
     [java] a2dp.Vol.EmmaInstrument.InstrumentedActivity
     [java] a2dp.Vol.EmmaInstrument.SMSInstrumentedReceiver
     [java] a2dp.Vol.FileNameCleaner
     [java] a2dp.Vol.ManageData$1
     [java] a2dp.Vol.ManageData$2
     [java] a2dp.Vol.ManageData$3
     [java] a2dp.Vol.ManageData$4
     [java] a2dp.Vol.ManageData$ExportDataAsXmlTask
     [java] a2dp.Vol.ManageData$ExportDatabaseFileTask
     [java] a2dp.Vol.ManageData$ExportLocationTask
     [java] a2dp.Vol.ManageData$ImportDatabaseFileTask
     [java] a2dp.Vol.ManageData$SelectDataTask
     [java] a2dp.Vol.ManageData
     [java] a2dp.Vol.MyApplication
     [java] a2dp.Vol.Preferences
     [java] a2dp.Vol.ProviderList
     [java] a2dp.Vol.R$array
     [java] a2dp.Vol.R$attr
     [java] a2dp.Vol.R$drawable
     [java] a2dp.Vol.R$id
     [java] a2dp.Vol.R$layout
     [java] a2dp.Vol.R$menu
     [java] a2dp.Vol.R$string
     [java] a2dp.Vol.R$xml
     [java] a2dp.Vol.R
     [java] a2dp.Vol.Starter
     [java] a2dp.Vol.StoreLoc$1
     [java] a2dp.Vol.StoreLoc$2
     [java] a2dp.Vol.StoreLoc
     [java] a2dp.Vol.Widget
     [java] a2dp.Vol.btDevice
     [java] a2dp.Vol.main$1
     [java] a2dp.Vol.main$10
     [java] a2dp.Vol.main$11
     [java] a2dp.Vol.main$12
     [java] a2dp.Vol.main$13
     [java] a2dp.Vol.main$2
     [java] a2dp.Vol.main$3
     [java] a2dp.Vol.main$4$1
     [java] a2dp.Vol.main$4
     [java] a2dp.Vol.main$5$1
     [java] a2dp.Vol.main$5$2
     [java] a2dp.Vol.main$5
     [java] a2dp.Vol.main$6
     [java] a2dp.Vol.main$7
     [java] a2dp.Vol.main$8
     [java] a2dp.Vol.main$9
     [java] a2dp.Vol.main
     [java] a2dp.Vol.service$1
     [java] a2dp.Vol.service$10$1
     [java] a2dp.Vol.service$10
     [java] a2dp.Vol.service$11
     [java] a2dp.Vol.service$12
     [java] a2dp.Vol.service$2
     [java] a2dp.Vol.service$3
     [java] a2dp.Vol.service$4
     [java] a2dp.Vol.service$5
     [java] a2dp.Vol.service$6
     [java] a2dp.Vol.service$7
     [java] a2dp.Vol.service$8
     [java] a2dp.Vol.service$9
     [java] a2dp.Vol.service$ConnectBt
     [java] a2dp.Vol.service
     [java] android.bluetooth.IBluetooth$Stub$Proxy
     [java] android.bluetooth.IBluetooth$Stub
     [java] android.bluetooth.IBluetooth
     [java] android.bluetooth.IBluetoothA2dp$Stub$Proxy
     [java] android.bluetooth.IBluetoothA2dp$Stub
     [java] android.bluetooth.IBluetoothA2dp
     [java] Instrumenting <a2dp.Vol.ALauncher: void <init>()>
     [java] Instrumenting <a2dp.Vol.ALauncher: void onCreate()>
     [java] Instrumenting <a2dp.Vol.ALauncher: android.os.IBinder onBind(android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.ALauncher: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ALauncher: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$1: void <init>(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser$1: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.AppChooser$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$2: void <init>(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser$2: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.AppChooser$2: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$2: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$3: void <init>(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser$3: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
     [java] Instrumenting <a2dp.Vol.AppChooser$3: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$3: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$4: void <init>(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>
     [java] Instrumenting <a2dp.Vol.AppChooser$4: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$4: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$5: void <init>(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <a2dp.Vol.AppChooser$5: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$5: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$6: void <init>(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser$6: void run()>
     [java] Instrumenting <a2dp.Vol.AppChooser$6: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$6: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$7: void <init>(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser$7: void run()>
     [java] Instrumenting <a2dp.Vol.AppChooser$7: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$7: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AlphaComparator: void <init>(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser$AlphaComparator: int compare(a2dp.Vol.AppChooser$AppInfoCache,a2dp.Vol.AppChooser$AppInfoCache)>
     [java] Instrumenting <a2dp.Vol.AppChooser$AlphaComparator: int compare(java.lang.Object,java.lang.Object)>
     [java] Instrumenting <a2dp.Vol.AppChooser$AlphaComparator: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AlphaComparator: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: void <init>(a2dp.Vol.AppChooser,java.lang.String,java.lang.String,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: android.graphics.drawable.Drawable getIcon()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: int getPosition()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: void setPosition(int)>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getPackageName()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getClassName()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String toString()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$AppInfoCache: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser$PackageListAdapter: void <init>(a2dp.Vol.AppChooser,android.content.Context)>
     [java] Instrumenting <a2dp.Vol.AppChooser$PackageListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
     [java] Instrumenting <a2dp.Vol.AppChooser$PackageListAdapter: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser$PackageListAdapter: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.AppChooser: void <init>()>
     [java] Instrumenting <a2dp.Vol.AppChooser: void doListFilter()>
     [java] Instrumenting <a2dp.Vol.AppChooser: void onCreate(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.AppChooser: void onConfigurationChanged(android.content.res.Configuration)>
     [java] Instrumenting <a2dp.Vol.AppChooser: void initAttachViewsToVars()>
     [java] Instrumenting <a2dp.Vol.AppChooser: void initAssignListenersAndAdapter()>
     [java] Instrumenting <a2dp.Vol.AppChooser: void onDestroy()>
     [java] Instrumenting <a2dp.Vol.AppChooser: void onPause()>
     [java] Instrumenting <a2dp.Vol.AppChooser: android.widget.EditText access$000(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser: java.util.List access$100(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser: java.util.List access$102(a2dp.Vol.AppChooser,java.util.List)>
     [java] Instrumenting <a2dp.Vol.AppChooser: android.content.pm.PackageManager access$200(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser: java.util.List access$302(a2dp.Vol.AppChooser,java.util.List)>
     [java] Instrumenting <a2dp.Vol.AppChooser: java.util.List access$300(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser: a2dp.Vol.AppChooser$PackageListAdapter access$402(a2dp.Vol.AppChooser,a2dp.Vol.AppChooser$PackageListAdapter)>
     [java] Instrumenting <a2dp.Vol.AppChooser: java.lang.Runnable access$500(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser: android.os.Handler access$600(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser: void access$700(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser: android.app.ProgressDialog access$800(a2dp.Vol.AppChooser)>
     [java] Instrumenting <a2dp.Vol.AppChooser: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.AppChooser: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.BuildConfig: void <init>()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$1: void <init>(a2dp.Vol.CustomIntentMaker)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$1: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$2: void <init>(a2dp.Vol.CustomIntentMaker)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$2: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$2: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$2: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$3: void <init>(a2dp.Vol.CustomIntentMaker)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$3: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker$3: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: void <init>()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: void onCreate(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: void initViews()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: void assignListeners()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: boolean isShortcutIntent(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$000(a2dp.Vol.CustomIntentMaker)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$100(a2dp.Vol.CustomIntentMaker)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$200(a2dp.Vol.CustomIntentMaker)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: android.widget.Button access$300(a2dp.Vol.CustomIntentMaker)>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.CustomIntentMaker: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: void <init>(a2dp.Vol.DataXmlExporter)>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: void start(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: java.lang.String end()>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: void openTable(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: void closeTable()>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: void openRow()>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: void closeRow()>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: void addColumn(java.lang.String,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter$XmlBuilder: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter: void <init>(android.database.sqlite.SQLiteDatabase)>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter: void writeToFile(java.lang.String,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.DataXmlExporter: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.DeviceDB$OpenHelper: void <init>(android.content.Context)>
     [java] Instrumenting <a2dp.Vol.DeviceDB$OpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
     [java] Instrumenting <a2dp.Vol.DeviceDB$OpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
     [java] Instrumenting <a2dp.Vol.DeviceDB$OpenHelper: java.util.List GetColumns(android.database.sqlite.SQLiteDatabase,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DeviceDB$OpenHelper: java.lang.String join(java.util.List,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DeviceDB$OpenHelper: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.DeviceDB$OpenHelper: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.DeviceDB: void <init>(android.content.Context)>
     [java] Instrumenting <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.DeviceDB: void delete(a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.DeviceDB: void deleteAll()>
     [java] Instrumenting <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
     [java] Instrumenting <a2dp.Vol.DeviceDB: int getLength()>
     [java] Instrumenting <a2dp.Vol.DeviceDB: java.util.List selectAll()>
     [java] Instrumenting <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()>
     [java] Instrumenting <a2dp.Vol.DeviceDB: android.content.Context access$000()>
     [java] Instrumenting <a2dp.Vol.DeviceDB: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.DeviceDB: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$1: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
     [java] Instrumenting <a2dp.Vol.EditDevice$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$10: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$10: void onProgressChanged(android.widget.SeekBar,int,boolean)>
     [java] Instrumenting <a2dp.Vol.EditDevice$10: void onStartTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <a2dp.Vol.EditDevice$10: void onStopTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <a2dp.Vol.EditDevice$10: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$10: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$11: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.EditDevice$11: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$11: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$12: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$12: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.EditDevice$12: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$12: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$13: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$13: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.EditDevice$13: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$13: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$2: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>
     [java] Instrumenting <a2dp.Vol.EditDevice$2: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$2: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$3: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>
     [java] Instrumenting <a2dp.Vol.EditDevice$3: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$3: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$4: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$4: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.EditDevice$4: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$4: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$5: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$5: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.EditDevice$5: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$5: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$6$1: void <init>(a2dp.Vol.EditDevice$6,java.lang.String[])>
     [java] Instrumenting <a2dp.Vol.EditDevice$6$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.EditDevice$6$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$6$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$6: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$6: boolean onLongClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.EditDevice$6: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$6: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$7: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$7: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.EditDevice$7: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$7: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$8$1: void <init>(a2dp.Vol.EditDevice$8,java.util.Vector)>
     [java] Instrumenting <a2dp.Vol.EditDevice$8$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.EditDevice$8$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$8$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$8: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$8: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.EditDevice$8: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$8: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice$9: void <init>(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice$9: void onProgressChanged(android.widget.SeekBar,int,boolean)>
     [java] Instrumenting <a2dp.Vol.EditDevice$9: void onStartTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <a2dp.Vol.EditDevice$9: void onStopTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <a2dp.Vol.EditDevice$9: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice$9: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void <init>()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void onBackPressed()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void setMediaVisibility()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void setTTSVisibility()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void setInCallVisibility()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void setAppVisibility()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void Save()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void closedb()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void vUpdateApp()>
     [java] Instrumenting <a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String getIntentUri(android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.EditDevice: android.app.Dialog onCreateDialog(int)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void access$000(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void access$100(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void access$200(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void access$300(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void access$400(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: android.widget.EditText access$500(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String[] access$600()>
     [java] Instrumenting <a2dp.Vol.EditDevice: android.content.DialogInterface$OnClickListener access$700(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: a2dp.Vol.DeviceDB access$800(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: a2dp.Vol.DeviceDB access$802(a2dp.Vol.EditDevice,a2dp.Vol.DeviceDB)>
     [java] Instrumenting <a2dp.Vol.EditDevice: a2dp.Vol.MyApplication access$900(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: android.widget.EditText access$1000(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: android.widget.TextView access$1100(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: android.widget.TextView access$1200(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String access$1300(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String access$1400(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String access$1500(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String access$1600(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String access$1602(a2dp.Vol.EditDevice,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String access$1302(a2dp.Vol.EditDevice,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String access$1402(a2dp.Vol.EditDevice,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.EditDevice: java.lang.String access$1502(a2dp.Vol.EditDevice,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void access$1700(a2dp.Vol.EditDevice)>
     [java] Instrumenting <a2dp.Vol.EditDevice: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EditDevice: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void <init>()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void onCreate(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void onStart()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void onActivityFinished()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void dumpIntermediateCoverage(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity$CoverageCollector: void <init>(a2dp.Vol.EmmaInstrument.InstrumentedActivity)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity$CoverageCollector: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity$CoverageCollector: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity: void <init>()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity: void setFinishListener(a2dp.Vol.EmmaInstrument.FinishListener)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity: void finish()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity: a2dp.Vol.EmmaInstrument.FinishListener access$000(a2dp.Vol.EmmaInstrument.InstrumentedActivity)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.SMSInstrumentedReceiver: void <init>()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.SMSInstrumentedReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.SMSInstrumentedReceiver: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.FileNameCleaner: void <init>()>
     [java] Instrumenting <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.FileNameCleaner: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.FileNameCleaner: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$1: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$1: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.ManageData$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$2: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$2: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.ManageData$2: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$2: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$3: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$3: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.ManageData$3: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$3: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$4: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$4: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.ManageData$4: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$4: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPreExecute()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.Object)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.Object doInBackground(java.lang.Object[])>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDataAsXmlTask: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPreExecute()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Boolean)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: void copyFile(java.io.File,java.io.File)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Object)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Object doInBackground(java.lang.Object[])>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportDatabaseFileTask: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: void onPreExecute()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Boolean)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: void copyFile(java.io.File,java.io.File)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Object)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Object doInBackground(java.lang.Object[])>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$ExportLocationTask: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPreExecute()>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Boolean)>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: void copyFile(java.io.File,java.io.File)>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Object)>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Object doInBackground(java.lang.Object[])>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$ImportDatabaseFileTask: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: void <init>(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: void onPreExecute()>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: java.lang.String doInBackground(java.lang.String[])>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: void onPostExecute(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: void onPostExecute(java.lang.Object)>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: java.lang.Object doInBackground(java.lang.Object[])>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData$SelectDataTask: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ManageData: void <init>()>
     [java] Instrumenting <a2dp.Vol.ManageData: void finish()>
     [java] Instrumenting <a2dp.Vol.ManageData: void onDestroy()>
     [java] Instrumenting <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.ManageData: void onPause()>
     [java] Instrumenting <a2dp.Vol.ManageData: void onRestoreInstanceState(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.ManageData: void onSaveInstanceState(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.ManageData: boolean isExternalStorageAvail()>
     [java] Instrumenting <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData: android.widget.TextView access$900(a2dp.Vol.ManageData)>
     [java] Instrumenting <a2dp.Vol.ManageData: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ManageData: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.MyApplication: void <init>()>
     [java] Instrumenting <a2dp.Vol.MyApplication: void onCreate()>
     [java] Instrumenting <a2dp.Vol.MyApplication: void onTerminate()>
     [java] Instrumenting <a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>
     [java] Instrumenting <a2dp.Vol.MyApplication: void setDeviceDB(a2dp.Vol.DeviceDB)>
     [java] Instrumenting <a2dp.Vol.MyApplication: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.MyApplication: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.Preferences: void <init>()>
     [java] Instrumenting <a2dp.Vol.Preferences: void onContentChanged()>
     [java] Instrumenting <a2dp.Vol.Preferences: void onDestroy()>
     [java] Instrumenting <a2dp.Vol.Preferences: void onCreate(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.Preferences: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.Preferences: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.ProviderList: void <init>()>
     [java] Instrumenting <a2dp.Vol.ProviderList: void onCreate(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.ProviderList: void loadList()>
     [java] Instrumenting <a2dp.Vol.ProviderList: void onConfigurationChanged(android.content.res.Configuration)>
     [java] Instrumenting <a2dp.Vol.ProviderList: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
     [java] Instrumenting <a2dp.Vol.ProviderList: android.content.Intent getSelectedIntent(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.ProviderList: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.ProviderList: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.R$array: void <init>()>
     [java] Instrumenting <a2dp.Vol.R$attr: void <init>()>
     [java] Instrumenting <a2dp.Vol.R$drawable: void <init>()>
     [java] Instrumenting <a2dp.Vol.R$id: void <init>()>
     [java] Instrumenting <a2dp.Vol.R$layout: void <init>()>
     [java] Instrumenting <a2dp.Vol.R$menu: void <init>()>
     [java] Instrumenting <a2dp.Vol.R$string: void <init>()>
     [java] Instrumenting <a2dp.Vol.R$xml: void <init>()>
     [java] Instrumenting <a2dp.Vol.R: void <init>()>
     [java] Instrumenting <a2dp.Vol.Starter: void <init>()>
     [java] Instrumenting <a2dp.Vol.Starter: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.Starter: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.Starter: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.StoreLoc$1: void <init>(a2dp.Vol.StoreLoc,long,long)>
     [java] Instrumenting <a2dp.Vol.StoreLoc$1: void onTick(long)>
     [java] Instrumenting <a2dp.Vol.StoreLoc$1: void onFinish()>
     [java] Instrumenting <a2dp.Vol.StoreLoc$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.StoreLoc$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.StoreLoc$2: void <init>(a2dp.Vol.StoreLoc)>
     [java] Instrumenting <a2dp.Vol.StoreLoc$2: void onLocationChanged(android.location.Location)>
     [java] Instrumenting <a2dp.Vol.StoreLoc$2: void onProviderEnabled(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.StoreLoc$2: void onProviderDisabled(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.StoreLoc$2: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.StoreLoc$2: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.StoreLoc$2: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void <init>()>
     [java] Instrumenting <a2dp.Vol.StoreLoc: android.os.IBinder onBind(android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void onCreate()>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void onDestroy()>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void finalize()>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void grabGPS()>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void clearLoc(boolean)>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void registerListeners()>
     [java] Instrumenting <a2dp.Vol.StoreLoc: boolean access$000(a2dp.Vol.StoreLoc)>
     [java] Instrumenting <a2dp.Vol.StoreLoc: a2dp.Vol.MyApplication access$100(a2dp.Vol.StoreLoc)>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void access$200(a2dp.Vol.StoreLoc,boolean)>
     [java] Instrumenting <a2dp.Vol.StoreLoc: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.StoreLoc: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.Widget: void <init>()>
     [java] Instrumenting <a2dp.Vol.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
     [java] Instrumenting <a2dp.Vol.Widget: void onEnabled(android.content.Context)>
     [java] Instrumenting <a2dp.Vol.Widget: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.Widget: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isSetpv()>
     [java] Instrumenting <a2dp.Vol.btDevice: long islSetpv()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setSetpv(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setSetpv(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: int getPhonev()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setPhonev(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String getPname()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setPname(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String getAppaction()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setAppaction(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String getAppdata()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setAppdata(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String getApptype()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setApptype(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isApprestart()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setApprestart(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: long lApprestart()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setApprestart(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isAppkill()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setAppkill(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: long lAppkill()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setAppkill(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: long lenablegps()>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isEnablegps()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setEnablegps(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setEnablegps(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isEnableTTS()>
     [java] Instrumenting <a2dp.Vol.btDevice: long islEnableTTS()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setEnableTTS(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setEnableTTS(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String getBdevice()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setBdevice(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isWifi()>
     [java] Instrumenting <a2dp.Vol.btDevice: long islWifi()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setWifi(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setWifi(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isGetLoc()>
     [java] Instrumenting <a2dp.Vol.btDevice: long islGetLoc()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setGetLoc(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setGetLoc(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: void <init>()>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String toString()>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String getDesc1()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setDesc1(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String getDesc2()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setDesc2(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.btDevice: java.lang.String getMac()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setMac(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isSetV()>
     [java] Instrumenting <a2dp.Vol.btDevice: long islSetV()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setSetV(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setSetV(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: int getDefVol()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setDefVol(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: int getIcon()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setIcon(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: int getSmsdelay()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setSmsdelay(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: int getSmsstream()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setSmsstream(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: int getVoldelay()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setVoldelay(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isVolramp()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setVolramp(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: long lVolramp()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setVolramp(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isAutovol()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setAutovol(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setAutovol(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: long lautovol()>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean isSilent()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setSilent(boolean)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setSilent(int)>
     [java] Instrumenting <a2dp.Vol.btDevice: long lsilent()>
     [java] Instrumenting <a2dp.Vol.btDevice: void setBluetoothDevice(android.bluetooth.BluetoothDevice,java.lang.String,int)>
     [java] Instrumenting <a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean hasIntent()>
     [java] Instrumenting <a2dp.Vol.btDevice: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.btDevice: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$1: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.main$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$10: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$10: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.main$10: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$10: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$11: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$11: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.main$11: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$11: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$12: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.main$12: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$12: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$13: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$13: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.main$13: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$13: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$2: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$2: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.main$2: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$2: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$3: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$3: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.main$3: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$3: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$4$1: void <init>(a2dp.Vol.main$4,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.main$4$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$4$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$4: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <a2dp.Vol.main$4: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$4: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$5$1: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.main$5$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$5$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$5$2: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.main$5$2: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <a2dp.Vol.main$5$2: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$5$2: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <a2dp.Vol.main$5: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$5: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$6: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$6: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.main$6: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$6: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$7: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$7: boolean onLongClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.main$7: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$7: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$8: void <init>(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main$8: void onClick(android.view.View)>
     [java] Instrumenting <a2dp.Vol.main$8: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$8: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main$9: void <init>(a2dp.Vol.main,long,long)>
     [java] Instrumenting <a2dp.Vol.main$9: void onTick(long)>
     [java] Instrumenting <a2dp.Vol.main$9: void onFinish()>
     [java] Instrumenting <a2dp.Vol.main$9: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main$9: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.main: void <init>()>
     [java] Instrumenting <a2dp.Vol.main: boolean onCreateOptionsMenu(android.view.Menu)>
     [java] Instrumenting <a2dp.Vol.main: boolean onOptionsItemSelected(android.view.MenuItem)>
     [java] Instrumenting <a2dp.Vol.main: void onCreate(android.os.Bundle)>
     [java] Instrumenting <a2dp.Vol.main: void getConnects()>
     [java] Instrumenting <a2dp.Vol.main: void onStop()>
     [java] Instrumenting <a2dp.Vol.main: void onDestroy()>
     [java] Instrumenting <a2dp.Vol.main: void onPause()>
     [java] Instrumenting <a2dp.Vol.main: void onResume()>
     [java] Instrumenting <a2dp.Vol.main: void onRestart()>
     [java] Instrumenting <a2dp.Vol.main: void Locationbtn()>
     [java] Instrumenting <a2dp.Vol.main: int getBtDevices(int)>
     [java] Instrumenting <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.main: void refreshList(int)>
     [java] Instrumenting <a2dp.Vol.main: int loadFromDB()>
     [java] Instrumenting <a2dp.Vol.main: java.lang.String getBTClassServ(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <a2dp.Vol.main: java.lang.String getBTClassDev(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <a2dp.Vol.main: java.lang.String getBTClassDevMaj(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <a2dp.Vol.main: android.bluetooth.IBluetooth getIBluetooth()>
     [java] Instrumenting <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main: int access$100(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>
     [java] Instrumenting <a2dp.Vol.main: int access$300(a2dp.Vol.main,int)>
     [java] Instrumenting <a2dp.Vol.main: java.lang.String access$400(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <a2dp.Vol.main: java.lang.String access$500(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <a2dp.Vol.main: java.lang.String access$600(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <a2dp.Vol.main: java.lang.String access$700(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main: a2dp.Vol.MyApplication access$800(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main: void access$900(a2dp.Vol.main)>
     [java] Instrumenting <a2dp.Vol.main: java.lang.String access$702(a2dp.Vol.main,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.main: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.main: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$1: void <init>(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service$1: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.service$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$10$1: void <init>(a2dp.Vol.service$10,long,long,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.service$10$1: void onFinish()>
     [java] Instrumenting <a2dp.Vol.service$10$1: void onTick(long)>
     [java] Instrumenting <a2dp.Vol.service$10$1: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$10$1: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$10: void <init>(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service$10: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.service$10: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$10: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$11: void <init>(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service$11: void onInit(int)>
     [java] Instrumenting <a2dp.Vol.service$11: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$11: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$12: void <init>(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service$12: void onUtteranceCompleted(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.service$12: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$12: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$2: void <init>(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service$2: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.service$2: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$2: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$3: void <init>(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.service$3: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$3: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$4: void <init>(a2dp.Vol.service,long,long,a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.service$4: void onFinish()>
     [java] Instrumenting <a2dp.Vol.service$4: void onTick(long)>
     [java] Instrumenting <a2dp.Vol.service$4: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$4: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$5: void <init>(a2dp.Vol.service,long,long,int)>
     [java] Instrumenting <a2dp.Vol.service$5: void onFinish()>
     [java] Instrumenting <a2dp.Vol.service$5: void onTick(long)>
     [java] Instrumenting <a2dp.Vol.service$5: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$5: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$6: void <init>(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service$6: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.service$6: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$6: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$7: void <init>(a2dp.Vol.service,long,long,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.service$7: void onFinish()>
     [java] Instrumenting <a2dp.Vol.service$7: void onTick(long)>
     [java] Instrumenting <a2dp.Vol.service$7: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$7: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$8: void <init>(a2dp.Vol.service,long,long)>
     [java] Instrumenting <a2dp.Vol.service$8: void onFinish()>
     [java] Instrumenting <a2dp.Vol.service$8: void onTick(long)>
     [java] Instrumenting <a2dp.Vol.service$8: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$8: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$9: void <init>(long,long,int)>
     [java] Instrumenting <a2dp.Vol.service$9: void onFinish()>
     [java] Instrumenting <a2dp.Vol.service$9: void onTick(long)>
     [java] Instrumenting <a2dp.Vol.service$9: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$9: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: void <init>(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: void onPostExecute(java.lang.Boolean)>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: void onPreExecute()>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: java.lang.Boolean doInBackground(java.lang.String[])>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: android.bluetooth.IBluetoothA2dp getIBluetoothA2dp()>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: void onPostExecute(java.lang.Object)>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: java.lang.Object doInBackground(java.lang.Object[])>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: void <init>(a2dp.Vol.service,a2dp.Vol.service$1)>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service$ConnectBt: boolean[][] $VRi()>
     [java] Instrumenting <a2dp.Vol.service: void <init>()>
     [java] Instrumenting <a2dp.Vol.service: int onStartCommand(android.content.Intent,int,int)>
     [java] Instrumenting <a2dp.Vol.service: android.os.IBinder onBind(android.content.Intent)>
     [java] Instrumenting <a2dp.Vol.service: void onCreate()>
     [java] Instrumenting <a2dp.Vol.service: void registerRecievers()>
     [java] Instrumenting <a2dp.Vol.service: void onDestroy()>
     [java] Instrumenting <a2dp.Vol.service: void onStart()>
     [java] Instrumenting <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.service: void setVolume(int,android.content.Context)>
     [java] Instrumenting <a2dp.Vol.service: void getOldvol()>
     [java] Instrumenting <a2dp.Vol.service: void getOldPvol()>
     [java] Instrumenting <a2dp.Vol.service: int setPVolume(int)>
     [java] Instrumenting <a2dp.Vol.service: void updateNot(boolean,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)>
     [java] Instrumenting <a2dp.Vol.service: void stopApp(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.service: void dowifi(boolean)>
     [java] Instrumenting <a2dp.Vol.service: void turnGPSOn()>
     [java] Instrumenting <a2dp.Vol.service: void turnGPSOff()>
     [java] Instrumenting <a2dp.Vol.service: void getConnects()>
     [java] Instrumenting <a2dp.Vol.service: void clearTts()>
     [java] Instrumenting <a2dp.Vol.service: void onAudioFocusChange(int)>
     [java] Instrumenting <a2dp.Vol.service: java.lang.String GetName(java.lang.String)>
     [java] Instrumenting <a2dp.Vol.service: void access$000(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$100(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: void access$200(a2dp.Vol.service,boolean,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$300()>
     [java] Instrumenting <a2dp.Vol.service: java.lang.Integer access$400()>
     [java] Instrumenting <a2dp.Vol.service: a2dp.Vol.MyApplication access$500(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$600()>
     [java] Instrumenting <a2dp.Vol.service: java.lang.Integer access$700()>
     [java] Instrumenting <a2dp.Vol.service: void access$800(a2dp.Vol.service,boolean)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$900(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: void access$1000(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1100(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: android.content.BroadcastReceiver access$1200(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: a2dp.Vol.DeviceDB access$1300(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$1402(a2dp.Vol.service,boolean)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$1502(a2dp.Vol.service,boolean)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$1500(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$1400(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: void access$1700(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: android.telephony.TelephonyManager access$1802(a2dp.Vol.service,android.telephony.TelephonyManager)>
     [java] Instrumenting <a2dp.Vol.service: android.telephony.TelephonyManager access$1800(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: java.lang.String access$1900(a2dp.Vol.service,java.lang.String)>
     [java] Instrumenting <a2dp.Vol.service: int access$2000(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$2102(a2dp.Vol.service,boolean)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$902(a2dp.Vol.service,boolean)>
     [java] Instrumenting <a2dp.Vol.service: long access$2200(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: boolean access$2100(a2dp.Vol.service)>
     [java] Instrumenting <a2dp.Vol.service: void <clinit>()>
     [java] Instrumenting <a2dp.Vol.service: boolean[][] $VRi()>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub$Proxy: void <init>(android.os.IBinder)>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub$Proxy: android.os.IBinder asBinder()>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteAlias(java.lang.String)>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub$Proxy: boolean setRemoteAlias(java.lang.String,java.lang.String)>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub$Proxy: void <clinit>()>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub$Proxy: boolean[][] $VRi()>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub: void <init>()>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub: android.bluetooth.IBluetooth asInterface(android.os.IBinder)>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub: android.os.IBinder asBinder()>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub: void <clinit>()>
     [java] Instrumenting <android.bluetooth.IBluetooth$Stub: boolean[][] $VRi()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: void <init>(android.os.IBinder)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.os.IBinder asBinder()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean connectSink(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean disconnectSink(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean connect(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean disconnect(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean suspendSink(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean resumeSink(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.bluetooth.BluetoothDevice[] getConnectedSinks()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.bluetooth.BluetoothDevice[] getNonDisconnectedSinks()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getSinkState(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getSinkPriority(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: void <clinit>()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean[][] $VRi()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub: void <init>()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub: android.bluetooth.IBluetoothA2dp asInterface(android.os.IBinder)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub: android.os.IBinder asBinder()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub: void <clinit>()>
     [java] Instrumenting <android.bluetooth.IBluetoothA2dp$Stub: boolean[][] $VRi()>
     [java] Transforming acteve.symbolic.SymbolicOperations... 
     [java] Transforming a2dp.Vol.ALauncher... 
     [java] Transforming a2dp.Vol.AppChooser$1... 
     [java] Transforming a2dp.Vol.AppChooser$2... 
     [java] Transforming a2dp.Vol.AppChooser$3... 
     [java] Transforming a2dp.Vol.AppChooser$4... 
     [java] Transforming a2dp.Vol.AppChooser$5... 
     [java] Transforming a2dp.Vol.AppChooser$6... 
     [java] Transforming a2dp.Vol.AppChooser$7... 
     [java] Transforming a2dp.Vol.AppChooser$AlphaComparator... 
     [java] Transforming a2dp.Vol.AppChooser$AppInfoCache... 
     [java] Transforming a2dp.Vol.AppChooser$PackageListAdapter... 
     [java] Transforming a2dp.Vol.AppChooser... 
     [java] Transforming a2dp.Vol.BuildConfig... 
     [java] Transforming a2dp.Vol.CustomIntentMaker$1... 
     [java] Transforming a2dp.Vol.CustomIntentMaker$2... 
     [java] Transforming a2dp.Vol.CustomIntentMaker$3... 
     [java] Transforming a2dp.Vol.CustomIntentMaker... 
     [java] Transforming a2dp.Vol.DataXmlExporter$XmlBuilder... 
     [java] Transforming a2dp.Vol.DataXmlExporter... 
     [java] Transforming a2dp.Vol.DeviceDB$OpenHelper... 
     [java] Transforming a2dp.Vol.DeviceDB... 
     [java] Transforming a2dp.Vol.EditDevice$1... 
     [java] Transforming a2dp.Vol.EditDevice$10... 
     [java] Transforming a2dp.Vol.EditDevice$11... 
     [java] Transforming a2dp.Vol.EditDevice$12... 
     [java] Transforming a2dp.Vol.EditDevice$13... 
     [java] Transforming a2dp.Vol.EditDevice$2... 
     [java] Transforming a2dp.Vol.EditDevice$3... 
     [java] Transforming a2dp.Vol.EditDevice$4... 
     [java] Transforming a2dp.Vol.EditDevice$5... 
     [java] Transforming a2dp.Vol.EditDevice$6$1... 
     [java] Transforming a2dp.Vol.EditDevice$6... 
     [java] Transforming a2dp.Vol.EditDevice$7... 
     [java] Transforming a2dp.Vol.EditDevice$8$1... 
     [java] Transforming a2dp.Vol.EditDevice$8... 
     [java] Transforming a2dp.Vol.EditDevice$9... 
     [java] Transforming a2dp.Vol.EditDevice... 
     [java] Transforming a2dp.Vol.EmmaInstrument.EmmaInstrumentation... 
     [java] Transforming a2dp.Vol.EmmaInstrument.FinishListener... 
     [java] Transforming a2dp.Vol.EmmaInstrument.InstrumentedActivity$CoverageCollector... 
     [java] Transforming a2dp.Vol.EmmaInstrument.InstrumentedActivity... 
     [java] Transforming a2dp.Vol.EmmaInstrument.SMSInstrumentedReceiver... 
     [java] Transforming a2dp.Vol.FileNameCleaner... 
     [java] Transforming a2dp.Vol.ManageData$1... 
     [java] Transforming a2dp.Vol.ManageData$2... 
     [java] Transforming a2dp.Vol.ManageData$3... 
     [java] Transforming a2dp.Vol.ManageData$4... 
     [java] Transforming a2dp.Vol.ManageData$ExportDataAsXmlTask... 
     [java] Transforming a2dp.Vol.ManageData$ExportDatabaseFileTask... 
     [java] Transforming a2dp.Vol.ManageData$ExportLocationTask... 
     [java] Transforming a2dp.Vol.ManageData$ImportDatabaseFileTask... 
     [java] Transforming a2dp.Vol.ManageData$SelectDataTask... 
     [java] Transforming a2dp.Vol.ManageData... 
     [java] Transforming a2dp.Vol.MyApplication... 
     [java] Transforming a2dp.Vol.Preferences... 
     [java] Transforming a2dp.Vol.ProviderList... 
     [java] Transforming a2dp.Vol.R$array... 
     [java] Transforming a2dp.Vol.R$attr... 
     [java] Transforming a2dp.Vol.R$drawable... 
     [java] Transforming a2dp.Vol.R$id... 
     [java] Transforming a2dp.Vol.R$layout... 
     [java] Transforming a2dp.Vol.R$menu... 
     [java] Transforming a2dp.Vol.R$string... 
     [java] Transforming a2dp.Vol.R$xml... 
     [java] Transforming a2dp.Vol.R... 
     [java] Transforming a2dp.Vol.Starter... 
     [java] Transforming a2dp.Vol.StoreLoc$1... 
     [java] Transforming a2dp.Vol.StoreLoc$2... 
     [java] Transforming a2dp.Vol.StoreLoc... 
     [java] Transforming a2dp.Vol.Widget... 
     [java] Transforming a2dp.Vol.btDevice... 
     [java] Transforming a2dp.Vol.main$1... 
     [java] Transforming a2dp.Vol.main$10... 
     [java] Transforming a2dp.Vol.main$11... 
     [java] Transforming a2dp.Vol.main$12... 
     [java] Transforming a2dp.Vol.main$13... 
     [java] Transforming a2dp.Vol.main$2... 
     [java] Transforming a2dp.Vol.main$3... 
     [java] Transforming a2dp.Vol.main$4$1... 
     [java] Transforming a2dp.Vol.main$4... 
     [java] Transforming a2dp.Vol.main$5$1... 
     [java] Transforming a2dp.Vol.main$5$2... 
     [java] Transforming a2dp.Vol.main$5... 
     [java] Transforming a2dp.Vol.main$6... 
     [java] Transforming a2dp.Vol.main$7... 
     [java] Transforming a2dp.Vol.main$8... 
     [java] Transforming a2dp.Vol.main$9... 
     [java] Transforming a2dp.Vol.main... 
     [java] Transforming a2dp.Vol.service$1... 
     [java] Transforming a2dp.Vol.service$10$1... 
     [java] Transforming a2dp.Vol.service$10... 
     [java] Transforming a2dp.Vol.service$11... 
     [java] Transforming a2dp.Vol.service$12... 
     [java] Transforming a2dp.Vol.service$2... 
     [java] Transforming a2dp.Vol.service$3... 
     [java] Transforming a2dp.Vol.service$4... 
     [java] Transforming a2dp.Vol.service$5... 
     [java] Transforming a2dp.Vol.service$6... 
     [java] Transforming a2dp.Vol.service$7... 
     [java] Transforming a2dp.Vol.service$8... 
     [java] Transforming a2dp.Vol.service$9... 
     [java] Transforming a2dp.Vol.service$ConnectBt... 
     [java] Transforming a2dp.Vol.service... 
     [java] Transforming android.bluetooth.IBluetooth$Stub$Proxy... 
     [java] Transforming android.bluetooth.IBluetooth$Stub... 
     [java] Transforming android.bluetooth.IBluetooth... 
     [java] Transforming android.bluetooth.IBluetoothA2dp$Stub$Proxy... 
     [java] Transforming android.bluetooth.IBluetoothA2dp$Stub... 
     [java] Transforming android.bluetooth.IBluetoothA2dp... 
     [java] Writing to acteve/symbolic/SymbolicOperations.class
     [java] Writing to a2dp/Vol/ALauncher.class
     [java] Writing to a2dp/Vol/AppChooser$1.class
     [java] Writing to a2dp/Vol/AppChooser$2.class
     [java] Writing to a2dp/Vol/AppChooser$3.class
     [java] Writing to a2dp/Vol/AppChooser$4.class
     [java] Writing to a2dp/Vol/AppChooser$5.class
     [java] Writing to a2dp/Vol/AppChooser$6.class
     [java] Writing to a2dp/Vol/AppChooser$7.class
     [java] Writing to a2dp/Vol/AppChooser$AlphaComparator.class
     [java] Writing to a2dp/Vol/AppChooser$AppInfoCache.class
     [java] Writing to a2dp/Vol/AppChooser$PackageListAdapter.class
     [java] Writing to a2dp/Vol/AppChooser.class
     [java] Writing to a2dp/Vol/BuildConfig.class
     [java] Writing to a2dp/Vol/CustomIntentMaker$1.class
     [java] Writing to a2dp/Vol/CustomIntentMaker$2.class
     [java] Writing to a2dp/Vol/CustomIntentMaker$3.class
     [java] Writing to a2dp/Vol/CustomIntentMaker.class
     [java] Writing to a2dp/Vol/DataXmlExporter$XmlBuilder.class
     [java] Writing to a2dp/Vol/DataXmlExporter.class
     [java] Writing to a2dp/Vol/DeviceDB$OpenHelper.class
     [java] Writing to a2dp/Vol/DeviceDB.class
     [java] Writing to a2dp/Vol/EditDevice$1.class
     [java] Writing to a2dp/Vol/EditDevice$10.class
     [java] Writing to a2dp/Vol/EditDevice$11.class
     [java] Writing to a2dp/Vol/EditDevice$12.class
     [java] Writing to a2dp/Vol/EditDevice$13.class
     [java] Writing to a2dp/Vol/EditDevice$2.class
     [java] Writing to a2dp/Vol/EditDevice$3.class
     [java] Writing to a2dp/Vol/EditDevice$4.class
     [java] Writing to a2dp/Vol/EditDevice$5.class
     [java] Writing to a2dp/Vol/EditDevice$6$1.class
     [java] Writing to a2dp/Vol/EditDevice$6.class
     [java] Writing to a2dp/Vol/EditDevice$7.class
     [java] Writing to a2dp/Vol/EditDevice$8$1.class
     [java] Writing to a2dp/Vol/EditDevice$8.class
     [java] Writing to a2dp/Vol/EditDevice$9.class
     [java] Writing to a2dp/Vol/EditDevice.class
     [java] Writing to a2dp/Vol/EmmaInstrument/EmmaInstrumentation.class
     [java] Writing to a2dp/Vol/EmmaInstrument/FinishListener.class
     [java] Writing to a2dp/Vol/EmmaInstrument/InstrumentedActivity$CoverageCollector.class
     [java] Writing to a2dp/Vol/EmmaInstrument/InstrumentedActivity.class
     [java] Writing to a2dp/Vol/EmmaInstrument/SMSInstrumentedReceiver.class
     [java] Writing to a2dp/Vol/FileNameCleaner.class
     [java] Writing to a2dp/Vol/ManageData$1.class
     [java] Writing to a2dp/Vol/ManageData$2.class
     [java] Writing to a2dp/Vol/ManageData$3.class
     [java] Writing to a2dp/Vol/ManageData$4.class
     [java] Writing to a2dp/Vol/ManageData$ExportDataAsXmlTask.class
     [java] Writing to a2dp/Vol/ManageData$ExportDatabaseFileTask.class
     [java] Writing to a2dp/Vol/ManageData$ExportLocationTask.class
     [java] Writing to a2dp/Vol/ManageData$ImportDatabaseFileTask.class
     [java] Writing to a2dp/Vol/ManageData$SelectDataTask.class
     [java] Writing to a2dp/Vol/ManageData.class
     [java] Writing to a2dp/Vol/MyApplication.class
     [java] Writing to a2dp/Vol/Preferences.class
     [java] Writing to a2dp/Vol/ProviderList.class
     [java] Writing to a2dp/Vol/R$array.class
     [java] Writing to a2dp/Vol/R$attr.class
     [java] Writing to a2dp/Vol/R$drawable.class
     [java] Writing to a2dp/Vol/R$id.class
     [java] Writing to a2dp/Vol/R$layout.class
     [java] Writing to a2dp/Vol/R$menu.class
     [java] Writing to a2dp/Vol/R$string.class
     [java] Writing to a2dp/Vol/R$xml.class
     [java] Writing to a2dp/Vol/R.class
     [java] Writing to a2dp/Vol/Starter.class
     [java] Writing to a2dp/Vol/StoreLoc$1.class
     [java] Writing to a2dp/Vol/StoreLoc$2.class
     [java] Writing to a2dp/Vol/StoreLoc.class
     [java] Writing to a2dp/Vol/Widget.class
     [java] Writing to a2dp/Vol/btDevice.class
     [java] Writing to a2dp/Vol/main$1.class
     [java] Writing to a2dp/Vol/main$10.class
     [java] Writing to a2dp/Vol/main$11.class
     [java] Writing to a2dp/Vol/main$12.class
     [java] Writing to a2dp/Vol/main$13.class
     [java] Writing to a2dp/Vol/main$2.class
     [java] Writing to a2dp/Vol/main$3.class
     [java] Writing to a2dp/Vol/main$4$1.class
     [java] Writing to a2dp/Vol/main$4.class
     [java] Writing to a2dp/Vol/main$5$1.class
     [java] Writing to a2dp/Vol/main$5$2.class
     [java] Writing to a2dp/Vol/main$5.class
     [java] Writing to a2dp/Vol/main$6.class
     [java] Writing to a2dp/Vol/main$7.class
     [java] Writing to a2dp/Vol/main$8.class
     [java] Writing to a2dp/Vol/main$9.class
     [java] Writing to a2dp/Vol/main.class
     [java] Writing to a2dp/Vol/service$1.class
     [java] Writing to a2dp/Vol/service$10$1.class
     [java] Writing to a2dp/Vol/service$10.class
     [java] Writing to a2dp/Vol/service$11.class
     [java] Writing to a2dp/Vol/service$12.class
     [java] Writing to a2dp/Vol/service$2.class
     [java] Writing to a2dp/Vol/service$3.class
     [java] Writing to a2dp/Vol/service$4.class
     [java] Writing to a2dp/Vol/service$5.class
     [java] Writing to a2dp/Vol/service$6.class
     [java] Writing to a2dp/Vol/service$7.class
     [java] Writing to a2dp/Vol/service$8.class
     [java] Writing to a2dp/Vol/service$9.class
     [java] Writing to a2dp/Vol/service$ConnectBt.class
     [java] Writing to a2dp/Vol/service.class
     [java] Writing to android/bluetooth/IBluetooth$Stub$Proxy.class
     [java] Writing to android/bluetooth/IBluetooth$Stub.class
     [java] Writing to android/bluetooth/IBluetooth.class
     [java] Writing to android/bluetooth/IBluetoothA2dp$Stub$Proxy.class
     [java] Writing to android/bluetooth/IBluetoothA2dp$Stub.class
     [java] Writing to android/bluetooth/IBluetoothA2dp.class
     [java] Soot finished on Sun Nov 09 05:58:40 UTC 2014
     [java] Soot has run for 0 min. 31 sec.

-obfuscate:

-dex:
      [dex] input: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/instrumented.jar
      [dex] input: /home/vagrant/android-sdk-linux/tools/lib/emma_device.jar
      [dex] Pre-Dexing /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/a3t/instrumented.jar -> instrumented-3e079130b46726054c0b831953a381fe.jar
      [dex] Using Pre-Dexed emma_device-e790229f52a04d2b195df6976ccc31d7.jar <- /home/vagrant/android-sdk-linux/tools/lib/emma_device.jar
      [dex] Found modified input file
      [dex] Converting compiled files and external libraries into /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/classes.dex...
       [dx] Merged dex A (110 defs/458.2KiB) with dex B (297 defs/326.8KiB). Result is 407 defs/956.6KiB. Took 1.2s

-crunch:
   [crunch] Crunching PNG Files in source dir: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/res
   [crunch] To destination dir: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/res
   [crunch] Crunched 0 PNG files to update cache

-package-resources:
     [aapt] No changed resources or assets. main.ap_ remains untouched

-package:
[apkbuilder] Found modified input file
[apkbuilder] Creating main-debug-unaligned.apk and signing it with a debug key...

-post-package:

-do-debug:
 [zipalign] Running zip align on final apk...
     [echo] Debug Package: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/main-debug.apk
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/a2dp.Vol_93_src/bin/build.prop

-post-build:

debug:

BUILD SUCCESSFUL
Total time: 56 seconds
