Buildfile: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/build_acteve.xml

emma:

-set-mode-check:

-set-debug-files:

-check-env:
 [checkenv] Android SDK Tools Revision 23.0.2
 [checkenv] Installed at /home/vagrant/android-sdk-linux

-setup:
     [echo] Project Name: ActivityAlarmClock
  [gettype] Project Type: Self-Tested Application

-set-debug-mode:

-debug-obfuscation-check:

-pre-build:

-build-setup:
[getbuildtools] Using latest Build Tools: 20.0.0
     [echo] Resolving Build Target for ActivityAlarmClock...
[gettarget] Project Target:   Android 2.3.3
[gettarget] API level:        10
     [echo] ----------
     [echo] Creating output directories if needed...
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/rsObj
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/rsLibs
     [echo] ----------
     [echo] Resolving Dependencies for ActivityAlarmClock...
[dependency] Library dependencies:
[dependency] No Libraries
[dependency] 
[dependency] ------------------
[dependency] API<=15: Adding annotations.jar to the classpath.
     [echo] ----------
     [echo] Building Libraries with 'instrument'...
   [subant] No sub-builds to iterate on

-code-gen:
[mergemanifest] No changes in the AndroidManifest files.
     [echo] Handling aidl files...
     [aidl] Found 3 AIDL files.
     [aidl] Compiling 1 AIDL files.
     [echo] ----------
     [echo] Handling RenderScript files...
     [echo] ----------
     [echo] Handling Resources...
     [aapt] Found new input file
     [aapt] Generating resource IDs...
     [echo] ----------
     [echo] Handling BuildConfig class...
[buildconfig] No need to generate new BuildConfig.

-pre-compile:

-compile:
    [javac] Compiling 2 source files to /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/classes
     [echo] Instrumenting classes from /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/classes...

-post-compile:
   [delete] Deleting: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/original.jar
   [delete] Deleting: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/instrumented.jar
      [jar] Building jar: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/original.jar

instrument:
     [java] a3t.in.jars=/vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/original.jar
     [java] a3t.out.jar=/vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/instrumented.jar
     [java] a3t.lib.jars=/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar
     [java] a3t.inputmeths.file=null
     [java] a3t.modelmeths.file=null
     [java] a3t.out.dir=/vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t
     [java] a3t.sdk.dir=/home/vagrant/tools/acteve/a3t_sdk (SDK if null)
     [java] a3t.rw.kind=ID_FIELD_WRITE
     [java] a3t.whiteflds.file=null
     [java] a3t.blackflds.file=null
     [java] a3t.whitemeths.file=null
     [java] a3t.instrflds.all=false
     [java] SHAUVIK config.inJars=/vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/original.jar
     [java] SHAUVIK config.libJars=/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _neg(acteve.symbolic.integer.Expression)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_3;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_2, _sym_tmp_1;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_3 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         _sym_tmp_2 = interfaceinvoke _sym_tmp_3.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _neg()>();
     [java]         return _sym_tmp_2;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_4;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_3, _sym_tmp_1;
     [java]         int _sym_tmp_2;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_4 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         _sym_tmp_3 = interfaceinvoke _sym_tmp_4.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _cast(int)>(_sym_tmp_2);
     [java]         return _sym_tmp_3;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, java.lang.Object, java.lang.Object)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         java.lang.Object _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: java.lang.Object;
     [java]         _sym_tmp_4 := @parameter3: java.lang.Object;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, java.lang.Object, java.lang.Object)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         java.lang.Object _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: java.lang.Object;
     [java]         _sym_tmp_4 := @parameter3: java.lang.Object;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.LongExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.LongExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.LongExpression: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int[], int, int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_6, _sym_tmp_5;
     [java]         int[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: int[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.IntegerArrayConstant: acteve.symbolic.array.IntegerArrayConstant get(int[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         int[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.IntegerArrayConstant: acteve.symbolic.array.IntegerArrayConstant get(int[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, short[], int, short)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         short _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         short[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: short[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: short;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.ShortArrayConstant: acteve.symbolic.array.ShortArrayConstant get(short[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, short[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         short[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: short[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.ShortArrayConstant: acteve.symbolic.array.ShortArrayConstant get(short[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, char[], int, char)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         char _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         char[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: char[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: char;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.CharArrayConstant: acteve.symbolic.array.CharArrayConstant get(char[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, char[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         char[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: char[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.CharArrayConstant: acteve.symbolic.array.CharArrayConstant get(char[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, byte[], int, byte)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         byte _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         byte[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: byte[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: byte;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.ByteArrayConstant: acteve.symbolic.array.ByteArrayConstant get(byte[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, byte[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         byte[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: byte[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.ByteArrayConstant: acteve.symbolic.array.ByteArrayConstant get(byte[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, boolean[], int, boolean)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         boolean _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         boolean[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: boolean[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: boolean;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.BooleanArrayConstant: acteve.symbolic.array.BooleanArrayConstant get(boolean[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, boolean[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         boolean[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: boolean[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.BooleanArrayConstant: acteve.symbolic.array.BooleanArrayConstant get(boolean[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long[], int, long)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         long[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: long[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.LongArrayConstant: acteve.symbolic.array.LongArrayConstant get(long[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.LongArrayConstant: acteve.symbolic.array.LongArrayConstant get(long[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float[], int, float)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         float[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: float[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.FloatArrayConstant: acteve.symbolic.array.FloatArrayConstant get(float[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         float[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.FloatArrayConstant: acteve.symbolic.array.FloatArrayConstant get(float[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double[], int, double)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         double[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: double[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.DoubleArrayConstant: acteve.symbolic.array.DoubleArrayConstant get(double[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         double[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.DoubleArrayConstant: acteve.symbolic.array.DoubleArrayConstant get(double[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_3;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_2, _sym_tmp_1;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_3 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         _sym_tmp_2 = virtualinvoke _sym_tmp_3.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _alen()>();
     [java]         return _sym_tmp_2;
     [java]     }
     [java] SHAUVIK: Soot args-w -p cg off -keep-line-number -keep-bytecode-offset -dynamic-class acteve.symbolic.Util -soot-classpath /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/original.jar:/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar -dynamic-package acteve.symbolic.integer. -dynamic-package models. -outjar -d /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/instrumented.jar -O -validate acteve.symbolic.DummyMain
     [java] Soot started on Sun Nov 09 06:04:26 UTC 2014
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$1
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$10
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$11
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$2
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$3
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$4
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$5
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6$1
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$7
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$8
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$9
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmClock
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1$1
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$2
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$3
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$4
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$5
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$6
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$7
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$8
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$9
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$1
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$10
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$11
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$12
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$13
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$14
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$15
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$16
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$17
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$18
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$19
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$2
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$20
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$21
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$22
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$3
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$4
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$5
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$6
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$7
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$8
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$9
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Setting
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsAdapter
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsListClickListener
     [java] com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings
     [java] com.angrydoughnuts.android.alarmclock.ActivityAppSettings$1
     [java] com.angrydoughnuts.android.alarmclock.ActivityAppSettings$2
     [java] com.angrydoughnuts.android.alarmclock.ActivityAppSettings$3
     [java] com.angrydoughnuts.android.alarmclock.ActivityAppSettings$4
     [java] com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs
     [java] com.angrydoughnuts.android.alarmclock.ActivityAppSettings
     [java] com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms$1
     [java] com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockInterface
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockService$1
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockService
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$1
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$2
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$3
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$4
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$5
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$6
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$7
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$8
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$9
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$ServiceCallback
     [java] com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder
     [java] com.angrydoughnuts.android.alarmclock.AlarmInfo
     [java] com.angrydoughnuts.android.alarmclock.AlarmSettings
     [java] com.angrydoughnuts.android.alarmclock.AlarmTime$1
     [java] com.angrydoughnuts.android.alarmclock.AlarmTime
     [java] com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval
     [java] com.angrydoughnuts.android.alarmclock.AlarmUtil
     [java] com.angrydoughnuts.android.alarmclock.AlarmViewAdapter$1
     [java] com.angrydoughnuts.android.alarmclock.AlarmViewAdapter
     [java] com.angrydoughnuts.android.alarmclock.AppSettings
     [java] com.angrydoughnuts.android.alarmclock.BuildConfig
     [java] com.angrydoughnuts.android.alarmclock.DbAccessor
     [java] com.angrydoughnuts.android.alarmclock.DbHelper
     [java] com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation
     [java] com.angrydoughnuts.android.alarmclock.EmmaInstrument.FinishListener
     [java] com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity$CoverageCollector
     [java] com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity
     [java] com.angrydoughnuts.android.alarmclock.EmmaInstrument.SMSInstrumentedReceiver
     [java] com.angrydoughnuts.android.alarmclock.LoggingUncaughtExceptionHandler
     [java] com.angrydoughnuts.android.alarmclock.MediaAlbumsView
     [java] com.angrydoughnuts.android.alarmclock.MediaArtistsView
     [java] com.angrydoughnuts.android.alarmclock.MediaListView$1
     [java] com.angrydoughnuts.android.alarmclock.MediaListView$2
     [java] com.angrydoughnuts.android.alarmclock.MediaListView$OnItemPickListener
     [java] com.angrydoughnuts.android.alarmclock.MediaListView
     [java] com.angrydoughnuts.android.alarmclock.MediaPickerDialog$1
     [java] com.angrydoughnuts.android.alarmclock.MediaPickerDialog$2
     [java] com.angrydoughnuts.android.alarmclock.MediaPickerDialog$3
     [java] com.angrydoughnuts.android.alarmclock.MediaPickerDialog$4
     [java] com.angrydoughnuts.android.alarmclock.MediaPickerDialog$OnMediaPickListener
     [java] com.angrydoughnuts.android.alarmclock.MediaPickerDialog
     [java] com.angrydoughnuts.android.alarmclock.MediaSongsView
     [java] com.angrydoughnuts.android.alarmclock.NotificationService$1
     [java] com.angrydoughnuts.android.alarmclock.NotificationService$2
     [java] com.angrydoughnuts.android.alarmclock.NotificationService$3
     [java] com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton
     [java] com.angrydoughnuts.android.alarmclock.NotificationService$NoAlarmsException
     [java] com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser
     [java] com.angrydoughnuts.android.alarmclock.NotificationService
     [java] com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$1
     [java] com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$2
     [java] com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$ServiceCallback
     [java] com.angrydoughnuts.android.alarmclock.NotificationServiceBinder
     [java] com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy
     [java] com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub
     [java] com.angrydoughnuts.android.alarmclock.NotificationServiceInterface
     [java] com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub
     [java] com.angrydoughnuts.android.alarmclock.PendingAlarmList$PendingAlarm
     [java] com.angrydoughnuts.android.alarmclock.PendingAlarmList
     [java] com.angrydoughnuts.android.alarmclock.R$anim
     [java] com.angrydoughnuts.android.alarmclock.R$array
     [java] com.angrydoughnuts.android.alarmclock.R$attr
     [java] com.angrydoughnuts.android.alarmclock.R$drawable
     [java] com.angrydoughnuts.android.alarmclock.R$id
     [java] com.angrydoughnuts.android.alarmclock.R$layout
     [java] com.angrydoughnuts.android.alarmclock.R$string
     [java] com.angrydoughnuts.android.alarmclock.R$style
     [java] com.angrydoughnuts.android.alarmclock.R$xml
     [java] com.angrydoughnuts.android.alarmclock.R
     [java] com.angrydoughnuts.android.alarmclock.ReceiverAlarm
     [java] com.angrydoughnuts.android.alarmclock.ReceiverDeviceBoot
     [java] com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh
     [java] com.angrydoughnuts.android.alarmclock.RecevierTimeZoneChange
     [java] com.angrydoughnuts.android.alarmclock.Slider$1
     [java] com.angrydoughnuts.android.alarmclock.Slider$OnCompleteListener
     [java] com.angrydoughnuts.android.alarmclock.Slider
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$1
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$2
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$3
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$OnTimeSetListener
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$1
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener$1
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeDecrementListener
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeIncrementListener
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView
     [java] com.angrydoughnuts.android.alarmclock.TimePickerDialog
     [java] com.angrydoughnuts.android.alarmclock.WakeLock$WakeLockException
     [java] com.angrydoughnuts.android.alarmclock.WakeLock
     [java] com.angrydoughnuts.android.alarmclock.Week$1
     [java] com.angrydoughnuts.android.alarmclock.Week$2
     [java] com.angrydoughnuts.android.alarmclock.Week$Day
     [java] com.angrydoughnuts.android.alarmclock.Week
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$1: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$1: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$10: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$10: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$10: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$10: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$11: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$11: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$2: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$2: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$3: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$3: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$3: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$3: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$4: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$4: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$4: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$5: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$5: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$5: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$5: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6$1: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6$1: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6: void run(com.angrydoughnuts.android.alarmclock.NotificationServiceInterface)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$7: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$7: void onTimeSet(int,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$7: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$7: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$8: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$8: void onCancel(android.content.DialogInterface)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$8: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$8: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$9: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$9: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$9: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$9: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs: com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs: com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs: void <init>(java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus: com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus: com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus: void <init>(java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: void onResume()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: void onPause()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: void onDestroy()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: boolean onCreateOptionsMenu(android.view.Menu)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: boolean onOptionsItemSelected(android.view.MenuItem)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: void redraw()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: android.app.Dialog onCreateDialog(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder access$000(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: com.angrydoughnuts.android.alarmclock.AlarmViewAdapter access$100(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: void access$200(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: java.lang.Runnable access$300(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: android.os.Handler access$400(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: com.angrydoughnuts.android.alarmclock.NotificationServiceBinder access$500(com.angrydoughnuts.android.alarmclock.ActivityAlarmClock)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmClock: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1$1: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1$1: void run(com.angrydoughnuts.android.alarmclock.NotificationServiceInterface)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$2: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$2: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$3: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$3: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$3: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$3: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$4: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$4: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$4: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$4: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$5: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$5: void complete()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$5: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$5: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$6: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$6: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$6: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$6: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$7: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$7: void onDismiss(android.content.DialogInterface)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$7: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$7: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$8: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$8: void run(com.angrydoughnuts.android.alarmclock.NotificationServiceInterface)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$8: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$8: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$9: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$9: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs: com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs: com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs: void <init>(java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void onResume()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void onPause()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void onDestroy()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void onNewIntent(android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: android.app.Dialog onCreateDialog(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void redraw()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: java.lang.Runnable access$000(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: android.os.Handler access$100(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: com.angrydoughnuts.android.alarmclock.NotificationServiceBinder access$200(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void access$300(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: com.angrydoughnuts.android.alarmclock.DbAccessor access$400(com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$1: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$1: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$10: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$10: java.lang.String name()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$10: java.lang.String value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$10: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType type()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$10: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$10: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$11: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings,com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$11: void onTimeSet(int,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$11: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$11: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$12: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings,android.widget.TextView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$12: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$12: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$12: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$13: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$13: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$13: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$13: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$14: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$14: void onClick(android.content.DialogInterface,int,boolean)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$14: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$14: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$15: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$15: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$15: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$15: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$16: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$16: void onMediaPick(java.lang.String,android.net.Uri)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$16: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$16: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$17: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$17: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$17: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$17: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$18: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings,android.widget.EditText,android.widget.EditText,android.widget.EditText)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$18: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$18: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$18: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$19: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$19: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$19: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$19: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$2: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$2: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$20: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$20: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$20: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$20: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$21: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$21: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$21: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$21: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$22: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$22: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$3: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$3: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$3: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$3: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$4: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$4: java.lang.String name()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$4: java.lang.String value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$4: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType type()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$4: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$4: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$5: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$5: java.lang.String name()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$5: java.lang.String value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$5: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType type()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$5: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$5: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$6: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$6: java.lang.String name()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$6: java.lang.String value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$6: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType type()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$6: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$6: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$7: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$7: java.lang.String name()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$7: java.lang.String value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$7: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType type()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$7: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$7: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$8: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$8: java.lang.String name()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$8: java.lang.String value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$8: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType type()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$8: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$8: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$9: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$9: java.lang.String name()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$9: java.lang.String value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$9: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType type()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$9: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$9: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs: void <init>(java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Setting: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Setting: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings,com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Setting: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Setting: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType: com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType: void <init>(java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsAdapter: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings,android.content.Context,java.util.List)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsAdapter: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsAdapter: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsListClickListener: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsListClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsListClickListener: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings,com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsListClickListener: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsListClickListener: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: void onResume()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: void onPause()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: void onDestroy()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: android.app.Dialog onCreateDialog(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: int tryParseInt(java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: com.angrydoughnuts.android.alarmclock.AlarmInfo access$000(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: com.angrydoughnuts.android.alarmclock.AlarmInfo access$100(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: long access$200(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: com.angrydoughnuts.android.alarmclock.DbAccessor access$300(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder access$400(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: com.angrydoughnuts.android.alarmclock.AlarmSettings access$500(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: com.angrydoughnuts.android.alarmclock.AlarmSettings access$600(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: int access$900(com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings,java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$1: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAppSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$2: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAppSettings,android.content.SharedPreferences,android.widget.EditText,android.widget.CheckBox)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$2: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$3: void <init>(com.angrydoughnuts.android.alarmclock.ActivityAppSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$3: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$3: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$3: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$4: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$4: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs: com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs: com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs: void <init>(java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings: android.app.Dialog onCreateDialog(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityAppSettings: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms$1: void <init>(com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms$1: void onServiceDisconnected(android.content.ComponentName)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms: void onResume()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms: void onPause()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms: android.widget.ListView access$000(com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void <init>(android.os.IBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: android.os.IBinder asBinder()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void createAlarm(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void deleteAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void deleteAllAlarms()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void scheduleAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void unscheduleAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void acknowledgeAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void snoozeAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void snoozeAlarmFor(long,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: com.angrydoughnuts.android.alarmclock.AlarmTime pendingAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: com.angrydoughnuts.android.alarmclock.AlarmTime[] pendingAlarmTimes()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub: com.angrydoughnuts.android.alarmclock.AlarmClockInterface asInterface(android.os.IBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub: android.os.IBinder asBinder()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void <init>(android.content.Context,com.angrydoughnuts.android.alarmclock.AlarmClockService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: com.angrydoughnuts.android.alarmclock.AlarmTime pendingAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: com.angrydoughnuts.android.alarmclock.AlarmTime[] pendingAlarmTimes()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void createAlarm(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void deleteAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void deleteAllAlarms()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void scheduleAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void unscheduleAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void acknowledgeAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void snoozeAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void snoozeAlarmFor(long,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void debugToast(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService$1: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService$1: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void onCreate()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void onStart(android.content.Intent,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: int onStartCommand(android.content.Intent,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void handleStart(android.content.Intent,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void refreshNotification()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void fixPersistentSettings()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void onDestroy()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: android.os.IBinder onBind(android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: boolean onUnbind(android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: com.angrydoughnuts.android.alarmclock.AlarmTime pendingAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: com.angrydoughnuts.android.alarmclock.AlarmTime[] pendingAlarmTimes()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void createAlarm(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void deleteAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void deleteAllAlarms()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void scheduleAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void acknowledgeAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void dismissAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void snoozeAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void snoozeAlarmFor(long,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: com.angrydoughnuts.android.alarmclock.PendingAlarmList access$000(com.angrydoughnuts.android.alarmclock.AlarmClockService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockService: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$1: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$1: void onServiceDisconnected(android.content.ComponentName)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$2: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder,com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$2: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$3: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$3: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$3: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$3: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$4: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$4: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$4: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$4: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$5: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$5: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$5: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$5: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$6: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$6: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$6: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$6: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$7: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$7: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$7: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$7: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$8: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$8: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$8: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$8: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$9: void <init>(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder,long,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$9: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$9: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$9: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: com.angrydoughnuts.android.alarmclock.AlarmClockInterface clock()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void bind()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void unbind()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void runOrDefer(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$ServiceCallback)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void createAlarm(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void deleteAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void deleteAllAlarms()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void scheduleAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void unscheduleAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void acknowledgeAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void snoozeAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void snoozeAlarmFor(long,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: com.angrydoughnuts.android.alarmclock.AlarmClockInterface access$002(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder,com.angrydoughnuts.android.alarmclock.AlarmClockInterface)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: java.util.LinkedList access$100(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: com.angrydoughnuts.android.alarmclock.AlarmClockInterface access$000(com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: void <init>(android.database.Cursor)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: void <init>(com.angrydoughnuts.android.alarmclock.AlarmTime,boolean,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: void <init>(com.angrydoughnuts.android.alarmclock.AlarmInfo)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: boolean equals(java.lang.Object)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: android.content.ContentValues contentValues()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: java.lang.String[] contentColumns()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: long getAlarmId()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: com.angrydoughnuts.android.alarmclock.AlarmTime getTime()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: void setTime(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: boolean enabled()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: void setEnabled(boolean)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: java.lang.String getName()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: void setName(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: int TimeToInteger(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: int WeekToInteger(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: com.angrydoughnuts.android.alarmclock.AlarmTime BuildAlarmTime(int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmInfo: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: android.content.ContentValues contentValues(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: java.lang.String[] contentColumns()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void <init>(com.angrydoughnuts.android.alarmclock.AlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void <init>(android.database.Cursor)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: boolean equals(java.lang.Object)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: android.net.Uri getTone()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void setTone(android.net.Uri,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: java.lang.String getToneName()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: int getSnoozeMinutes()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void setSnoozeMinutes(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: boolean getVibrate()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void setVibrate(boolean)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: int getVolumeStartPercent()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void setVolumeStartPercent(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: int getVolumeEndPercent()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void setVolumeEndPercent(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: int getVolumeChangeTimeSec()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void setVolumeChangeTimeSec(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmSettings: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime$1: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime$1: com.angrydoughnuts.android.alarmclock.AlarmTime createFromParcel(android.os.Parcel)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime$1: com.angrydoughnuts.android.alarmclock.AlarmTime[] newArray(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime$1: java.lang.Object[] newArray(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime$1: java.lang.Object createFromParcel(android.os.Parcel)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: void <init>(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: void <init>(int,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: void <init>(int,int,int,com.angrydoughnuts.android.alarmclock.Week)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: void findNextOccurrence()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: int compareTo(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: boolean equals(java.lang.Object)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: java.lang.String toString()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: java.lang.String localizedString(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: java.util.Calendar calendar()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: com.angrydoughnuts.android.alarmclock.Week getDaysOfWeek()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: boolean repeats()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: java.lang.String timeUntilString(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: com.angrydoughnuts.android.alarmclock.AlarmTime snoozeInMillisUTC(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: void <init>(android.os.Parcel)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: void writeToParcel(android.os.Parcel,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: int describeContents()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: int compareTo(java.lang.Object)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: void <init>(android.os.Parcel,com.angrydoughnuts.android.alarmclock.AlarmTime$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmTime: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval: com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval: com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval: long millis()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval: void <init>(java.lang.String,int,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil: android.net.Uri alarmIdToUri(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil: long alarmUriToId(android.net.Uri)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil: long millisTillNextInterval(com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil: long nextIntervalInUTC(com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil: android.net.Uri getDefaultAlarmUri()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmUtil: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter$1: void <init>(com.angrydoughnuts.android.alarmclock.AlarmViewAdapter,com.angrydoughnuts.android.alarmclock.AlarmInfo)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter$1: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter: void <init>(android.app.Activity,com.angrydoughnuts.android.alarmclock.DbAccessor,com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter: void loadData()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter: void requery()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter: com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder access$000(com.angrydoughnuts.android.alarmclock.AlarmViewAdapter)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AlarmViewAdapter: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AppSettings: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AppSettings: boolean displayNotificationIcon(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AppSettings: java.lang.String lockScreenString(android.content.Context,com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AppSettings: boolean isDebugMode(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AppSettings: int alarmTimeOutMins(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AppSettings: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.AppSettings: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.BuildConfig: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: void closeConnections()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: long newAlarm(com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: boolean deleteAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: boolean enableAlarm(long,boolean)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: java.util.List getEnabledAlarms()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: java.util.List getAllAlarms()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: boolean writeAlarmInfo(long,com.angrydoughnuts.android.alarmclock.AlarmInfo)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: android.database.Cursor readAlarmInfo()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: com.angrydoughnuts.android.alarmclock.AlarmInfo readAlarmInfo(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: boolean writeAlarmSettings(long,com.angrydoughnuts.android.alarmclock.AlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: com.angrydoughnuts.android.alarmclock.AlarmSettings readAlarmSettings(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbAccessor: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbHelper: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbHelper: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.DbHelper: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void onStart()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void onActivityFinished()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void dumpIntermediateCoverage(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity$CoverageCollector: void <init>(com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity$CoverageCollector: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity$CoverageCollector: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity: void setFinishListener(com.angrydoughnuts.android.alarmclock.EmmaInstrument.FinishListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity: void finish()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity: com.angrydoughnuts.android.alarmclock.EmmaInstrument.FinishListener access$000(com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.SMSInstrumentedReceiver: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.SMSInstrumentedReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.SMSInstrumentedReceiver: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.LoggingUncaughtExceptionHandler: void <init>(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.LoggingUncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.LoggingUncaughtExceptionHandler: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.LoggingUncaughtExceptionHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void <init>(android.content.Context,android.util.AttributeSet)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void setCursorManager(android.app.Activity)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void addToFlipper(android.widget.ViewFlipper)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void setMediaPlayer(android.media.MediaPlayer)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void query(android.net.Uri)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void query(android.net.Uri,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void setMediaPickListener(com.angrydoughnuts.android.alarmclock.MediaListView$OnItemPickListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaAlbumsView: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void <init>(android.content.Context,android.util.AttributeSet)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void setCursorManager(android.app.Activity)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void addToFlipper(android.widget.ViewFlipper)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void setMediaPlayer(android.media.MediaPlayer)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void query(android.net.Uri)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void query(android.net.Uri,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void setMediaPickListener(com.angrydoughnuts.android.alarmclock.MediaListView$OnItemPickListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaArtistsView: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView$1: void <init>(com.angrydoughnuts.android.alarmclock.MediaListView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView$1: boolean onKey(android.view.View,int,android.view.KeyEvent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView$2: void <init>(com.angrydoughnuts.android.alarmclock.MediaListView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView$2: boolean setViewValue(android.view.View,android.database.Cursor,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void <init>(android.content.Context,android.util.AttributeSet)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void setMediaPlayer(android.media.MediaPlayer)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: android.media.MediaPlayer getMediaPlayer()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void addToFlipper(android.widget.ViewFlipper)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: android.widget.ViewFlipper getFlipper()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void setCursorManager(android.app.Activity)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void manageCursor(android.database.Cursor)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void query(android.net.Uri,java.lang.String,int,java.lang.String[],int[])>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void query(android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String[],int[])>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void overrideSortOrder(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void includeStaticCursor(android.database.Cursor)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: java.lang.String getLastSelectedName()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: android.net.Uri getLastSelectedUri()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void setMediaPickListener(com.angrydoughnuts.android.alarmclock.MediaListView$OnItemPickListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: android.widget.ViewFlipper access$000(com.angrydoughnuts.android.alarmclock.MediaListView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: android.media.MediaPlayer access$100(com.angrydoughnuts.android.alarmclock.MediaListView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaListView: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$1: void <init>(com.angrydoughnuts.android.alarmclock.MediaPickerDialog,android.widget.TextView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$1: void onItemPick(android.net.Uri,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$2: void <init>(com.angrydoughnuts.android.alarmclock.MediaPickerDialog,android.widget.ViewFlipper,android.widget.ViewFlipper)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$2: void onTabChanged(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$3: void <init>(com.angrydoughnuts.android.alarmclock.MediaPickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$3: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$3: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$3: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$4: void <init>(com.angrydoughnuts.android.alarmclock.MediaPickerDialog,android.widget.TextView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$4: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$4: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog$4: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void <init>(android.app.Activity)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setPickListener(com.angrydoughnuts.android.alarmclock.MediaPickerDialog$OnMediaPickListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void onStop()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void finalize()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setButton(java.lang.CharSequence,android.os.Message)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setButton2(java.lang.CharSequence,android.os.Message)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setButton3(java.lang.CharSequence,android.os.Message)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: android.net.Uri access$002(com.angrydoughnuts.android.alarmclock.MediaPickerDialog,android.net.Uri)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: java.lang.String access$102(com.angrydoughnuts.android.alarmclock.MediaPickerDialog,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: android.net.Uri access$000(com.angrydoughnuts.android.alarmclock.MediaPickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: com.angrydoughnuts.android.alarmclock.MediaPickerDialog$OnMediaPickListener access$200(com.angrydoughnuts.android.alarmclock.MediaPickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: java.lang.String access$100(com.angrydoughnuts.android.alarmclock.MediaPickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaPickerDialog: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: void <init>(android.content.Context,android.util.AttributeSet)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: void query(android.net.Uri)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: void query(android.net.Uri,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: void includeDefault()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.MediaSongsView: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$1: void <init>(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$1: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$2: void <init>(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$2: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$3: void <init>(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$3: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$3: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$3: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void <init>(java.lang.String,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void normalizeVolume(android.content.Context,float)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void setVolume(float)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void useContext(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void ensureSound()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void vibrate()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void play(android.content.Context,android.net.Uri)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void stop()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void access$000(com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton,android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void access$200(com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void access$1000(com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void access$1100(com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton,android.content.Context,float)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void access$1200(com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton,float)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$NoAlarmsException: void <init>(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$NoAlarmsException: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$NoAlarmsException: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser: void <init>(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser: float volume()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser: void reset(com.angrydoughnuts.android.alarmclock.AlarmSettings)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser: void <init>(com.angrydoughnuts.android.alarmclock.NotificationService,com.angrydoughnuts.android.alarmclock.NotificationService$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: android.os.IBinder onBind(android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void onCreate()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void onDestroy()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void onStart(android.content.Intent,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: int onStartCommand(android.content.Intent,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void handleStart(android.content.Intent,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: long currentAlarmId()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: int firingAlarmCount()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: float volume()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void acknowledgeCurrentNotification(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void soundAlarm(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void stopNotifying()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: java.lang.Runnable access$300(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: android.os.Handler access$400(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: com.angrydoughnuts.android.alarmclock.DbAccessor access$500(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: android.app.PendingIntent access$600(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: android.app.Notification access$700(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: android.app.NotificationManager access$800(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: java.lang.Runnable access$900(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser access$1300(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationService: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$1: void <init>(com.angrydoughnuts.android.alarmclock.NotificationServiceBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$1: void onServiceDisconnected(android.content.ComponentName)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$2: void <init>(com.angrydoughnuts.android.alarmclock.NotificationServiceBinder,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$2: void run(com.angrydoughnuts.android.alarmclock.NotificationServiceInterface)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: void bind()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: void unbind()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: void call(com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$ServiceCallback)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: void acknowledgeCurrentNotification(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: com.angrydoughnuts.android.alarmclock.NotificationServiceInterface access$002(com.angrydoughnuts.android.alarmclock.NotificationServiceBinder,com.angrydoughnuts.android.alarmclock.NotificationServiceInterface)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: java.util.LinkedList access$100(com.angrydoughnuts.android.alarmclock.NotificationServiceBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: com.angrydoughnuts.android.alarmclock.NotificationServiceInterface access$000(com.angrydoughnuts.android.alarmclock.NotificationServiceBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceBinder: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: void <init>(android.os.IBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: android.os.IBinder asBinder()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: long currentAlarmId()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: int firingAlarmCount()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: float volume()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: void acknowledgeCurrentNotification(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub: com.angrydoughnuts.android.alarmclock.NotificationServiceInterface asInterface(android.os.IBinder)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub: android.os.IBinder asBinder()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub: void <init>(com.angrydoughnuts.android.alarmclock.NotificationService)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub: long currentAlarmId()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub: int firingAlarmCount()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub: float volume()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub: void acknowledgeCurrentNotification(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub: void debugToast(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList$PendingAlarm: void <init>(com.angrydoughnuts.android.alarmclock.PendingAlarmList,com.angrydoughnuts.android.alarmclock.AlarmTime,android.app.PendingIntent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList$PendingAlarm: com.angrydoughnuts.android.alarmclock.AlarmTime time()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList$PendingAlarm: android.app.PendingIntent pendingIntent()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList$PendingAlarm: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList$PendingAlarm: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: int size()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: void put(long,com.angrydoughnuts.android.alarmclock.AlarmTime)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: boolean remove(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: com.angrydoughnuts.android.alarmclock.AlarmTime nextAlarmTime()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: com.angrydoughnuts.android.alarmclock.AlarmTime pendingTime(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: com.angrydoughnuts.android.alarmclock.AlarmTime[] pendingTimes()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: java.lang.Long[] pendingAlarms()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.PendingAlarmList: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$anim: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$array: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$attr: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$drawable: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$id: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$layout: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$string: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$style: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R$xml: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.R: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverAlarm: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverAlarm: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverAlarm: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverAlarm: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverDeviceBoot: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverDeviceBoot: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverDeviceBoot: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverDeviceBoot: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh: void startRefreshing(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh: void stopRefreshing(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh: android.content.Intent intent(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh: android.app.PendingIntent pendingIntent(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.RecevierTimeZoneChange: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.RecevierTimeZoneChange: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.RecevierTimeZoneChange: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.RecevierTimeZoneChange: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider$1: void <init>(com.angrydoughnuts.android.alarmclock.Slider)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider$1: void onAnimationEnd(android.view.animation.Animation)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider$1: void onAnimationRepeat(android.view.animation.Animation)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider$1: void onAnimationStart(android.view.animation.Animation)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void <init>(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void <init>(android.content.Context,android.util.AttributeSet)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void <init>(android.content.Context,android.util.AttributeSet,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void setOnCompleteListener(com.angrydoughnuts.android.alarmclock.Slider$OnCompleteListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void reset()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void onLayout(boolean,int,int,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void onMeasure(int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: boolean withinX(android.view.View,float)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: boolean withinY(android.view.View,float)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void slideDotHome()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: boolean isComplete()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void finishSlider()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: boolean onTouchEvent(android.view.MotionEvent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: com.angrydoughnuts.android.alarmclock.Slider$OnCompleteListener access$000(com.angrydoughnuts.android.alarmclock.Slider)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Slider: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$1: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog,boolean)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$2: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$2: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$3: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$3: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$3: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$3: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue: com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue: com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue: void <init>(java.lang.String,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue: int value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$1: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$1: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView,com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment: com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue nextValue()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment: void cycleToNext()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment: int value()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment: com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue access$600(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener: void handleChange()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener: void onFocusChange(android.view.View,boolean)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView,com.angrydoughnuts.android.alarmclock.TimePickerDialog$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener$1: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener$1: void run()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: void adjust()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: void onClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: boolean onLongClick(android.view.View)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: boolean onTouch(android.view.View,android.view.MotionEvent)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: void access$1000(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: java.lang.Runnable access$1100(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: android.os.Handler access$1200(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView,com.angrydoughnuts.android.alarmclock.TimePickerDialog$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeDecrementListener: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeDecrementListener: int sign()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeDecrementListener: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView,com.angrydoughnuts.android.alarmclock.TimePickerDialog$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeDecrementListener: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeDecrementListener: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeIncrementListener: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeIncrementListener: int sign()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeIncrementListener: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView,com.angrydoughnuts.android.alarmclock.TimePickerDialog$1)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeIncrementListener: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeIncrementListener: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView: void <init>(com.angrydoughnuts.android.alarmclock.TimePickerDialog,int,java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView: void inflate(android.view.View,int,boolean,com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView: void pickerRefresh()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView: com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment access$400(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView: int access$900(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView: android.widget.EditText access$1400(com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: void <init>(android.content.Context,java.lang.String,int,int,int,boolean,com.angrydoughnuts.android.alarmclock.TimePickerDialog$OnTimeSetListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: void <init>(android.content.Context,java.lang.String,boolean,com.angrydoughnuts.android.alarmclock.TimePickerDialog$OnTimeSetListener)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: void dialogRefresh()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: com.angrydoughnuts.android.alarmclock.TimePickerDialog$OnTimeSetListener access$000(com.angrydoughnuts.android.alarmclock.TimePickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: java.util.Calendar access$100(com.angrydoughnuts.android.alarmclock.TimePickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: void access$200(com.angrydoughnuts.android.alarmclock.TimePickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: android.content.SharedPreferences access$500(com.angrydoughnuts.android.alarmclock.TimePickerDialog)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.TimePickerDialog: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock$WakeLockException: void <init>(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock$WakeLockException: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock$WakeLockException: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock: void acquire(android.content.Context,long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock: void assertHeld(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock: void assertAtLeastOneHeld()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock: void assertNoneHeld()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock: void release(long)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.WakeLock: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$1: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$1: com.angrydoughnuts.android.alarmclock.Week createFromParcel(android.os.Parcel)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$1: com.angrydoughnuts.android.alarmclock.Week[] newArray(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$1: java.lang.Object[] newArray(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$1: java.lang.Object createFromParcel(android.os.Parcel)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$1: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$1: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$2: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$2: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$Day: com.angrydoughnuts.android.alarmclock.Week$Day[] values()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$Day: com.angrydoughnuts.android.alarmclock.Week$Day valueOf(java.lang.String)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$Day: void <init>(java.lang.String,int,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$Day: int stringId()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$Day: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week$Day: boolean[][] $VRi()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: void <init>(android.os.Parcel)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: void writeToParcel(android.os.Parcel,int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: void <init>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: void <init>(com.angrydoughnuts.android.alarmclock.Week)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: void <init>(boolean[])>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: boolean[] bitmask()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: void addDay(com.angrydoughnuts.android.alarmclock.Week$Day)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: void removeDay(com.angrydoughnuts.android.alarmclock.Week$Day)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: boolean hasDay(com.angrydoughnuts.android.alarmclock.Week$Day)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: java.lang.CharSequence[] names(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: java.lang.String toString(android.content.Context)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: boolean equals(java.lang.Object)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: int describeContents()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: com.angrydoughnuts.android.alarmclock.Week$Day calendarToDay(int)>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: void <clinit>()>
     [java] Instrumenting <com.angrydoughnuts.android.alarmclock.Week: boolean[][] $VRi()>
     [java] Transforming acteve.symbolic.SymbolicOperations... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$10... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$11... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$3... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$4... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$5... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$6... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$7... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$8... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$9... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Dialogs... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock$Menus... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmClock... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$3... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$4... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$5... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$6... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$7... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$8... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$9... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification$Dialogs... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmNotification... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$10... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$11... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$12... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$13... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$14... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$15... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$16... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$17... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$18... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$19... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$20... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$21... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$22... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$3... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$4... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$5... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$6... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$7... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$8... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$9... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Dialogs... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$Setting... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingType... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsAdapter... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings$SettingsListClickListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAlarmSettings... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAppSettings$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAppSettings$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAppSettings$3... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAppSettings$4... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAppSettings$Dialogs... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityAppSettings... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ActivityPendingAlarms... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub$Proxy... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockInterface$Stub... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockInterface... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockInterfaceStub... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockService$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockService... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$3... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$4... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$5... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$6... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$7... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$8... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$9... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder$ServiceCallback... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmClockServiceBinder... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmInfo... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmSettings... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmTime$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmTime... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmUtil$Interval... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmUtil... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmViewAdapter$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AlarmViewAdapter... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.AppSettings... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.BuildConfig... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.DbAccessor... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.DbHelper... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.EmmaInstrument.EmmaInstrumentation... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.EmmaInstrument.FinishListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity$CoverageCollector... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.EmmaInstrument.InstrumentedActivity... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.EmmaInstrument.SMSInstrumentedReceiver... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.LoggingUncaughtExceptionHandler... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaAlbumsView... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaArtistsView... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaListView$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaListView$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaListView$OnItemPickListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaListView... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaPickerDialog$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaPickerDialog$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaPickerDialog$3... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaPickerDialog$4... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaPickerDialog$OnMediaPickListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaPickerDialog... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.MediaSongsView... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationService$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationService$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationService$3... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationService$MediaSingleton... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationService$NoAlarmsException... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationService$VolumeIncreaser... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationService... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationServiceBinder$ServiceCallback... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationServiceBinder... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub$Proxy... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationServiceInterface$Stub... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationServiceInterface... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.NotificationServiceInterfaceStub... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.PendingAlarmList$PendingAlarm... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.PendingAlarmList... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$anim... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$array... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$attr... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$drawable... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$id... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$layout... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$string... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$style... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R$xml... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.R... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ReceiverAlarm... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ReceiverDeviceBoot... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.ReceiverNotificationRefresh... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.RecevierTimeZoneChange... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.Slider$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.Slider$OnCompleteListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.Slider... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$3... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$IncrementValue... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$OnTimeSetListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$Increment... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TextChangeListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeAdjustListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeDecrementListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView$TimeIncrementListener... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog$PickerView... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.TimePickerDialog... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.WakeLock$WakeLockException... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.WakeLock... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.Week$1... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.Week$2... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.Week$Day... 
     [java] Transforming com.angrydoughnuts.android.alarmclock.Week... 
     [java] Writing to acteve/symbolic/SymbolicOperations.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$10.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$11.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$3.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$4.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$5.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$6$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$6.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$7.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$8.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$9.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$Dialogs.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock$Menus.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmClock.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$1$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$3.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$4.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$5.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$6.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$7.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$8.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$9.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification$Dialogs.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmNotification.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$10.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$11.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$12.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$13.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$14.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$15.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$16.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$17.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$18.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$19.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$20.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$21.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$22.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$3.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$4.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$5.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$6.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$7.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$8.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$9.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$Dialogs.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$Setting.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$SettingType.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$SettingsAdapter.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings$SettingsListClickListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAlarmSettings.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAppSettings$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAppSettings$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAppSettings$3.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAppSettings$4.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAppSettings$Dialogs.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityAppSettings.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityPendingAlarms$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ActivityPendingAlarms.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockInterface$Stub$Proxy.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockInterface$Stub.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockInterface.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockInterfaceStub.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockService$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockService.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$3.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$4.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$5.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$6.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$7.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$8.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$9.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder$ServiceCallback.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmClockServiceBinder.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmInfo.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmSettings.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmTime$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmTime.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmUtil$Interval.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmUtil.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmViewAdapter$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AlarmViewAdapter.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/AppSettings.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/BuildConfig.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/DbAccessor.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/DbHelper.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/EmmaInstrument/EmmaInstrumentation.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/EmmaInstrument/FinishListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/EmmaInstrument/InstrumentedActivity$CoverageCollector.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/EmmaInstrument/InstrumentedActivity.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/EmmaInstrument/SMSInstrumentedReceiver.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/LoggingUncaughtExceptionHandler.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaAlbumsView.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaArtistsView.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaListView$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaListView$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaListView$OnItemPickListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaListView.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaPickerDialog$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaPickerDialog$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaPickerDialog$3.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaPickerDialog$4.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaPickerDialog$OnMediaPickListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaPickerDialog.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/MediaSongsView.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationService$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationService$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationService$3.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationService$MediaSingleton.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationService$NoAlarmsException.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationService$VolumeIncreaser.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationService.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationServiceBinder$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationServiceBinder$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationServiceBinder$ServiceCallback.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationServiceBinder.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationServiceInterface$Stub$Proxy.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationServiceInterface$Stub.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationServiceInterface.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/NotificationServiceInterfaceStub.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/PendingAlarmList$PendingAlarm.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/PendingAlarmList.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$anim.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$array.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$attr.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$drawable.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$id.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$layout.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$string.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$style.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R$xml.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/R.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ReceiverAlarm.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ReceiverDeviceBoot.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/ReceiverNotificationRefresh.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/RecevierTimeZoneChange.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/Slider$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/Slider$OnCompleteListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/Slider.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$3.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$IncrementValue.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$OnTimeSetListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$PickerView$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$PickerView$Increment.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$PickerView$TextChangeListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$PickerView$TimeAdjustListener$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$PickerView$TimeAdjustListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$PickerView$TimeDecrementListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$PickerView$TimeIncrementListener.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog$PickerView.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/TimePickerDialog.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/WakeLock$WakeLockException.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/WakeLock.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/Week$1.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/Week$2.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/Week$Day.class
     [java] Writing to com/angrydoughnuts/android/alarmclock/Week.class
     [java] Soot finished on Sun Nov 09 06:04:57 UTC 2014
     [java] Soot has run for 0 min. 30 sec.

-obfuscate:

-dex:
      [dex] input: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/instrumented.jar
      [dex] input: /home/vagrant/android-sdk-linux/tools/lib/emma_device.jar
      [dex] Pre-Dexing /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/a3t/instrumented.jar -> instrumented-944654dd87d985f23fc196673609a983.jar
      [dex] Using Pre-Dexed emma_device-e790229f52a04d2b195df6976ccc31d7.jar <- /home/vagrant/android-sdk-linux/tools/lib/emma_device.jar
      [dex] Found modified input file
      [dex] Converting compiled files and external libraries into /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/classes.dex...
       [dx] Merged dex A (166 defs/422.5KiB) with dex B (297 defs/326.8KiB). Result is 463 defs/908.6KiB. Took 1.3s

-crunch:
   [crunch] Crunching PNG Files in source dir: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/res
   [crunch] To destination dir: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/res
   [crunch] Crunched 0 PNG files to update cache

-package-resources:
     [aapt] No changed resources or assets. ActivityAlarmClock.ap_ remains untouched

-package:
[apkbuilder] Found modified input file
[apkbuilder] Creating ActivityAlarmClock-debug-unaligned.apk and signing it with a debug key...

-post-package:

-do-debug:
 [zipalign] Running zip align on final apk...
     [echo] Debug Package: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/ActivityAlarmClock-debug.apk
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/com.angrydoughnuts.android.alarmclock_8_src/bin/build.prop

-post-build:

debug:

BUILD SUCCESSFUL
Total time: 58 seconds
