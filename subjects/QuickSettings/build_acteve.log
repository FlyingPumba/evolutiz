Buildfile: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/build_acteve.xml

emma:

-set-mode-check:

-set-debug-files:

-check-env:
 [checkenv] Android SDK Tools Revision 23.0.2
 [checkenv] Installed at /home/vagrant/android-sdk-linux

-setup:
     [echo] Project Name: ShowSettingsActivity
  [gettype] Project Type: Self-Tested Application

-set-debug-mode:

-debug-obfuscation-check:

-pre-build:

-build-setup:
[getbuildtools] Using latest Build Tools: 20.0.0
     [echo] Resolving Build Target for ShowSettingsActivity...
[gettarget] Project Target:   Android 2.3.3
[gettarget] API level:        10
     [echo] ----------
     [echo] Creating output directories if needed...
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/rsObj
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/rsLibs
     [echo] ----------
     [echo] Resolving Dependencies for ShowSettingsActivity...
[dependency] Library dependencies:
[dependency] No Libraries
[dependency] 
[dependency] ------------------
[dependency] API<=15: Adding annotations.jar to the classpath.
     [echo] ----------
     [echo] Building Libraries with 'instrument'...
   [subant] No sub-builds to iterate on

-code-gen:
[mergemanifest] No changes in the AndroidManifest files.
     [echo] Handling aidl files...
     [aidl] No AIDL files to compile.
     [echo] ----------
     [echo] Handling RenderScript files...
     [echo] ----------
     [echo] Handling Resources...
     [aapt] Found new input file
     [aapt] Generating resource IDs...
     [aapt] aapt: warning: string 'menu_addons' has no default translation in /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/res; found: cs_CZ fr pt_PT
     [aapt] aapt: warning: string 'msg_tik_to_change_settings' has no default translation in /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/res; found: nl
     [aapt] aapt: warning: string 'txt_addon_quick_battery' has no default translation in /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/res; found: cs_CZ fr pt_PT
     [aapt] aapt: warning: string 'txt_addon_quick_battery_descr' has no default translation in /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/res; found: cs_CZ fr pt_PT
     [aapt] aapt: warning: string 'txt_addons' has no default translation in /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/res; found: cs_CZ fr pt_PT
     [aapt] aapt: warning: string 'txt_install' has no default translation in /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/res; found: cs_CZ fr pt_PT
     [aapt] aapt: warning: string 'txt_uninstall' has no default translation in /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/res; found: cs_CZ fr pt_PT
     [echo] ----------
     [echo] Handling BuildConfig class...
[buildconfig] No need to generate new BuildConfig.

-pre-compile:

-compile:
    [javac] Compiling 1 source file to /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/classes
     [echo] Instrumenting classes from /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/classes...

-post-compile:
   [delete] Deleting: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/original.jar
   [delete] Deleting: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/instrumented.jar
      [jar] Building jar: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/original.jar

instrument:
     [java] a3t.in.jars=/vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/original.jar
     [java] a3t.out.jar=/vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/instrumented.jar
     [java] a3t.lib.jars=/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar
     [java] a3t.inputmeths.file=null
     [java] a3t.modelmeths.file=null
     [java] a3t.out.dir=/vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t
     [java] a3t.sdk.dir=/home/vagrant/tools/acteve/a3t_sdk (SDK if null)
     [java] a3t.rw.kind=ID_FIELD_WRITE
     [java] a3t.whiteflds.file=null
     [java] a3t.blackflds.file=null
     [java] a3t.whitemeths.file=null
     [java] a3t.instrflds.all=false
     [java] SHAUVIK config.inJars=/vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/original.jar
     [java] SHAUVIK config.libJars=/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _neg(acteve.symbolic.integer.Expression)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_3;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_2, _sym_tmp_1;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_3 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         _sym_tmp_2 = interfaceinvoke _sym_tmp_3.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _neg()>();
     [java]         return _sym_tmp_2;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_4;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_3, _sym_tmp_1;
     [java]         int _sym_tmp_2;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_4 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         _sym_tmp_3 = interfaceinvoke _sym_tmp_4.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _cast(int)>(_sym_tmp_2);
     [java]         return _sym_tmp_3;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, java.lang.Object, java.lang.Object)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         java.lang.Object _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: java.lang.Object;
     [java]         _sym_tmp_4 := @parameter3: java.lang.Object;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, java.lang.Object, java.lang.Object)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         java.lang.Object _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: java.lang.Object;
     [java]         _sym_tmp_4 := @parameter3: java.lang.Object;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.LongExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.LongExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.LongExpression: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int[], int, int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_6, _sym_tmp_5;
     [java]         int[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: int[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.IntegerArrayConstant: acteve.symbolic.array.IntegerArrayConstant get(int[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         int[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.IntegerArrayConstant: acteve.symbolic.array.IntegerArrayConstant get(int[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, short[], int, short)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         short _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         short[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: short[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: short;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.ShortArrayConstant: acteve.symbolic.array.ShortArrayConstant get(short[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, short[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         short[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: short[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.ShortArrayConstant: acteve.symbolic.array.ShortArrayConstant get(short[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, char[], int, char)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         char _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         char[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: char[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: char;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.CharArrayConstant: acteve.symbolic.array.CharArrayConstant get(char[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, char[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         char[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: char[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.CharArrayConstant: acteve.symbolic.array.CharArrayConstant get(char[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, byte[], int, byte)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         byte _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         byte[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: byte[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: byte;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.ByteArrayConstant: acteve.symbolic.array.ByteArrayConstant get(byte[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, byte[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         byte[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: byte[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.ByteArrayConstant: acteve.symbolic.array.ByteArrayConstant get(byte[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, boolean[], int, boolean)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         boolean _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         boolean[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: boolean[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: boolean;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.BooleanArrayConstant: acteve.symbolic.array.BooleanArrayConstant get(boolean[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, boolean[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         boolean[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: boolean[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.BooleanArrayConstant: acteve.symbolic.array.BooleanArrayConstant get(boolean[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long[], int, long)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         long[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: long[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.LongArrayConstant: acteve.symbolic.array.LongArrayConstant get(long[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.LongArrayConstant: acteve.symbolic.array.LongArrayConstant get(long[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float[], int, float)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         float[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: float[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.FloatArrayConstant: acteve.symbolic.array.FloatArrayConstant get(float[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         float[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.FloatArrayConstant: acteve.symbolic.array.FloatArrayConstant get(float[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double[], int, double)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         double[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: double[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.DoubleArrayConstant: acteve.symbolic.array.DoubleArrayConstant get(double[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         double[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.DoubleArrayConstant: acteve.symbolic.array.DoubleArrayConstant get(double[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_3;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_2, _sym_tmp_1;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_3 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         _sym_tmp_2 = virtualinvoke _sym_tmp_3.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _alen()>();
     [java]         return _sym_tmp_2;
     [java]     }
     [java] SHAUVIK: Soot args-w -p cg off -keep-line-number -keep-bytecode-offset -dynamic-class acteve.symbolic.Util -soot-classpath /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/original.jar:/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar -dynamic-package acteve.symbolic.integer. -dynamic-package models. -outjar -d /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/instrumented.jar -O -validate acteve.symbolic.DummyMain
     [java] Soot started on Sun Nov 09 06:31:13 UTC 2014
     [java] com.bwx.bequick.BuildConfig
     [java] com.bwx.bequick.Constants
     [java] com.bwx.bequick.DialogSettingsActivity
     [java] com.bwx.bequick.EmmaInstrument.EmmaInstrumentation
     [java] com.bwx.bequick.EmmaInstrument.FinishListener
     [java] com.bwx.bequick.EmmaInstrument.InstrumentedActivity$CoverageCollector
     [java] com.bwx.bequick.EmmaInstrument.InstrumentedActivity
     [java] com.bwx.bequick.EmmaInstrument.SMSInstrumentedReceiver
     [java] com.bwx.bequick.LayoutSettingsActivity
     [java] com.bwx.bequick.LayoutSettingsAdapter
     [java] com.bwx.bequick.ListSettingsLayout
     [java] com.bwx.bequick.MainSettingsActivity$1
     [java] com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver$1
     [java] com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver
     [java] com.bwx.bequick.MainSettingsActivity
     [java] com.bwx.bequick.R$anim
     [java] com.bwx.bequick.R$array
     [java] com.bwx.bequick.R$attr
     [java] com.bwx.bequick.R$drawable
     [java] com.bwx.bequick.R$id
     [java] com.bwx.bequick.R$layout
     [java] com.bwx.bequick.R$menu
     [java] com.bwx.bequick.R$string
     [java] com.bwx.bequick.R$style
     [java] com.bwx.bequick.R
     [java] com.bwx.bequick.SettingsApplication$1
     [java] com.bwx.bequick.SettingsApplication
     [java] com.bwx.bequick.ShowSettingsActivity$1
     [java] com.bwx.bequick.ShowSettingsActivity
     [java] com.bwx.bequick.SortableSettingsListView$Dragger
     [java] com.bwx.bequick.SortableSettingsListView
     [java] com.bwx.bequick.flashlight.DelaySwitchDetector
     [java] com.bwx.bequick.flashlight.Droid22Flashlight
     [java] com.bwx.bequick.flashlight.Flashlight
     [java] com.bwx.bequick.flashlight.FroyoLedFlashlight
     [java] com.bwx.bequick.flashlight.HtcLedFlashlight
     [java] com.bwx.bequick.flashlight.LedFlashlightReceiver
     [java] com.bwx.bequick.flashlight.Moto21LedFlashlight
     [java] com.bwx.bequick.flashlight.OrientationSwitchDetector
     [java] com.bwx.bequick.flashlight.ScreenLightActivity
     [java] com.bwx.bequick.flashlight.ShakeSwitchDeterctor
     [java] com.bwx.bequick.flashlight.SwitchDetector$Switchable
     [java] com.bwx.bequick.flashlight.SwitchDetector
     [java] com.bwx.bequick.fwk.RangeSetting
     [java] com.bwx.bequick.fwk.Setting
     [java] com.bwx.bequick.fwk.SettingHandler
     [java] com.bwx.bequick.fwk.SettingRenderer
     [java] com.bwx.bequick.fwk.SettingsFactory
     [java] com.bwx.bequick.handlers.AirplaneModeSettingHandler$1
     [java] com.bwx.bequick.handlers.AirplaneModeSettingHandler$2
     [java] com.bwx.bequick.handlers.AirplaneModeSettingHandler$AirplaneModeReceiver
     [java] com.bwx.bequick.handlers.AirplaneModeSettingHandler
     [java] com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl
     [java] com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl16
     [java] com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl20
     [java] com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothStateReceiver
     [java] com.bwx.bequick.handlers.BluetoothSettingHandler
     [java] com.bwx.bequick.handlers.BrightnessSettingHandler
     [java] com.bwx.bequick.handlers.BrightnessSettingHandlerX10
     [java] com.bwx.bequick.handlers.GpsSettingHandler
     [java] com.bwx.bequick.handlers.MasterVolumeSettingHandler$VolumeChangedReceiver
     [java] com.bwx.bequick.handlers.MasterVolumeSettingHandler
     [java] com.bwx.bequick.handlers.MobileDataSettingHandler2$1
     [java] com.bwx.bequick.handlers.MobileDataSettingHandler2$2
     [java] com.bwx.bequick.handlers.MobileDataSettingHandler2$TelephonyManagerExt
     [java] com.bwx.bequick.handlers.MobileDataSettingHandler2
     [java] com.bwx.bequick.handlers.RingerSettingHandler$RingerStateReceiver
     [java] com.bwx.bequick.handlers.RingerSettingHandler
     [java] com.bwx.bequick.handlers.ScreenTimeoutSettingHandler
     [java] com.bwx.bequick.handlers.ScreenTimeoutValues
     [java] com.bwx.bequick.handlers.SystemPropertySettingHandler
     [java] com.bwx.bequick.handlers.UnlockPatternSettingHandler
     [java] com.bwx.bequick.handlers.UnlockPatternSettingHandler22
     [java] com.bwx.bequick.handlers.VolumeControlSettingHandler
     [java] com.bwx.bequick.handlers.VolumeDialog$Holder
     [java] com.bwx.bequick.handlers.VolumeDialog
     [java] com.bwx.bequick.handlers.VolumeSettingHandler
     [java] com.bwx.bequick.handlers.WiFiSettingHandler$1
     [java] com.bwx.bequick.handlers.WiFiSettingHandler$WiFiStateReceiver
     [java] com.bwx.bequick.handlers.WiFiSettingHandler
     [java] com.bwx.bequick.handlers.WifiHotspotSettingHandler$1
     [java] com.bwx.bequick.handlers.WifiHotspotSettingHandler$WifiApManager
     [java] com.bwx.bequick.handlers.WifiHotspotSettingHandler
     [java] com.bwx.bequick.handlers.apn.ApnControl
     [java] com.bwx.bequick.handlers.apn.MobileDataSettingHandler$1
     [java] com.bwx.bequick.handlers.apn.MobileDataSettingHandler$2
     [java] com.bwx.bequick.handlers.apn.MobileDataSettingHandler$3
     [java] com.bwx.bequick.handlers.apn.MobileDataSettingHandler
     [java] com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler$SyncControl
     [java] com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler
     [java] com.bwx.bequick.handlers.autosync.SyncControl15
     [java] com.bwx.bequick.handlers.autosync.SyncControl16
     [java] com.bwx.bequick.handlers.autosync.SyncControl20
     [java] com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$1
     [java] com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$WiMaxManager
     [java] com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler
     [java] com.bwx.bequick.handlers.wimax.FourGState
     [java] com.bwx.bequick.preferences.AirplaneModePrefs
     [java] com.bwx.bequick.preferences.BasePrefs
     [java] com.bwx.bequick.preferences.BrightnessPrefs
     [java] com.bwx.bequick.preferences.CommonPrefs$1
     [java] com.bwx.bequick.preferences.CommonPrefs
     [java] com.bwx.bequick.preferences.GpsPrefs
     [java] com.bwx.bequick.preferences.MobileDataApnPrefs
     [java] com.bwx.bequick.preferences.MobileDataPrefs
     [java] com.bwx.bequick.receivers.StatusBarIntegrationReceiver$1
     [java] com.bwx.bequick.receivers.StatusBarIntegrationReceiver
     [java] com.bwx.bequick.renderers.LinkSettingRenderer
     [java] com.bwx.bequick.renderers.MinMaxSliderSettingRenderer
     [java] com.bwx.bequick.renderers.SwitchableSliderRenderer
     [java] com.bwx.bequick.renderers.ToggleSettingRenderer
     [java] Instrumenting <com.bwx.bequick.BuildConfig: void <init>()>
     [java] Instrumenting <com.bwx.bequick.Constants: void <init>()>
     [java] Instrumenting <com.bwx.bequick.Constants: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.Constants: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.DialogSettingsActivity: void <init>()>
     [java] Instrumenting <com.bwx.bequick.DialogSettingsActivity: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.DialogSettingsActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void <init>()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void onStart()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void onActivityFinished()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void dumpIntermediateCoverage(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity$CoverageCollector: void <init>(com.bwx.bequick.EmmaInstrument.InstrumentedActivity)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity$CoverageCollector: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity$CoverageCollector: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity: void <init>()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity: void setFinishListener(com.bwx.bequick.EmmaInstrument.FinishListener)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity: void finish()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity: com.bwx.bequick.EmmaInstrument.FinishListener access$000(com.bwx.bequick.EmmaInstrument.InstrumentedActivity)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.SMSInstrumentedReceiver: void <init>()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.SMSInstrumentedReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.SMSInstrumentedReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsActivity: void <init>()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsActivity: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsActivity: void onResume()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsActivity: void onPause()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsActivity: void onStop()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsActivity: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: void <init>(android.content.Context,java.util.ArrayList)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: boolean areAllItemsEnabled()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: boolean isEnabled(int)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: int getCount()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: java.lang.Object getItem(int)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: void setItem(int,com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: long getItemId(int)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: boolean isInVisibleInList(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: java.util.ArrayList getSettings()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: void onClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.LayoutSettingsAdapter: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.ListSettingsLayout: void <init>(android.view.View,com.bwx.bequick.SettingsApplication)>
     [java] Instrumenting <com.bwx.bequick.ListSettingsLayout: void updateLayout(android.app.Activity)>
     [java] Instrumenting <com.bwx.bequick.ListSettingsLayout: void safelyRemoveViewFromParent(android.widget.LinearLayout,int,android.view.View)>
     [java] Instrumenting <com.bwx.bequick.ListSettingsLayout: int getSettingsCount(java.util.ArrayList)>
     [java] Instrumenting <com.bwx.bequick.ListSettingsLayout: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.ListSettingsLayout: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$1: void <init>(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$1: void onClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver$1: void <init>(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver$1: void run()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: void <init>(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: android.graphics.Bitmap access$100(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: android.graphics.Paint access$200(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: android.graphics.Bitmap access$102(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver,android.graphics.Bitmap)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: android.graphics.Paint access$202(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver,android.graphics.Paint)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: float access$302(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver,float)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: float access$402(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver,float)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: float access$400(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: float access$300(com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void <init>()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: android.app.Dialog onCreateDialog(int)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void updateFlashlightView()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void createInitializeActivateHandlers()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void updateMemoryStatus()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: java.lang.String getMemoryStatus(java.io.File,int)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void onResume()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void onPause()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void onClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: com.bwx.bequick.SettingsApplication getApp()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: boolean startActivitiesSafely(android.content.Intent[])>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void access$000(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.MainSettingsActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.R$anim: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R$array: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R$attr: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R$drawable: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R$id: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R$layout: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R$menu: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R$string: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R$style: void <init>()>
     [java] Instrumenting <com.bwx.bequick.R: void <init>()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication$1: void <init>(com.bwx.bequick.SettingsApplication)>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication$1: int compare(com.bwx.bequick.fwk.Setting,com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication$1: int compare(java.lang.Object,java.lang.Object)>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication: void <init>()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication: void onCreate()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication: void persistSettings()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication: android.content.SharedPreferences getPreferences()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication: java.util.ArrayList getSettings()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication: com.bwx.bequick.fwk.Setting getSetting(int)>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.SettingsApplication: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.ShowSettingsActivity$1: void <init>(com.bwx.bequick.ShowSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.ShowSettingsActivity$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.ShowSettingsActivity$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.ShowSettingsActivity$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.ShowSettingsActivity: void <init>()>
     [java] Instrumenting <com.bwx.bequick.ShowSettingsActivity: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.ShowSettingsActivity: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.ShowSettingsActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView$Dragger: void <init>(android.content.Context,com.bwx.bequick.fwk.Setting,android.view.ViewGroup,android.view.MotionEvent)>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView$Dragger: int getRowHeight()>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView$Dragger: void move(int,int)>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView$Dragger: void cleanup()>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView$Dragger: com.bwx.bequick.fwk.Setting getSetting()>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView$Dragger: int getMiddleY(int)>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView$Dragger: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView$Dragger: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView: void <init>(android.content.Context,android.util.AttributeSet)>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView: void swapSettings(int)>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView: boolean onTouchEvent(android.view.MotionEvent)>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.SortableSettingsListView: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.DelaySwitchDetector: void <init>(com.bwx.bequick.flashlight.SwitchDetector$Switchable)>
     [java] Instrumenting <com.bwx.bequick.flashlight.DelaySwitchDetector: void activate(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.DelaySwitchDetector: void inactivate(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.DelaySwitchDetector: void run()>
     [java] Instrumenting <com.bwx.bequick.flashlight.DelaySwitchDetector: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.DelaySwitchDetector: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Droid22Flashlight: void <init>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Droid22Flashlight: int getType()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Droid22Flashlight: boolean isOn(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.Droid22Flashlight: boolean isSupported(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.Droid22Flashlight: void setOn(boolean,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.Droid22Flashlight: java.lang.Object getManager()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Droid22Flashlight: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Droid22Flashlight: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.FroyoLedFlashlight: void <init>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.FroyoLedFlashlight: boolean isOn(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.FroyoLedFlashlight: boolean isSupported(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.FroyoLedFlashlight: void setOn(boolean,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.FroyoLedFlashlight: int getType()>
     [java] Instrumenting <com.bwx.bequick.flashlight.FroyoLedFlashlight: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.FroyoLedFlashlight: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: void <init>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: boolean isOn(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: void setOn(boolean,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: java.lang.String readValue()>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: boolean writeValue(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: boolean isSupported(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: int getType()>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.HtcLedFlashlight: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: void <init>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: int detectLedFlashlightType(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: com.bwx.bequick.flashlight.Flashlight detectFromBuild()>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: com.bwx.bequick.flashlight.Flashlight checkFlashlight(int)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: com.bwx.bequick.flashlight.Flashlight getFlashlight(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: void vibrate(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: void enableFlashlight(android.content.Context,boolean)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: boolean isFlashlightEnabled(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: void scheduleNextWarn(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: android.app.PendingIntent getPendingIntent(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: int getWarnCount(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: void clearWarnCounter(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.LedFlashlightReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Moto21LedFlashlight: void <init>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Moto21LedFlashlight: boolean isOn(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.Moto21LedFlashlight: void setOn(boolean,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.Moto21LedFlashlight: java.lang.Object getFlashlightService(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.Moto21LedFlashlight: boolean isSupported(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.Moto21LedFlashlight: int getType()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Moto21LedFlashlight: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.Moto21LedFlashlight: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: void <init>(com.bwx.bequick.flashlight.SwitchDetector$Switchable)>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: void activate(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: void inactivate(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: void onAccuracyChanged(android.hardware.Sensor,int)>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: void onSensorChanged(android.hardware.SensorEvent)>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: void updateState(boolean)>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: void onStateChanged()>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.OrientationSwitchDetector: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.ScreenLightActivity: void <init>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.ScreenLightActivity: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.flashlight.ScreenLightActivity: void onResume()>
     [java] Instrumenting <com.bwx.bequick.flashlight.ScreenLightActivity: void onPause()>
     [java] Instrumenting <com.bwx.bequick.flashlight.ScreenLightActivity: void switchLight(boolean)>
     [java] Instrumenting <com.bwx.bequick.flashlight.ScreenLightActivity: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.ScreenLightActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.ShakeSwitchDeterctor: void <init>(com.bwx.bequick.flashlight.SwitchDetector$Switchable)>
     [java] Instrumenting <com.bwx.bequick.flashlight.ShakeSwitchDeterctor: void activate(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.ShakeSwitchDeterctor: void inactivate(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.flashlight.ShakeSwitchDeterctor: void onSensorChanged(android.hardware.SensorEvent)>
     [java] Instrumenting <com.bwx.bequick.flashlight.ShakeSwitchDeterctor: void onAccuracyChanged(android.hardware.Sensor,int)>
     [java] Instrumenting <com.bwx.bequick.flashlight.ShakeSwitchDeterctor: void toggleState()>
     [java] Instrumenting <com.bwx.bequick.flashlight.ShakeSwitchDeterctor: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.ShakeSwitchDeterctor: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.flashlight.SwitchDetector: void <init>(com.bwx.bequick.flashlight.SwitchDetector$Switchable,int)>
     [java] Instrumenting <com.bwx.bequick.flashlight.SwitchDetector: int getTextId()>
     [java] Instrumenting <com.bwx.bequick.flashlight.SwitchDetector: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.flashlight.SwitchDetector: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.fwk.RangeSetting: void <init>(int,int,int,int,int)>
     [java] Instrumenting <com.bwx.bequick.fwk.RangeSetting: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.fwk.RangeSetting: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void <init>(int,int)>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void <init>(int,int,int,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void removeRenderer()>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: com.bwx.bequick.fwk.SettingRenderer getAssignedRenderer()>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void assignHandler(com.bwx.bequick.fwk.SettingHandler)>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: com.bwx.bequick.fwk.SettingHandler getAssignedHandler()>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void updateView()>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void notifyButtonClicked(int)>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void notifySwitchClicked(boolean)>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void notifySettingValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void startPrefsActivity(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.fwk.Setting: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingHandler: java.lang.String getString(int,java.lang.Object[])>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingsFactory: void <init>()>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingsFactory: com.bwx.bequick.fwk.Setting createSetting(int,int,java.lang.String,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingsFactory: com.bwx.bequick.fwk.SettingHandler createSettingHandler(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingsFactory: boolean isCDMA(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingsFactory: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.fwk.SettingsFactory: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$1: void <init>(com.bwx.bequick.handlers.AirplaneModeSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$2: void <init>(com.bwx.bequick.handlers.AirplaneModeSettingHandler,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$2: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$2: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$2: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$AirplaneModeReceiver: void <init>(com.bwx.bequick.handlers.AirplaneModeSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$AirplaneModeReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$AirplaneModeReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler$AirplaneModeReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void setAirMode(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void updateState()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void access$000(com.bwx.bequick.handlers.AirplaneModeSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void access$100(com.bwx.bequick.handlers.AirplaneModeSettingHandler,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.AirplaneModeSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl16: void <init>(com.bwx.bequick.handlers.BluetoothSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl16: void setEnabled(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl16: int getBluetoothState()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl16: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl16: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl20: void <init>(com.bwx.bequick.handlers.BluetoothSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl20: int getBluetoothState()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl20: void setEnabled(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl20: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl20: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothStateReceiver: void <init>(com.bwx.bequick.handlers.BluetoothSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothStateReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothStateReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothStateReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void onBluetoothStateChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void access$000(com.bwx.bequick.handlers.BluetoothSettingHandler,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: com.bwx.bequick.MainSettingsActivity access$100(com.bwx.bequick.handlers.BluetoothSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.BluetoothSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: int getMaximum()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: int getMinimum()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: int getRange()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void setAutobrightness(android.app.Activity,android.content.ContentResolver,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void updateWindowBrightness()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: int getPercentValue(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: int getPropertyValue(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void updateSystemBrightness()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void run()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandlerX10: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandlerX10: int getMinimum()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandlerX10: int getMaximum()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandlerX10: int getRange()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandlerX10: void setAutobrightness(android.app.Activity,android.content.ContentResolver,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandlerX10: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.BrightnessSettingHandlerX10: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void updateSetting(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void toggleGpsState()>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.GpsSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler$VolumeChangedReceiver: void <init>(com.bwx.bequick.handlers.MasterVolumeSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler$VolumeChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler$VolumeChangedReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler$VolumeChangedReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void updateSettingState()>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: int round(float)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void access$000(com.bwx.bequick.handlers.MasterVolumeSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.MasterVolumeSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$1: void <init>(com.bwx.bequick.handlers.MobileDataSettingHandler2)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$1: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$2: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$2: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$TelephonyManagerExt: void <init>(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$TelephonyManagerExt: boolean setMobileDataEnabled(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$TelephonyManagerExt: android.net.NetworkInfo getMobileDataInfo()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$TelephonyManagerExt: android.net.NetworkInfo getWiFiInfo()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$TelephonyManagerExt: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2$TelephonyManagerExt: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void switchMobileDataDirectly(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void updateState(android.net.NetworkInfo$State)>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.MobileDataSettingHandler2: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler$RingerStateReceiver: void <init>(com.bwx.bequick.handlers.RingerSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler$RingerStateReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler$RingerStateReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler$RingerStateReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: android.app.Dialog createDialog()>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void validateState(android.media.AudioManager)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void updateState()>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void access$000(com.bwx.bequick.handlers.RingerSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.RingerSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void updateUIByValue(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void setDescription(java.lang.String,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: android.app.Dialog createDialog()>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void onTimeoutSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: int getCurrentTimeout()>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void setTimeout(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutValues: void <init>(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutValues: java.lang.String getDescriptionByIndex(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutValues: int getTimeoutByIndex(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutValues: int getNumberOfValues()>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutValues: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.ScreenTimeoutValues: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: void <init>(com.bwx.bequick.fwk.Setting,java.lang.String,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: void updateSetting(boolean,boolean,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.SystemPropertySettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler: void chooseLockPattern()>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler22: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler22: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler22: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler22: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler22: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler22: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler22: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.UnlockPatternSettingHandler22: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeControlSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeControlSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeControlSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeControlSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeControlSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeControlSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeControlSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeControlSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog$Holder: void <init>(com.bwx.bequick.handlers.VolumeDialog)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog$Holder: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog$Holder: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void <init>(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void show()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void onCancel(android.content.DialogInterface)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void onClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void hide()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void dismiss()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void onProgressChanged(android.widget.SeekBar,int,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void onStartTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void onStopTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void onCheckedChanged(android.widget.CompoundButton,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: boolean useRingerVolume()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void setUseRingerVolume(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeDialog: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void onProgressChanged(android.widget.SeekBar,int,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void onStartTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void onStopTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void onCancel(android.content.DialogInterface)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: boolean prepareDialog()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: android.app.Dialog createDialog()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.VolumeSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler$WiFiStateReceiver: void <init>(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler$WiFiStateReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler$WiFiStateReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler$WiFiStateReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: android.net.wifi.WifiManager getWiFiManager()>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void updateWiFiState(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void setActionState(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void access$000(com.bwx.bequick.handlers.WiFiSettingHandler,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: com.bwx.bequick.MainSettingsActivity access$100(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: com.bwx.bequick.MainSettingsActivity access$200(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: android.net.wifi.WifiManager access$300(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: com.bwx.bequick.MainSettingsActivity access$400(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: com.bwx.bequick.MainSettingsActivity access$500(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: com.bwx.bequick.MainSettingsActivity access$600(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: com.bwx.bequick.MainSettingsActivity access$700(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: com.bwx.bequick.fwk.Setting access$800(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: com.bwx.bequick.fwk.Setting access$900(com.bwx.bequick.handlers.WiFiSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.WiFiSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$1: void <init>(com.bwx.bequick.handlers.WifiHotspotSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$1: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$WifiApManager: void <init>(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$WifiApManager: boolean setWifiApEnabled(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$WifiApManager: int getWifiApState()>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$WifiApManager: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler$WifiApManager: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void updateState(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void access$000(com.bwx.bequick.handlers.WifiHotspotSettingHandler,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.WifiHotspotSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: void <init>()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: void setApnState(android.content.Context,android.content.SharedPreferences,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: void storePreferredApn(android.content.Context,android.content.SharedPreferences)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: void restorePreferredApn(android.content.Context,android.content.SharedPreferences)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: long getPreferedApnIdFromPreferences(android.content.Context,android.content.SharedPreferences)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: long getFirstCurrentApnId(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: long getPreferedApnIdFromProvider(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: int getApnState(android.content.Context,android.content.SharedPreferences)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: boolean isMms(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: boolean isDisabled(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: boolean shouldDisableMms(android.content.SharedPreferences)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: java.lang.String getAdaptedValue(java.lang.String,boolean,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: java.lang.String getPreferedModifier(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: java.lang.String removeModifiers(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: java.lang.String addModifier(java.lang.String,int,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.ApnControl: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$1: void <init>(com.bwx.bequick.handlers.apn.MobileDataSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$2: void <init>(com.bwx.bequick.handlers.apn.MobileDataSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$2: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$2: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$2: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$3: void <init>(com.bwx.bequick.handlers.apn.MobileDataSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$3: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$3: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler$3: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void setApnState(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void updateState(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: android.content.SharedPreferences access$000(com.bwx.bequick.handlers.apn.MobileDataSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void access$100(com.bwx.bequick.handlers.apn.MobileDataSettingHandler,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.apn.MobileDataSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler$SyncControl: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: void updateState(boolean,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: boolean isBackgroundDataActivated()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void <init>(android.content.ContentResolver,android.database.Cursor)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: boolean getBoolean(java.lang.String,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: boolean isEnabled(android.content.ContentValues,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void putBoolean(android.content.ContentResolver,java.lang.String,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void startSync(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void cancelSync(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void setSyncActivated(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: boolean isSyncActivated()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void setListenForNetworkTickles(android.content.ContentResolver,boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void cancelOrStartSyncForEnabledProviders(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void activate()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl15: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: void <init>(android.content.ContentResolver)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: boolean isSyncActivated()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: void setSyncActivated(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: boolean getSyncProviderAutomatically(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: void startSync(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: void cancelSync(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: void activate()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl16: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl20: void <init>(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl20: void activate()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl20: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl20: boolean isSyncActivated()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl20: void setSyncActivated(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl20: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.autosync.SyncControl20: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$1: void <init>(com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$1: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$WiMaxManager: void <init>(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$WiMaxManager: com.bwx.bequick.handlers.wimax.FourGState getState()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$WiMaxManager: void toggleState()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$WiMaxManager: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$WiMaxManager: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: void <init>(com.bwx.bequick.fwk.Setting)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: void activate(com.bwx.bequick.MainSettingsActivity)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: void deactivate()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: void onSelected(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: void onSwitched(boolean)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: void onValueChanged(int)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: void updateState()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGState: com.bwx.bequick.handlers.wimax.FourGState[] values()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGState: com.bwx.bequick.handlers.wimax.FourGState valueOf(java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGState: void <init>(java.lang.String,int,int)>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGState: int getStatusResourceId()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGState: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.handlers.wimax.FourGState: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.preferences.AirplaneModePrefs: void <init>()>
     [java] Instrumenting <com.bwx.bequick.preferences.AirplaneModePrefs: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.preferences.AirplaneModePrefs: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.preferences.AirplaneModePrefs: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.preferences.BasePrefs: void <init>(int)>
     [java] Instrumenting <com.bwx.bequick.preferences.BasePrefs: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.preferences.BasePrefs: void onResume()>
     [java] Instrumenting <com.bwx.bequick.preferences.BasePrefs: void onPause()>
     [java] Instrumenting <com.bwx.bequick.preferences.BasePrefs: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.preferences.BasePrefs: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: void <init>()>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: com.bwx.bequick.SettingsApplication getApp()>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: void enableAutobrightness()>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: boolean onPreferenceClick(android.preference.Preference)>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: boolean hasLightSensor(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.preferences.BrightnessPrefs: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs$1: void <init>(com.bwx.bequick.preferences.CommonPrefs)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: void <init>()>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: android.app.Dialog createDialog(int,int,boolean)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: void updateStatusbarShortcut(android.content.SharedPreferences)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: void activateScreenFlashlight()>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: boolean onPreferenceClick(android.preference.Preference)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: android.app.Dialog onCreateDialog(int)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: java.lang.String getVersionNumber(android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: void openQuickerInMarket(android.app.Activity)>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.preferences.CommonPrefs: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.preferences.GpsPrefs: void <init>()>
     [java] Instrumenting <com.bwx.bequick.preferences.GpsPrefs: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.preferences.GpsPrefs: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.preferences.GpsPrefs: boolean detectGpsMode(android.content.SharedPreferences)>
     [java] Instrumenting <com.bwx.bequick.preferences.GpsPrefs: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.preferences.GpsPrefs: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataApnPrefs: void <init>()>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataApnPrefs: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataApnPrefs: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataApnPrefs: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataPrefs: void <init>()>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataPrefs: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataPrefs: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataPrefs: boolean detectMobileDataMode(android.content.SharedPreferences)>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataPrefs: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.preferences.MobileDataPrefs: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver$1: void <init>(com.bwx.bequick.receivers.StatusBarIntegrationReceiver,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver$1: void run()>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver$1: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver$1: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver: void <init>()>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver: void sendNotification(android.content.Context,int,int,boolean)>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.receivers.StatusBarIntegrationReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.renderers.LinkSettingRenderer: void <init>()>
     [java] Instrumenting <com.bwx.bequick.renderers.LinkSettingRenderer: android.view.View getView(android.view.LayoutInflater,com.bwx.bequick.fwk.Setting,android.view.View,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.renderers.LinkSettingRenderer: void onClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.renderers.LinkSettingRenderer: void notifySettingUpdated()>
     [java] Instrumenting <com.bwx.bequick.renderers.LinkSettingRenderer: void updateView()>
     [java] Instrumenting <com.bwx.bequick.renderers.LinkSettingRenderer: boolean onLongClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.renderers.LinkSettingRenderer: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.renderers.LinkSettingRenderer: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void <init>()>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: android.view.View getView(android.view.LayoutInflater,com.bwx.bequick.fwk.Setting,android.view.View,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void onClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void notifySettingUpdated()>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void updateView()>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void onProgressChanged(android.widget.SeekBar,int,boolean)>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void updatePreviewText(com.bwx.bequick.fwk.RangeSetting)>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void onStartTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void onStopTrackingTouch(android.widget.SeekBar)>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.renderers.MinMaxSliderSettingRenderer: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.renderers.SwitchableSliderRenderer: void <init>()>
     [java] Instrumenting <com.bwx.bequick.renderers.SwitchableSliderRenderer: android.view.View getView(android.view.LayoutInflater,com.bwx.bequick.fwk.Setting,android.view.View,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.renderers.SwitchableSliderRenderer: void updateView(com.bwx.bequick.fwk.RangeSetting,android.widget.ToggleButton)>
     [java] Instrumenting <com.bwx.bequick.renderers.SwitchableSliderRenderer: void notifySettingUpdated()>
     [java] Instrumenting <com.bwx.bequick.renderers.SwitchableSliderRenderer: void onClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.renderers.SwitchableSliderRenderer: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.renderers.SwitchableSliderRenderer: boolean[][] $VRi()>
     [java] Instrumenting <com.bwx.bequick.renderers.ToggleSettingRenderer: void <init>()>
     [java] Instrumenting <com.bwx.bequick.renderers.ToggleSettingRenderer: android.view.View getView(android.view.LayoutInflater,com.bwx.bequick.fwk.Setting,android.view.View,android.content.Context)>
     [java] Instrumenting <com.bwx.bequick.renderers.ToggleSettingRenderer: void onClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.renderers.ToggleSettingRenderer: void notifySettingUpdated()>
     [java] Instrumenting <com.bwx.bequick.renderers.ToggleSettingRenderer: void updateView()>
     [java] Instrumenting <com.bwx.bequick.renderers.ToggleSettingRenderer: boolean onLongClick(android.view.View)>
     [java] Instrumenting <com.bwx.bequick.renderers.ToggleSettingRenderer: void <clinit>()>
     [java] Instrumenting <com.bwx.bequick.renderers.ToggleSettingRenderer: boolean[][] $VRi()>
     [java] Transforming acteve.symbolic.SymbolicOperations... 
     [java] Transforming com.bwx.bequick.BuildConfig... 
     [java] Transforming com.bwx.bequick.Constants... 
     [java] Transforming com.bwx.bequick.DialogSettingsActivity... 
     [java] Transforming com.bwx.bequick.EmmaInstrument.EmmaInstrumentation... 
     [java] Transforming com.bwx.bequick.EmmaInstrument.FinishListener... 
     [java] Transforming com.bwx.bequick.EmmaInstrument.InstrumentedActivity$CoverageCollector... 
     [java] Transforming com.bwx.bequick.EmmaInstrument.InstrumentedActivity... 
     [java] Transforming com.bwx.bequick.EmmaInstrument.SMSInstrumentedReceiver... 
     [java] Transforming com.bwx.bequick.LayoutSettingsActivity... 
     [java] Transforming com.bwx.bequick.LayoutSettingsAdapter... 
     [java] Transforming com.bwx.bequick.ListSettingsLayout... 
     [java] Transforming com.bwx.bequick.MainSettingsActivity$1... 
     [java] Transforming com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver$1... 
     [java] Transforming com.bwx.bequick.MainSettingsActivity$CommonIntentReceiver... 
     [java] Transforming com.bwx.bequick.MainSettingsActivity... 
     [java] Transforming com.bwx.bequick.R$anim... 
     [java] Transforming com.bwx.bequick.R$array... 
     [java] Transforming com.bwx.bequick.R$attr... 
     [java] Transforming com.bwx.bequick.R$drawable... 
     [java] Transforming com.bwx.bequick.R$id... 
     [java] Transforming com.bwx.bequick.R$layout... 
     [java] Transforming com.bwx.bequick.R$menu... 
     [java] Transforming com.bwx.bequick.R$string... 
     [java] Transforming com.bwx.bequick.R$style... 
     [java] Transforming com.bwx.bequick.R... 
     [java] Transforming com.bwx.bequick.SettingsApplication$1... 
     [java] Transforming com.bwx.bequick.SettingsApplication... 
     [java] Transforming com.bwx.bequick.ShowSettingsActivity$1... 
     [java] Transforming com.bwx.bequick.ShowSettingsActivity... 
     [java] Transforming com.bwx.bequick.SortableSettingsListView$Dragger... 
     [java] Transforming com.bwx.bequick.SortableSettingsListView... 
     [java] Transforming com.bwx.bequick.flashlight.DelaySwitchDetector... 
     [java] Transforming com.bwx.bequick.flashlight.Droid22Flashlight... 
     [java] Transforming com.bwx.bequick.flashlight.Flashlight... 
     [java] Transforming com.bwx.bequick.flashlight.FroyoLedFlashlight... 
     [java] Transforming com.bwx.bequick.flashlight.HtcLedFlashlight... 
     [java] Transforming com.bwx.bequick.flashlight.LedFlashlightReceiver... 
     [java] Transforming com.bwx.bequick.flashlight.Moto21LedFlashlight... 
     [java] Transforming com.bwx.bequick.flashlight.OrientationSwitchDetector... 
     [java] Transforming com.bwx.bequick.flashlight.ScreenLightActivity... 
     [java] Transforming com.bwx.bequick.flashlight.ShakeSwitchDeterctor... 
     [java] Transforming com.bwx.bequick.flashlight.SwitchDetector$Switchable... 
     [java] Transforming com.bwx.bequick.flashlight.SwitchDetector... 
     [java] Transforming com.bwx.bequick.fwk.RangeSetting... 
     [java] Transforming com.bwx.bequick.fwk.Setting... 
     [java] Transforming com.bwx.bequick.fwk.SettingHandler... 
     [java] Transforming com.bwx.bequick.fwk.SettingRenderer... 
     [java] Transforming com.bwx.bequick.fwk.SettingsFactory... 
     [java] Transforming com.bwx.bequick.handlers.AirplaneModeSettingHandler$1... 
     [java] Transforming com.bwx.bequick.handlers.AirplaneModeSettingHandler$2... 
     [java] Transforming com.bwx.bequick.handlers.AirplaneModeSettingHandler$AirplaneModeReceiver... 
     [java] Transforming com.bwx.bequick.handlers.AirplaneModeSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl... 
     [java] Transforming com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl16... 
     [java] Transforming com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothControl20... 
     [java] Transforming com.bwx.bequick.handlers.BluetoothSettingHandler$BluetoothStateReceiver... 
     [java] Transforming com.bwx.bequick.handlers.BluetoothSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.BrightnessSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.BrightnessSettingHandlerX10... 
     [java] Transforming com.bwx.bequick.handlers.GpsSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.MasterVolumeSettingHandler$VolumeChangedReceiver... 
     [java] Transforming com.bwx.bequick.handlers.MasterVolumeSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.MobileDataSettingHandler2$1... 
     [java] Transforming com.bwx.bequick.handlers.MobileDataSettingHandler2$2... 
     [java] Transforming com.bwx.bequick.handlers.MobileDataSettingHandler2$TelephonyManagerExt... 
     [java] Transforming com.bwx.bequick.handlers.MobileDataSettingHandler2... 
     [java] Transforming com.bwx.bequick.handlers.RingerSettingHandler$RingerStateReceiver... 
     [java] Transforming com.bwx.bequick.handlers.RingerSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.ScreenTimeoutSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.ScreenTimeoutValues... 
     [java] Transforming com.bwx.bequick.handlers.SystemPropertySettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.UnlockPatternSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.UnlockPatternSettingHandler22... 
     [java] Transforming com.bwx.bequick.handlers.VolumeControlSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.VolumeDialog$Holder... 
     [java] Transforming com.bwx.bequick.handlers.VolumeDialog... 
     [java] Transforming com.bwx.bequick.handlers.VolumeSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.WiFiSettingHandler$1... 
     [java] Transforming com.bwx.bequick.handlers.WiFiSettingHandler$WiFiStateReceiver... 
     [java] Transforming com.bwx.bequick.handlers.WiFiSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.WifiHotspotSettingHandler$1... 
     [java] Transforming com.bwx.bequick.handlers.WifiHotspotSettingHandler$WifiApManager... 
     [java] Transforming com.bwx.bequick.handlers.WifiHotspotSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.apn.ApnControl... 
     [java] Transforming com.bwx.bequick.handlers.apn.MobileDataSettingHandler$1... 
     [java] Transforming com.bwx.bequick.handlers.apn.MobileDataSettingHandler$2... 
     [java] Transforming com.bwx.bequick.handlers.apn.MobileDataSettingHandler$3... 
     [java] Transforming com.bwx.bequick.handlers.apn.MobileDataSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler$SyncControl... 
     [java] Transforming com.bwx.bequick.handlers.autosync.AutoSyncSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.autosync.SyncControl15... 
     [java] Transforming com.bwx.bequick.handlers.autosync.SyncControl16... 
     [java] Transforming com.bwx.bequick.handlers.autosync.SyncControl20... 
     [java] Transforming com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$1... 
     [java] Transforming com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler$WiMaxManager... 
     [java] Transforming com.bwx.bequick.handlers.wimax.FourGEvoSettingHandler... 
     [java] Transforming com.bwx.bequick.handlers.wimax.FourGState... 
     [java] Transforming com.bwx.bequick.preferences.AirplaneModePrefs... 
     [java] Transforming com.bwx.bequick.preferences.BasePrefs... 
     [java] Transforming com.bwx.bequick.preferences.BrightnessPrefs... 
     [java] Transforming com.bwx.bequick.preferences.CommonPrefs$1... 
     [java] Transforming com.bwx.bequick.preferences.CommonPrefs... 
     [java] Transforming com.bwx.bequick.preferences.GpsPrefs... 
     [java] Transforming com.bwx.bequick.preferences.MobileDataApnPrefs... 
     [java] Transforming com.bwx.bequick.preferences.MobileDataPrefs... 
     [java] Transforming com.bwx.bequick.receivers.StatusBarIntegrationReceiver$1... 
     [java] Transforming com.bwx.bequick.receivers.StatusBarIntegrationReceiver... 
     [java] Transforming com.bwx.bequick.renderers.LinkSettingRenderer... 
     [java] Transforming com.bwx.bequick.renderers.MinMaxSliderSettingRenderer... 
     [java] Transforming com.bwx.bequick.renderers.SwitchableSliderRenderer... 
     [java] Transforming com.bwx.bequick.renderers.ToggleSettingRenderer... 
     [java] Writing to acteve/symbolic/SymbolicOperations.class
     [java] Writing to com/bwx/bequick/BuildConfig.class
     [java] Writing to com/bwx/bequick/Constants.class
     [java] Writing to com/bwx/bequick/DialogSettingsActivity.class
     [java] Writing to com/bwx/bequick/EmmaInstrument/EmmaInstrumentation.class
     [java] Writing to com/bwx/bequick/EmmaInstrument/FinishListener.class
     [java] Writing to com/bwx/bequick/EmmaInstrument/InstrumentedActivity$CoverageCollector.class
     [java] Writing to com/bwx/bequick/EmmaInstrument/InstrumentedActivity.class
     [java] Writing to com/bwx/bequick/EmmaInstrument/SMSInstrumentedReceiver.class
     [java] Writing to com/bwx/bequick/LayoutSettingsActivity.class
     [java] Writing to com/bwx/bequick/LayoutSettingsAdapter.class
     [java] Writing to com/bwx/bequick/ListSettingsLayout.class
     [java] Writing to com/bwx/bequick/MainSettingsActivity$1.class
     [java] Writing to com/bwx/bequick/MainSettingsActivity$CommonIntentReceiver$1.class
     [java] Writing to com/bwx/bequick/MainSettingsActivity$CommonIntentReceiver.class
     [java] Writing to com/bwx/bequick/MainSettingsActivity.class
     [java] Writing to com/bwx/bequick/R$anim.class
     [java] Writing to com/bwx/bequick/R$array.class
     [java] Writing to com/bwx/bequick/R$attr.class
     [java] Writing to com/bwx/bequick/R$drawable.class
     [java] Writing to com/bwx/bequick/R$id.class
     [java] Writing to com/bwx/bequick/R$layout.class
     [java] Writing to com/bwx/bequick/R$menu.class
     [java] Writing to com/bwx/bequick/R$string.class
     [java] Writing to com/bwx/bequick/R$style.class
     [java] Writing to com/bwx/bequick/R.class
     [java] Writing to com/bwx/bequick/SettingsApplication$1.class
     [java] Writing to com/bwx/bequick/SettingsApplication.class
     [java] Writing to com/bwx/bequick/ShowSettingsActivity$1.class
     [java] Writing to com/bwx/bequick/ShowSettingsActivity.class
     [java] Writing to com/bwx/bequick/SortableSettingsListView$Dragger.class
     [java] Writing to com/bwx/bequick/SortableSettingsListView.class
     [java] Writing to com/bwx/bequick/flashlight/DelaySwitchDetector.class
     [java] Writing to com/bwx/bequick/flashlight/Droid22Flashlight.class
     [java] Writing to com/bwx/bequick/flashlight/Flashlight.class
     [java] Writing to com/bwx/bequick/flashlight/FroyoLedFlashlight.class
     [java] Writing to com/bwx/bequick/flashlight/HtcLedFlashlight.class
     [java] Writing to com/bwx/bequick/flashlight/LedFlashlightReceiver.class
     [java] Writing to com/bwx/bequick/flashlight/Moto21LedFlashlight.class
     [java] Writing to com/bwx/bequick/flashlight/OrientationSwitchDetector.class
     [java] Writing to com/bwx/bequick/flashlight/ScreenLightActivity.class
     [java] Writing to com/bwx/bequick/flashlight/ShakeSwitchDeterctor.class
     [java] Writing to com/bwx/bequick/flashlight/SwitchDetector$Switchable.class
     [java] Writing to com/bwx/bequick/flashlight/SwitchDetector.class
     [java] Writing to com/bwx/bequick/fwk/RangeSetting.class
     [java] Writing to com/bwx/bequick/fwk/Setting.class
     [java] Writing to com/bwx/bequick/fwk/SettingHandler.class
     [java] Writing to com/bwx/bequick/fwk/SettingRenderer.class
     [java] Writing to com/bwx/bequick/fwk/SettingsFactory.class
     [java] Writing to com/bwx/bequick/handlers/AirplaneModeSettingHandler$1.class
     [java] Writing to com/bwx/bequick/handlers/AirplaneModeSettingHandler$2.class
     [java] Writing to com/bwx/bequick/handlers/AirplaneModeSettingHandler$AirplaneModeReceiver.class
     [java] Writing to com/bwx/bequick/handlers/AirplaneModeSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/BluetoothSettingHandler$BluetoothControl.class
     [java] Writing to com/bwx/bequick/handlers/BluetoothSettingHandler$BluetoothControl16.class
     [java] Writing to com/bwx/bequick/handlers/BluetoothSettingHandler$BluetoothControl20.class
     [java] Writing to com/bwx/bequick/handlers/BluetoothSettingHandler$BluetoothStateReceiver.class
     [java] Writing to com/bwx/bequick/handlers/BluetoothSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/BrightnessSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/BrightnessSettingHandlerX10.class
     [java] Writing to com/bwx/bequick/handlers/GpsSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/MasterVolumeSettingHandler$VolumeChangedReceiver.class
     [java] Writing to com/bwx/bequick/handlers/MasterVolumeSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/MobileDataSettingHandler2$1.class
     [java] Writing to com/bwx/bequick/handlers/MobileDataSettingHandler2$2.class
     [java] Writing to com/bwx/bequick/handlers/MobileDataSettingHandler2$TelephonyManagerExt.class
     [java] Writing to com/bwx/bequick/handlers/MobileDataSettingHandler2.class
     [java] Writing to com/bwx/bequick/handlers/RingerSettingHandler$RingerStateReceiver.class
     [java] Writing to com/bwx/bequick/handlers/RingerSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/ScreenTimeoutSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/ScreenTimeoutValues.class
     [java] Writing to com/bwx/bequick/handlers/SystemPropertySettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/UnlockPatternSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/UnlockPatternSettingHandler22.class
     [java] Writing to com/bwx/bequick/handlers/VolumeControlSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/VolumeDialog$Holder.class
     [java] Writing to com/bwx/bequick/handlers/VolumeDialog.class
     [java] Writing to com/bwx/bequick/handlers/VolumeSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/WiFiSettingHandler$1.class
     [java] Writing to com/bwx/bequick/handlers/WiFiSettingHandler$WiFiStateReceiver.class
     [java] Writing to com/bwx/bequick/handlers/WiFiSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/WifiHotspotSettingHandler$1.class
     [java] Writing to com/bwx/bequick/handlers/WifiHotspotSettingHandler$WifiApManager.class
     [java] Writing to com/bwx/bequick/handlers/WifiHotspotSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/apn/ApnControl.class
     [java] Writing to com/bwx/bequick/handlers/apn/MobileDataSettingHandler$1.class
     [java] Writing to com/bwx/bequick/handlers/apn/MobileDataSettingHandler$2.class
     [java] Writing to com/bwx/bequick/handlers/apn/MobileDataSettingHandler$3.class
     [java] Writing to com/bwx/bequick/handlers/apn/MobileDataSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/autosync/AutoSyncSettingHandler$SyncControl.class
     [java] Writing to com/bwx/bequick/handlers/autosync/AutoSyncSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/autosync/SyncControl15.class
     [java] Writing to com/bwx/bequick/handlers/autosync/SyncControl16.class
     [java] Writing to com/bwx/bequick/handlers/autosync/SyncControl20.class
     [java] Writing to com/bwx/bequick/handlers/wimax/FourGEvoSettingHandler$1.class
     [java] Writing to com/bwx/bequick/handlers/wimax/FourGEvoSettingHandler$WiMaxManager.class
     [java] Writing to com/bwx/bequick/handlers/wimax/FourGEvoSettingHandler.class
     [java] Writing to com/bwx/bequick/handlers/wimax/FourGState.class
     [java] Writing to com/bwx/bequick/preferences/AirplaneModePrefs.class
     [java] Writing to com/bwx/bequick/preferences/BasePrefs.class
     [java] Writing to com/bwx/bequick/preferences/BrightnessPrefs.class
     [java] Writing to com/bwx/bequick/preferences/CommonPrefs$1.class
     [java] Writing to com/bwx/bequick/preferences/CommonPrefs.class
     [java] Writing to com/bwx/bequick/preferences/GpsPrefs.class
     [java] Writing to com/bwx/bequick/preferences/MobileDataApnPrefs.class
     [java] Writing to com/bwx/bequick/preferences/MobileDataPrefs.class
     [java] Writing to com/bwx/bequick/receivers/StatusBarIntegrationReceiver$1.class
     [java] Writing to com/bwx/bequick/receivers/StatusBarIntegrationReceiver.class
     [java] Writing to com/bwx/bequick/renderers/LinkSettingRenderer.class
     [java] Writing to com/bwx/bequick/renderers/MinMaxSliderSettingRenderer.class
     [java] Writing to com/bwx/bequick/renderers/SwitchableSliderRenderer.class
     [java] Writing to com/bwx/bequick/renderers/ToggleSettingRenderer.class
     [java] Soot finished on Sun Nov 09 06:31:43 UTC 2014
     [java] Soot has run for 0 min. 30 sec.

-obfuscate:

-dex:
      [dex] input: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/instrumented.jar
      [dex] input: /home/vagrant/android-sdk-linux/tools/lib/emma_device.jar
      [dex] Pre-Dexing /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/a3t/instrumented.jar -> instrumented-e7fe80a915209d31ab0f24046d3520e4.jar
      [dex] Using Pre-Dexed emma_device-e790229f52a04d2b195df6976ccc31d7.jar <- /home/vagrant/android-sdk-linux/tools/lib/emma_device.jar
      [dex] Found modified input file
      [dex] Converting compiled files and external libraries into /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/classes.dex...
       [dx] Merged dex A (112 defs/410.1KiB) with dex B (297 defs/326.8KiB). Result is 409 defs/892.0KiB. Took 1.1s

-crunch:
   [crunch] Crunching PNG Files in source dir: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/res
   [crunch] To destination dir: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/res
   [crunch] Crunched 0 PNG files to update cache

-package-resources:
     [aapt] No changed resources or assets. ShowSettingsActivity.ap_ remains untouched

-package:
[apkbuilder] Found modified input file
[apkbuilder] Creating ShowSettingsActivity-debug-unaligned.apk and signing it with a debug key...

-post-package:

-do-debug:
 [zipalign] Running zip align on final apk...
     [echo] Debug Package: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/ShowSettingsActivity-debug.apk
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/QuickSettings/bin/build.prop

-post-build:

debug:

BUILD SUCCESSFUL
Total time: 1 minute 0 seconds
